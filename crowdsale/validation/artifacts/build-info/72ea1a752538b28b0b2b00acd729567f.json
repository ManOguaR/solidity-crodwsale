{
	"id": "72ea1a752538b28b0b2b00acd729567f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"crowdsale/validation/pausableCrowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\n\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"crowdsale/crowdsale.sol\";\r\n\r\n/**\r\n * @title PausableCrowdsale\r\n * @dev Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.\r\n */\r\ncontract PausableCrowdsale is Crowdsale, Pausable {\r\n    constructor(uint256 inRate, address payable inWallet, IERC20 inToken) \r\n    Crowdsale(inRate, inWallet, inToken) {\r\n    }\r\n    /**\r\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\r\n     * Use super to concatenate validations.\r\n     * Adds the validation that the crowdsale must not be paused.\r\n     * @param _beneficiary Address performing the token purchase\r\n     * @param _weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal override view whenNotPaused {\r\n        return super._preValidatePurchase(_beneficiary, _weiAmount);\r\n    }\r\n}"
			},
			"crowdsale/crowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n/**\r\n * @title Crowdsale\r\n * @dev Crowdsale is a base contract for managing a token crowdsale,\r\n * allowing investors to purchase tokens with ether. This contract implements\r\n * such functionality in its most fundamental form and can be extended to provide additional\r\n * functionality and/or custom behavior.\r\n * The external interface represents the basic interface for purchasing tokens, and conforms\r\n * the base architecture for crowdsales. It is *not* intended to be modified / overridden.\r\n * The internal interface conforms the extensible and modifiable surface of crowdsales. Override\r\n * the methods to add functionality. Consider using 'super' where appropriate to concatenate\r\n * behavior.\r\n */\r\nabstract contract Crowdsale is Context, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // The token being sold\r\n    IERC20 private _token;\r\n\r\n    // Address where funds are collected\r\n    address payable private _wallet;\r\n\r\n    // How many token units a buyer gets per wei.\r\n    // The rate is the conversion between wei and the smallest and indivisible token unit.\r\n    // So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK\r\n    // 1 wei will give you 1 unit, or 0.001 TOK.\r\n    uint256 private _rate;\r\n\r\n    // Amount of wei raised\r\n    uint256 private _weiRaised;\r\n\r\n    /**\r\n     * Event for token purchase logging\r\n     * @param purchaser who paid for the tokens\r\n     * @param beneficiary who got the tokens\r\n     * @param value weis paid for purchase\r\n     * @param amount amount of tokens purchased\r\n     */\r\n    event TokensPurchased(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\r\n    /**\r\n     * @param inRate Number of token units a buyer gets per wei\r\n     * @dev The rate is the conversion between wei and the smallest and indivisible\r\n     * token unit. So, if you are using a rate of 1 with a ERC20Detailed token\r\n     * with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\r\n     * @param inWallet Address where collected funds will be forwarded to\r\n     * @param inToken Address of the token being sold\r\n     */\r\n    constructor (uint256 inRate, address payable inWallet, IERC20 inToken) {\r\n        require(inRate > 0, \"Crowdsale: rate is 0\");\r\n        require(inWallet != address(0), \"Crowdsale: wallet is the zero address\");\r\n        require(address(inToken) != address(0), \"Crowdsale: token is the zero address\");\r\n\r\n        _rate = inRate;\r\n        _wallet = inWallet;\r\n        _token = inToken;\r\n    }\r\n\r\n    /**\r\n     * @dev fallback function ***DO NOT OVERRIDE***\r\n     * Note that other contracts will transfer funds with a base gas stipend\r\n     * of 2300, which is not enough to call buyTokens. Consider calling\r\n     * buyTokens directly when purchasing tokens from a contract.\r\n     */\r\n    fallback() external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n    \r\n    receive() external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @return the token being sold.\r\n     */\r\n    function token() public view returns (IERC20) {\r\n        return _token;\r\n    }\r\n\r\n    /**\r\n     * @return the address where funds are collected.\r\n     */\r\n    function wallet() public view returns (address payable) {\r\n        return _wallet;\r\n    }\r\n\r\n    /**\r\n     * @return the number of token units a buyer gets per wei.\r\n     */\r\n    function rate() public virtual view returns (uint256) {\r\n        return _rate;\r\n    }\r\n\r\n    /**\r\n     * @return the amount of wei raised.\r\n     */\r\n    function weiRaised() public view returns (uint256) {\r\n        return _weiRaised;\r\n    }\r\n\r\n    /**\r\n     * @dev low level token purchase ***DO NOT OVERRIDE***\r\n     * This function has a non-reentrancy guard, so it shouldn't be called by\r\n     * another `nonReentrant` function.\r\n     * @param beneficiary Recipient of the token purchase\r\n     */\r\n    function buyTokens(address beneficiary) public nonReentrant payable {\r\n        uint256 weiAmount = msg.value;\r\n        _preValidatePurchase(beneficiary, weiAmount);\r\n\r\n        // calculate token amount to be created\r\n        uint256 tokens = _getTokenAmount(weiAmount);\r\n\r\n        // update state\r\n        _weiRaised = _weiRaised.add(weiAmount);\r\n\r\n        _processPurchase(beneficiary, tokens);\r\n        emit TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens);\r\n\r\n        _updatePurchasingState(beneficiary, weiAmount);\r\n\r\n        _forwardFunds();\r\n        _postValidatePurchase(beneficiary, weiAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\r\n     * Use `super` in contracts that inherit from Crowdsale to extend their validations.\r\n     * Example from CappedCrowdsale.sol's _preValidatePurchase method:\r\n     *     super._preValidatePurchase(beneficiary, weiAmount);\r\n     *     require(weiRaised().add(weiAmount) <= cap);\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\");\r\n        require(weiAmount != 0, \"Crowdsale: weiAmount is 0\");\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\r\n     * conditions are not met.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\r\n     * its tokens.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param tokenAmount Number of tokens to be emitted\r\n     */\r\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {\r\n        _token.safeTransfer(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\r\n     * tokens.\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param tokenAmount Number of tokens to be purchased\r\n     */\r\n    function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {\r\n        _deliverTokens(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Override for extensions that require an internal state to check for validity (current user contributions,\r\n     * etc.)\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal virtual {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Override to extend the way in which ether is converted to tokens.\r\n     * @param weiAmount Value in wei to be converted into tokens\r\n     * @return Number of tokens that can be purchased with the specified _weiAmount\r\n     */\r\n    function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {\r\n        return weiAmount.mul(_rate);\r\n    }\r\n\r\n    /**\r\n     * @dev Determines how ETH is stored/forwarded on purchases.\r\n     */\r\n    function _forwardFunds() internal virtual {\r\n        _wallet.transfer(msg.value);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 17,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 118,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x27 0x24 0xB5 0x2E EXTCODECOPY CALLVALUE PUSH18 0xE7F8B6FEB5693F47018FC51716AED6B39E89 SAR LOG1 0xBF 0xDA LOG4 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "701:6234:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x27 0x24 0xB5 0x2E EXTCODECOPY CALLVALUE PUSH18 0xE7F8B6FEB5693F47018FC51716AED6B39E89 SAR LOG1 0xBF 0xDA LOG4 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "701:6234:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
									".code": [
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/pausableCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xCF02F35D13875A9E5D07 0x2E 0xE3 0x2A 0xC1 0xD2 INVALID CODESIZE BALANCE EXTCODEHASH 0xB4 0xBD SWAP6 SWAP13 0xA8 INVALID 0xC2 0xE0 0xEA DUP16 DELEGATECALL 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xCF02F35D13875A9E5D07 0x2E 0xE3 0x2A 0xC1 0xD2 INVALID CODESIZE BALANCE EXTCODEHASH 0xB4 0xBD SWAP6 SWAP13 0xA8 INVALID 0xC2 0xE0 0xEA DUP16 DELEGATECALL 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/pausableCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/pausableCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/crowdsale.sol": {
				"Crowdsale": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.",
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"constructor": {
								"details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
								"params": {
									"inRate": "Number of token units a buyer gets per wei",
									"inToken": "Address of the token being sold",
									"inWallet": "Address where collected funds will be forwarded to"
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "Crowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"rate()": "2c4e722e",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.\",\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"constructor\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"inRate\":\"Number of token units a buyer gets per wei\",\"inToken\":\"Address of the token being sold\",\"inWallet\":\"Address where collected funds will be forwarded to\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"Crowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/crowdsale.sol\":\"Crowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0xee463c77b303be60fe3509ff7b9aa23f2674f07b68622278a611ab7908591689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cb0baa0aace90973f81b63d0d3769d000b113f68fd089e0988f0c3468f5a1d9\",\"dweb:/ipfs/QmTi1mH6UupQvzs1AW1kr1sgMWW4wtjKWxngYd6dQ6Pdgj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 118,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1348,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)250"
							},
							{
								"astId": 1350,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 1352,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1354,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)250": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/validation/pausableCrowdsale.sol": {
				"PausableCrowdsale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inRate",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "inWallet",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "inToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "PausableCrowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"crowdsale/validation/pausableCrowdsale.sol\":299:1051  contract PausableCrowdsale is Crowdsale, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"crowdsale/validation/pausableCrowdsale.sol\":356:477  constructor(uint256 inRate, address payable inWallet, IERC20 inToken) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"crowdsale/validation/pausableCrowdsale.sol\":442:448  inRate */\n  dup3\n    /* \"crowdsale/validation/pausableCrowdsale.sol\":450:458  inWallet */\n  dup3\n    /* \"crowdsale/validation/pausableCrowdsale.sol\":460:467  inToken */\n  dup3\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2644:2645  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2635:2641  inRate */\n  dup4\n    /* \"crowdsale/crowdsale.sol\":2635:2645  inRate > 0 */\n  gt\n    /* \"crowdsale/crowdsale.sol\":2627:2670  require(inRate > 0, \"Crowdsale: rate is 0\") */\n  tag_10\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_10:\n    /* \"crowdsale/crowdsale.sol\":2709:2710  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2689:2711  inWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"crowdsale/crowdsale.sol\":2689:2697  inWallet */\n  dup3\n    /* \"crowdsale/crowdsale.sol\":2689:2711  inWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"crowdsale/crowdsale.sol\":2681:2753  require(inWallet != address(0), \"Crowdsale: wallet is the zero address\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"crowdsale/crowdsale.sol\":2800:2801  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2772:2802  address(inToken) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"crowdsale/crowdsale.sol\":2780:2787  inToken */\n  dup2\n    /* \"crowdsale/crowdsale.sol\":2772:2802  address(inToken) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"crowdsale/crowdsale.sol\":2764:2843  require(address(inToken) != address(0), \"Crowdsale: token is the zero address\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n    /* \"crowdsale/crowdsale.sol\":2864:2870  inRate */\n  dup3\n    /* \"crowdsale/crowdsale.sol\":2856:2861  _rate */\n  0x03\n    /* \"crowdsale/crowdsale.sol\":2856:2870  _rate = inRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2891:2899  inWallet */\n  dup2\n    /* \"crowdsale/crowdsale.sol\":2881:2888  _wallet */\n  0x02\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2881:2899  _wallet = inWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2919:2926  inToken */\n  dup1\n    /* \"crowdsale/crowdsale.sol\":2910:2916  _token */\n  0x01\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2910:2926  _token = inToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2545:2934  constructor (uint256 inRate, address payable inWallet, IERC20 inToken) {... */\n  pop\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/validation/pausableCrowdsale.sol\":356:477  constructor(uint256 inRate, address payable inWallet, IERC20 inToken) ... */\n  pop\n  pop\n  pop\n    /* \"crowdsale/validation/pausableCrowdsale.sol\":299:1051  contract PausableCrowdsale is Crowdsale, Pausable {... */\n  jump(tag_21)\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_26:\n    /* \"#utility.yul\":490:514   */\n  tag_49\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_25\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_50:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_27:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_52\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_26\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_28:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:930   */\ntag_29:\n    /* \"#utility.yul\":871:878   */\n  0x00\n    /* \"#utility.yul\":900:924   */\n  tag_55\n    /* \"#utility.yul\":918:923   */\n  dup3\n    /* \"#utility.yul\":900:924   */\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":889:924   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:930   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":936:1074   */\ntag_30:\n    /* \"#utility.yul\":1017:1049   */\n  tag_57\n    /* \"#utility.yul\":1043:1048   */\n  dup2\n    /* \"#utility.yul\":1017:1049   */\n  tag_29\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1010:1015   */\n  dup2\n    /* \"#utility.yul\":1007:1050   */\n  eq\n    /* \"#utility.yul\":997:1068   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1064:1065   */\n  0x00\n    /* \"#utility.yul\":1061:1062   */\n  dup1\n    /* \"#utility.yul\":1054:1066   */\n  revert\n    /* \"#utility.yul\":997:1068   */\ntag_58:\n    /* \"#utility.yul\":936:1074   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1080:1239   */\ntag_31:\n    /* \"#utility.yul\":1145:1150   */\n  0x00\n    /* \"#utility.yul\":1176:1182   */\n  dup2\n    /* \"#utility.yul\":1170:1183   */\n  mload\n    /* \"#utility.yul\":1161:1183   */\n  swap1\n  pop\n    /* \"#utility.yul\":1192:1233   */\n  tag_60\n    /* \"#utility.yul\":1227:1232   */\n  dup2\n    /* \"#utility.yul\":1192:1233   */\n  tag_30\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1080:1239   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1245:1341   */\ntag_32:\n    /* \"#utility.yul\":1282:1289   */\n  0x00\n    /* \"#utility.yul\":1311:1335   */\n  tag_62\n    /* \"#utility.yul\":1329:1334   */\n  dup3\n    /* \"#utility.yul\":1311:1335   */\n  tag_28\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1300:1335   */\n  swap1\n  pop\n    /* \"#utility.yul\":1245:1341   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1347:1457   */\ntag_33:\n    /* \"#utility.yul\":1398:1405   */\n  0x00\n    /* \"#utility.yul\":1427:1451   */\n  tag_64\n    /* \"#utility.yul\":1445:1450   */\n  dup3\n    /* \"#utility.yul\":1427:1451   */\n  tag_32\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1416:1451   */\n  swap1\n  pop\n    /* \"#utility.yul\":1347:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1613   */\ntag_34:\n    /* \"#utility.yul\":1550:1588   */\n  tag_66\n    /* \"#utility.yul\":1582:1587   */\n  dup2\n    /* \"#utility.yul\":1550:1588   */\n  tag_33\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1543:1548   */\n  dup2\n    /* \"#utility.yul\":1540:1589   */\n  eq\n    /* \"#utility.yul\":1530:1607   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1603:1604   */\n  0x00\n    /* \"#utility.yul\":1600:1601   */\n  dup1\n    /* \"#utility.yul\":1593:1605   */\n  revert\n    /* \"#utility.yul\":1530:1607   */\ntag_67:\n    /* \"#utility.yul\":1463:1613   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1619:1790   */\ntag_35:\n    /* \"#utility.yul\":1690:1695   */\n  0x00\n    /* \"#utility.yul\":1721:1727   */\n  dup2\n    /* \"#utility.yul\":1715:1728   */\n  mload\n    /* \"#utility.yul\":1706:1728   */\n  swap1\n  pop\n    /* \"#utility.yul\":1737:1784   */\n  tag_69\n    /* \"#utility.yul\":1778:1783   */\n  dup2\n    /* \"#utility.yul\":1737:1784   */\n  tag_34\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1619:1790   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1796:2503   */\ntag_3:\n    /* \"#utility.yul\":1906:1912   */\n  0x00\n    /* \"#utility.yul\":1914:1920   */\n  dup1\n    /* \"#utility.yul\":1922:1928   */\n  0x00\n    /* \"#utility.yul\":1971:1973   */\n  0x60\n    /* \"#utility.yul\":1959:1968   */\n  dup5\n    /* \"#utility.yul\":1950:1957   */\n  dup7\n    /* \"#utility.yul\":1946:1969   */\n  sub\n    /* \"#utility.yul\":1942:1974   */\n  slt\n    /* \"#utility.yul\":1939:2058   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1977:2056   */\n  tag_72\n  tag_23\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1939:2058   */\ntag_71:\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2122:2186   */\n  tag_73\n    /* \"#utility.yul\":2178:2185   */\n  dup7\n    /* \"#utility.yul\":2169:2175   */\n  dup3\n    /* \"#utility.yul\":2158:2167   */\n  dup8\n    /* \"#utility.yul\":2154:2176   */\n  add\n    /* \"#utility.yul\":2122:2186   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2112:2186   */\n  swap4\n  pop\n    /* \"#utility.yul\":2068:2196   */\n  pop\n    /* \"#utility.yul\":2235:2237   */\n  0x20\n    /* \"#utility.yul\":2261:2333   */\n  tag_74\n    /* \"#utility.yul\":2325:2332   */\n  dup7\n    /* \"#utility.yul\":2316:2322   */\n  dup3\n    /* \"#utility.yul\":2305:2314   */\n  dup8\n    /* \"#utility.yul\":2301:2323   */\n  add\n    /* \"#utility.yul\":2261:2333   */\n  tag_31\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2251:2333   */\n  swap3\n  pop\n    /* \"#utility.yul\":2206:2343   */\n  pop\n    /* \"#utility.yul\":2382:2384   */\n  0x40\n    /* \"#utility.yul\":2408:2486   */\n  tag_75\n    /* \"#utility.yul\":2478:2485   */\n  dup7\n    /* \"#utility.yul\":2469:2475   */\n  dup3\n    /* \"#utility.yul\":2458:2467   */\n  dup8\n    /* \"#utility.yul\":2454:2476   */\n  add\n    /* \"#utility.yul\":2408:2486   */\n  tag_35\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2398:2486   */\n  swap2\n  pop\n    /* \"#utility.yul\":2353:2496   */\n  pop\n    /* \"#utility.yul\":1796:2503   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2509:2678   */\ntag_36:\n    /* \"#utility.yul\":2593:2604   */\n  0x00\n    /* \"#utility.yul\":2627:2633   */\n  dup3\n    /* \"#utility.yul\":2622:2625   */\n  dup3\n    /* \"#utility.yul\":2615:2634   */\n  mstore\n    /* \"#utility.yul\":2667:2671   */\n  0x20\n    /* \"#utility.yul\":2662:2665   */\n  dup3\n    /* \"#utility.yul\":2658:2672   */\n  add\n    /* \"#utility.yul\":2643:2672   */\n  swap1\n  pop\n    /* \"#utility.yul\":2509:2678   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2684:2854   */\ntag_37:\n    /* \"#utility.yul\":2824:2846   */\n  0x43726f776473616c653a20726174652069732030000000000000000000000000\n    /* \"#utility.yul\":2820:2821   */\n  0x00\n    /* \"#utility.yul\":2812:2818   */\n  dup3\n    /* \"#utility.yul\":2808:2822   */\n  add\n    /* \"#utility.yul\":2801:2847   */\n  mstore\n    /* \"#utility.yul\":2684:2854   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2860:3226   */\ntag_38:\n    /* \"#utility.yul\":3002:3005   */\n  0x00\n    /* \"#utility.yul\":3023:3090   */\n  tag_79\n    /* \"#utility.yul\":3087:3089   */\n  0x14\n    /* \"#utility.yul\":3082:3085   */\n  dup4\n    /* \"#utility.yul\":3023:3090   */\n  tag_36\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3016:3090   */\n  swap2\n  pop\n    /* \"#utility.yul\":3099:3192   */\n  tag_80\n    /* \"#utility.yul\":3188:3191   */\n  dup3\n    /* \"#utility.yul\":3099:3192   */\n  tag_37\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3217:3219   */\n  0x20\n    /* \"#utility.yul\":3212:3215   */\n  dup3\n    /* \"#utility.yul\":3208:3220   */\n  add\n    /* \"#utility.yul\":3201:3220   */\n  swap1\n  pop\n    /* \"#utility.yul\":2860:3226   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3232:3651   */\ntag_12:\n    /* \"#utility.yul\":3398:3402   */\n  0x00\n    /* \"#utility.yul\":3436:3438   */\n  0x20\n    /* \"#utility.yul\":3425:3434   */\n  dup3\n    /* \"#utility.yul\":3421:3439   */\n  add\n    /* \"#utility.yul\":3413:3439   */\n  swap1\n  pop\n    /* \"#utility.yul\":3485:3494   */\n  dup2\n    /* \"#utility.yul\":3479:3483   */\n  dup2\n    /* \"#utility.yul\":3475:3495   */\n  sub\n    /* \"#utility.yul\":3471:3472   */\n  0x00\n    /* \"#utility.yul\":3460:3469   */\n  dup4\n    /* \"#utility.yul\":3456:3473   */\n  add\n    /* \"#utility.yul\":3449:3496   */\n  mstore\n    /* \"#utility.yul\":3513:3644   */\n  tag_82\n    /* \"#utility.yul\":3639:3643   */\n  dup2\n    /* \"#utility.yul\":3513:3644   */\n  tag_38\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3505:3644   */\n  swap1\n  pop\n    /* \"#utility.yul\":3232:3651   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3657:3881   */\ntag_39:\n    /* \"#utility.yul\":3797:3831   */\n  0x43726f776473616c653a2077616c6c657420697320746865207a65726f206164\n    /* \"#utility.yul\":3793:3794   */\n  0x00\n    /* \"#utility.yul\":3785:3791   */\n  dup3\n    /* \"#utility.yul\":3781:3795   */\n  add\n    /* \"#utility.yul\":3774:3832   */\n  mstore\n    /* \"#utility.yul\":3866:3873   */\n  0x6472657373000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3861:3863   */\n  0x20\n    /* \"#utility.yul\":3853:3859   */\n  dup3\n    /* \"#utility.yul\":3849:3864   */\n  add\n    /* \"#utility.yul\":3842:3874   */\n  mstore\n    /* \"#utility.yul\":3657:3881   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3887:4253   */\ntag_40:\n    /* \"#utility.yul\":4029:4032   */\n  0x00\n    /* \"#utility.yul\":4050:4117   */\n  tag_85\n    /* \"#utility.yul\":4114:4116   */\n  0x25\n    /* \"#utility.yul\":4109:4112   */\n  dup4\n    /* \"#utility.yul\":4050:4117   */\n  tag_36\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":4043:4117   */\n  swap2\n  pop\n    /* \"#utility.yul\":4126:4219   */\n  tag_86\n    /* \"#utility.yul\":4215:4218   */\n  dup3\n    /* \"#utility.yul\":4126:4219   */\n  tag_39\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4244:4246   */\n  0x40\n    /* \"#utility.yul\":4239:4242   */\n  dup3\n    /* \"#utility.yul\":4235:4247   */\n  add\n    /* \"#utility.yul\":4228:4247   */\n  swap1\n  pop\n    /* \"#utility.yul\":3887:4253   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4259:4678   */\ntag_15:\n    /* \"#utility.yul\":4425:4429   */\n  0x00\n    /* \"#utility.yul\":4463:4465   */\n  0x20\n    /* \"#utility.yul\":4452:4461   */\n  dup3\n    /* \"#utility.yul\":4448:4466   */\n  add\n    /* \"#utility.yul\":4440:4466   */\n  swap1\n  pop\n    /* \"#utility.yul\":4512:4521   */\n  dup2\n    /* \"#utility.yul\":4506:4510   */\n  dup2\n    /* \"#utility.yul\":4502:4522   */\n  sub\n    /* \"#utility.yul\":4498:4499   */\n  0x00\n    /* \"#utility.yul\":4487:4496   */\n  dup4\n    /* \"#utility.yul\":4483:4500   */\n  add\n    /* \"#utility.yul\":4476:4523   */\n  mstore\n    /* \"#utility.yul\":4540:4671   */\n  tag_88\n    /* \"#utility.yul\":4666:4670   */\n  dup2\n    /* \"#utility.yul\":4540:4671   */\n  tag_40\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4532:4671   */\n  swap1\n  pop\n    /* \"#utility.yul\":4259:4678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4684:4907   */\ntag_41:\n    /* \"#utility.yul\":4824:4858   */\n  0x43726f776473616c653a20746f6b656e20697320746865207a65726f20616464\n    /* \"#utility.yul\":4820:4821   */\n  0x00\n    /* \"#utility.yul\":4812:4818   */\n  dup3\n    /* \"#utility.yul\":4808:4822   */\n  add\n    /* \"#utility.yul\":4801:4859   */\n  mstore\n    /* \"#utility.yul\":4893:4899   */\n  0x7265737300000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4888:4890   */\n  0x20\n    /* \"#utility.yul\":4880:4886   */\n  dup3\n    /* \"#utility.yul\":4876:4891   */\n  add\n    /* \"#utility.yul\":4869:4900   */\n  mstore\n    /* \"#utility.yul\":4684:4907   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4913:5279   */\ntag_42:\n    /* \"#utility.yul\":5055:5058   */\n  0x00\n    /* \"#utility.yul\":5076:5143   */\n  tag_91\n    /* \"#utility.yul\":5140:5142   */\n  0x24\n    /* \"#utility.yul\":5135:5138   */\n  dup4\n    /* \"#utility.yul\":5076:5143   */\n  tag_36\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":5069:5143   */\n  swap2\n  pop\n    /* \"#utility.yul\":5152:5245   */\n  tag_92\n    /* \"#utility.yul\":5241:5244   */\n  dup3\n    /* \"#utility.yul\":5152:5245   */\n  tag_41\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":5270:5272   */\n  0x40\n    /* \"#utility.yul\":5265:5268   */\n  dup3\n    /* \"#utility.yul\":5261:5273   */\n  add\n    /* \"#utility.yul\":5254:5273   */\n  swap1\n  pop\n    /* \"#utility.yul\":4913:5279   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5285:5704   */\ntag_18:\n    /* \"#utility.yul\":5451:5455   */\n  0x00\n    /* \"#utility.yul\":5489:5491   */\n  0x20\n    /* \"#utility.yul\":5478:5487   */\n  dup3\n    /* \"#utility.yul\":5474:5492   */\n  add\n    /* \"#utility.yul\":5466:5492   */\n  swap1\n  pop\n    /* \"#utility.yul\":5538:5547   */\n  dup2\n    /* \"#utility.yul\":5532:5536   */\n  dup2\n    /* \"#utility.yul\":5528:5548   */\n  sub\n    /* \"#utility.yul\":5524:5525   */\n  0x00\n    /* \"#utility.yul\":5513:5522   */\n  dup4\n    /* \"#utility.yul\":5509:5526   */\n  add\n    /* \"#utility.yul\":5502:5549   */\n  mstore\n    /* \"#utility.yul\":5566:5697   */\n  tag_94\n    /* \"#utility.yul\":5692:5696   */\n  dup2\n    /* \"#utility.yul\":5566:5697   */\n  tag_42\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":5558:5697   */\n  swap1\n  pop\n    /* \"#utility.yul\":5285:5704   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"crowdsale/validation/pausableCrowdsale.sol\":299:1051  contract PausableCrowdsale is Crowdsale, Pausable {... */\ntag_21:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"crowdsale/validation/pausableCrowdsale.sol\":299:1051  contract PausableCrowdsale is Crowdsale, Pausable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2c4e722e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4042b66f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x521eb273\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xec8ac4d8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"crowdsale/crowdsale.sol\":3351:3374  buyTokens(_msgSender()) */\n      tag_11\n        /* \"crowdsale/crowdsale.sol\":3361:3373  _msgSender() */\n      tag_12\n        /* \"crowdsale/crowdsale.sol\":3361:3371  _msgSender */\n      tag_13\n        /* \"crowdsale/crowdsale.sol\":3361:3373  _msgSender() */\n      jump\t// in\n    tag_12:\n        /* \"crowdsale/crowdsale.sol\":3351:3360  buyTokens */\n      tag_14\n        /* \"crowdsale/crowdsale.sol\":3351:3374  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_11:\n        /* \"crowdsale/validation/pausableCrowdsale.sol\":299:1051  contract PausableCrowdsale is Crowdsale, Pausable {... */\n      stop\n    tag_2:\n        /* \"crowdsale/crowdsale.sol\":3270:3293  buyTokens(_msgSender()) */\n      tag_17\n        /* \"crowdsale/crowdsale.sol\":3280:3292  _msgSender() */\n      tag_18\n        /* \"crowdsale/crowdsale.sol\":3280:3290  _msgSender */\n      tag_13\n        /* \"crowdsale/crowdsale.sol\":3280:3292  _msgSender() */\n      jump\t// in\n    tag_18:\n        /* \"crowdsale/crowdsale.sol\":3270:3279  buyTokens */\n      tag_14\n        /* \"crowdsale/crowdsale.sol\":3270:3293  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_17:\n        /* \"crowdsale/validation/pausableCrowdsale.sol\":299:1051  contract PausableCrowdsale is Crowdsale, Pausable {... */\n      stop\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_14\n      jump\t// in\n    tag_38:\n      stop\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_48\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_49\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_48:\n        /* \"crowdsale/crowdsale.sol\":4368:4385  uint256 weiAmount */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4388:4397  msg.value */\n      callvalue\n        /* \"crowdsale/crowdsale.sol\":4368:4397  uint256 weiAmount = msg.value */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":4408:4452  _preValidatePurchase(beneficiary, weiAmount) */\n      tag_51\n        /* \"crowdsale/crowdsale.sol\":4429:4440  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4442:4451  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4408:4428  _preValidatePurchase */\n      tag_52\n        /* \"crowdsale/crowdsale.sol\":4408:4452  _preValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_51:\n        /* \"crowdsale/crowdsale.sol\":4514:4528  uint256 tokens */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4531:4557  _getTokenAmount(weiAmount) */\n      tag_53\n        /* \"crowdsale/crowdsale.sol\":4547:4556  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4531:4546  _getTokenAmount */\n      tag_54\n        /* \"crowdsale/crowdsale.sol\":4531:4557  _getTokenAmount(weiAmount) */\n      jump\t// in\n    tag_53:\n        /* \"crowdsale/crowdsale.sol\":4514:4557  uint256 tokens = _getTokenAmount(weiAmount) */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":4608:4633  _weiRaised.add(weiAmount) */\n      tag_55\n        /* \"crowdsale/crowdsale.sol\":4623:4632  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4608:4618  _weiRaised */\n      sload(0x04)\n        /* \"crowdsale/crowdsale.sol\":4608:4622  _weiRaised.add */\n      tag_56\n      swap1\n        /* \"crowdsale/crowdsale.sol\":4608:4633  _weiRaised.add(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_55:\n        /* \"crowdsale/crowdsale.sol\":4595:4605  _weiRaised */\n      0x04\n        /* \"crowdsale/crowdsale.sol\":4595:4633  _weiRaised = _weiRaised.add(weiAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"crowdsale/crowdsale.sol\":4646:4683  _processPurchase(beneficiary, tokens) */\n      tag_57\n        /* \"crowdsale/crowdsale.sol\":4663:4674  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4676:4682  tokens */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4646:4662  _processPurchase */\n      tag_58\n        /* \"crowdsale/crowdsale.sol\":4646:4683  _processPurchase(beneficiary, tokens) */\n      jump\t// in\n    tag_57:\n        /* \"crowdsale/crowdsale.sol\":4729:4740  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":4715:4727  _msgSender() */\n      tag_59\n        /* \"crowdsale/crowdsale.sol\":4715:4725  _msgSender */\n      tag_13\n        /* \"crowdsale/crowdsale.sol\":4715:4727  _msgSender() */\n      jump\t// in\n    tag_59:\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b\n        /* \"crowdsale/crowdsale.sol\":4742:4751  weiAmount */\n      dup5\n        /* \"crowdsale/crowdsale.sol\":4753:4759  tokens */\n      dup5\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      mload(0x40)\n      tag_60\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"crowdsale/crowdsale.sol\":4773:4819  _updatePurchasingState(beneficiary, weiAmount) */\n      tag_62\n        /* \"crowdsale/crowdsale.sol\":4796:4807  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4809:4818  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4773:4795  _updatePurchasingState */\n      tag_63\n        /* \"crowdsale/crowdsale.sol\":4773:4819  _updatePurchasingState(beneficiary, weiAmount) */\n      jump\t// in\n    tag_62:\n        /* \"crowdsale/crowdsale.sol\":4832:4847  _forwardFunds() */\n      tag_64\n        /* \"crowdsale/crowdsale.sol\":4832:4845  _forwardFunds */\n      tag_65\n        /* \"crowdsale/crowdsale.sol\":4832:4847  _forwardFunds() */\n      jump\t// in\n    tag_64:\n        /* \"crowdsale/crowdsale.sol\":4858:4903  _postValidatePurchase(beneficiary, weiAmount) */\n      tag_66\n        /* \"crowdsale/crowdsale.sol\":4880:4891  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4893:4902  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4858:4879  _postValidatePurchase */\n      tag_67\n        /* \"crowdsale/crowdsale.sol\":4858:4903  _postValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_66:\n        /* \"crowdsale/crowdsale.sol\":4357:4911  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_68\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_69\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_68:\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n    tag_21:\n        /* \"crowdsale/crowdsale.sol\":3829:3836  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3856:3861  _rate */\n      sload(0x03)\n        /* \"crowdsale/crowdsale.sol\":3849:3861  return _rate */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n    tag_26:\n        /* \"crowdsale/crowdsale.sol\":3979:3986  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4006:4016  _weiRaised */\n      sload(0x04)\n        /* \"crowdsale/crowdsale.sol\":3999:4016  return _weiRaised */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n    tag_30:\n        /* \"crowdsale/crowdsale.sol\":3644:3659  address payable */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3679:3686  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":3672:3686  return _wallet */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n    tag_43:\n        /* \"crowdsale/crowdsale.sol\":3484:3490  IERC20 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3510:3516  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":3503:3516  return _token */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"crowdsale/validation/pausableCrowdsale.sol\":861:1048  function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal override view whenNotPaused {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_80\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_81\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_80:\n        /* \"crowdsale/validation/pausableCrowdsale.sol\":988:1040  super._preValidatePurchase(_beneficiary, _weiAmount) */\n      tag_83\n        /* \"crowdsale/validation/pausableCrowdsale.sol\":1015:1027  _beneficiary */\n      dup3\n        /* \"crowdsale/validation/pausableCrowdsale.sol\":1029:1039  _weiAmount */\n      dup3\n        /* \"crowdsale/validation/pausableCrowdsale.sol\":988:1014  super._preValidatePurchase */\n      tag_84\n        /* \"crowdsale/validation/pausableCrowdsale.sol\":988:1040  super._preValidatePurchase(_beneficiary, _weiAmount) */\n      jump\t// in\n    tag_83:\n        /* \"crowdsale/validation/pausableCrowdsale.sol\":861:1048  function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal override view whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7856:7986  function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {... */\n    tag_54:\n        /* \"crowdsale/crowdsale.sol\":7931:7938  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":7958:7978  weiAmount.mul(_rate) */\n      tag_86\n        /* \"crowdsale/crowdsale.sol\":7972:7977  _rate */\n      sload(0x03)\n        /* \"crowdsale/crowdsale.sol\":7958:7967  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":7958:7971  weiAmount.mul */\n      tag_87\n      swap1\n        /* \"crowdsale/crowdsale.sol\":7958:7978  weiAmount.mul(_rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"crowdsale/crowdsale.sol\":7951:7978  return weiAmount.mul(_rate) */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":7856:7986  function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7023:7167  function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {... */\n    tag_58:\n        /* \"crowdsale/crowdsale.sol\":7119:7159  _deliverTokens(beneficiary, tokenAmount) */\n      tag_92\n        /* \"crowdsale/crowdsale.sol\":7134:7145  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":7147:7158  tokenAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":7119:7133  _deliverTokens */\n      tag_93\n        /* \"crowdsale/crowdsale.sol\":7119:7159  _deliverTokens(beneficiary, tokenAmount) */\n      jump\t// in\n    tag_92:\n        /* \"crowdsale/crowdsale.sol\":7023:7167  function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7445:7600  function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal virtual {... */\n    tag_63:\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":8078:8166  function _forwardFunds() internal virtual {... */\n    tag_65:\n        /* \"crowdsale/crowdsale.sol\":8131:8138  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":8131:8147  _wallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":8131:8158  _wallet.transfer(msg.value) */\n      0x08fc\n        /* \"crowdsale/crowdsale.sol\":8148:8157  msg.value */\n      callvalue\n        /* \"crowdsale/crowdsale.sol\":8131:8158  _wallet.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n        /* \"crowdsale/crowdsale.sol\":8078:8166  function _forwardFunds() internal virtual {... */\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":6155:6314  function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n    tag_67:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_101\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_35\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":5464:5852  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n    tag_84:\n        /* \"crowdsale/crowdsale.sol\":5598:5599  0 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":5575:5600  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":5575:5586  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":5575:5600  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"crowdsale/crowdsale.sol\":5567:5647  require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"crowdsale/crowdsale.sol\":5679:5680  0 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":5666:5675  weiAmount */\n      dup2\n        /* \"crowdsale/crowdsale.sol\":5666:5680  weiAmount != 0 */\n      sub\n        /* \"crowdsale/crowdsale.sol\":5658:5710  require(weiAmount != 0, \"Crowdsale: weiAmount is 0\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"crowdsale/crowdsale.sol\":5464:5852  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":6602:6749  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {... */\n    tag_93:\n        /* \"crowdsale/crowdsale.sol\":6696:6741  _token.safeTransfer(beneficiary, tokenAmount) */\n      tag_116\n        /* \"crowdsale/crowdsale.sol\":6716:6727  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":6729:6740  tokenAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":6696:6702  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":6696:6715  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_117\n      swap1\n        /* \"crowdsale/crowdsale.sol\":6696:6741  _token.safeTransfer(beneficiary, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"crowdsale/crowdsale.sol\":6602:6749  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1043:1048  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1073:1096  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1098:1100  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1102:1107  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1108  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_120\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1042  _callOptionalReturn */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5638  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5673  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5649:5654  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5668  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_125\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5710  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5749:5750  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5738  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5745  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5750  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_126\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5765:5775  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5754:5784  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5720:5831  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5266:5838  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4241:4253  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4294:4300  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4302:4306  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4308:4309  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4311:4323  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4293  functionCallWithValue */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4265:4324  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5342  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5387:5392  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5383  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5392  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5446:5458  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5460:5483  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5493  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5498  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5506:5511  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5513:5517  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5518  target.call{value: value}(data) */\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_143\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_142)\n    tag_143:\n      0x60\n      swap2\n      pop\n    tag_142:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5445:5518  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_144\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5562:5568  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5570:5577  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5579:5589  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5591:5603  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5561  verifyCallResultFromTarget */\n      tag_145\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5528:5604  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_145:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7916  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      tag_149\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8132:8138  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8131  isContract */\n      tag_150\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8208:8218  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8201:8218  return returndata */\n      swap1\n      pop\n      jump(tag_146)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8256  _revert */\n      tag_156\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_146:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9000:9001  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8990  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8997  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:84   */\n    tag_163:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_164:\n        /* \"#utility.yul\":177:201   */\n      tag_210\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_163\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_23:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_212\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_164\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_165:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:678   */\n    tag_166:\n        /* \"#utility.yul\":619:626   */\n      0x00\n        /* \"#utility.yul\":648:672   */\n      tag_215\n        /* \"#utility.yul\":666:671   */\n      dup3\n        /* \"#utility.yul\":648:672   */\n      tag_165\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":637:672   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:826   */\n    tag_167:\n        /* \"#utility.yul\":787:819   */\n      tag_217\n        /* \"#utility.yul\":813:818   */\n      dup2\n        /* \"#utility.yul\":787:819   */\n      tag_166\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":782:785   */\n      dup3\n        /* \"#utility.yul\":775:820   */\n      mstore\n        /* \"#utility.yul\":684:826   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":832:1086   */\n    tag_32:\n        /* \"#utility.yul\":941:945   */\n      0x00\n        /* \"#utility.yul\":979:981   */\n      0x20\n        /* \"#utility.yul\":968:977   */\n      dup3\n        /* \"#utility.yul\":964:982   */\n      add\n        /* \"#utility.yul\":956:982   */\n      swap1\n      pop\n        /* \"#utility.yul\":992:1079   */\n      tag_219\n        /* \"#utility.yul\":1076:1077   */\n      0x00\n        /* \"#utility.yul\":1065:1074   */\n      dup4\n        /* \"#utility.yul\":1061:1078   */\n      add\n        /* \"#utility.yul\":1052:1058   */\n      dup5\n        /* \"#utility.yul\":992:1079   */\n      tag_167\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":832:1086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1092:1182   */\n    tag_168:\n        /* \"#utility.yul\":1126:1133   */\n      0x00\n        /* \"#utility.yul\":1169:1174   */\n      dup2\n        /* \"#utility.yul\":1162:1175   */\n      iszero\n        /* \"#utility.yul\":1155:1176   */\n      iszero\n        /* \"#utility.yul\":1144:1176   */\n      swap1\n      pop\n        /* \"#utility.yul\":1092:1182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1188:1297   */\n    tag_169:\n        /* \"#utility.yul\":1269:1290   */\n      tag_222\n        /* \"#utility.yul\":1284:1289   */\n      dup2\n        /* \"#utility.yul\":1269:1290   */\n      tag_168\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":1264:1267   */\n      dup3\n        /* \"#utility.yul\":1257:1291   */\n      mstore\n        /* \"#utility.yul\":1188:1297   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1303:1513   */\n    tag_37:\n        /* \"#utility.yul\":1390:1394   */\n      0x00\n        /* \"#utility.yul\":1428:1430   */\n      0x20\n        /* \"#utility.yul\":1417:1426   */\n      dup3\n        /* \"#utility.yul\":1413:1431   */\n      add\n        /* \"#utility.yul\":1405:1431   */\n      swap1\n      pop\n        /* \"#utility.yul\":1441:1506   */\n      tag_224\n        /* \"#utility.yul\":1503:1504   */\n      0x00\n        /* \"#utility.yul\":1492:1501   */\n      dup4\n        /* \"#utility.yul\":1488:1505   */\n      add\n        /* \"#utility.yul\":1479:1485   */\n      dup5\n        /* \"#utility.yul\":1441:1506   */\n      tag_169\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":1303:1513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1600:1717   */\n    tag_171:\n        /* \"#utility.yul\":1709:1710   */\n      0x00\n        /* \"#utility.yul\":1706:1707   */\n      dup1\n        /* \"#utility.yul\":1699:1711   */\n      revert\n        /* \"#utility.yul\":1846:1942   */\n    tag_173:\n        /* \"#utility.yul\":1883:1890   */\n      0x00\n        /* \"#utility.yul\":1912:1936   */\n      tag_229\n        /* \"#utility.yul\":1930:1935   */\n      dup3\n        /* \"#utility.yul\":1912:1936   */\n      tag_165\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1901:1936   */\n      swap1\n      pop\n        /* \"#utility.yul\":1846:1942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1948:2070   */\n    tag_174:\n        /* \"#utility.yul\":2021:2045   */\n      tag_231\n        /* \"#utility.yul\":2039:2044   */\n      dup2\n        /* \"#utility.yul\":2021:2045   */\n      tag_173\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":2014:2019   */\n      dup2\n        /* \"#utility.yul\":2011:2046   */\n      eq\n        /* \"#utility.yul\":2001:2064   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":2060:2061   */\n      0x00\n        /* \"#utility.yul\":2057:2058   */\n      dup1\n        /* \"#utility.yul\":2050:2062   */\n      revert\n        /* \"#utility.yul\":2001:2064   */\n    tag_232:\n        /* \"#utility.yul\":1948:2070   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2215   */\n    tag_175:\n        /* \"#utility.yul\":2122:2127   */\n      0x00\n        /* \"#utility.yul\":2160:2166   */\n      dup2\n        /* \"#utility.yul\":2147:2167   */\n      calldataload\n        /* \"#utility.yul\":2138:2167   */\n      swap1\n      pop\n        /* \"#utility.yul\":2176:2209   */\n      tag_234\n        /* \"#utility.yul\":2203:2208   */\n      dup2\n        /* \"#utility.yul\":2176:2209   */\n      tag_174\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2076:2215   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2221:2550   */\n    tag_40:\n        /* \"#utility.yul\":2280:2286   */\n      0x00\n        /* \"#utility.yul\":2329:2331   */\n      0x20\n        /* \"#utility.yul\":2317:2326   */\n      dup3\n        /* \"#utility.yul\":2308:2315   */\n      dup5\n        /* \"#utility.yul\":2304:2327   */\n      sub\n        /* \"#utility.yul\":2300:2332   */\n      slt\n        /* \"#utility.yul\":2297:2416   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":2335:2414   */\n      tag_237\n      tag_171\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2297:2416   */\n    tag_236:\n        /* \"#utility.yul\":2455:2456   */\n      0x00\n        /* \"#utility.yul\":2480:2533   */\n      tag_238\n        /* \"#utility.yul\":2525:2532   */\n      dup5\n        /* \"#utility.yul\":2516:2522   */\n      dup3\n        /* \"#utility.yul\":2505:2514   */\n      dup6\n        /* \"#utility.yul\":2501:2523   */\n      add\n        /* \"#utility.yul\":2480:2533   */\n      tag_175\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2470:2533   */\n      swap2\n      pop\n        /* \"#utility.yul\":2426:2543   */\n      pop\n        /* \"#utility.yul\":2221:2550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2556:2616   */\n    tag_176:\n        /* \"#utility.yul\":2584:2587   */\n      0x00\n        /* \"#utility.yul\":2605:2610   */\n      dup2\n        /* \"#utility.yul\":2598:2610   */\n      swap1\n      pop\n        /* \"#utility.yul\":2556:2616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2622:2764   */\n    tag_177:\n        /* \"#utility.yul\":2672:2681   */\n      0x00\n        /* \"#utility.yul\":2705:2758   */\n      tag_241\n        /* \"#utility.yul\":2723:2757   */\n      tag_242\n        /* \"#utility.yul\":2732:2756   */\n      tag_243\n        /* \"#utility.yul\":2750:2755   */\n      dup5\n        /* \"#utility.yul\":2732:2756   */\n      tag_165\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2723:2757   */\n      tag_176\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2705:2758   */\n      tag_165\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2692:2758   */\n      swap1\n      pop\n        /* \"#utility.yul\":2622:2764   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2770:2896   */\n    tag_178:\n        /* \"#utility.yul\":2820:2829   */\n      0x00\n        /* \"#utility.yul\":2853:2890   */\n      tag_245\n        /* \"#utility.yul\":2884:2889   */\n      dup3\n        /* \"#utility.yul\":2853:2890   */\n      tag_177\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2840:2890   */\n      swap1\n      pop\n        /* \"#utility.yul\":2770:2896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2902:3042   */\n    tag_179:\n        /* \"#utility.yul\":2966:2975   */\n      0x00\n        /* \"#utility.yul\":2999:3036   */\n      tag_247\n        /* \"#utility.yul\":3030:3035   */\n      dup3\n        /* \"#utility.yul\":2999:3036   */\n      tag_178\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2986:3036   */\n      swap1\n      pop\n        /* \"#utility.yul\":2902:3042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3048:3207   */\n    tag_180:\n        /* \"#utility.yul\":3149:3200   */\n      tag_249\n        /* \"#utility.yul\":3194:3199   */\n      dup2\n        /* \"#utility.yul\":3149:3200   */\n      tag_179\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3144:3147   */\n      dup3\n        /* \"#utility.yul\":3137:3201   */\n      mstore\n        /* \"#utility.yul\":3048:3207   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3463   */\n    tag_45:\n        /* \"#utility.yul\":3320:3324   */\n      0x00\n        /* \"#utility.yul\":3358:3360   */\n      0x20\n        /* \"#utility.yul\":3347:3356   */\n      dup3\n        /* \"#utility.yul\":3343:3361   */\n      add\n        /* \"#utility.yul\":3335:3361   */\n      swap1\n      pop\n        /* \"#utility.yul\":3371:3456   */\n      tag_251\n        /* \"#utility.yul\":3453:3454   */\n      0x00\n        /* \"#utility.yul\":3442:3451   */\n      dup4\n        /* \"#utility.yul\":3438:3455   */\n      add\n        /* \"#utility.yul\":3429:3435   */\n      dup5\n        /* \"#utility.yul\":3371:3456   */\n      tag_180\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3213:3463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3469:3801   */\n    tag_61:\n        /* \"#utility.yul\":3590:3594   */\n      0x00\n        /* \"#utility.yul\":3628:3630   */\n      0x40\n        /* \"#utility.yul\":3617:3626   */\n      dup3\n        /* \"#utility.yul\":3613:3631   */\n      add\n        /* \"#utility.yul\":3605:3631   */\n      swap1\n      pop\n        /* \"#utility.yul\":3641:3712   */\n      tag_253\n        /* \"#utility.yul\":3709:3710   */\n      0x00\n        /* \"#utility.yul\":3698:3707   */\n      dup4\n        /* \"#utility.yul\":3694:3711   */\n      add\n        /* \"#utility.yul\":3685:3691   */\n      dup6\n        /* \"#utility.yul\":3641:3712   */\n      tag_164\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":3722:3794   */\n      tag_254\n        /* \"#utility.yul\":3790:3792   */\n      0x20\n        /* \"#utility.yul\":3779:3788   */\n      dup4\n        /* \"#utility.yul\":3775:3793   */\n      add\n        /* \"#utility.yul\":3766:3772   */\n      dup5\n        /* \"#utility.yul\":3722:3794   */\n      tag_164\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3469:3801   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3807:3976   */\n    tag_181:\n        /* \"#utility.yul\":3891:3902   */\n      0x00\n        /* \"#utility.yul\":3925:3931   */\n      dup3\n        /* \"#utility.yul\":3920:3923   */\n      dup3\n        /* \"#utility.yul\":3913:3932   */\n      mstore\n        /* \"#utility.yul\":3965:3969   */\n      0x20\n        /* \"#utility.yul\":3960:3963   */\n      dup3\n        /* \"#utility.yul\":3956:3970   */\n      add\n        /* \"#utility.yul\":3941:3970   */\n      swap1\n      pop\n        /* \"#utility.yul\":3807:3976   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3982:4163   */\n    tag_182:\n        /* \"#utility.yul\":4122:4155   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4118:4119   */\n      0x00\n        /* \"#utility.yul\":4110:4116   */\n      dup3\n        /* \"#utility.yul\":4106:4120   */\n      add\n        /* \"#utility.yul\":4099:4156   */\n      mstore\n        /* \"#utility.yul\":3982:4163   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4169:4535   */\n    tag_183:\n        /* \"#utility.yul\":4311:4314   */\n      0x00\n        /* \"#utility.yul\":4332:4399   */\n      tag_258\n        /* \"#utility.yul\":4396:4398   */\n      0x1f\n        /* \"#utility.yul\":4391:4394   */\n      dup4\n        /* \"#utility.yul\":4332:4399   */\n      tag_181\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4325:4399   */\n      swap2\n      pop\n        /* \"#utility.yul\":4408:4501   */\n      tag_259\n        /* \"#utility.yul\":4497:4500   */\n      dup3\n        /* \"#utility.yul\":4408:4501   */\n      tag_182\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4526:4528   */\n      0x20\n        /* \"#utility.yul\":4521:4524   */\n      dup3\n        /* \"#utility.yul\":4517:4529   */\n      add\n        /* \"#utility.yul\":4510:4529   */\n      swap1\n      pop\n        /* \"#utility.yul\":4169:4535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4541:4960   */\n    tag_78:\n        /* \"#utility.yul\":4707:4711   */\n      0x00\n        /* \"#utility.yul\":4745:4747   */\n      0x20\n        /* \"#utility.yul\":4734:4743   */\n      dup3\n        /* \"#utility.yul\":4730:4748   */\n      add\n        /* \"#utility.yul\":4722:4748   */\n      swap1\n      pop\n        /* \"#utility.yul\":4794:4803   */\n      dup2\n        /* \"#utility.yul\":4788:4792   */\n      dup2\n        /* \"#utility.yul\":4784:4804   */\n      sub\n        /* \"#utility.yul\":4780:4781   */\n      0x00\n        /* \"#utility.yul\":4769:4778   */\n      dup4\n        /* \"#utility.yul\":4765:4782   */\n      add\n        /* \"#utility.yul\":4758:4805   */\n      mstore\n        /* \"#utility.yul\":4822:4953   */\n      tag_261\n        /* \"#utility.yul\":4948:4952   */\n      dup2\n        /* \"#utility.yul\":4822:4953   */\n      tag_183\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4814:4953   */\n      swap1\n      pop\n        /* \"#utility.yul\":4541:4960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4966:5146   */\n    tag_184:\n        /* \"#utility.yul\":5014:5091   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5011:5012   */\n      0x00\n        /* \"#utility.yul\":5004:5092   */\n      mstore\n        /* \"#utility.yul\":5111:5115   */\n      0x11\n        /* \"#utility.yul\":5108:5109   */\n      0x04\n        /* \"#utility.yul\":5101:5116   */\n      mstore\n        /* \"#utility.yul\":5135:5139   */\n      0x24\n        /* \"#utility.yul\":5132:5133   */\n      0x00\n        /* \"#utility.yul\":5125:5140   */\n      revert\n        /* \"#utility.yul\":5152:5343   */\n    tag_90:\n        /* \"#utility.yul\":5192:5195   */\n      0x00\n        /* \"#utility.yul\":5211:5231   */\n      tag_264\n        /* \"#utility.yul\":5229:5230   */\n      dup3\n        /* \"#utility.yul\":5211:5231   */\n      tag_163\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5206:5231   */\n      swap2\n      pop\n        /* \"#utility.yul\":5245:5265   */\n      tag_265\n        /* \"#utility.yul\":5263:5264   */\n      dup4\n        /* \"#utility.yul\":5245:5265   */\n      tag_163\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":5240:5265   */\n      swap3\n      pop\n        /* \"#utility.yul\":5288:5289   */\n      dup3\n        /* \"#utility.yul\":5285:5286   */\n      dup3\n        /* \"#utility.yul\":5281:5290   */\n      add\n        /* \"#utility.yul\":5274:5290   */\n      swap1\n      pop\n        /* \"#utility.yul\":5309:5312   */\n      dup1\n        /* \"#utility.yul\":5306:5307   */\n      dup3\n        /* \"#utility.yul\":5303:5313   */\n      gt\n        /* \"#utility.yul\":5300:5336   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":5316:5334   */\n      tag_267\n      tag_184\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":5300:5336   */\n    tag_266:\n        /* \"#utility.yul\":5152:5343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5349:5515   */\n    tag_185:\n        /* \"#utility.yul\":5489:5507   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":5485:5486   */\n      0x00\n        /* \"#utility.yul\":5477:5483   */\n      dup3\n        /* \"#utility.yul\":5473:5487   */\n      add\n        /* \"#utility.yul\":5466:5508   */\n      mstore\n        /* \"#utility.yul\":5349:5515   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5521:5887   */\n    tag_186:\n        /* \"#utility.yul\":5663:5666   */\n      0x00\n        /* \"#utility.yul\":5684:5751   */\n      tag_270\n        /* \"#utility.yul\":5748:5750   */\n      0x10\n        /* \"#utility.yul\":5743:5746   */\n      dup4\n        /* \"#utility.yul\":5684:5751   */\n      tag_181\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5677:5751   */\n      swap2\n      pop\n        /* \"#utility.yul\":5760:5853   */\n      tag_271\n        /* \"#utility.yul\":5849:5852   */\n      dup3\n        /* \"#utility.yul\":5760:5853   */\n      tag_185\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5878:5880   */\n      0x20\n        /* \"#utility.yul\":5873:5876   */\n      dup3\n        /* \"#utility.yul\":5869:5881   */\n      add\n        /* \"#utility.yul\":5862:5881   */\n      swap1\n      pop\n        /* \"#utility.yul\":5521:5887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5893:6312   */\n    tag_104:\n        /* \"#utility.yul\":6059:6063   */\n      0x00\n        /* \"#utility.yul\":6097:6099   */\n      0x20\n        /* \"#utility.yul\":6086:6095   */\n      dup3\n        /* \"#utility.yul\":6082:6100   */\n      add\n        /* \"#utility.yul\":6074:6100   */\n      swap1\n      pop\n        /* \"#utility.yul\":6146:6155   */\n      dup2\n        /* \"#utility.yul\":6140:6144   */\n      dup2\n        /* \"#utility.yul\":6136:6156   */\n      sub\n        /* \"#utility.yul\":6132:6133   */\n      0x00\n        /* \"#utility.yul\":6121:6130   */\n      dup4\n        /* \"#utility.yul\":6117:6134   */\n      add\n        /* \"#utility.yul\":6110:6157   */\n      mstore\n        /* \"#utility.yul\":6174:6305   */\n      tag_273\n        /* \"#utility.yul\":6300:6304   */\n      dup2\n        /* \"#utility.yul\":6174:6305   */\n      tag_186\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":6166:6305   */\n      swap1\n      pop\n        /* \"#utility.yul\":5893:6312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6318:6547   */\n    tag_187:\n        /* \"#utility.yul\":6458:6492   */\n      0x43726f776473616c653a2062656e656669636961727920697320746865207a65\n        /* \"#utility.yul\":6454:6455   */\n      0x00\n        /* \"#utility.yul\":6446:6452   */\n      dup3\n        /* \"#utility.yul\":6442:6456   */\n      add\n        /* \"#utility.yul\":6435:6493   */\n      mstore\n        /* \"#utility.yul\":6527:6539   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6522:6524   */\n      0x20\n        /* \"#utility.yul\":6514:6520   */\n      dup3\n        /* \"#utility.yul\":6510:6525   */\n      add\n        /* \"#utility.yul\":6503:6540   */\n      mstore\n        /* \"#utility.yul\":6318:6547   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6553:6919   */\n    tag_188:\n        /* \"#utility.yul\":6695:6698   */\n      0x00\n        /* \"#utility.yul\":6716:6783   */\n      tag_276\n        /* \"#utility.yul\":6780:6782   */\n      0x2a\n        /* \"#utility.yul\":6775:6778   */\n      dup4\n        /* \"#utility.yul\":6716:6783   */\n      tag_181\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6709:6783   */\n      swap2\n      pop\n        /* \"#utility.yul\":6792:6885   */\n      tag_277\n        /* \"#utility.yul\":6881:6884   */\n      dup3\n        /* \"#utility.yul\":6792:6885   */\n      tag_187\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":6910:6912   */\n      0x40\n        /* \"#utility.yul\":6905:6908   */\n      dup3\n        /* \"#utility.yul\":6901:6913   */\n      add\n        /* \"#utility.yul\":6894:6913   */\n      swap1\n      pop\n        /* \"#utility.yul\":6553:6919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6925:7344   */\n    tag_108:\n        /* \"#utility.yul\":7091:7095   */\n      0x00\n        /* \"#utility.yul\":7129:7131   */\n      0x20\n        /* \"#utility.yul\":7118:7127   */\n      dup3\n        /* \"#utility.yul\":7114:7132   */\n      add\n        /* \"#utility.yul\":7106:7132   */\n      swap1\n      pop\n        /* \"#utility.yul\":7178:7187   */\n      dup2\n        /* \"#utility.yul\":7172:7176   */\n      dup2\n        /* \"#utility.yul\":7168:7188   */\n      sub\n        /* \"#utility.yul\":7164:7165   */\n      0x00\n        /* \"#utility.yul\":7153:7162   */\n      dup4\n        /* \"#utility.yul\":7149:7166   */\n      add\n        /* \"#utility.yul\":7142:7189   */\n      mstore\n        /* \"#utility.yul\":7206:7337   */\n      tag_279\n        /* \"#utility.yul\":7332:7336   */\n      dup2\n        /* \"#utility.yul\":7206:7337   */\n      tag_188\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7198:7337   */\n      swap1\n      pop\n        /* \"#utility.yul\":6925:7344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7350:7525   */\n    tag_189:\n        /* \"#utility.yul\":7490:7517   */\n      0x43726f776473616c653a20776569416d6f756e74206973203000000000000000\n        /* \"#utility.yul\":7486:7487   */\n      0x00\n        /* \"#utility.yul\":7478:7484   */\n      dup3\n        /* \"#utility.yul\":7474:7488   */\n      add\n        /* \"#utility.yul\":7467:7518   */\n      mstore\n        /* \"#utility.yul\":7350:7525   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7531:7897   */\n    tag_190:\n        /* \"#utility.yul\":7673:7676   */\n      0x00\n        /* \"#utility.yul\":7694:7761   */\n      tag_282\n        /* \"#utility.yul\":7758:7760   */\n      0x19\n        /* \"#utility.yul\":7753:7756   */\n      dup4\n        /* \"#utility.yul\":7694:7761   */\n      tag_181\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":7687:7761   */\n      swap2\n      pop\n        /* \"#utility.yul\":7770:7863   */\n      tag_283\n        /* \"#utility.yul\":7859:7862   */\n      dup3\n        /* \"#utility.yul\":7770:7863   */\n      tag_189\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":7888:7890   */\n      0x20\n        /* \"#utility.yul\":7883:7886   */\n      dup3\n        /* \"#utility.yul\":7879:7891   */\n      add\n        /* \"#utility.yul\":7872:7891   */\n      swap1\n      pop\n        /* \"#utility.yul\":7531:7897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7903:8322   */\n    tag_111:\n        /* \"#utility.yul\":8069:8073   */\n      0x00\n        /* \"#utility.yul\":8107:8109   */\n      0x20\n        /* \"#utility.yul\":8096:8105   */\n      dup3\n        /* \"#utility.yul\":8092:8110   */\n      add\n        /* \"#utility.yul\":8084:8110   */\n      swap1\n      pop\n        /* \"#utility.yul\":8156:8165   */\n      dup2\n        /* \"#utility.yul\":8150:8154   */\n      dup2\n        /* \"#utility.yul\":8146:8166   */\n      sub\n        /* \"#utility.yul\":8142:8143   */\n      0x00\n        /* \"#utility.yul\":8131:8140   */\n      dup4\n        /* \"#utility.yul\":8127:8144   */\n      add\n        /* \"#utility.yul\":8120:8167   */\n      mstore\n        /* \"#utility.yul\":8184:8315   */\n      tag_285\n        /* \"#utility.yul\":8310:8314   */\n      dup2\n        /* \"#utility.yul\":8184:8315   */\n      tag_190\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":8176:8315   */\n      swap1\n      pop\n        /* \"#utility.yul\":7903:8322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8328:8738   */\n    tag_114:\n        /* \"#utility.yul\":8368:8375   */\n      0x00\n        /* \"#utility.yul\":8391:8411   */\n      tag_287\n        /* \"#utility.yul\":8409:8410   */\n      dup3\n        /* \"#utility.yul\":8391:8411   */\n      tag_163\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":8386:8411   */\n      swap2\n      pop\n        /* \"#utility.yul\":8425:8445   */\n      tag_288\n        /* \"#utility.yul\":8443:8444   */\n      dup4\n        /* \"#utility.yul\":8425:8445   */\n      tag_163\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":8420:8445   */\n      swap3\n      pop\n        /* \"#utility.yul\":8480:8481   */\n      dup3\n        /* \"#utility.yul\":8477:8478   */\n      dup3\n        /* \"#utility.yul\":8473:8482   */\n      mul\n        /* \"#utility.yul\":8502:8532   */\n      tag_289\n        /* \"#utility.yul\":8520:8531   */\n      dup2\n        /* \"#utility.yul\":8502:8532   */\n      tag_163\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":8491:8532   */\n      swap2\n      pop\n        /* \"#utility.yul\":8681:8682   */\n      dup3\n        /* \"#utility.yul\":8672:8679   */\n      dup3\n        /* \"#utility.yul\":8668:8683   */\n      div\n        /* \"#utility.yul\":8665:8666   */\n      dup5\n        /* \"#utility.yul\":8662:8684   */\n      eq\n        /* \"#utility.yul\":8642:8643   */\n      dup4\n        /* \"#utility.yul\":8635:8644   */\n      iszero\n        /* \"#utility.yul\":8615:8698   */\n      or\n        /* \"#utility.yul\":8592:8731   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":8711:8729   */\n      tag_291\n      tag_184\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":8592:8731   */\n    tag_290:\n        /* \"#utility.yul\":8376:8738   */\n      pop\n        /* \"#utility.yul\":8328:8738   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8744:8862   */\n    tag_191:\n        /* \"#utility.yul\":8831:8855   */\n      tag_293\n        /* \"#utility.yul\":8849:8854   */\n      dup2\n        /* \"#utility.yul\":8831:8855   */\n      tag_173\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8826:8829   */\n      dup3\n        /* \"#utility.yul\":8819:8856   */\n      mstore\n        /* \"#utility.yul\":8744:8862   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8868:9200   */\n    tag_121:\n        /* \"#utility.yul\":8989:8993   */\n      0x00\n        /* \"#utility.yul\":9027:9029   */\n      0x40\n        /* \"#utility.yul\":9016:9025   */\n      dup3\n        /* \"#utility.yul\":9012:9030   */\n      add\n        /* \"#utility.yul\":9004:9030   */\n      swap1\n      pop\n        /* \"#utility.yul\":9040:9111   */\n      tag_295\n        /* \"#utility.yul\":9108:9109   */\n      0x00\n        /* \"#utility.yul\":9097:9106   */\n      dup4\n        /* \"#utility.yul\":9093:9110   */\n      add\n        /* \"#utility.yul\":9084:9090   */\n      dup6\n        /* \"#utility.yul\":9040:9111   */\n      tag_191\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":9121:9193   */\n      tag_296\n        /* \"#utility.yul\":9189:9191   */\n      0x20\n        /* \"#utility.yul\":9178:9187   */\n      dup4\n        /* \"#utility.yul\":9174:9192   */\n      add\n        /* \"#utility.yul\":9165:9171   */\n      dup5\n        /* \"#utility.yul\":9121:9193   */\n      tag_164\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8868:9200   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9206:9322   */\n    tag_192:\n        /* \"#utility.yul\":9276:9297   */\n      tag_298\n        /* \"#utility.yul\":9291:9296   */\n      dup2\n        /* \"#utility.yul\":9276:9297   */\n      tag_168\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":9269:9274   */\n      dup2\n        /* \"#utility.yul\":9266:9298   */\n      eq\n        /* \"#utility.yul\":9256:9316   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":9312:9313   */\n      0x00\n        /* \"#utility.yul\":9309:9310   */\n      dup1\n        /* \"#utility.yul\":9302:9314   */\n      revert\n        /* \"#utility.yul\":9256:9316   */\n    tag_299:\n        /* \"#utility.yul\":9206:9322   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9328:9465   */\n    tag_193:\n        /* \"#utility.yul\":9382:9387   */\n      0x00\n        /* \"#utility.yul\":9413:9419   */\n      dup2\n        /* \"#utility.yul\":9407:9420   */\n      mload\n        /* \"#utility.yul\":9398:9420   */\n      swap1\n      pop\n        /* \"#utility.yul\":9429:9459   */\n      tag_301\n        /* \"#utility.yul\":9453:9458   */\n      dup2\n        /* \"#utility.yul\":9429:9459   */\n      tag_192\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":9328:9465   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9471:9816   */\n    tag_128:\n        /* \"#utility.yul\":9538:9544   */\n      0x00\n        /* \"#utility.yul\":9587:9589   */\n      0x20\n        /* \"#utility.yul\":9575:9584   */\n      dup3\n        /* \"#utility.yul\":9566:9573   */\n      dup5\n        /* \"#utility.yul\":9562:9585   */\n      sub\n        /* \"#utility.yul\":9558:9590   */\n      slt\n        /* \"#utility.yul\":9555:9674   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":9593:9672   */\n      tag_304\n      tag_171\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":9555:9674   */\n    tag_303:\n        /* \"#utility.yul\":9713:9714   */\n      0x00\n        /* \"#utility.yul\":9738:9799   */\n      tag_305\n        /* \"#utility.yul\":9791:9798   */\n      dup5\n        /* \"#utility.yul\":9782:9788   */\n      dup3\n        /* \"#utility.yul\":9771:9780   */\n      dup6\n        /* \"#utility.yul\":9767:9789   */\n      add\n        /* \"#utility.yul\":9738:9799   */\n      tag_193\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":9728:9799   */\n      swap2\n      pop\n        /* \"#utility.yul\":9684:9809   */\n      pop\n        /* \"#utility.yul\":9471:9816   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9822:10051   */\n    tag_194:\n        /* \"#utility.yul\":9962:9996   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":9958:9959   */\n      0x00\n        /* \"#utility.yul\":9950:9956   */\n      dup3\n        /* \"#utility.yul\":9946:9960   */\n      add\n        /* \"#utility.yul\":9939:9997   */\n      mstore\n        /* \"#utility.yul\":10031:10043   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10026:10028   */\n      0x20\n        /* \"#utility.yul\":10018:10024   */\n      dup3\n        /* \"#utility.yul\":10014:10029   */\n      add\n        /* \"#utility.yul\":10007:10044   */\n      mstore\n        /* \"#utility.yul\":9822:10051   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10057:10423   */\n    tag_195:\n        /* \"#utility.yul\":10199:10202   */\n      0x00\n        /* \"#utility.yul\":10220:10287   */\n      tag_308\n        /* \"#utility.yul\":10284:10286   */\n      0x2a\n        /* \"#utility.yul\":10279:10282   */\n      dup4\n        /* \"#utility.yul\":10220:10287   */\n      tag_181\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":10213:10287   */\n      swap2\n      pop\n        /* \"#utility.yul\":10296:10389   */\n      tag_309\n        /* \"#utility.yul\":10385:10388   */\n      dup3\n        /* \"#utility.yul\":10296:10389   */\n      tag_194\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":10414:10416   */\n      0x40\n        /* \"#utility.yul\":10409:10412   */\n      dup3\n        /* \"#utility.yul\":10405:10417   */\n      add\n        /* \"#utility.yul\":10398:10417   */\n      swap1\n      pop\n        /* \"#utility.yul\":10057:10423   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10429:10848   */\n    tag_131:\n        /* \"#utility.yul\":10595:10599   */\n      0x00\n        /* \"#utility.yul\":10633:10635   */\n      0x20\n        /* \"#utility.yul\":10622:10631   */\n      dup3\n        /* \"#utility.yul\":10618:10636   */\n      add\n        /* \"#utility.yul\":10610:10636   */\n      swap1\n      pop\n        /* \"#utility.yul\":10682:10691   */\n      dup2\n        /* \"#utility.yul\":10676:10680   */\n      dup2\n        /* \"#utility.yul\":10672:10692   */\n      sub\n        /* \"#utility.yul\":10668:10669   */\n      0x00\n        /* \"#utility.yul\":10657:10666   */\n      dup4\n        /* \"#utility.yul\":10653:10670   */\n      add\n        /* \"#utility.yul\":10646:10693   */\n      mstore\n        /* \"#utility.yul\":10710:10841   */\n      tag_311\n        /* \"#utility.yul\":10836:10840   */\n      dup2\n        /* \"#utility.yul\":10710:10841   */\n      tag_195\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":10702:10841   */\n      swap1\n      pop\n        /* \"#utility.yul\":10429:10848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10854:11079   */\n    tag_196:\n        /* \"#utility.yul\":10994:11028   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":10990:10991   */\n      0x00\n        /* \"#utility.yul\":10982:10988   */\n      dup3\n        /* \"#utility.yul\":10978:10992   */\n      add\n        /* \"#utility.yul\":10971:11029   */\n      mstore\n        /* \"#utility.yul\":11063:11071   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11058:11060   */\n      0x20\n        /* \"#utility.yul\":11050:11056   */\n      dup3\n        /* \"#utility.yul\":11046:11061   */\n      add\n        /* \"#utility.yul\":11039:11072   */\n      mstore\n        /* \"#utility.yul\":10854:11079   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11085:11451   */\n    tag_197:\n        /* \"#utility.yul\":11227:11230   */\n      0x00\n        /* \"#utility.yul\":11248:11315   */\n      tag_314\n        /* \"#utility.yul\":11312:11314   */\n      0x26\n        /* \"#utility.yul\":11307:11310   */\n      dup4\n        /* \"#utility.yul\":11248:11315   */\n      tag_181\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":11241:11315   */\n      swap2\n      pop\n        /* \"#utility.yul\":11324:11417   */\n      tag_315\n        /* \"#utility.yul\":11413:11416   */\n      dup3\n        /* \"#utility.yul\":11324:11417   */\n      tag_196\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":11442:11444   */\n      0x40\n        /* \"#utility.yul\":11437:11440   */\n      dup3\n        /* \"#utility.yul\":11433:11445   */\n      add\n        /* \"#utility.yul\":11426:11445   */\n      swap1\n      pop\n        /* \"#utility.yul\":11085:11451   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11457:11876   */\n    tag_138:\n        /* \"#utility.yul\":11623:11627   */\n      0x00\n        /* \"#utility.yul\":11661:11663   */\n      0x20\n        /* \"#utility.yul\":11650:11659   */\n      dup3\n        /* \"#utility.yul\":11646:11664   */\n      add\n        /* \"#utility.yul\":11638:11664   */\n      swap1\n      pop\n        /* \"#utility.yul\":11710:11719   */\n      dup2\n        /* \"#utility.yul\":11704:11708   */\n      dup2\n        /* \"#utility.yul\":11700:11720   */\n      sub\n        /* \"#utility.yul\":11696:11697   */\n      0x00\n        /* \"#utility.yul\":11685:11694   */\n      dup4\n        /* \"#utility.yul\":11681:11698   */\n      add\n        /* \"#utility.yul\":11674:11721   */\n      mstore\n        /* \"#utility.yul\":11738:11869   */\n      tag_317\n        /* \"#utility.yul\":11864:11868   */\n      dup2\n        /* \"#utility.yul\":11738:11869   */\n      tag_197\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":11730:11869   */\n      swap1\n      pop\n        /* \"#utility.yul\":11457:11876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11882:11980   */\n    tag_198:\n        /* \"#utility.yul\":11933:11939   */\n      0x00\n        /* \"#utility.yul\":11967:11972   */\n      dup2\n        /* \"#utility.yul\":11961:11973   */\n      mload\n        /* \"#utility.yul\":11951:11973   */\n      swap1\n      pop\n        /* \"#utility.yul\":11882:11980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11986:12133   */\n    tag_199:\n        /* \"#utility.yul\":12087:12098   */\n      0x00\n        /* \"#utility.yul\":12124:12127   */\n      dup2\n        /* \"#utility.yul\":12109:12127   */\n      swap1\n      pop\n        /* \"#utility.yul\":11986:12133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12139:12385   */\n    tag_200:\n        /* \"#utility.yul\":12220:12221   */\n      0x00\n        /* \"#utility.yul\":12230:12343   */\n    tag_321:\n        /* \"#utility.yul\":12244:12250   */\n      dup4\n        /* \"#utility.yul\":12241:12242   */\n      dup2\n        /* \"#utility.yul\":12238:12251   */\n      lt\n        /* \"#utility.yul\":12230:12343   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":12329:12330   */\n      dup1\n        /* \"#utility.yul\":12324:12327   */\n      dup3\n        /* \"#utility.yul\":12320:12331   */\n      add\n        /* \"#utility.yul\":12314:12332   */\n      mload\n        /* \"#utility.yul\":12310:12311   */\n      dup2\n        /* \"#utility.yul\":12305:12308   */\n      dup5\n        /* \"#utility.yul\":12301:12312   */\n      add\n        /* \"#utility.yul\":12294:12333   */\n      mstore\n        /* \"#utility.yul\":12266:12268   */\n      0x20\n        /* \"#utility.yul\":12263:12264   */\n      dup2\n        /* \"#utility.yul\":12259:12269   */\n      add\n        /* \"#utility.yul\":12254:12269   */\n      swap1\n      pop\n        /* \"#utility.yul\":12230:12343   */\n      jump(tag_321)\n    tag_323:\n        /* \"#utility.yul\":12377:12378   */\n      0x00\n        /* \"#utility.yul\":12368:12374   */\n      dup5\n        /* \"#utility.yul\":12363:12366   */\n      dup5\n        /* \"#utility.yul\":12359:12375   */\n      add\n        /* \"#utility.yul\":12352:12379   */\n      mstore\n        /* \"#utility.yul\":12201:12385   */\n      pop\n        /* \"#utility.yul\":12139:12385   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12391:12777   */\n    tag_201:\n        /* \"#utility.yul\":12495:12498   */\n      0x00\n        /* \"#utility.yul\":12523:12561   */\n      tag_325\n        /* \"#utility.yul\":12555:12560   */\n      dup3\n        /* \"#utility.yul\":12523:12561   */\n      tag_198\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":12577:12665   */\n      tag_326\n        /* \"#utility.yul\":12658:12664   */\n      dup2\n        /* \"#utility.yul\":12653:12656   */\n      dup6\n        /* \"#utility.yul\":12577:12665   */\n      tag_199\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":12570:12665   */\n      swap4\n      pop\n        /* \"#utility.yul\":12674:12739   */\n      tag_327\n        /* \"#utility.yul\":12732:12738   */\n      dup2\n        /* \"#utility.yul\":12727:12730   */\n      dup6\n        /* \"#utility.yul\":12720:12724   */\n      0x20\n        /* \"#utility.yul\":12713:12718   */\n      dup7\n        /* \"#utility.yul\":12709:12725   */\n      add\n        /* \"#utility.yul\":12674:12739   */\n      tag_200\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":12764:12770   */\n      dup1\n        /* \"#utility.yul\":12759:12762   */\n      dup5\n        /* \"#utility.yul\":12755:12771   */\n      add\n        /* \"#utility.yul\":12748:12771   */\n      swap2\n      pop\n        /* \"#utility.yul\":12499:12777   */\n      pop\n        /* \"#utility.yul\":12391:12777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12783:13054   */\n    tag_140:\n        /* \"#utility.yul\":12913:12916   */\n      0x00\n        /* \"#utility.yul\":12935:13028   */\n      tag_329\n        /* \"#utility.yul\":13024:13027   */\n      dup3\n        /* \"#utility.yul\":13015:13021   */\n      dup5\n        /* \"#utility.yul\":12935:13028   */\n      tag_201\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":12928:13028   */\n      swap2\n      pop\n        /* \"#utility.yul\":13045:13048   */\n      dup2\n        /* \"#utility.yul\":13038:13048   */\n      swap1\n      pop\n        /* \"#utility.yul\":12783:13054   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13060:13239   */\n    tag_202:\n        /* \"#utility.yul\":13200:13231   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":13196:13197   */\n      0x00\n        /* \"#utility.yul\":13188:13194   */\n      dup3\n        /* \"#utility.yul\":13184:13198   */\n      add\n        /* \"#utility.yul\":13177:13232   */\n      mstore\n        /* \"#utility.yul\":13060:13239   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13245:13611   */\n    tag_203:\n        /* \"#utility.yul\":13387:13390   */\n      0x00\n        /* \"#utility.yul\":13408:13475   */\n      tag_332\n        /* \"#utility.yul\":13472:13474   */\n      0x1d\n        /* \"#utility.yul\":13467:13470   */\n      dup4\n        /* \"#utility.yul\":13408:13475   */\n      tag_181\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":13401:13475   */\n      swap2\n      pop\n        /* \"#utility.yul\":13484:13577   */\n      tag_333\n        /* \"#utility.yul\":13573:13576   */\n      dup3\n        /* \"#utility.yul\":13484:13577   */\n      tag_202\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":13602:13604   */\n      0x20\n        /* \"#utility.yul\":13597:13600   */\n      dup3\n        /* \"#utility.yul\":13593:13605   */\n      add\n        /* \"#utility.yul\":13586:13605   */\n      swap1\n      pop\n        /* \"#utility.yul\":13245:13611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13617:14036   */\n    tag_153:\n        /* \"#utility.yul\":13783:13787   */\n      0x00\n        /* \"#utility.yul\":13821:13823   */\n      0x20\n        /* \"#utility.yul\":13810:13819   */\n      dup3\n        /* \"#utility.yul\":13806:13824   */\n      add\n        /* \"#utility.yul\":13798:13824   */\n      swap1\n      pop\n        /* \"#utility.yul\":13870:13879   */\n      dup2\n        /* \"#utility.yul\":13864:13868   */\n      dup2\n        /* \"#utility.yul\":13860:13880   */\n      sub\n        /* \"#utility.yul\":13856:13857   */\n      0x00\n        /* \"#utility.yul\":13845:13854   */\n      dup4\n        /* \"#utility.yul\":13841:13858   */\n      add\n        /* \"#utility.yul\":13834:13881   */\n      mstore\n        /* \"#utility.yul\":13898:14029   */\n      tag_335\n        /* \"#utility.yul\":14024:14028   */\n      dup2\n        /* \"#utility.yul\":13898:14029   */\n      tag_203\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":13890:14029   */\n      swap1\n      pop\n        /* \"#utility.yul\":13617:14036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14042:14141   */\n    tag_204:\n        /* \"#utility.yul\":14094:14100   */\n      0x00\n        /* \"#utility.yul\":14128:14133   */\n      dup2\n        /* \"#utility.yul\":14122:14134   */\n      mload\n        /* \"#utility.yul\":14112:14134   */\n      swap1\n      pop\n        /* \"#utility.yul\":14042:14141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14147:14249   */\n    tag_205:\n        /* \"#utility.yul\":14188:14194   */\n      0x00\n        /* \"#utility.yul\":14239:14241   */\n      0x1f\n        /* \"#utility.yul\":14235:14242   */\n      not\n        /* \"#utility.yul\":14230:14232   */\n      0x1f\n        /* \"#utility.yul\":14223:14228   */\n      dup4\n        /* \"#utility.yul\":14219:14233   */\n      add\n        /* \"#utility.yul\":14215:14243   */\n      and\n        /* \"#utility.yul\":14205:14243   */\n      swap1\n      pop\n        /* \"#utility.yul\":14147:14249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14255:14632   */\n    tag_206:\n        /* \"#utility.yul\":14343:14346   */\n      0x00\n        /* \"#utility.yul\":14371:14410   */\n      tag_339\n        /* \"#utility.yul\":14404:14409   */\n      dup3\n        /* \"#utility.yul\":14371:14410   */\n      tag_204\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":14426:14497   */\n      tag_340\n        /* \"#utility.yul\":14490:14496   */\n      dup2\n        /* \"#utility.yul\":14485:14488   */\n      dup6\n        /* \"#utility.yul\":14426:14497   */\n      tag_181\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":14419:14497   */\n      swap4\n      pop\n        /* \"#utility.yul\":14506:14571   */\n      tag_341\n        /* \"#utility.yul\":14564:14570   */\n      dup2\n        /* \"#utility.yul\":14559:14562   */\n      dup6\n        /* \"#utility.yul\":14552:14556   */\n      0x20\n        /* \"#utility.yul\":14545:14550   */\n      dup7\n        /* \"#utility.yul\":14541:14557   */\n      add\n        /* \"#utility.yul\":14506:14571   */\n      tag_200\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":14596:14625   */\n      tag_342\n        /* \"#utility.yul\":14618:14624   */\n      dup2\n        /* \"#utility.yul\":14596:14625   */\n      tag_205\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":14591:14594   */\n      dup5\n        /* \"#utility.yul\":14587:14626   */\n      add\n        /* \"#utility.yul\":14580:14626   */\n      swap2\n      pop\n        /* \"#utility.yul\":14347:14632   */\n      pop\n        /* \"#utility.yul\":14255:14632   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14638:14951   */\n    tag_162:\n        /* \"#utility.yul\":14751:14755   */\n      0x00\n        /* \"#utility.yul\":14789:14791   */\n      0x20\n        /* \"#utility.yul\":14778:14787   */\n      dup3\n        /* \"#utility.yul\":14774:14792   */\n      add\n        /* \"#utility.yul\":14766:14792   */\n      swap1\n      pop\n        /* \"#utility.yul\":14838:14847   */\n      dup2\n        /* \"#utility.yul\":14832:14836   */\n      dup2\n        /* \"#utility.yul\":14828:14848   */\n      sub\n        /* \"#utility.yul\":14824:14825   */\n      0x00\n        /* \"#utility.yul\":14813:14822   */\n      dup4\n        /* \"#utility.yul\":14809:14826   */\n      add\n        /* \"#utility.yul\":14802:14849   */\n      mstore\n        /* \"#utility.yul\":14866:14944   */\n      tag_344\n        /* \"#utility.yul\":14939:14943   */\n      dup2\n        /* \"#utility.yul\":14930:14936   */\n      dup5\n        /* \"#utility.yul\":14866:14944   */\n      tag_206\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":14858:14944   */\n      swap1\n      pop\n        /* \"#utility.yul\":14638:14951   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220925233c303a213629dfe6087883130e2016c4688609b517f1d7df84bd344eac364736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_126": {
									"entryPoint": null,
									"id": 126,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1419": {
									"entryPoint": null,
									"id": 1419,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_1661": {
									"entryPoint": null,
									"id": 1661,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$250_fromMemory": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$250_fromMemory": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$250": {
									"entryPoint": 707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82": {
									"entryPoint": 1136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78": {
									"entryPoint": 878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6": {
									"entryPoint": 988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$250": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5707:10",
										"nodeType": "YulBlock",
										"src": "0:5707:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:32:10",
													"nodeType": "YulBlock",
													"src": "379:32:10",
													"statements": [
														{
															"nativeSrc": "389:16:10",
															"nodeType": "YulAssignment",
															"src": "389:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:10",
																"nodeType": "YulIdentifier",
																"src": "400:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:77:10"
											},
											{
												"body": {
													"nativeSrc": "460:79:10",
													"nodeType": "YulBlock",
													"src": "460:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:10",
																"nodeType": "YulBlock",
																"src": "517:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:10",
																					"nodeType": "YulLiteral",
																					"src": "526:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:10",
																					"nodeType": "YulLiteral",
																					"src": "529:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:10"
																			},
																			"nativeSrc": "519:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:10"
																		},
																		"nativeSrc": "519:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:10"
																				},
																				"nativeSrc": "490:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:10"
																		},
																		"nativeSrc": "480:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:10"
																},
																"nativeSrc": "473:43:10",
																"nodeType": "YulFunctionCall",
																"src": "473:43:10"
															},
															"nativeSrc": "470:63:10",
															"nodeType": "YulIf",
															"src": "470:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:10",
														"nodeType": "YulTypedName",
														"src": "453:5:10",
														"type": ""
													}
												],
												"src": "417:122:10"
											},
											{
												"body": {
													"nativeSrc": "608:80:10",
													"nodeType": "YulBlock",
													"src": "608:80:10",
													"statements": [
														{
															"nativeSrc": "618:22:10",
															"nodeType": "YulAssignment",
															"src": "618:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:10"
																},
																"nativeSrc": "627:13:10",
																"nodeType": "YulFunctionCall",
																"src": "627:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:10"
																},
																"nativeSrc": "649:33:10",
																"nodeType": "YulFunctionCall",
																"src": "649:33:10"
															},
															"nativeSrc": "649:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:10",
														"nodeType": "YulTypedName",
														"src": "586:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:10",
														"nodeType": "YulTypedName",
														"src": "594:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:10",
														"nodeType": "YulTypedName",
														"src": "602:5:10",
														"type": ""
													}
												],
												"src": "545:143:10"
											},
											{
												"body": {
													"nativeSrc": "739:81:10",
													"nodeType": "YulBlock",
													"src": "739:81:10",
													"statements": [
														{
															"nativeSrc": "749:65:10",
															"nodeType": "YulAssignment",
															"src": "749:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:10",
																		"nodeType": "YulLiteral",
																		"src": "771:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:10"
																},
																"nativeSrc": "760:54:10",
																"nodeType": "YulFunctionCall",
																"src": "760:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:10",
														"nodeType": "YulTypedName",
														"src": "721:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:10",
														"nodeType": "YulTypedName",
														"src": "731:7:10",
														"type": ""
													}
												],
												"src": "694:126:10"
											},
											{
												"body": {
													"nativeSrc": "879:51:10",
													"nodeType": "YulBlock",
													"src": "879:51:10",
													"statements": [
														{
															"nativeSrc": "889:35:10",
															"nodeType": "YulAssignment",
															"src": "889:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "918:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "918:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "900:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "900:17:10"
																},
																"nativeSrc": "900:24:10",
																"nodeType": "YulFunctionCall",
																"src": "900:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "889:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "889:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "826:104:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "861:5:10",
														"nodeType": "YulTypedName",
														"src": "861:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "871:7:10",
														"nodeType": "YulTypedName",
														"src": "871:7:10",
														"type": ""
													}
												],
												"src": "826:104:10"
											},
											{
												"body": {
													"nativeSrc": "987:87:10",
													"nodeType": "YulBlock",
													"src": "987:87:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1052:16:10",
																"nodeType": "YulBlock",
																"src": "1052:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1061:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1061:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1064:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1064:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1054:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1054:6:10"
																			},
																			"nativeSrc": "1054:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1054:12:10"
																		},
																		"nativeSrc": "1054:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1054:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1010:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1010:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1043:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1043:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "1017:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "1017:25:10"
																				},
																				"nativeSrc": "1017:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1017:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1007:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1007:2:10"
																		},
																		"nativeSrc": "1007:43:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1007:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1000:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:10"
																},
																"nativeSrc": "1000:51:10",
																"nodeType": "YulFunctionCall",
																"src": "1000:51:10"
															},
															"nativeSrc": "997:71:10",
															"nodeType": "YulIf",
															"src": "997:71:10"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "936:138:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "980:5:10",
														"nodeType": "YulTypedName",
														"src": "980:5:10",
														"type": ""
													}
												],
												"src": "936:138:10"
											},
											{
												"body": {
													"nativeSrc": "1151:88:10",
													"nodeType": "YulBlock",
													"src": "1151:88:10",
													"statements": [
														{
															"nativeSrc": "1161:22:10",
															"nodeType": "YulAssignment",
															"src": "1161:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1176:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1176:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1170:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1170:5:10"
																},
																"nativeSrc": "1170:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1170:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1161:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1161:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1227:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1227:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "1192:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "1192:34:10"
																},
																"nativeSrc": "1192:41:10",
																"nodeType": "YulFunctionCall",
																"src": "1192:41:10"
															},
															"nativeSrc": "1192:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "1192:41:10"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nativeSrc": "1080:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1129:6:10",
														"nodeType": "YulTypedName",
														"src": "1129:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1137:3:10",
														"nodeType": "YulTypedName",
														"src": "1137:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1145:5:10",
														"nodeType": "YulTypedName",
														"src": "1145:5:10",
														"type": ""
													}
												],
												"src": "1080:159:10"
											},
											{
												"body": {
													"nativeSrc": "1290:51:10",
													"nodeType": "YulBlock",
													"src": "1290:51:10",
													"statements": [
														{
															"nativeSrc": "1300:35:10",
															"nodeType": "YulAssignment",
															"src": "1300:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1329:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1329:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1311:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1311:17:10"
																},
																"nativeSrc": "1311:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1311:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1300:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1300:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1245:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1272:5:10",
														"nodeType": "YulTypedName",
														"src": "1272:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1282:7:10",
														"nodeType": "YulTypedName",
														"src": "1282:7:10",
														"type": ""
													}
												],
												"src": "1245:96:10"
											},
											{
												"body": {
													"nativeSrc": "1406:51:10",
													"nodeType": "YulBlock",
													"src": "1406:51:10",
													"statements": [
														{
															"nativeSrc": "1416:35:10",
															"nodeType": "YulAssignment",
															"src": "1416:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1445:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1445:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1427:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1427:17:10"
																},
																"nativeSrc": "1427:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1427:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1416:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1416:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$250",
												"nativeSrc": "1347:110:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1388:5:10",
														"nodeType": "YulTypedName",
														"src": "1388:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1398:7:10",
														"nodeType": "YulTypedName",
														"src": "1398:7:10",
														"type": ""
													}
												],
												"src": "1347:110:10"
											},
											{
												"body": {
													"nativeSrc": "1520:93:10",
													"nodeType": "YulBlock",
													"src": "1520:93:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1591:16:10",
																"nodeType": "YulBlock",
																"src": "1591:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1600:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1600:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1603:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1603:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1593:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:10"
																			},
																			"nativeSrc": "1593:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1593:12:10"
																		},
																		"nativeSrc": "1593:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1593:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1543:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1543:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1582:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1582:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$250",
																					"nativeSrc": "1550:31:10",
																					"nodeType": "YulIdentifier",
																					"src": "1550:31:10"
																				},
																				"nativeSrc": "1550:38:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1550:38:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1540:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1540:2:10"
																		},
																		"nativeSrc": "1540:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1540:49:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1533:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:10"
																},
																"nativeSrc": "1533:57:10",
																"nodeType": "YulFunctionCall",
																"src": "1533:57:10"
															},
															"nativeSrc": "1530:77:10",
															"nodeType": "YulIf",
															"src": "1530:77:10"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$250",
												"nativeSrc": "1463:150:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1513:5:10",
														"nodeType": "YulTypedName",
														"src": "1513:5:10",
														"type": ""
													}
												],
												"src": "1463:150:10"
											},
											{
												"body": {
													"nativeSrc": "1696:94:10",
													"nodeType": "YulBlock",
													"src": "1696:94:10",
													"statements": [
														{
															"nativeSrc": "1706:22:10",
															"nodeType": "YulAssignment",
															"src": "1706:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1721:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1721:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1715:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1715:5:10"
																},
																"nativeSrc": "1715:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1715:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1706:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1706:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1778:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1778:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$250",
																	"nativeSrc": "1737:40:10",
																	"nodeType": "YulIdentifier",
																	"src": "1737:40:10"
																},
																"nativeSrc": "1737:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1737:47:10"
															},
															"nativeSrc": "1737:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1737:47:10"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$250_fromMemory",
												"nativeSrc": "1619:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1674:6:10",
														"nodeType": "YulTypedName",
														"src": "1674:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1682:3:10",
														"nodeType": "YulTypedName",
														"src": "1682:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1690:5:10",
														"nodeType": "YulTypedName",
														"src": "1690:5:10",
														"type": ""
													}
												],
												"src": "1619:171:10"
											},
											{
												"body": {
													"nativeSrc": "1929:574:10",
													"nodeType": "YulBlock",
													"src": "1929:574:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1975:83:10",
																"nodeType": "YulBlock",
																"src": "1975:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1977:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1977:77:10"
																			},
																			"nativeSrc": "1977:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1977:79:10"
																		},
																		"nativeSrc": "1977:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1977:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1950:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1950:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1959:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1959:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1946:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1946:3:10"
																		},
																		"nativeSrc": "1946:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1946:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1971:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1971:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1942:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1942:3:10"
																},
																"nativeSrc": "1942:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1942:32:10"
															},
															"nativeSrc": "1939:119:10",
															"nodeType": "YulIf",
															"src": "1939:119:10"
														},
														{
															"nativeSrc": "2068:128:10",
															"nodeType": "YulBlock",
															"src": "2068:128:10",
															"statements": [
																{
																	"nativeSrc": "2083:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2083:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2097:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2087:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2087:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2112:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2112:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:10"
																				},
																				"nativeSrc": "2154:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2122:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2122:31:10"
																		},
																		"nativeSrc": "2122:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2112:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2112:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2206:137:10",
															"nodeType": "YulBlock",
															"src": "2206:137:10",
															"statements": [
																{
																	"nativeSrc": "2221:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2221:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2235:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2235:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2225:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2225:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2251:82:10",
																	"nodeType": "YulAssignment",
																	"src": "2251:82:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2305:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2305:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2316:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2316:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2301:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2301:3:10"
																				},
																				"nativeSrc": "2301:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2301:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2325:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2325:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nativeSrc": "2261:39:10",
																			"nodeType": "YulIdentifier",
																			"src": "2261:39:10"
																		},
																		"nativeSrc": "2261:72:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2261:72:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2251:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2251:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2353:143:10",
															"nodeType": "YulBlock",
															"src": "2353:143:10",
															"statements": [
																{
																	"nativeSrc": "2368:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2368:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2382:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2382:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2372:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2372:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2398:88:10",
																	"nodeType": "YulAssignment",
																	"src": "2398:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2458:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2458:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2469:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2469:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2454:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2454:3:10"
																				},
																				"nativeSrc": "2454:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2454:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2478:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2478:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$250_fromMemory",
																			"nativeSrc": "2408:45:10",
																			"nodeType": "YulIdentifier",
																			"src": "2408:45:10"
																		},
																		"nativeSrc": "2408:78:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2408:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2398:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2398:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$250_fromMemory",
												"nativeSrc": "1796:707:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1883:9:10",
														"nodeType": "YulTypedName",
														"src": "1883:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1894:7:10",
														"nodeType": "YulTypedName",
														"src": "1894:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1906:6:10",
														"nodeType": "YulTypedName",
														"src": "1906:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1914:6:10",
														"nodeType": "YulTypedName",
														"src": "1914:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1922:6:10",
														"nodeType": "YulTypedName",
														"src": "1922:6:10",
														"type": ""
													}
												],
												"src": "1796:707:10"
											},
											{
												"body": {
													"nativeSrc": "2605:73:10",
													"nodeType": "YulBlock",
													"src": "2605:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2622:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2622:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2627:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2627:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2615:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2615:6:10"
																},
																"nativeSrc": "2615:19:10",
																"nodeType": "YulFunctionCall",
																"src": "2615:19:10"
															},
															"nativeSrc": "2615:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "2615:19:10"
														},
														{
															"nativeSrc": "2643:29:10",
															"nodeType": "YulAssignment",
															"src": "2643:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2662:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2662:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2667:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2667:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2658:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:10"
																},
																"nativeSrc": "2658:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2658:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2643:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "2643:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2509:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2577:3:10",
														"nodeType": "YulTypedName",
														"src": "2577:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2582:6:10",
														"nodeType": "YulTypedName",
														"src": "2582:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2593:11:10",
														"nodeType": "YulTypedName",
														"src": "2593:11:10",
														"type": ""
													}
												],
												"src": "2509:169:10"
											},
											{
												"body": {
													"nativeSrc": "2790:64:10",
													"nodeType": "YulBlock",
													"src": "2790:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2812:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2812:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2820:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2820:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2808:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:10"
																		},
																		"nativeSrc": "2808:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2808:14:10"
																	},
																	{
																		"hexValue": "43726f776473616c653a20726174652069732030",
																		"kind": "string",
																		"nativeSrc": "2824:22:10",
																		"nodeType": "YulLiteral",
																		"src": "2824:22:10",
																		"type": "",
																		"value": "Crowdsale: rate is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2801:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:10"
																},
																"nativeSrc": "2801:46:10",
																"nodeType": "YulFunctionCall",
																"src": "2801:46:10"
															},
															"nativeSrc": "2801:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "2801:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
												"nativeSrc": "2684:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2782:6:10",
														"nodeType": "YulTypedName",
														"src": "2782:6:10",
														"type": ""
													}
												],
												"src": "2684:170:10"
											},
											{
												"body": {
													"nativeSrc": "3006:220:10",
													"nodeType": "YulBlock",
													"src": "3006:220:10",
													"statements": [
														{
															"nativeSrc": "3016:74:10",
															"nodeType": "YulAssignment",
															"src": "3016:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3082:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3082:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3087:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3087:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3023:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "3023:58:10"
																},
																"nativeSrc": "3023:67:10",
																"nodeType": "YulFunctionCall",
																"src": "3023:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3016:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3016:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3188:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3188:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																	"nativeSrc": "3099:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "3099:88:10"
																},
																"nativeSrc": "3099:93:10",
																"nodeType": "YulFunctionCall",
																"src": "3099:93:10"
															},
															"nativeSrc": "3099:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "3099:93:10"
														},
														{
															"nativeSrc": "3201:19:10",
															"nodeType": "YulAssignment",
															"src": "3201:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3212:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3212:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3208:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3208:3:10"
																},
																"nativeSrc": "3208:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3208:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3201:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3201:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2860:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2994:3:10",
														"nodeType": "YulTypedName",
														"src": "2994:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3002:3:10",
														"nodeType": "YulTypedName",
														"src": "3002:3:10",
														"type": ""
													}
												],
												"src": "2860:366:10"
											},
											{
												"body": {
													"nativeSrc": "3403:248:10",
													"nodeType": "YulBlock",
													"src": "3403:248:10",
													"statements": [
														{
															"nativeSrc": "3413:26:10",
															"nodeType": "YulAssignment",
															"src": "3413:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3425:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3425:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3436:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3436:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3421:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3421:3:10"
																},
																"nativeSrc": "3421:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3421:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3413:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3413:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3460:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3460:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3471:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3471:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3456:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3456:3:10"
																		},
																		"nativeSrc": "3456:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3456:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3479:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3479:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3485:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3485:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3475:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3475:3:10"
																		},
																		"nativeSrc": "3475:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3449:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:10"
																},
																"nativeSrc": "3449:47:10",
																"nodeType": "YulFunctionCall",
																"src": "3449:47:10"
															},
															"nativeSrc": "3449:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "3449:47:10"
														},
														{
															"nativeSrc": "3505:139:10",
															"nodeType": "YulAssignment",
															"src": "3505:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3639:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3639:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3513:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "3513:124:10"
																},
																"nativeSrc": "3513:131:10",
																"nodeType": "YulFunctionCall",
																"src": "3513:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3505:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3505:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3232:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3383:9:10",
														"nodeType": "YulTypedName",
														"src": "3383:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3398:4:10",
														"nodeType": "YulTypedName",
														"src": "3398:4:10",
														"type": ""
													}
												],
												"src": "3232:419:10"
											},
											{
												"body": {
													"nativeSrc": "3763:118:10",
													"nodeType": "YulBlock",
													"src": "3763:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3785:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3785:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3793:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3793:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3781:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3781:3:10"
																		},
																		"nativeSrc": "3781:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3781:14:10"
																	},
																	{
																		"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "3797:34:10",
																		"nodeType": "YulLiteral",
																		"src": "3797:34:10",
																		"type": "",
																		"value": "Crowdsale: wallet is the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3774:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3774:6:10"
																},
																"nativeSrc": "3774:58:10",
																"nodeType": "YulFunctionCall",
																"src": "3774:58:10"
															},
															"nativeSrc": "3774:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "3774:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3853:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3853:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3861:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3861:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3849:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3849:3:10"
																		},
																		"nativeSrc": "3849:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3849:15:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "3866:7:10",
																		"nodeType": "YulLiteral",
																		"src": "3866:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3842:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:10"
																},
																"nativeSrc": "3842:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3842:32:10"
															},
															"nativeSrc": "3842:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "3842:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
												"nativeSrc": "3657:224:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3755:6:10",
														"nodeType": "YulTypedName",
														"src": "3755:6:10",
														"type": ""
													}
												],
												"src": "3657:224:10"
											},
											{
												"body": {
													"nativeSrc": "4033:220:10",
													"nodeType": "YulBlock",
													"src": "4033:220:10",
													"statements": [
														{
															"nativeSrc": "4043:74:10",
															"nodeType": "YulAssignment",
															"src": "4043:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4109:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4109:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4114:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4114:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4050:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "4050:58:10"
																},
																"nativeSrc": "4050:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4050:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4043:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4043:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4215:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4215:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																	"nativeSrc": "4126:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "4126:88:10"
																},
																"nativeSrc": "4126:93:10",
																"nodeType": "YulFunctionCall",
																"src": "4126:93:10"
															},
															"nativeSrc": "4126:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "4126:93:10"
														},
														{
															"nativeSrc": "4228:19:10",
															"nodeType": "YulAssignment",
															"src": "4228:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4239:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4239:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4244:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4244:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4235:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4235:3:10"
																},
																"nativeSrc": "4235:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4235:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4228:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4228:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3887:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4021:3:10",
														"nodeType": "YulTypedName",
														"src": "4021:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4029:3:10",
														"nodeType": "YulTypedName",
														"src": "4029:3:10",
														"type": ""
													}
												],
												"src": "3887:366:10"
											},
											{
												"body": {
													"nativeSrc": "4430:248:10",
													"nodeType": "YulBlock",
													"src": "4430:248:10",
													"statements": [
														{
															"nativeSrc": "4440:26:10",
															"nodeType": "YulAssignment",
															"src": "4440:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4452:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4452:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4463:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4463:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4448:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4448:3:10"
																},
																"nativeSrc": "4448:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4448:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4440:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4440:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4487:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4487:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4498:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4498:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4483:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4483:3:10"
																		},
																		"nativeSrc": "4483:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4483:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4506:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4506:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4512:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4512:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4502:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4502:3:10"
																		},
																		"nativeSrc": "4502:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4502:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4476:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4476:6:10"
																},
																"nativeSrc": "4476:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4476:47:10"
															},
															"nativeSrc": "4476:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4476:47:10"
														},
														{
															"nativeSrc": "4532:139:10",
															"nodeType": "YulAssignment",
															"src": "4532:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4666:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4666:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4540:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "4540:124:10"
																},
																"nativeSrc": "4540:131:10",
																"nodeType": "YulFunctionCall",
																"src": "4540:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4532:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4532:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4259:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4410:9:10",
														"nodeType": "YulTypedName",
														"src": "4410:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4425:4:10",
														"nodeType": "YulTypedName",
														"src": "4425:4:10",
														"type": ""
													}
												],
												"src": "4259:419:10"
											},
											{
												"body": {
													"nativeSrc": "4790:117:10",
													"nodeType": "YulBlock",
													"src": "4790:117:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4812:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4812:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4820:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4820:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4808:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4808:3:10"
																		},
																		"nativeSrc": "4808:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4808:14:10"
																	},
																	{
																		"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "4824:34:10",
																		"nodeType": "YulLiteral",
																		"src": "4824:34:10",
																		"type": "",
																		"value": "Crowdsale: token is the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4801:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4801:6:10"
																},
																"nativeSrc": "4801:58:10",
																"nodeType": "YulFunctionCall",
																"src": "4801:58:10"
															},
															"nativeSrc": "4801:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "4801:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4880:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4880:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4888:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4888:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4876:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4876:3:10"
																		},
																		"nativeSrc": "4876:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4876:15:10"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "4893:6:10",
																		"nodeType": "YulLiteral",
																		"src": "4893:6:10",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4869:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4869:6:10"
																},
																"nativeSrc": "4869:31:10",
																"nodeType": "YulFunctionCall",
																"src": "4869:31:10"
															},
															"nativeSrc": "4869:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "4869:31:10"
														}
													]
												},
												"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
												"nativeSrc": "4684:223:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4782:6:10",
														"nodeType": "YulTypedName",
														"src": "4782:6:10",
														"type": ""
													}
												],
												"src": "4684:223:10"
											},
											{
												"body": {
													"nativeSrc": "5059:220:10",
													"nodeType": "YulBlock",
													"src": "5059:220:10",
													"statements": [
														{
															"nativeSrc": "5069:74:10",
															"nodeType": "YulAssignment",
															"src": "5069:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5135:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5135:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5140:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5140:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5076:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5076:58:10"
																},
																"nativeSrc": "5076:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5076:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5069:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5069:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5241:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5241:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																	"nativeSrc": "5152:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5152:88:10"
																},
																"nativeSrc": "5152:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5152:93:10"
															},
															"nativeSrc": "5152:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5152:93:10"
														},
														{
															"nativeSrc": "5254:19:10",
															"nodeType": "YulAssignment",
															"src": "5254:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5270:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5270:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5261:3:10"
																},
																"nativeSrc": "5261:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5261:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5254:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5254:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4913:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5047:3:10",
														"nodeType": "YulTypedName",
														"src": "5047:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5055:3:10",
														"nodeType": "YulTypedName",
														"src": "5055:3:10",
														"type": ""
													}
												],
												"src": "4913:366:10"
											},
											{
												"body": {
													"nativeSrc": "5456:248:10",
													"nodeType": "YulBlock",
													"src": "5456:248:10",
													"statements": [
														{
															"nativeSrc": "5466:26:10",
															"nodeType": "YulAssignment",
															"src": "5466:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5478:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5478:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5489:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5489:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5474:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5474:3:10"
																},
																"nativeSrc": "5474:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5474:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5466:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5466:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5513:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5524:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5509:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:10"
																		},
																		"nativeSrc": "5509:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5532:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5532:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5538:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5538:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5528:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5528:3:10"
																		},
																		"nativeSrc": "5528:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5528:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5502:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5502:6:10"
																},
																"nativeSrc": "5502:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5502:47:10"
															},
															"nativeSrc": "5502:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5502:47:10"
														},
														{
															"nativeSrc": "5558:139:10",
															"nodeType": "YulAssignment",
															"src": "5558:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5692:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5692:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5566:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "5566:124:10"
																},
																"nativeSrc": "5566:131:10",
																"nodeType": "YulFunctionCall",
																"src": "5566:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5558:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5558:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5285:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5436:9:10",
														"nodeType": "YulTypedName",
														"src": "5436:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5451:4:10",
														"nodeType": "YulTypedName",
														"src": "5451:4:10",
														"type": ""
													}
												],
												"src": "5285:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$250(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$250(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$250(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$250_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$250(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$250_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20_$250_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: rate is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: wallet is the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: token is the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620014dd380380620014dd833981810160405281019062000036919062000305565b82828260015f819055505f831162000085576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007c90620003bc565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000f6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ed9062000450565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000167576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200015e90620004e4565b60405180910390fd5b826003819055508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505f60055f6101000a81548160ff02191690831515021790555050505062000504565b5f80fd5b5f819050919050565b6200022b8162000217565b811462000236575f80fd5b50565b5f81519050620002498162000220565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200027a826200024f565b9050919050565b6200028c816200026e565b811462000297575f80fd5b50565b5f81519050620002aa8162000281565b92915050565b5f620002bc826200024f565b9050919050565b5f620002cf82620002b0565b9050919050565b620002e181620002c3565b8114620002ec575f80fd5b50565b5f81519050620002ff81620002d6565b92915050565b5f805f606084860312156200031f576200031e62000213565b5b5f6200032e8682870162000239565b935050602062000341868287016200029a565b92505060406200035486828701620002ef565b9150509250925092565b5f82825260208201905092915050565b7f43726f776473616c653a207261746520697320300000000000000000000000005f82015250565b5f620003a46014836200035e565b9150620003b1826200036e565b602082019050919050565b5f6020820190508181035f830152620003d58162000396565b9050919050565b7f43726f776473616c653a2077616c6c657420697320746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f620004386025836200035e565b91506200044582620003dc565b604082019050919050565b5f6020820190508181035f83015262000469816200042a565b9050919050565b7f43726f776473616c653a20746f6b656e20697320746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f620004cc6024836200035e565b9150620004d98262000470565b604082019050919050565b5f6020820190508181035f830152620004fd81620004be565b9050919050565b610fcb80620005125f395ff3fe608060405260043610610058575f3560e01c80632c4e722e146100815780634042b66f146100ab578063521eb273146100d55780635c975abb146100ff578063ec8ac4d814610129578063fc0c546a146101455761006f565b3661006f5761006d61006861016f565b610176565b005b61007f61007a61016f565b610176565b005b34801561008c575f80fd5b50610095610254565b6040516100a29190610872565b60405180910390f35b3480156100b6575f80fd5b506100bf61025d565b6040516100cc9190610872565b60405180910390f35b3480156100e0575f80fd5b506100e9610266565b6040516100f691906108ca565b60405180910390f35b34801561010a575f80fd5b5061011361028e565b60405161012091906108fd565b60405180910390f35b610143600480360381019061013e9190610955565b610176565b005b348015610150575f80fd5b506101596102a3565b60405161016691906109db565b60405180910390f35b5f33905090565b61017e6102cb565b5f34905061018c8282610318565b5f6101968261032e565b90506101ad8260045461034b90919063ffffffff16565b6004819055506101bd8382610360565b8273ffffffffffffffffffffffffffffffffffffffff166101dc61016f565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b84846040516102239291906109f4565b60405180910390a3610235838361036e565b61023d610372565b61024783836103d9565b50506102516103dd565b50565b5f600354905090565b5f600454905090565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60055f9054906101000a900460ff16905090565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025f540361030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690610a75565b60405180910390fd5b60025f81905550565b6103206103e6565b61032a8282610430565b5050565b5f610344600354836104e490919063ffffffff16565b9050919050565b5f81836103589190610ac0565b905092915050565b61036a82826104f9565b5050565b5050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f193505050501580156103d6573d5f803e3d5ffd5b50565b5050565b60015f81905550565b6103ee61028e565b1561042e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042590610b3d565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361049e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049590610bcb565b60405180910390fd5b5f81036104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d790610c33565b60405180910390fd5b5050565b5f81836104f19190610c51565b905092915050565b610545828260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166105499092919063ffffffff16565b5050565b6105ca8363a9059cbb60e01b8484604051602401610568929190610ca1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105cf565b505050565b5f610630826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166106959092919063ffffffff16565b90505f815114806106515750808060200190518101906106509190610cf2565b5b610690576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068790610d8d565b60405180910390fd5b505050565b60606106a384845f856106ac565b90509392505050565b6060824710156106f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e890610e1b565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff1685876040516107199190610ea5565b5f6040518083038185875af1925050503d805f8114610753576040519150601f19603f3d011682016040523d82523d5f602084013e610758565b606091505b509150915061076987838387610775565b92505050949350505050565b606083156107d6575f8351036107ce5761078e856107e9565b6107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c490610f05565b60405180910390fd5b5b8290506107e1565b6107e0838361080b565b5b949350505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f8251111561081d5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108519190610f75565b60405180910390fd5b5f819050919050565b61086c8161085a565b82525050565b5f6020820190506108855f830184610863565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108b48261088b565b9050919050565b6108c4816108aa565b82525050565b5f6020820190506108dd5f8301846108bb565b92915050565b5f8115159050919050565b6108f7816108e3565b82525050565b5f6020820190506109105f8301846108ee565b92915050565b5f80fd5b5f6109248261088b565b9050919050565b6109348161091a565b811461093e575f80fd5b50565b5f8135905061094f8161092b565b92915050565b5f6020828403121561096a57610969610916565b5b5f61097784828501610941565b91505092915050565b5f819050919050565b5f6109a361099e6109998461088b565b610980565b61088b565b9050919050565b5f6109b482610989565b9050919050565b5f6109c5826109aa565b9050919050565b6109d5816109bb565b82525050565b5f6020820190506109ee5f8301846109cc565b92915050565b5f604082019050610a075f830185610863565b610a146020830184610863565b9392505050565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610a5f601f83610a1b565b9150610a6a82610a2b565b602082019050919050565b5f6020820190508181035f830152610a8c81610a53565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610aca8261085a565b9150610ad58361085a565b9250828201905080821115610aed57610aec610a93565b5b92915050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f610b27601083610a1b565b9150610b3282610af3565b602082019050919050565b5f6020820190508181035f830152610b5481610b1b565b9050919050565b7f43726f776473616c653a2062656e656669636961727920697320746865207a655f8201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b5f610bb5602a83610a1b565b9150610bc082610b5b565b604082019050919050565b5f6020820190508181035f830152610be281610ba9565b9050919050565b7f43726f776473616c653a20776569416d6f756e742069732030000000000000005f82015250565b5f610c1d601983610a1b565b9150610c2882610be9565b602082019050919050565b5f6020820190508181035f830152610c4a81610c11565b9050919050565b5f610c5b8261085a565b9150610c668361085a565b9250828202610c748161085a565b91508282048414831517610c8b57610c8a610a93565b5b5092915050565b610c9b8161091a565b82525050565b5f604082019050610cb45f830185610c92565b610cc16020830184610863565b9392505050565b610cd1816108e3565b8114610cdb575f80fd5b50565b5f81519050610cec81610cc8565b92915050565b5f60208284031215610d0757610d06610916565b5b5f610d1484828501610cde565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f610d77602a83610a1b565b9150610d8282610d1d565b604082019050919050565b5f6020820190508181035f830152610da481610d6b565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f610e05602683610a1b565b9150610e1082610dab565b604082019050919050565b5f6020820190508181035f830152610e3281610df9565b9050919050565b5f81519050919050565b5f81905092915050565b5f5b83811015610e6a578082015181840152602081019050610e4f565b5f8484015250505050565b5f610e7f82610e39565b610e898185610e43565b9350610e99818560208601610e4d565b80840191505092915050565b5f610eb08284610e75565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f610eef601d83610a1b565b9150610efa82610ebb565b602082019050919050565b5f6020820190508181035f830152610f1c81610ee3565b9050919050565b5f81519050919050565b5f601f19601f8301169050919050565b5f610f4782610f23565b610f518185610a1b565b9350610f61818560208601610e4d565b610f6a81610f2d565b840191505092915050565b5f6020820190508181035f830152610f8d8184610f3d565b90509291505056fea2646970667358221220925233c303a213629dfe6087883130e2016c4688609b517f1d7df84bd344eac364736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x14DD CODESIZE SUB DUP1 PUSH3 0x14DD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x305 JUMP JUMPDEST DUP3 DUP3 DUP3 PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 DUP4 GT PUSH3 0x85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7C SWAP1 PUSH3 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xED SWAP1 PUSH3 0x450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x167 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x15E SWAP1 PUSH3 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x504 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x22B DUP2 PUSH3 0x217 JUMP JUMPDEST DUP2 EQ PUSH3 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x249 DUP2 PUSH3 0x220 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x27A DUP3 PUSH3 0x24F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x28C DUP2 PUSH3 0x26E JUMP JUMPDEST DUP2 EQ PUSH3 0x297 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2AA DUP2 PUSH3 0x281 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2BC DUP3 PUSH3 0x24F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2CF DUP3 PUSH3 0x2B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2E1 DUP2 PUSH3 0x2C3 JUMP JUMPDEST DUP2 EQ PUSH3 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2FF DUP2 PUSH3 0x2D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x31F JUMPI PUSH3 0x31E PUSH3 0x213 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x32E DUP7 DUP3 DUP8 ADD PUSH3 0x239 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x341 DUP7 DUP3 DUP8 ADD PUSH3 0x29A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x354 DUP7 DUP3 DUP8 ADD PUSH3 0x2EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20726174652069732030000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x3A4 PUSH1 0x14 DUP4 PUSH3 0x35E JUMP JUMPDEST SWAP2 POP PUSH3 0x3B1 DUP3 PUSH3 0x36E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x3D5 DUP2 PUSH3 0x396 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2077616C6C657420697320746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x438 PUSH1 0x25 DUP4 PUSH3 0x35E JUMP JUMPDEST SWAP2 POP PUSH3 0x445 DUP3 PUSH3 0x3DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x469 DUP2 PUSH3 0x42A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20746F6B656E20697320746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x4CC PUSH1 0x24 DUP4 PUSH3 0x35E JUMP JUMPDEST SWAP2 POP PUSH3 0x4D9 DUP3 PUSH3 0x470 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x4FD DUP2 PUSH3 0x4BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFCB DUP1 PUSH3 0x512 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x145 JUMPI PUSH2 0x6F JUMP JUMPDEST CALLDATASIZE PUSH2 0x6F JUMPI PUSH2 0x6D PUSH2 0x68 PUSH2 0x16F JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x7A PUSH2 0x16F JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x254 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x955 JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x2CB JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH2 0x18C DUP3 DUP3 PUSH2 0x318 JUMP JUMPDEST PUSH0 PUSH2 0x196 DUP3 PUSH2 0x32E JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 PUSH1 0x4 SLOAD PUSH2 0x34B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x1BD DUP4 DUP3 PUSH2 0x360 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DC PUSH2 0x16F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x223 SWAP3 SWAP2 SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x235 DUP4 DUP4 PUSH2 0x36E JUMP JUMPDEST PUSH2 0x23D PUSH2 0x372 JUMP JUMPDEST PUSH2 0x247 DUP4 DUP4 PUSH2 0x3D9 JUMP JUMPDEST POP POP PUSH2 0x251 PUSH2 0x3DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x30F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x320 PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x32A DUP3 DUP3 PUSH2 0x430 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x344 PUSH1 0x3 SLOAD DUP4 PUSH2 0x4E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x36A DUP3 DUP3 PUSH2 0x4F9 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3D6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x28E JUMP JUMPDEST ISZERO PUSH2 0x42E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x425 SWAP1 PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D7 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x545 DUP3 DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x549 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5CA DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x568 SWAP3 SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x5CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x630 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x695 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x651 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x650 SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST JUMPDEST PUSH2 0x690 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x687 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6A3 DUP5 DUP5 PUSH0 DUP6 PUSH2 0x6AC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x6F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E8 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x719 SWAP2 SWAP1 PUSH2 0xEA5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x753 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x758 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x769 DUP8 DUP4 DUP4 DUP8 PUSH2 0x775 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x7D6 JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x7CE JUMPI PUSH2 0x78E DUP6 PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C4 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x7E0 DUP4 DUP4 PUSH2 0x80B JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x81D JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x851 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86C DUP2 PUSH2 0x85A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x885 PUSH0 DUP4 ADD DUP5 PUSH2 0x863 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8B4 DUP3 PUSH2 0x88B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C4 DUP2 PUSH2 0x8AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8DD PUSH0 DUP4 ADD DUP5 PUSH2 0x8BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F7 DUP2 PUSH2 0x8E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x910 PUSH0 DUP4 ADD DUP5 PUSH2 0x8EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x924 DUP3 PUSH2 0x88B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x934 DUP2 PUSH2 0x91A JUMP JUMPDEST DUP2 EQ PUSH2 0x93E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x94F DUP2 PUSH2 0x92B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x96A JUMPI PUSH2 0x969 PUSH2 0x916 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x977 DUP5 DUP3 DUP6 ADD PUSH2 0x941 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9A3 PUSH2 0x99E PUSH2 0x999 DUP5 PUSH2 0x88B JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9B4 DUP3 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9C5 DUP3 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D5 DUP2 PUSH2 0x9BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9EE PUSH0 DUP4 ADD DUP5 PUSH2 0x9CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA07 PUSH0 DUP4 ADD DUP6 PUSH2 0x863 JUMP JUMPDEST PUSH2 0xA14 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x863 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA5F PUSH1 0x1F DUP4 PUSH2 0xA1B JUMP JUMPDEST SWAP2 POP PUSH2 0xA6A DUP3 PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA8C DUP2 PUSH2 0xA53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xACA DUP3 PUSH2 0x85A JUMP JUMPDEST SWAP2 POP PUSH2 0xAD5 DUP4 PUSH2 0x85A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAED JUMPI PUSH2 0xAEC PUSH2 0xA93 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB27 PUSH1 0x10 DUP4 PUSH2 0xA1B JUMP JUMPDEST SWAP2 POP PUSH2 0xB32 DUP3 PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB54 DUP2 PUSH2 0xB1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBB5 PUSH1 0x2A DUP4 PUSH2 0xA1B JUMP JUMPDEST SWAP2 POP PUSH2 0xBC0 DUP3 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBE2 DUP2 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC1D PUSH1 0x19 DUP4 PUSH2 0xA1B JUMP JUMPDEST SWAP2 POP PUSH2 0xC28 DUP3 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC4A DUP2 PUSH2 0xC11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC5B DUP3 PUSH2 0x85A JUMP JUMPDEST SWAP2 POP PUSH2 0xC66 DUP4 PUSH2 0x85A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC74 DUP2 PUSH2 0x85A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC8B JUMPI PUSH2 0xC8A PUSH2 0xA93 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC9B DUP2 PUSH2 0x91A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCB4 PUSH0 DUP4 ADD DUP6 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0xCC1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x863 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCD1 DUP2 PUSH2 0x8E3 JUMP JUMPDEST DUP2 EQ PUSH2 0xCDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCEC DUP2 PUSH2 0xCC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0x916 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD14 DUP5 DUP3 DUP6 ADD PUSH2 0xCDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD77 PUSH1 0x2A DUP4 PUSH2 0xA1B JUMP JUMPDEST SWAP2 POP PUSH2 0xD82 DUP3 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDA4 DUP2 PUSH2 0xD6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE05 PUSH1 0x26 DUP4 PUSH2 0xA1B JUMP JUMPDEST SWAP2 POP PUSH2 0xE10 DUP3 PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE32 DUP2 PUSH2 0xDF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE6A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE4F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE7F DUP3 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0xE89 DUP2 DUP6 PUSH2 0xE43 JUMP JUMPDEST SWAP4 POP PUSH2 0xE99 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE4D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEB0 DUP3 DUP5 PUSH2 0xE75 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEEF PUSH1 0x1D DUP4 PUSH2 0xA1B JUMP JUMPDEST SWAP2 POP PUSH2 0xEFA DUP3 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF1C DUP2 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF47 DUP3 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0xF51 DUP2 DUP6 PUSH2 0xA1B JUMP JUMPDEST SWAP4 POP PUSH2 0xF61 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE4D JUMP JUMPDEST PUSH2 0xF6A DUP2 PUSH2 0xF2D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF8D DUP2 DUP5 PUSH2 0xF3D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 MSTORE CALLER 0xC3 SUB LOG2 SGT PUSH3 0x9DFE60 DUP8 DUP9 BALANCE ADDRESS 0xE2 ADD PUSH13 0x4688609B517F1D7DF84BD344EA 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "299:752:9:-:0;;;356:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;442:6;450:8;460:7;1716:1:1;1821:7;:22;;;;2644:1:8;2635:6;:10;2627:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;2709:1;2689:22;;:8;:22;;;2681:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2800:1;2772:30;;2780:7;2772:30;;;2764:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2864:6;2856:5;:14;;;;2891:8;2881:7;;:18;;;;;;;;;;;;;;;;;;2919:7;2910:6;;:16;;;;;;;;;;;;;;;;;;2545:389;;;1006:5:0;996:7;;:15;;;;;;;;;;;;;;;;;;356:121:9;;;299:752;;88:117:10;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:104::-;871:7;900:24;918:5;900:24;:::i;:::-;889:35;;826:104;;;:::o;936:138::-;1017:32;1043:5;1017:32;:::i;:::-;1010:5;1007:43;997:71;;1064:1;1061;1054:12;997:71;936:138;:::o;1080:159::-;1145:5;1176:6;1170:13;1161:22;;1192:41;1227:5;1192:41;:::i;:::-;1080:159;;;;:::o;1245:96::-;1282:7;1311:24;1329:5;1311:24;:::i;:::-;1300:35;;1245:96;;;:::o;1347:110::-;1398:7;1427:24;1445:5;1427:24;:::i;:::-;1416:35;;1347:110;;;:::o;1463:150::-;1550:38;1582:5;1550:38;:::i;:::-;1543:5;1540:49;1530:77;;1603:1;1600;1593:12;1530:77;1463:150;:::o;1619:171::-;1690:5;1721:6;1715:13;1706:22;;1737:47;1778:5;1737:47;:::i;:::-;1619:171;;;;:::o;1796:707::-;1906:6;1914;1922;1971:2;1959:9;1950:7;1946:23;1942:32;1939:119;;;1977:79;;:::i;:::-;1939:119;2097:1;2122:64;2178:7;2169:6;2158:9;2154:22;2122:64;:::i;:::-;2112:74;;2068:128;2235:2;2261:72;2325:7;2316:6;2305:9;2301:22;2261:72;:::i;:::-;2251:82;;2206:137;2382:2;2408:78;2478:7;2469:6;2458:9;2454:22;2408:78;:::i;:::-;2398:88;;2353:143;1796:707;;;;;:::o;2509:169::-;2593:11;2627:6;2622:3;2615:19;2667:4;2662:3;2658:14;2643:29;;2509:169;;;;:::o;2684:170::-;2824:22;2820:1;2812:6;2808:14;2801:46;2684:170;:::o;2860:366::-;3002:3;3023:67;3087:2;3082:3;3023:67;:::i;:::-;3016:74;;3099:93;3188:3;3099:93;:::i;:::-;3217:2;3212:3;3208:12;3201:19;;2860:366;;;:::o;3232:419::-;3398:4;3436:2;3425:9;3421:18;3413:26;;3485:9;3479:4;3475:20;3471:1;3460:9;3456:17;3449:47;3513:131;3639:4;3513:131;:::i;:::-;3505:139;;3232:419;;;:::o;3657:224::-;3797:34;3793:1;3785:6;3781:14;3774:58;3866:7;3861:2;3853:6;3849:15;3842:32;3657:224;:::o;3887:366::-;4029:3;4050:67;4114:2;4109:3;4050:67;:::i;:::-;4043:74;;4126:93;4215:3;4126:93;:::i;:::-;4244:2;4239:3;4235:12;4228:19;;3887:366;;;:::o;4259:419::-;4425:4;4463:2;4452:9;4448:18;4440:26;;4512:9;4506:4;4502:20;4498:1;4487:9;4483:17;4476:47;4540:131;4666:4;4540:131;:::i;:::-;4532:139;;4259:419;;;:::o;4684:223::-;4824:34;4820:1;4812:6;4808:14;4801:58;4893:6;4888:2;4880:6;4876:15;4869:31;4684:223;:::o;4913:366::-;5055:3;5076:67;5140:2;5135:3;5076:67;:::i;:::-;5069:74;;5152:93;5241:3;5152:93;:::i;:::-;5270:2;5265:3;5261:12;5254:19;;4913:366;;;:::o;5285:419::-;5451:4;5489:2;5478:9;5474:18;5466:26;;5538:9;5532:4;5528:20;5524:1;5513:9;5509:17;5502:47;5566:131;5692:4;5566:131;:::i;:::-;5558:139;;5285:419;;;:::o;299:752:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1429": {
									"entryPoint": null,
									"id": 1429,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1438": {
									"entryPoint": null,
									"id": 1438,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_613": {
									"entryPoint": 1487,
									"id": 613,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_deliverTokens_1586": {
									"entryPoint": 1273,
									"id": 1586,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_forwardFunds_1635": {
									"entryPoint": 882,
									"id": 1635,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTokenAmount_1623": {
									"entryPoint": 814,
									"id": 1623,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_1004": {
									"entryPoint": 367,
									"id": 1004,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_160": {
									"entryPoint": 989,
									"id": 160,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_152": {
									"entryPoint": 715,
									"id": 152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_postValidatePurchase_1570": {
									"entryPoint": 985,
									"id": 1570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_1561": {
									"entryPoint": 1072,
									"id": 1561,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_1679": {
									"entryPoint": 792,
									"id": 1679,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_processPurchase_1600": {
									"entryPoint": 864,
									"id": 1600,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireNotPaused_63": {
									"entryPoint": 998,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_991": {
									"entryPoint": 2059,
									"id": 991,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_updatePurchasingState_1609": {
									"entryPoint": 878,
									"id": 1609,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_1190": {
									"entryPoint": 843,
									"id": 1190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@buyTokens_1533": {
									"entryPoint": 374,
									"id": 1533,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_816": {
									"entryPoint": 1708,
									"id": 816,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_752": {
									"entryPoint": 1685,
									"id": 752,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_680": {
									"entryPoint": 2025,
									"id": 680,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_1220": {
									"entryPoint": 1252,
									"id": 1220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@paused_51": {
									"entryPoint": 654,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rate_1466": {
									"entryPoint": 596,
									"id": 1466,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransfer_319": {
									"entryPoint": 1353,
									"id": 319,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@token_1448": {
									"entryPoint": 675,
									"id": 1448,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_947": {
									"entryPoint": 1909,
									"id": 947,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@wallet_1457": {
									"entryPoint": 614,
									"id": 1457,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@weiRaised_1475": {
									"entryPoint": 605,
									"id": 1475,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 2235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$250_to_t_address_fromStack": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 2250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3233,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$250__to_t_address__fromStack_reversed": {
									"entryPoint": 2523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2548,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 2218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$250_to_t_address": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3661,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2707,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2326,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 3499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e": {
									"entryPoint": 2907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 3771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 3357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 2603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c": {
									"entryPoint": 3049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14954:10",
										"nodeType": "YulBlock",
										"src": "0:14954:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:10",
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nativeSrc": "62:16:10",
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:10",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nativeSrc": "155:53:10",
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nativeSrc": "177:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nativeSrc": "165:37:10",
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nativeSrc": "165:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:10",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:10",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nativeSrc": "312:124:10",
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nativeSrc": "322:26:10",
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:10",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nativeSrc": "330:18:10",
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:10",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nativeSrc": "411:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nativeSrc": "358:71:10",
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nativeSrc": "358:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:10",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:10",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:10",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nativeSrc": "487:81:10",
													"nodeType": "YulBlock",
													"src": "487:81:10",
													"statements": [
														{
															"nativeSrc": "497:65:10",
															"nodeType": "YulAssignment",
															"src": "497:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "512:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "519:42:10",
																		"nodeType": "YulLiteral",
																		"src": "519:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "508:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:10"
																},
																"nativeSrc": "508:54:10",
																"nodeType": "YulFunctionCall",
																"src": "508:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "497:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "442:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "469:5:10",
														"nodeType": "YulTypedName",
														"src": "469:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "479:7:10",
														"nodeType": "YulTypedName",
														"src": "479:7:10",
														"type": ""
													}
												],
												"src": "442:126:10"
											},
											{
												"body": {
													"nativeSrc": "627:51:10",
													"nodeType": "YulBlock",
													"src": "627:51:10",
													"statements": [
														{
															"nativeSrc": "637:35:10",
															"nodeType": "YulAssignment",
															"src": "637:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "648:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:10"
																},
																"nativeSrc": "648:24:10",
																"nodeType": "YulFunctionCall",
																"src": "648:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "574:104:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:10",
														"nodeType": "YulTypedName",
														"src": "609:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:10",
														"nodeType": "YulTypedName",
														"src": "619:7:10",
														"type": ""
													}
												],
												"src": "574:104:10"
											},
											{
												"body": {
													"nativeSrc": "765:61:10",
													"nodeType": "YulBlock",
													"src": "765:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "782:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "782:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "813:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "813:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "787:25:10",
																			"nodeType": "YulIdentifier",
																			"src": "787:25:10"
																		},
																		"nativeSrc": "787:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "787:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "775:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "775:6:10"
																},
																"nativeSrc": "775:45:10",
																"nodeType": "YulFunctionCall",
																"src": "775:45:10"
															},
															"nativeSrc": "775:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "775:45:10"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nativeSrc": "684:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "760:3:10",
														"nodeType": "YulTypedName",
														"src": "760:3:10",
														"type": ""
													}
												],
												"src": "684:142:10"
											},
											{
												"body": {
													"nativeSrc": "946:140:10",
													"nodeType": "YulBlock",
													"src": "946:140:10",
													"statements": [
														{
															"nativeSrc": "956:26:10",
															"nodeType": "YulAssignment",
															"src": "956:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "968:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "968:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "979:2:10",
																		"nodeType": "YulLiteral",
																		"src": "979:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "964:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "964:3:10"
																},
																"nativeSrc": "964:18:10",
																"nodeType": "YulFunctionCall",
																"src": "964:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "956:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "956:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1052:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1052:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1065:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1065:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1076:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1076:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1061:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:10"
																		},
																		"nativeSrc": "1061:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1061:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nativeSrc": "992:59:10",
																	"nodeType": "YulIdentifier",
																	"src": "992:59:10"
																},
																"nativeSrc": "992:87:10",
																"nodeType": "YulFunctionCall",
																"src": "992:87:10"
															},
															"nativeSrc": "992:87:10",
															"nodeType": "YulExpressionStatement",
															"src": "992:87:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nativeSrc": "832:254:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "918:9:10",
														"nodeType": "YulTypedName",
														"src": "918:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "930:6:10",
														"nodeType": "YulTypedName",
														"src": "930:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "941:4:10",
														"nodeType": "YulTypedName",
														"src": "941:4:10",
														"type": ""
													}
												],
												"src": "832:254:10"
											},
											{
												"body": {
													"nativeSrc": "1134:48:10",
													"nodeType": "YulBlock",
													"src": "1134:48:10",
													"statements": [
														{
															"nativeSrc": "1144:32:10",
															"nodeType": "YulAssignment",
															"src": "1144:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1169:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1169:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:10"
																		},
																		"nativeSrc": "1162:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1155:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1155:6:10"
																},
																"nativeSrc": "1155:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1155:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1144:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1144:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1092:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1116:5:10",
														"nodeType": "YulTypedName",
														"src": "1116:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1126:7:10",
														"nodeType": "YulTypedName",
														"src": "1126:7:10",
														"type": ""
													}
												],
												"src": "1092:90:10"
											},
											{
												"body": {
													"nativeSrc": "1247:50:10",
													"nodeType": "YulBlock",
													"src": "1247:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1264:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1264:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1284:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1284:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1269:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "1269:14:10"
																		},
																		"nativeSrc": "1269:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1269:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1257:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1257:6:10"
																},
																"nativeSrc": "1257:34:10",
																"nodeType": "YulFunctionCall",
																"src": "1257:34:10"
															},
															"nativeSrc": "1257:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "1257:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1188:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1235:5:10",
														"nodeType": "YulTypedName",
														"src": "1235:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1242:3:10",
														"nodeType": "YulTypedName",
														"src": "1242:3:10",
														"type": ""
													}
												],
												"src": "1188:109:10"
											},
											{
												"body": {
													"nativeSrc": "1395:118:10",
													"nodeType": "YulBlock",
													"src": "1395:118:10",
													"statements": [
														{
															"nativeSrc": "1405:26:10",
															"nodeType": "YulAssignment",
															"src": "1405:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1417:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1417:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1428:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1428:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1413:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1413:3:10"
																},
																"nativeSrc": "1413:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1413:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1405:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1405:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1479:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1479:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1492:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1492:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1503:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1503:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1488:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1488:3:10"
																		},
																		"nativeSrc": "1488:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1488:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1441:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "1441:37:10"
																},
																"nativeSrc": "1441:65:10",
																"nodeType": "YulFunctionCall",
																"src": "1441:65:10"
															},
															"nativeSrc": "1441:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "1441:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1303:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1367:9:10",
														"nodeType": "YulTypedName",
														"src": "1367:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1379:6:10",
														"nodeType": "YulTypedName",
														"src": "1379:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1390:4:10",
														"nodeType": "YulTypedName",
														"src": "1390:4:10",
														"type": ""
													}
												],
												"src": "1303:210:10"
											},
											{
												"body": {
													"nativeSrc": "1559:35:10",
													"nodeType": "YulBlock",
													"src": "1559:35:10",
													"statements": [
														{
															"nativeSrc": "1569:19:10",
															"nodeType": "YulAssignment",
															"src": "1569:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1585:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1585:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1579:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1579:5:10"
																},
																"nativeSrc": "1579:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1579:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1569:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1569:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1519:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1552:6:10",
														"nodeType": "YulTypedName",
														"src": "1552:6:10",
														"type": ""
													}
												],
												"src": "1519:75:10"
											},
											{
												"body": {
													"nativeSrc": "1689:28:10",
													"nodeType": "YulBlock",
													"src": "1689:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1706:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1706:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1709:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1709:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1699:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1699:6:10"
																},
																"nativeSrc": "1699:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1699:12:10"
															},
															"nativeSrc": "1699:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1699:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1600:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1600:117:10"
											},
											{
												"body": {
													"nativeSrc": "1812:28:10",
													"nodeType": "YulBlock",
													"src": "1812:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1829:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1829:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1832:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1832:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1822:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1822:6:10"
																},
																"nativeSrc": "1822:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1822:12:10"
															},
															"nativeSrc": "1822:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1822:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1723:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1723:117:10"
											},
											{
												"body": {
													"nativeSrc": "1891:51:10",
													"nodeType": "YulBlock",
													"src": "1891:51:10",
													"statements": [
														{
															"nativeSrc": "1901:35:10",
															"nodeType": "YulAssignment",
															"src": "1901:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1930:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1930:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1912:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1912:17:10"
																},
																"nativeSrc": "1912:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1912:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1901:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1901:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1846:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1873:5:10",
														"nodeType": "YulTypedName",
														"src": "1873:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1883:7:10",
														"nodeType": "YulTypedName",
														"src": "1883:7:10",
														"type": ""
													}
												],
												"src": "1846:96:10"
											},
											{
												"body": {
													"nativeSrc": "1991:79:10",
													"nodeType": "YulBlock",
													"src": "1991:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2048:16:10",
																"nodeType": "YulBlock",
																"src": "2048:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2057:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2057:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2060:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2060:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2050:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2050:6:10"
																			},
																			"nativeSrc": "2050:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2050:12:10"
																		},
																		"nativeSrc": "2050:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2050:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2014:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2014:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2039:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2039:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2021:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2021:17:10"
																				},
																				"nativeSrc": "2021:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2021:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2011:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2011:2:10"
																		},
																		"nativeSrc": "2011:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2011:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2004:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:10"
																},
																"nativeSrc": "2004:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2004:43:10"
															},
															"nativeSrc": "2001:63:10",
															"nodeType": "YulIf",
															"src": "2001:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1948:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1984:5:10",
														"nodeType": "YulTypedName",
														"src": "1984:5:10",
														"type": ""
													}
												],
												"src": "1948:122:10"
											},
											{
												"body": {
													"nativeSrc": "2128:87:10",
													"nodeType": "YulBlock",
													"src": "2128:87:10",
													"statements": [
														{
															"nativeSrc": "2138:29:10",
															"nodeType": "YulAssignment",
															"src": "2138:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2160:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2160:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2147:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2147:12:10"
																},
																"nativeSrc": "2147:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2147:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2138:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2138:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2203:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2203:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2176:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2176:26:10"
																},
																"nativeSrc": "2176:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2176:33:10"
															},
															"nativeSrc": "2176:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2176:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2076:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2106:6:10",
														"nodeType": "YulTypedName",
														"src": "2106:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2114:3:10",
														"nodeType": "YulTypedName",
														"src": "2114:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2122:5:10",
														"nodeType": "YulTypedName",
														"src": "2122:5:10",
														"type": ""
													}
												],
												"src": "2076:139:10"
											},
											{
												"body": {
													"nativeSrc": "2287:263:10",
													"nodeType": "YulBlock",
													"src": "2287:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2333:83:10",
																"nodeType": "YulBlock",
																"src": "2333:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2335:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2335:77:10"
																			},
																			"nativeSrc": "2335:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2335:79:10"
																		},
																		"nativeSrc": "2335:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2335:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2308:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2308:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2317:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2317:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2304:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2304:3:10"
																		},
																		"nativeSrc": "2304:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2304:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2329:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2329:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2300:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2300:3:10"
																},
																"nativeSrc": "2300:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2300:32:10"
															},
															"nativeSrc": "2297:119:10",
															"nodeType": "YulIf",
															"src": "2297:119:10"
														},
														{
															"nativeSrc": "2426:117:10",
															"nodeType": "YulBlock",
															"src": "2426:117:10",
															"statements": [
																{
																	"nativeSrc": "2441:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2441:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2455:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2455:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2445:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2445:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2470:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2470:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2505:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2505:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2516:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2516:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2501:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2501:3:10"
																				},
																				"nativeSrc": "2501:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2501:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2525:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2525:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2480:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2480:20:10"
																		},
																		"nativeSrc": "2480:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2480:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2470:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2470:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2221:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2257:9:10",
														"nodeType": "YulTypedName",
														"src": "2257:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2268:7:10",
														"nodeType": "YulTypedName",
														"src": "2268:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2280:6:10",
														"nodeType": "YulTypedName",
														"src": "2280:6:10",
														"type": ""
													}
												],
												"src": "2221:329:10"
											},
											{
												"body": {
													"nativeSrc": "2588:28:10",
													"nodeType": "YulBlock",
													"src": "2588:28:10",
													"statements": [
														{
															"nativeSrc": "2598:12:10",
															"nodeType": "YulAssignment",
															"src": "2598:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "2605:5:10",
																"nodeType": "YulIdentifier",
																"src": "2605:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2598:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2598:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2556:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2574:5:10",
														"nodeType": "YulTypedName",
														"src": "2574:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2584:3:10",
														"nodeType": "YulTypedName",
														"src": "2584:3:10",
														"type": ""
													}
												],
												"src": "2556:60:10"
											},
											{
												"body": {
													"nativeSrc": "2682:82:10",
													"nodeType": "YulBlock",
													"src": "2682:82:10",
													"statements": [
														{
															"nativeSrc": "2692:66:10",
															"nodeType": "YulAssignment",
															"src": "2692:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2750:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2750:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2732:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2732:17:10"
																				},
																				"nativeSrc": "2732:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2732:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2723:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "2723:8:10"
																		},
																		"nativeSrc": "2723:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2705:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2705:17:10"
																},
																"nativeSrc": "2705:53:10",
																"nodeType": "YulFunctionCall",
																"src": "2705:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2692:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2692:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2622:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2662:5:10",
														"nodeType": "YulTypedName",
														"src": "2662:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2672:9:10",
														"nodeType": "YulTypedName",
														"src": "2672:9:10",
														"type": ""
													}
												],
												"src": "2622:142:10"
											},
											{
												"body": {
													"nativeSrc": "2830:66:10",
													"nodeType": "YulBlock",
													"src": "2830:66:10",
													"statements": [
														{
															"nativeSrc": "2840:50:10",
															"nodeType": "YulAssignment",
															"src": "2840:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2884:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2884:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2853:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2853:30:10"
																},
																"nativeSrc": "2853:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2853:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2840:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2840:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2770:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:10",
														"nodeType": "YulTypedName",
														"src": "2810:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2820:9:10",
														"nodeType": "YulTypedName",
														"src": "2820:9:10",
														"type": ""
													}
												],
												"src": "2770:126:10"
											},
											{
												"body": {
													"nativeSrc": "2976:66:10",
													"nodeType": "YulBlock",
													"src": "2976:66:10",
													"statements": [
														{
															"nativeSrc": "2986:50:10",
															"nodeType": "YulAssignment",
															"src": "2986:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3030:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3030:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2999:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2999:30:10"
																},
																"nativeSrc": "2999:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2999:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2986:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2986:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$250_to_t_address",
												"nativeSrc": "2902:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2956:5:10",
														"nodeType": "YulTypedName",
														"src": "2956:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2966:9:10",
														"nodeType": "YulTypedName",
														"src": "2966:9:10",
														"type": ""
													}
												],
												"src": "2902:140:10"
											},
											{
												"body": {
													"nativeSrc": "3127:80:10",
													"nodeType": "YulBlock",
													"src": "3127:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3144:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3144:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3194:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3194:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$250_to_t_address",
																			"nativeSrc": "3149:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "3149:44:10"
																		},
																		"nativeSrc": "3149:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3137:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3137:6:10"
																},
																"nativeSrc": "3137:64:10",
																"nodeType": "YulFunctionCall",
																"src": "3137:64:10"
															},
															"nativeSrc": "3137:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "3137:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$250_to_t_address_fromStack",
												"nativeSrc": "3048:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3115:5:10",
														"nodeType": "YulTypedName",
														"src": "3115:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3122:3:10",
														"nodeType": "YulTypedName",
														"src": "3122:3:10",
														"type": ""
													}
												],
												"src": "3048:159:10"
											},
											{
												"body": {
													"nativeSrc": "3325:138:10",
													"nodeType": "YulBlock",
													"src": "3325:138:10",
													"statements": [
														{
															"nativeSrc": "3335:26:10",
															"nodeType": "YulAssignment",
															"src": "3335:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3347:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3347:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3358:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3358:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3343:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3343:3:10"
																},
																"nativeSrc": "3343:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3343:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3335:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3335:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3429:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3442:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3442:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3453:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3453:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3438:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3438:3:10"
																		},
																		"nativeSrc": "3438:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3438:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$250_to_t_address_fromStack",
																	"nativeSrc": "3371:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "3371:57:10"
																},
																"nativeSrc": "3371:85:10",
																"nodeType": "YulFunctionCall",
																"src": "3371:85:10"
															},
															"nativeSrc": "3371:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "3371:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$250__to_t_address__fromStack_reversed",
												"nativeSrc": "3213:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3297:9:10",
														"nodeType": "YulTypedName",
														"src": "3297:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3309:6:10",
														"nodeType": "YulTypedName",
														"src": "3309:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3320:4:10",
														"nodeType": "YulTypedName",
														"src": "3320:4:10",
														"type": ""
													}
												],
												"src": "3213:250:10"
											},
											{
												"body": {
													"nativeSrc": "3595:206:10",
													"nodeType": "YulBlock",
													"src": "3595:206:10",
													"statements": [
														{
															"nativeSrc": "3605:26:10",
															"nodeType": "YulAssignment",
															"src": "3605:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3617:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3613:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3613:3:10"
																},
																"nativeSrc": "3613:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3613:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3605:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3605:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3685:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3685:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3698:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3698:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3709:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3709:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3694:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3694:3:10"
																		},
																		"nativeSrc": "3694:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3694:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3641:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3641:43:10"
																},
																"nativeSrc": "3641:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3641:71:10"
															},
															"nativeSrc": "3641:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3641:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3766:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3766:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3779:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3779:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3790:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3790:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3775:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3775:3:10"
																		},
																		"nativeSrc": "3775:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3775:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3722:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3722:43:10"
																},
																"nativeSrc": "3722:72:10",
																"nodeType": "YulFunctionCall",
																"src": "3722:72:10"
															},
															"nativeSrc": "3722:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "3722:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3469:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3559:9:10",
														"nodeType": "YulTypedName",
														"src": "3559:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3571:6:10",
														"nodeType": "YulTypedName",
														"src": "3571:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3579:6:10",
														"nodeType": "YulTypedName",
														"src": "3579:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3590:4:10",
														"nodeType": "YulTypedName",
														"src": "3590:4:10",
														"type": ""
													}
												],
												"src": "3469:332:10"
											},
											{
												"body": {
													"nativeSrc": "3903:73:10",
													"nodeType": "YulBlock",
													"src": "3903:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3920:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3920:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3925:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3925:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3913:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3913:6:10"
																},
																"nativeSrc": "3913:19:10",
																"nodeType": "YulFunctionCall",
																"src": "3913:19:10"
															},
															"nativeSrc": "3913:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "3913:19:10"
														},
														{
															"nativeSrc": "3941:29:10",
															"nodeType": "YulAssignment",
															"src": "3941:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3960:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3960:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3965:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3965:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3956:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3956:3:10"
																},
																"nativeSrc": "3956:14:10",
																"nodeType": "YulFunctionCall",
																"src": "3956:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3941:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "3941:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3807:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3875:3:10",
														"nodeType": "YulTypedName",
														"src": "3875:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3880:6:10",
														"nodeType": "YulTypedName",
														"src": "3880:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3891:11:10",
														"nodeType": "YulTypedName",
														"src": "3891:11:10",
														"type": ""
													}
												],
												"src": "3807:169:10"
											},
											{
												"body": {
													"nativeSrc": "4088:75:10",
													"nodeType": "YulBlock",
													"src": "4088:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4110:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4110:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4118:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4118:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:10"
																		},
																		"nativeSrc": "4106:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "4122:33:10",
																		"nodeType": "YulLiteral",
																		"src": "4122:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4099:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4099:6:10"
																},
																"nativeSrc": "4099:57:10",
																"nodeType": "YulFunctionCall",
																"src": "4099:57:10"
															},
															"nativeSrc": "4099:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "4099:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "3982:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4080:6:10",
														"nodeType": "YulTypedName",
														"src": "4080:6:10",
														"type": ""
													}
												],
												"src": "3982:181:10"
											},
											{
												"body": {
													"nativeSrc": "4315:220:10",
													"nodeType": "YulBlock",
													"src": "4315:220:10",
													"statements": [
														{
															"nativeSrc": "4325:74:10",
															"nodeType": "YulAssignment",
															"src": "4325:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4391:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4391:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4396:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4396:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4332:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "4332:58:10"
																},
																"nativeSrc": "4332:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4332:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4325:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4325:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4497:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4497:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "4408:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "4408:88:10"
																},
																"nativeSrc": "4408:93:10",
																"nodeType": "YulFunctionCall",
																"src": "4408:93:10"
															},
															"nativeSrc": "4408:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "4408:93:10"
														},
														{
															"nativeSrc": "4510:19:10",
															"nodeType": "YulAssignment",
															"src": "4510:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4521:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4521:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4526:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4517:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4517:3:10"
																},
																"nativeSrc": "4517:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4517:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4510:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4510:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4169:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4303:3:10",
														"nodeType": "YulTypedName",
														"src": "4303:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4311:3:10",
														"nodeType": "YulTypedName",
														"src": "4311:3:10",
														"type": ""
													}
												],
												"src": "4169:366:10"
											},
											{
												"body": {
													"nativeSrc": "4712:248:10",
													"nodeType": "YulBlock",
													"src": "4712:248:10",
													"statements": [
														{
															"nativeSrc": "4722:26:10",
															"nodeType": "YulAssignment",
															"src": "4722:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4734:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4734:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4745:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4745:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4730:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4730:3:10"
																},
																"nativeSrc": "4730:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4730:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4722:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4722:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4769:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4769:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4780:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4780:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4765:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4765:3:10"
																		},
																		"nativeSrc": "4765:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4765:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4788:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4788:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4794:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4794:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4784:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4784:3:10"
																		},
																		"nativeSrc": "4784:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4784:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4758:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4758:6:10"
																},
																"nativeSrc": "4758:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4758:47:10"
															},
															"nativeSrc": "4758:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4758:47:10"
														},
														{
															"nativeSrc": "4814:139:10",
															"nodeType": "YulAssignment",
															"src": "4814:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4948:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4948:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4822:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "4822:124:10"
																},
																"nativeSrc": "4822:131:10",
																"nodeType": "YulFunctionCall",
																"src": "4822:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4814:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4814:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4541:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4692:9:10",
														"nodeType": "YulTypedName",
														"src": "4692:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4707:4:10",
														"nodeType": "YulTypedName",
														"src": "4707:4:10",
														"type": ""
													}
												],
												"src": "4541:419:10"
											},
											{
												"body": {
													"nativeSrc": "4994:152:10",
													"nodeType": "YulBlock",
													"src": "4994:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5011:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5011:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5014:77:10",
																		"nodeType": "YulLiteral",
																		"src": "5014:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5004:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5004:6:10"
																},
																"nativeSrc": "5004:88:10",
																"nodeType": "YulFunctionCall",
																"src": "5004:88:10"
															},
															"nativeSrc": "5004:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "5004:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5108:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5108:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5111:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5111:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5101:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5101:6:10"
																},
																"nativeSrc": "5101:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5101:15:10"
															},
															"nativeSrc": "5101:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5101:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5132:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5132:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5135:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5135:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5125:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:10"
																},
																"nativeSrc": "5125:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5125:15:10"
															},
															"nativeSrc": "5125:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5125:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4966:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4966:180:10"
											},
											{
												"body": {
													"nativeSrc": "5196:147:10",
													"nodeType": "YulBlock",
													"src": "5196:147:10",
													"statements": [
														{
															"nativeSrc": "5206:25:10",
															"nodeType": "YulAssignment",
															"src": "5206:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5229:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5229:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5211:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5211:17:10"
																},
																"nativeSrc": "5211:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5211:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5206:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "5206:1:10"
																}
															]
														},
														{
															"nativeSrc": "5240:25:10",
															"nodeType": "YulAssignment",
															"src": "5240:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5263:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5263:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5245:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5245:17:10"
																},
																"nativeSrc": "5245:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5245:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5240:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "5240:1:10"
																}
															]
														},
														{
															"nativeSrc": "5274:16:10",
															"nodeType": "YulAssignment",
															"src": "5274:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5285:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5285:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5288:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5288:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5281:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5281:3:10"
																},
																"nativeSrc": "5281:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5281:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5274:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5274:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5314:22:10",
																"nodeType": "YulBlock",
																"src": "5314:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5316:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5316:16:10"
																			},
																			"nativeSrc": "5316:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5316:18:10"
																		},
																		"nativeSrc": "5316:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5316:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5306:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5306:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5309:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5309:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5303:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:10"
																},
																"nativeSrc": "5303:10:10",
																"nodeType": "YulFunctionCall",
																"src": "5303:10:10"
															},
															"nativeSrc": "5300:36:10",
															"nodeType": "YulIf",
															"src": "5300:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5152:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5183:1:10",
														"nodeType": "YulTypedName",
														"src": "5183:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5186:1:10",
														"nodeType": "YulTypedName",
														"src": "5186:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5192:3:10",
														"nodeType": "YulTypedName",
														"src": "5192:3:10",
														"type": ""
													}
												],
												"src": "5152:191:10"
											},
											{
												"body": {
													"nativeSrc": "5455:60:10",
													"nodeType": "YulBlock",
													"src": "5455:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5477:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5477:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5485:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5485:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5473:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5473:3:10"
																		},
																		"nativeSrc": "5473:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5473:14:10"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "5489:18:10",
																		"nodeType": "YulLiteral",
																		"src": "5489:18:10",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5466:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5466:6:10"
																},
																"nativeSrc": "5466:42:10",
																"nodeType": "YulFunctionCall",
																"src": "5466:42:10"
															},
															"nativeSrc": "5466:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "5466:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "5349:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5447:6:10",
														"nodeType": "YulTypedName",
														"src": "5447:6:10",
														"type": ""
													}
												],
												"src": "5349:166:10"
											},
											{
												"body": {
													"nativeSrc": "5667:220:10",
													"nodeType": "YulBlock",
													"src": "5667:220:10",
													"statements": [
														{
															"nativeSrc": "5677:74:10",
															"nodeType": "YulAssignment",
															"src": "5677:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5743:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5743:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5748:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5748:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5684:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5684:58:10"
																},
																"nativeSrc": "5684:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5684:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5677:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5677:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5849:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5849:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "5760:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5760:88:10"
																},
																"nativeSrc": "5760:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5760:93:10"
															},
															"nativeSrc": "5760:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5760:93:10"
														},
														{
															"nativeSrc": "5862:19:10",
															"nodeType": "YulAssignment",
															"src": "5862:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5873:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5873:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5878:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5878:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5869:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5869:3:10"
																},
																"nativeSrc": "5869:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5869:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5862:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5862:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5521:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5655:3:10",
														"nodeType": "YulTypedName",
														"src": "5655:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5663:3:10",
														"nodeType": "YulTypedName",
														"src": "5663:3:10",
														"type": ""
													}
												],
												"src": "5521:366:10"
											},
											{
												"body": {
													"nativeSrc": "6064:248:10",
													"nodeType": "YulBlock",
													"src": "6064:248:10",
													"statements": [
														{
															"nativeSrc": "6074:26:10",
															"nodeType": "YulAssignment",
															"src": "6074:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6086:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6086:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6097:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6097:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6082:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6082:3:10"
																},
																"nativeSrc": "6082:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6082:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6074:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6074:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6121:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6121:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6132:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6132:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6117:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6117:3:10"
																		},
																		"nativeSrc": "6117:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6117:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6140:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6140:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6146:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6146:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6136:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6136:3:10"
																		},
																		"nativeSrc": "6136:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6136:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6110:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6110:6:10"
																},
																"nativeSrc": "6110:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6110:47:10"
															},
															"nativeSrc": "6110:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6110:47:10"
														},
														{
															"nativeSrc": "6166:139:10",
															"nodeType": "YulAssignment",
															"src": "6166:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6300:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6300:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6174:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6174:124:10"
																},
																"nativeSrc": "6174:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6174:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6166:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6166:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5893:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6044:9:10",
														"nodeType": "YulTypedName",
														"src": "6044:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6059:4:10",
														"nodeType": "YulTypedName",
														"src": "6059:4:10",
														"type": ""
													}
												],
												"src": "5893:419:10"
											},
											{
												"body": {
													"nativeSrc": "6424:123:10",
													"nodeType": "YulBlock",
													"src": "6424:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6446:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6446:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6454:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6454:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6442:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6442:3:10"
																		},
																		"nativeSrc": "6442:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6442:14:10"
																	},
																	{
																		"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65",
																		"kind": "string",
																		"nativeSrc": "6458:34:10",
																		"nodeType": "YulLiteral",
																		"src": "6458:34:10",
																		"type": "",
																		"value": "Crowdsale: beneficiary is the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6435:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6435:6:10"
																},
																"nativeSrc": "6435:58:10",
																"nodeType": "YulFunctionCall",
																"src": "6435:58:10"
															},
															"nativeSrc": "6435:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "6435:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6514:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6514:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6522:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6522:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6510:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6510:3:10"
																		},
																		"nativeSrc": "6510:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6510:15:10"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "6527:12:10",
																		"nodeType": "YulLiteral",
																		"src": "6527:12:10",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6503:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6503:6:10"
																},
																"nativeSrc": "6503:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6503:37:10"
															},
															"nativeSrc": "6503:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6503:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
												"nativeSrc": "6318:229:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6416:6:10",
														"nodeType": "YulTypedName",
														"src": "6416:6:10",
														"type": ""
													}
												],
												"src": "6318:229:10"
											},
											{
												"body": {
													"nativeSrc": "6699:220:10",
													"nodeType": "YulBlock",
													"src": "6699:220:10",
													"statements": [
														{
															"nativeSrc": "6709:74:10",
															"nodeType": "YulAssignment",
															"src": "6709:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6775:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6775:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6780:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6780:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6716:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "6716:58:10"
																},
																"nativeSrc": "6716:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6716:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6709:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6709:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6881:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6881:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																	"nativeSrc": "6792:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "6792:88:10"
																},
																"nativeSrc": "6792:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6792:93:10"
															},
															"nativeSrc": "6792:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "6792:93:10"
														},
														{
															"nativeSrc": "6894:19:10",
															"nodeType": "YulAssignment",
															"src": "6894:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6905:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6905:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6910:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6910:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6901:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6901:3:10"
																},
																"nativeSrc": "6901:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6901:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6894:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6894:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6553:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6687:3:10",
														"nodeType": "YulTypedName",
														"src": "6687:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6695:3:10",
														"nodeType": "YulTypedName",
														"src": "6695:3:10",
														"type": ""
													}
												],
												"src": "6553:366:10"
											},
											{
												"body": {
													"nativeSrc": "7096:248:10",
													"nodeType": "YulBlock",
													"src": "7096:248:10",
													"statements": [
														{
															"nativeSrc": "7106:26:10",
															"nodeType": "YulAssignment",
															"src": "7106:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7118:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7118:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7129:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7129:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7114:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7114:3:10"
																},
																"nativeSrc": "7114:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7114:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7106:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7106:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7153:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7153:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7164:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7164:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7149:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7149:3:10"
																		},
																		"nativeSrc": "7149:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7149:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7172:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7172:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7178:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7178:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7168:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7168:3:10"
																		},
																		"nativeSrc": "7168:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7168:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7142:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7142:6:10"
																},
																"nativeSrc": "7142:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7142:47:10"
															},
															"nativeSrc": "7142:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7142:47:10"
														},
														{
															"nativeSrc": "7198:139:10",
															"nodeType": "YulAssignment",
															"src": "7198:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7332:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7332:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7206:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7206:124:10"
																},
																"nativeSrc": "7206:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7206:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7198:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7198:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6925:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7076:9:10",
														"nodeType": "YulTypedName",
														"src": "7076:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7091:4:10",
														"nodeType": "YulTypedName",
														"src": "7091:4:10",
														"type": ""
													}
												],
												"src": "6925:419:10"
											},
											{
												"body": {
													"nativeSrc": "7456:69:10",
													"nodeType": "YulBlock",
													"src": "7456:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7478:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7478:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7486:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7486:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7474:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7474:3:10"
																		},
																		"nativeSrc": "7474:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7474:14:10"
																	},
																	{
																		"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
																		"kind": "string",
																		"nativeSrc": "7490:27:10",
																		"nodeType": "YulLiteral",
																		"src": "7490:27:10",
																		"type": "",
																		"value": "Crowdsale: weiAmount is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7467:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7467:6:10"
																},
																"nativeSrc": "7467:51:10",
																"nodeType": "YulFunctionCall",
																"src": "7467:51:10"
															},
															"nativeSrc": "7467:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "7467:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
												"nativeSrc": "7350:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7448:6:10",
														"nodeType": "YulTypedName",
														"src": "7448:6:10",
														"type": ""
													}
												],
												"src": "7350:175:10"
											},
											{
												"body": {
													"nativeSrc": "7677:220:10",
													"nodeType": "YulBlock",
													"src": "7677:220:10",
													"statements": [
														{
															"nativeSrc": "7687:74:10",
															"nodeType": "YulAssignment",
															"src": "7687:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7753:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7753:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7758:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7758:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7694:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7694:58:10"
																},
																"nativeSrc": "7694:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7694:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7687:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7687:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7859:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7859:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																	"nativeSrc": "7770:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7770:88:10"
																},
																"nativeSrc": "7770:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7770:93:10"
															},
															"nativeSrc": "7770:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7770:93:10"
														},
														{
															"nativeSrc": "7872:19:10",
															"nodeType": "YulAssignment",
															"src": "7872:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7883:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7883:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7888:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7888:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7879:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7879:3:10"
																},
																"nativeSrc": "7879:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7879:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7872:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7872:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7531:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7665:3:10",
														"nodeType": "YulTypedName",
														"src": "7665:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7673:3:10",
														"nodeType": "YulTypedName",
														"src": "7673:3:10",
														"type": ""
													}
												],
												"src": "7531:366:10"
											},
											{
												"body": {
													"nativeSrc": "8074:248:10",
													"nodeType": "YulBlock",
													"src": "8074:248:10",
													"statements": [
														{
															"nativeSrc": "8084:26:10",
															"nodeType": "YulAssignment",
															"src": "8084:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8096:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8096:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8107:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8107:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8092:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8092:3:10"
																},
																"nativeSrc": "8092:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8092:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8084:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8084:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8131:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8131:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8142:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8142:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8127:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8127:3:10"
																		},
																		"nativeSrc": "8127:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8127:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8150:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8150:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8156:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8156:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8146:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8146:3:10"
																		},
																		"nativeSrc": "8146:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8146:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8120:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8120:6:10"
																},
																"nativeSrc": "8120:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8120:47:10"
															},
															"nativeSrc": "8120:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8120:47:10"
														},
														{
															"nativeSrc": "8176:139:10",
															"nodeType": "YulAssignment",
															"src": "8176:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8310:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8310:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8184:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8184:124:10"
																},
																"nativeSrc": "8184:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8184:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8176:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8176:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7903:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8054:9:10",
														"nodeType": "YulTypedName",
														"src": "8054:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8069:4:10",
														"nodeType": "YulTypedName",
														"src": "8069:4:10",
														"type": ""
													}
												],
												"src": "7903:419:10"
											},
											{
												"body": {
													"nativeSrc": "8376:362:10",
													"nodeType": "YulBlock",
													"src": "8376:362:10",
													"statements": [
														{
															"nativeSrc": "8386:25:10",
															"nodeType": "YulAssignment",
															"src": "8386:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8409:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8409:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8391:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8391:17:10"
																},
																"nativeSrc": "8391:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8391:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8386:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8386:1:10"
																}
															]
														},
														{
															"nativeSrc": "8420:25:10",
															"nodeType": "YulAssignment",
															"src": "8420:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8443:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8443:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8425:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8425:17:10"
																},
																"nativeSrc": "8425:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8425:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8420:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8420:1:10"
																}
															]
														},
														{
															"nativeSrc": "8454:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8454:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8477:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8477:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8480:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8480:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8473:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:10"
																},
																"nativeSrc": "8473:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8473:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8458:11:10",
																	"nodeType": "YulTypedName",
																	"src": "8458:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8491:41:10",
															"nodeType": "YulAssignment",
															"src": "8491:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8520:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "8520:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8502:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8502:17:10"
																},
																"nativeSrc": "8502:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8502:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8491:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8491:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8709:22:10",
																"nodeType": "YulBlock",
																"src": "8709:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8711:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8711:16:10"
																			},
																			"nativeSrc": "8711:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:18:10"
																		},
																		"nativeSrc": "8711:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8711:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8642:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8642:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8635:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8635:6:10"
																				},
																				"nativeSrc": "8635:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8635:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8665:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8665:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8672:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "8672:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8681:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "8681:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8668:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8668:3:10"
																						},
																						"nativeSrc": "8668:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8668:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8662:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "8662:2:10"
																				},
																				"nativeSrc": "8662:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8662:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8615:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8615:2:10"
																		},
																		"nativeSrc": "8615:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8615:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8595:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8595:6:10"
																},
																"nativeSrc": "8595:113:10",
																"nodeType": "YulFunctionCall",
																"src": "8595:113:10"
															},
															"nativeSrc": "8592:139:10",
															"nodeType": "YulIf",
															"src": "8592:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8328:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8359:1:10",
														"nodeType": "YulTypedName",
														"src": "8359:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8362:1:10",
														"nodeType": "YulTypedName",
														"src": "8362:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8368:7:10",
														"nodeType": "YulTypedName",
														"src": "8368:7:10",
														"type": ""
													}
												],
												"src": "8328:410:10"
											},
											{
												"body": {
													"nativeSrc": "8809:53:10",
													"nodeType": "YulBlock",
													"src": "8809:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8826:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8826:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8849:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8849:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8831:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "8831:17:10"
																		},
																		"nativeSrc": "8831:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8831:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8819:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8819:6:10"
																},
																"nativeSrc": "8819:37:10",
																"nodeType": "YulFunctionCall",
																"src": "8819:37:10"
															},
															"nativeSrc": "8819:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "8819:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8744:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8797:5:10",
														"nodeType": "YulTypedName",
														"src": "8797:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8804:3:10",
														"nodeType": "YulTypedName",
														"src": "8804:3:10",
														"type": ""
													}
												],
												"src": "8744:118:10"
											},
											{
												"body": {
													"nativeSrc": "8994:206:10",
													"nodeType": "YulBlock",
													"src": "8994:206:10",
													"statements": [
														{
															"nativeSrc": "9004:26:10",
															"nodeType": "YulAssignment",
															"src": "9004:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9016:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9016:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9027:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9027:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9012:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9012:3:10"
																},
																"nativeSrc": "9012:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9012:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9004:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9004:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9084:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9084:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9097:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9097:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9108:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9108:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9093:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9093:3:10"
																		},
																		"nativeSrc": "9093:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9093:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9040:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9040:43:10"
																},
																"nativeSrc": "9040:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9040:71:10"
															},
															"nativeSrc": "9040:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9040:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9165:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9165:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9178:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9178:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9189:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9189:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9174:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9174:3:10"
																		},
																		"nativeSrc": "9174:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9174:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9121:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9121:43:10"
																},
																"nativeSrc": "9121:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9121:72:10"
															},
															"nativeSrc": "9121:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9121:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8868:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8958:9:10",
														"nodeType": "YulTypedName",
														"src": "8958:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8970:6:10",
														"nodeType": "YulTypedName",
														"src": "8970:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8978:6:10",
														"nodeType": "YulTypedName",
														"src": "8978:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8989:4:10",
														"nodeType": "YulTypedName",
														"src": "8989:4:10",
														"type": ""
													}
												],
												"src": "8868:332:10"
											},
											{
												"body": {
													"nativeSrc": "9246:76:10",
													"nodeType": "YulBlock",
													"src": "9246:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9300:16:10",
																"nodeType": "YulBlock",
																"src": "9300:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9309:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9309:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9312:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9312:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9302:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9302:6:10"
																			},
																			"nativeSrc": "9302:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9302:12:10"
																		},
																		"nativeSrc": "9302:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9302:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9269:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9269:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9291:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "9291:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9276:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "9276:14:10"
																				},
																				"nativeSrc": "9276:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9276:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9266:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9266:2:10"
																		},
																		"nativeSrc": "9266:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9266:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9259:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9259:6:10"
																},
																"nativeSrc": "9259:40:10",
																"nodeType": "YulFunctionCall",
																"src": "9259:40:10"
															},
															"nativeSrc": "9256:60:10",
															"nodeType": "YulIf",
															"src": "9256:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9206:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9239:5:10",
														"nodeType": "YulTypedName",
														"src": "9239:5:10",
														"type": ""
													}
												],
												"src": "9206:116:10"
											},
											{
												"body": {
													"nativeSrc": "9388:77:10",
													"nodeType": "YulBlock",
													"src": "9388:77:10",
													"statements": [
														{
															"nativeSrc": "9398:22:10",
															"nodeType": "YulAssignment",
															"src": "9398:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9413:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9413:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9407:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9407:5:10"
																},
																"nativeSrc": "9407:13:10",
																"nodeType": "YulFunctionCall",
																"src": "9407:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9398:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9398:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9453:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9453:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9429:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "9429:23:10"
																},
																"nativeSrc": "9429:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9429:30:10"
															},
															"nativeSrc": "9429:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9429:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9328:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9366:6:10",
														"nodeType": "YulTypedName",
														"src": "9366:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9374:3:10",
														"nodeType": "YulTypedName",
														"src": "9374:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9382:5:10",
														"nodeType": "YulTypedName",
														"src": "9382:5:10",
														"type": ""
													}
												],
												"src": "9328:137:10"
											},
											{
												"body": {
													"nativeSrc": "9545:271:10",
													"nodeType": "YulBlock",
													"src": "9545:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9591:83:10",
																"nodeType": "YulBlock",
																"src": "9591:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9593:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9593:77:10"
																			},
																			"nativeSrc": "9593:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9593:79:10"
																		},
																		"nativeSrc": "9593:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9593:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9566:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9566:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9575:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9575:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9562:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9562:3:10"
																		},
																		"nativeSrc": "9562:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9562:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9587:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9587:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9558:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9558:3:10"
																},
																"nativeSrc": "9558:32:10",
																"nodeType": "YulFunctionCall",
																"src": "9558:32:10"
															},
															"nativeSrc": "9555:119:10",
															"nodeType": "YulIf",
															"src": "9555:119:10"
														},
														{
															"nativeSrc": "9684:125:10",
															"nodeType": "YulBlock",
															"src": "9684:125:10",
															"statements": [
																{
																	"nativeSrc": "9699:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9699:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9713:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9713:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9703:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9703:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9728:71:10",
																	"nodeType": "YulAssignment",
																	"src": "9728:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9771:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9771:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9782:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9782:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9767:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9767:3:10"
																				},
																				"nativeSrc": "9767:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9767:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9791:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9791:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9738:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "9738:28:10"
																		},
																		"nativeSrc": "9738:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9738:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9728:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9728:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9471:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9515:9:10",
														"nodeType": "YulTypedName",
														"src": "9515:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9526:7:10",
														"nodeType": "YulTypedName",
														"src": "9526:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9538:6:10",
														"nodeType": "YulTypedName",
														"src": "9538:6:10",
														"type": ""
													}
												],
												"src": "9471:345:10"
											},
											{
												"body": {
													"nativeSrc": "9928:123:10",
													"nodeType": "YulBlock",
													"src": "9928:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9950:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9950:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9958:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9958:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9946:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9946:3:10"
																		},
																		"nativeSrc": "9946:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9946:14:10"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nativeSrc": "9962:34:10",
																		"nodeType": "YulLiteral",
																		"src": "9962:34:10",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9939:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9939:6:10"
																},
																"nativeSrc": "9939:58:10",
																"nodeType": "YulFunctionCall",
																"src": "9939:58:10"
															},
															"nativeSrc": "9939:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "9939:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10018:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10018:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10026:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10026:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10014:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10014:3:10"
																		},
																		"nativeSrc": "10014:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10014:15:10"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nativeSrc": "10031:12:10",
																		"nodeType": "YulLiteral",
																		"src": "10031:12:10",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10007:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10007:6:10"
																},
																"nativeSrc": "10007:37:10",
																"nodeType": "YulFunctionCall",
																"src": "10007:37:10"
															},
															"nativeSrc": "10007:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "10007:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nativeSrc": "9822:229:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9920:6:10",
														"nodeType": "YulTypedName",
														"src": "9920:6:10",
														"type": ""
													}
												],
												"src": "9822:229:10"
											},
											{
												"body": {
													"nativeSrc": "10203:220:10",
													"nodeType": "YulBlock",
													"src": "10203:220:10",
													"statements": [
														{
															"nativeSrc": "10213:74:10",
															"nodeType": "YulAssignment",
															"src": "10213:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10279:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10279:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10284:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10284:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10220:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10220:58:10"
																},
																"nativeSrc": "10220:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10220:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10213:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10213:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10385:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10385:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nativeSrc": "10296:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10296:88:10"
																},
																"nativeSrc": "10296:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10296:93:10"
															},
															"nativeSrc": "10296:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10296:93:10"
														},
														{
															"nativeSrc": "10398:19:10",
															"nodeType": "YulAssignment",
															"src": "10398:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10409:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10409:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10414:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10414:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10405:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10405:3:10"
																},
																"nativeSrc": "10405:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10405:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10398:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10398:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10057:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10191:3:10",
														"nodeType": "YulTypedName",
														"src": "10191:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10199:3:10",
														"nodeType": "YulTypedName",
														"src": "10199:3:10",
														"type": ""
													}
												],
												"src": "10057:366:10"
											},
											{
												"body": {
													"nativeSrc": "10600:248:10",
													"nodeType": "YulBlock",
													"src": "10600:248:10",
													"statements": [
														{
															"nativeSrc": "10610:26:10",
															"nodeType": "YulAssignment",
															"src": "10610:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10622:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10622:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10633:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10618:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10618:3:10"
																},
																"nativeSrc": "10618:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10618:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10610:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10610:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10657:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10657:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10668:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10668:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10653:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10653:3:10"
																		},
																		"nativeSrc": "10653:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10653:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10676:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10676:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10682:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10682:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10672:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10672:3:10"
																		},
																		"nativeSrc": "10672:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10672:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10646:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10646:6:10"
																},
																"nativeSrc": "10646:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10646:47:10"
															},
															"nativeSrc": "10646:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10646:47:10"
														},
														{
															"nativeSrc": "10702:139:10",
															"nodeType": "YulAssignment",
															"src": "10702:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10836:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10836:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10710:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10710:124:10"
																},
																"nativeSrc": "10710:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10710:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10702:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10702:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10429:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10580:9:10",
														"nodeType": "YulTypedName",
														"src": "10580:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10595:4:10",
														"nodeType": "YulTypedName",
														"src": "10595:4:10",
														"type": ""
													}
												],
												"src": "10429:419:10"
											},
											{
												"body": {
													"nativeSrc": "10960:119:10",
													"nodeType": "YulBlock",
													"src": "10960:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10982:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10982:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10990:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10990:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10978:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10978:3:10"
																		},
																		"nativeSrc": "10978:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10978:14:10"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nativeSrc": "10994:34:10",
																		"nodeType": "YulLiteral",
																		"src": "10994:34:10",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10971:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10971:6:10"
																},
																"nativeSrc": "10971:58:10",
																"nodeType": "YulFunctionCall",
																"src": "10971:58:10"
															},
															"nativeSrc": "10971:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "10971:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11050:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11050:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11058:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11058:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11046:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11046:3:10"
																		},
																		"nativeSrc": "11046:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11046:15:10"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nativeSrc": "11063:8:10",
																		"nodeType": "YulLiteral",
																		"src": "11063:8:10",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11039:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11039:6:10"
																},
																"nativeSrc": "11039:33:10",
																"nodeType": "YulFunctionCall",
																"src": "11039:33:10"
															},
															"nativeSrc": "11039:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "11039:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nativeSrc": "10854:225:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10952:6:10",
														"nodeType": "YulTypedName",
														"src": "10952:6:10",
														"type": ""
													}
												],
												"src": "10854:225:10"
											},
											{
												"body": {
													"nativeSrc": "11231:220:10",
													"nodeType": "YulBlock",
													"src": "11231:220:10",
													"statements": [
														{
															"nativeSrc": "11241:74:10",
															"nodeType": "YulAssignment",
															"src": "11241:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11307:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11307:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11312:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11312:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11248:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11248:58:10"
																},
																"nativeSrc": "11248:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11248:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11241:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11241:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11413:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11413:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nativeSrc": "11324:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11324:88:10"
																},
																"nativeSrc": "11324:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11324:93:10"
															},
															"nativeSrc": "11324:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11324:93:10"
														},
														{
															"nativeSrc": "11426:19:10",
															"nodeType": "YulAssignment",
															"src": "11426:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11437:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11437:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11442:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11442:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11433:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11433:3:10"
																},
																"nativeSrc": "11433:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11433:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11426:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11426:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11085:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11219:3:10",
														"nodeType": "YulTypedName",
														"src": "11219:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11227:3:10",
														"nodeType": "YulTypedName",
														"src": "11227:3:10",
														"type": ""
													}
												],
												"src": "11085:366:10"
											},
											{
												"body": {
													"nativeSrc": "11628:248:10",
													"nodeType": "YulBlock",
													"src": "11628:248:10",
													"statements": [
														{
															"nativeSrc": "11638:26:10",
															"nodeType": "YulAssignment",
															"src": "11638:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11650:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11650:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11661:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11661:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11646:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11646:3:10"
																},
																"nativeSrc": "11646:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11646:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11638:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11638:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11685:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11685:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11696:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11696:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11681:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11681:3:10"
																		},
																		"nativeSrc": "11681:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11681:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11704:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11704:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11710:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11710:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11700:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11700:3:10"
																		},
																		"nativeSrc": "11700:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11700:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11674:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11674:6:10"
																},
																"nativeSrc": "11674:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11674:47:10"
															},
															"nativeSrc": "11674:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11674:47:10"
														},
														{
															"nativeSrc": "11730:139:10",
															"nodeType": "YulAssignment",
															"src": "11730:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11864:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11864:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11738:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11738:124:10"
																},
																"nativeSrc": "11738:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11738:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11730:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11730:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11457:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11608:9:10",
														"nodeType": "YulTypedName",
														"src": "11608:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11623:4:10",
														"nodeType": "YulTypedName",
														"src": "11623:4:10",
														"type": ""
													}
												],
												"src": "11457:419:10"
											},
											{
												"body": {
													"nativeSrc": "11940:40:10",
													"nodeType": "YulBlock",
													"src": "11940:40:10",
													"statements": [
														{
															"nativeSrc": "11951:22:10",
															"nodeType": "YulAssignment",
															"src": "11951:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11967:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11967:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11961:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11961:5:10"
																},
																"nativeSrc": "11961:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11961:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11951:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11951:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "11882:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11923:5:10",
														"nodeType": "YulTypedName",
														"src": "11923:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11933:6:10",
														"nodeType": "YulTypedName",
														"src": "11933:6:10",
														"type": ""
													}
												],
												"src": "11882:98:10"
											},
											{
												"body": {
													"nativeSrc": "12099:34:10",
													"nodeType": "YulBlock",
													"src": "12099:34:10",
													"statements": [
														{
															"nativeSrc": "12109:18:10",
															"nodeType": "YulAssignment",
															"src": "12109:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "12124:3:10",
																"nodeType": "YulIdentifier",
																"src": "12124:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12109:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "12109:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11986:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12071:3:10",
														"nodeType": "YulTypedName",
														"src": "12071:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12076:6:10",
														"nodeType": "YulTypedName",
														"src": "12076:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12087:11:10",
														"nodeType": "YulTypedName",
														"src": "12087:11:10",
														"type": ""
													}
												],
												"src": "11986:147:10"
											},
											{
												"body": {
													"nativeSrc": "12201:184:10",
													"nodeType": "YulBlock",
													"src": "12201:184:10",
													"statements": [
														{
															"nativeSrc": "12211:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12211:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "12220:1:10",
																"nodeType": "YulLiteral",
																"src": "12220:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "12215:1:10",
																	"nodeType": "YulTypedName",
																	"src": "12215:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12280:63:10",
																"nodeType": "YulBlock",
																"src": "12280:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "12305:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "12305:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "12310:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "12310:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "12301:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "12301:3:10"
																					},
																					"nativeSrc": "12301:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12301:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "12324:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "12324:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "12329:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "12329:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12320:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "12320:3:10"
																							},
																							"nativeSrc": "12320:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "12320:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "12314:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "12314:5:10"
																					},
																					"nativeSrc": "12314:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12314:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12294:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12294:6:10"
																			},
																			"nativeSrc": "12294:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12294:39:10"
																		},
																		"nativeSrc": "12294:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12294:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "12241:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12241:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12244:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12244:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12238:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12238:2:10"
																},
																"nativeSrc": "12238:13:10",
																"nodeType": "YulFunctionCall",
																"src": "12238:13:10"
															},
															"nativeSrc": "12230:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12252:19:10",
																"nodeType": "YulBlock",
																"src": "12252:19:10",
																"statements": [
																	{
																		"nativeSrc": "12254:15:10",
																		"nodeType": "YulAssignment",
																		"src": "12254:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "12263:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "12263:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12266:2:10",
																					"nodeType": "YulLiteral",
																					"src": "12266:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12259:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "12259:3:10"
																			},
																			"nativeSrc": "12259:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12259:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "12254:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "12254:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12234:3:10",
																"nodeType": "YulBlock",
																"src": "12234:3:10",
																"statements": []
															},
															"src": "12230:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "12363:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "12363:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12368:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12368:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12359:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12359:3:10"
																		},
																		"nativeSrc": "12359:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12359:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12377:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12377:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12352:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12352:6:10"
																},
																"nativeSrc": "12352:27:10",
																"nodeType": "YulFunctionCall",
																"src": "12352:27:10"
															},
															"nativeSrc": "12352:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "12352:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "12139:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12183:3:10",
														"nodeType": "YulTypedName",
														"src": "12183:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "12188:3:10",
														"nodeType": "YulTypedName",
														"src": "12188:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12193:6:10",
														"nodeType": "YulTypedName",
														"src": "12193:6:10",
														"type": ""
													}
												],
												"src": "12139:246:10"
											},
											{
												"body": {
													"nativeSrc": "12499:278:10",
													"nodeType": "YulBlock",
													"src": "12499:278:10",
													"statements": [
														{
															"nativeSrc": "12509:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12509:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12555:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "12555:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "12523:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "12523:31:10"
																},
																"nativeSrc": "12523:38:10",
																"nodeType": "YulFunctionCall",
																"src": "12523:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12513:6:10",
																	"nodeType": "YulTypedName",
																	"src": "12513:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12570:95:10",
															"nodeType": "YulAssignment",
															"src": "12570:95:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12653:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12653:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12658:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12658:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12577:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "12577:75:10"
																},
																"nativeSrc": "12577:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12577:88:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12570:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12570:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12713:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "12713:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12720:4:10",
																				"nodeType": "YulLiteral",
																				"src": "12720:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12709:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12709:3:10"
																		},
																		"nativeSrc": "12709:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12709:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12727:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12727:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12732:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12732:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12674:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "12674:34:10"
																},
																"nativeSrc": "12674:65:10",
																"nodeType": "YulFunctionCall",
																"src": "12674:65:10"
															},
															"nativeSrc": "12674:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "12674:65:10"
														},
														{
															"nativeSrc": "12748:23:10",
															"nodeType": "YulAssignment",
															"src": "12748:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12759:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12759:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12764:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12764:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12755:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12755:3:10"
																},
																"nativeSrc": "12755:16:10",
																"nodeType": "YulFunctionCall",
																"src": "12755:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12748:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12748:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12391:386:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12480:5:10",
														"nodeType": "YulTypedName",
														"src": "12480:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12487:3:10",
														"nodeType": "YulTypedName",
														"src": "12487:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12495:3:10",
														"nodeType": "YulTypedName",
														"src": "12495:3:10",
														"type": ""
													}
												],
												"src": "12391:386:10"
											},
											{
												"body": {
													"nativeSrc": "12917:137:10",
													"nodeType": "YulBlock",
													"src": "12917:137:10",
													"statements": [
														{
															"nativeSrc": "12928:100:10",
															"nodeType": "YulAssignment",
															"src": "12928:100:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13015:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13015:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13024:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13024:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12935:79:10",
																	"nodeType": "YulIdentifier",
																	"src": "12935:79:10"
																},
																"nativeSrc": "12935:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12935:93:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12928:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12928:3:10"
																}
															]
														},
														{
															"nativeSrc": "13038:10:10",
															"nodeType": "YulAssignment",
															"src": "13038:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "13045:3:10",
																"nodeType": "YulIdentifier",
																"src": "13045:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13038:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13038:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12783:271:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12896:3:10",
														"nodeType": "YulTypedName",
														"src": "12896:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12902:6:10",
														"nodeType": "YulTypedName",
														"src": "12902:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12913:3:10",
														"nodeType": "YulTypedName",
														"src": "12913:3:10",
														"type": ""
													}
												],
												"src": "12783:271:10"
											},
											{
												"body": {
													"nativeSrc": "13166:73:10",
													"nodeType": "YulBlock",
													"src": "13166:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13188:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13188:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13196:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13196:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13184:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13184:3:10"
																		},
																		"nativeSrc": "13184:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13184:14:10"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "13200:31:10",
																		"nodeType": "YulLiteral",
																		"src": "13200:31:10",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13177:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13177:6:10"
																},
																"nativeSrc": "13177:55:10",
																"nodeType": "YulFunctionCall",
																"src": "13177:55:10"
															},
															"nativeSrc": "13177:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "13177:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nativeSrc": "13060:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13158:6:10",
														"nodeType": "YulTypedName",
														"src": "13158:6:10",
														"type": ""
													}
												],
												"src": "13060:179:10"
											},
											{
												"body": {
													"nativeSrc": "13391:220:10",
													"nodeType": "YulBlock",
													"src": "13391:220:10",
													"statements": [
														{
															"nativeSrc": "13401:74:10",
															"nodeType": "YulAssignment",
															"src": "13401:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13467:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13467:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13472:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13472:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13408:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13408:58:10"
																},
																"nativeSrc": "13408:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13408:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13401:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13401:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13573:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13573:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nativeSrc": "13484:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13484:88:10"
																},
																"nativeSrc": "13484:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13484:93:10"
															},
															"nativeSrc": "13484:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13484:93:10"
														},
														{
															"nativeSrc": "13586:19:10",
															"nodeType": "YulAssignment",
															"src": "13586:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13597:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13597:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13602:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13602:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13593:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13593:3:10"
																},
																"nativeSrc": "13593:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13593:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13586:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13586:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13245:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13379:3:10",
														"nodeType": "YulTypedName",
														"src": "13379:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13387:3:10",
														"nodeType": "YulTypedName",
														"src": "13387:3:10",
														"type": ""
													}
												],
												"src": "13245:366:10"
											},
											{
												"body": {
													"nativeSrc": "13788:248:10",
													"nodeType": "YulBlock",
													"src": "13788:248:10",
													"statements": [
														{
															"nativeSrc": "13798:26:10",
															"nodeType": "YulAssignment",
															"src": "13798:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13810:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13810:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13821:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13821:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13806:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13806:3:10"
																},
																"nativeSrc": "13806:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13806:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13798:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13798:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13845:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13845:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13856:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13856:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13841:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13841:3:10"
																		},
																		"nativeSrc": "13841:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13841:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13864:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13864:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13870:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13870:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13860:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13860:3:10"
																		},
																		"nativeSrc": "13860:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13860:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13834:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13834:6:10"
																},
																"nativeSrc": "13834:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13834:47:10"
															},
															"nativeSrc": "13834:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13834:47:10"
														},
														{
															"nativeSrc": "13890:139:10",
															"nodeType": "YulAssignment",
															"src": "13890:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14024:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14024:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13898:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13898:124:10"
																},
																"nativeSrc": "13898:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13898:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13890:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13890:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13617:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13768:9:10",
														"nodeType": "YulTypedName",
														"src": "13768:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13783:4:10",
														"nodeType": "YulTypedName",
														"src": "13783:4:10",
														"type": ""
													}
												],
												"src": "13617:419:10"
											},
											{
												"body": {
													"nativeSrc": "14101:40:10",
													"nodeType": "YulBlock",
													"src": "14101:40:10",
													"statements": [
														{
															"nativeSrc": "14112:22:10",
															"nodeType": "YulAssignment",
															"src": "14112:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14128:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "14128:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14122:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "14122:5:10"
																},
																"nativeSrc": "14122:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14122:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14112:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14112:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "14042:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14084:5:10",
														"nodeType": "YulTypedName",
														"src": "14084:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14094:6:10",
														"nodeType": "YulTypedName",
														"src": "14094:6:10",
														"type": ""
													}
												],
												"src": "14042:99:10"
											},
											{
												"body": {
													"nativeSrc": "14195:54:10",
													"nodeType": "YulBlock",
													"src": "14195:54:10",
													"statements": [
														{
															"nativeSrc": "14205:38:10",
															"nodeType": "YulAssignment",
															"src": "14205:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14223:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "14223:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14230:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14230:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14219:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14219:3:10"
																		},
																		"nativeSrc": "14219:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14219:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14239:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14239:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14235:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14235:3:10"
																		},
																		"nativeSrc": "14235:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14235:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14215:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14215:3:10"
																},
																"nativeSrc": "14215:28:10",
																"nodeType": "YulFunctionCall",
																"src": "14215:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14205:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14205:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "14147:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14178:5:10",
														"nodeType": "YulTypedName",
														"src": "14178:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14188:6:10",
														"nodeType": "YulTypedName",
														"src": "14188:6:10",
														"type": ""
													}
												],
												"src": "14147:102:10"
											},
											{
												"body": {
													"nativeSrc": "14347:285:10",
													"nodeType": "YulBlock",
													"src": "14347:285:10",
													"statements": [
														{
															"nativeSrc": "14357:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "14357:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "14404:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "14371:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "14371:32:10"
																},
																"nativeSrc": "14371:39:10",
																"nodeType": "YulFunctionCall",
																"src": "14371:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14361:6:10",
																	"nodeType": "YulTypedName",
																	"src": "14361:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14419:78:10",
															"nodeType": "YulAssignment",
															"src": "14419:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14485:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14485:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14490:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14490:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14426:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14426:58:10"
																},
																"nativeSrc": "14426:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14426:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14419:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14419:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14545:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "14545:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14552:4:10",
																				"nodeType": "YulLiteral",
																				"src": "14552:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14541:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14541:3:10"
																		},
																		"nativeSrc": "14541:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14541:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14559:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14559:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14564:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14564:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14506:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "14506:34:10"
																},
																"nativeSrc": "14506:65:10",
																"nodeType": "YulFunctionCall",
																"src": "14506:65:10"
															},
															"nativeSrc": "14506:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "14506:65:10"
														},
														{
															"nativeSrc": "14580:46:10",
															"nodeType": "YulAssignment",
															"src": "14580:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14591:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14591:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14618:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14618:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "14596:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "14596:21:10"
																		},
																		"nativeSrc": "14596:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14596:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14587:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14587:3:10"
																},
																"nativeSrc": "14587:39:10",
																"nodeType": "YulFunctionCall",
																"src": "14587:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14580:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14580:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14255:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14328:5:10",
														"nodeType": "YulTypedName",
														"src": "14328:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14335:3:10",
														"nodeType": "YulTypedName",
														"src": "14335:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14343:3:10",
														"nodeType": "YulTypedName",
														"src": "14343:3:10",
														"type": ""
													}
												],
												"src": "14255:377:10"
											},
											{
												"body": {
													"nativeSrc": "14756:195:10",
													"nodeType": "YulBlock",
													"src": "14756:195:10",
													"statements": [
														{
															"nativeSrc": "14766:26:10",
															"nodeType": "YulAssignment",
															"src": "14766:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14778:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14778:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14789:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14789:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14774:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14774:3:10"
																},
																"nativeSrc": "14774:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14774:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14766:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14766:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14813:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14813:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14824:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14824:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14809:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14809:3:10"
																		},
																		"nativeSrc": "14809:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14809:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14832:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14832:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14838:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14838:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14828:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14828:3:10"
																		},
																		"nativeSrc": "14828:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14828:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14802:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14802:6:10"
																},
																"nativeSrc": "14802:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14802:47:10"
															},
															"nativeSrc": "14802:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14802:47:10"
														},
														{
															"nativeSrc": "14858:86:10",
															"nodeType": "YulAssignment",
															"src": "14858:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14930:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14930:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14939:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14939:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14866:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "14866:63:10"
																},
																"nativeSrc": "14866:78:10",
																"nodeType": "YulFunctionCall",
																"src": "14866:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14858:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14858:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14638:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14728:9:10",
														"nodeType": "YulTypedName",
														"src": "14728:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14740:6:10",
														"nodeType": "YulTypedName",
														"src": "14740:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14751:4:10",
														"nodeType": "YulTypedName",
														"src": "14751:4:10",
														"type": ""
													}
												],
												"src": "14638:313:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$250_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$250_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$250_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$250__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$250_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: beneficiary is the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: weiAmount is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610058575f3560e01c80632c4e722e146100815780634042b66f146100ab578063521eb273146100d55780635c975abb146100ff578063ec8ac4d814610129578063fc0c546a146101455761006f565b3661006f5761006d61006861016f565b610176565b005b61007f61007a61016f565b610176565b005b34801561008c575f80fd5b50610095610254565b6040516100a29190610872565b60405180910390f35b3480156100b6575f80fd5b506100bf61025d565b6040516100cc9190610872565b60405180910390f35b3480156100e0575f80fd5b506100e9610266565b6040516100f691906108ca565b60405180910390f35b34801561010a575f80fd5b5061011361028e565b60405161012091906108fd565b60405180910390f35b610143600480360381019061013e9190610955565b610176565b005b348015610150575f80fd5b506101596102a3565b60405161016691906109db565b60405180910390f35b5f33905090565b61017e6102cb565b5f34905061018c8282610318565b5f6101968261032e565b90506101ad8260045461034b90919063ffffffff16565b6004819055506101bd8382610360565b8273ffffffffffffffffffffffffffffffffffffffff166101dc61016f565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b84846040516102239291906109f4565b60405180910390a3610235838361036e565b61023d610372565b61024783836103d9565b50506102516103dd565b50565b5f600354905090565b5f600454905090565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60055f9054906101000a900460ff16905090565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025f540361030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690610a75565b60405180910390fd5b60025f81905550565b6103206103e6565b61032a8282610430565b5050565b5f610344600354836104e490919063ffffffff16565b9050919050565b5f81836103589190610ac0565b905092915050565b61036a82826104f9565b5050565b5050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f193505050501580156103d6573d5f803e3d5ffd5b50565b5050565b60015f81905550565b6103ee61028e565b1561042e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042590610b3d565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361049e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049590610bcb565b60405180910390fd5b5f81036104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d790610c33565b60405180910390fd5b5050565b5f81836104f19190610c51565b905092915050565b610545828260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166105499092919063ffffffff16565b5050565b6105ca8363a9059cbb60e01b8484604051602401610568929190610ca1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105cf565b505050565b5f610630826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166106959092919063ffffffff16565b90505f815114806106515750808060200190518101906106509190610cf2565b5b610690576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068790610d8d565b60405180910390fd5b505050565b60606106a384845f856106ac565b90509392505050565b6060824710156106f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e890610e1b565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff1685876040516107199190610ea5565b5f6040518083038185875af1925050503d805f8114610753576040519150601f19603f3d011682016040523d82523d5f602084013e610758565b606091505b509150915061076987838387610775565b92505050949350505050565b606083156107d6575f8351036107ce5761078e856107e9565b6107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c490610f05565b60405180910390fd5b5b8290506107e1565b6107e0838361080b565b5b949350505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f8251111561081d5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108519190610f75565b60405180910390fd5b5f819050919050565b61086c8161085a565b82525050565b5f6020820190506108855f830184610863565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108b48261088b565b9050919050565b6108c4816108aa565b82525050565b5f6020820190506108dd5f8301846108bb565b92915050565b5f8115159050919050565b6108f7816108e3565b82525050565b5f6020820190506109105f8301846108ee565b92915050565b5f80fd5b5f6109248261088b565b9050919050565b6109348161091a565b811461093e575f80fd5b50565b5f8135905061094f8161092b565b92915050565b5f6020828403121561096a57610969610916565b5b5f61097784828501610941565b91505092915050565b5f819050919050565b5f6109a361099e6109998461088b565b610980565b61088b565b9050919050565b5f6109b482610989565b9050919050565b5f6109c5826109aa565b9050919050565b6109d5816109bb565b82525050565b5f6020820190506109ee5f8301846109cc565b92915050565b5f604082019050610a075f830185610863565b610a146020830184610863565b9392505050565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610a5f601f83610a1b565b9150610a6a82610a2b565b602082019050919050565b5f6020820190508181035f830152610a8c81610a53565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610aca8261085a565b9150610ad58361085a565b9250828201905080821115610aed57610aec610a93565b5b92915050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f610b27601083610a1b565b9150610b3282610af3565b602082019050919050565b5f6020820190508181035f830152610b5481610b1b565b9050919050565b7f43726f776473616c653a2062656e656669636961727920697320746865207a655f8201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b5f610bb5602a83610a1b565b9150610bc082610b5b565b604082019050919050565b5f6020820190508181035f830152610be281610ba9565b9050919050565b7f43726f776473616c653a20776569416d6f756e742069732030000000000000005f82015250565b5f610c1d601983610a1b565b9150610c2882610be9565b602082019050919050565b5f6020820190508181035f830152610c4a81610c11565b9050919050565b5f610c5b8261085a565b9150610c668361085a565b9250828202610c748161085a565b91508282048414831517610c8b57610c8a610a93565b5b5092915050565b610c9b8161091a565b82525050565b5f604082019050610cb45f830185610c92565b610cc16020830184610863565b9392505050565b610cd1816108e3565b8114610cdb575f80fd5b50565b5f81519050610cec81610cc8565b92915050565b5f60208284031215610d0757610d06610916565b5b5f610d1484828501610cde565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f610d77602a83610a1b565b9150610d8282610d1d565b604082019050919050565b5f6020820190508181035f830152610da481610d6b565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f610e05602683610a1b565b9150610e1082610dab565b604082019050919050565b5f6020820190508181035f830152610e3281610df9565b9050919050565b5f81519050919050565b5f81905092915050565b5f5b83811015610e6a578082015181840152602081019050610e4f565b5f8484015250505050565b5f610e7f82610e39565b610e898185610e43565b9350610e99818560208601610e4d565b80840191505092915050565b5f610eb08284610e75565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f610eef601d83610a1b565b9150610efa82610ebb565b602082019050919050565b5f6020820190508181035f830152610f1c81610ee3565b9050919050565b5f81519050919050565b5f601f19601f8301169050919050565b5f610f4782610f23565b610f518185610a1b565b9350610f61818560208601610e4d565b610f6a81610f2d565b840191505092915050565b5f6020820190508181035f830152610f8d8184610f3d565b90509291505056fea2646970667358221220925233c303a213629dfe6087883130e2016c4688609b517f1d7df84bd344eac364736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x145 JUMPI PUSH2 0x6F JUMP JUMPDEST CALLDATASIZE PUSH2 0x6F JUMPI PUSH2 0x6D PUSH2 0x68 PUSH2 0x16F JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x7A PUSH2 0x16F JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x254 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x955 JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x2CB JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH2 0x18C DUP3 DUP3 PUSH2 0x318 JUMP JUMPDEST PUSH0 PUSH2 0x196 DUP3 PUSH2 0x32E JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 PUSH1 0x4 SLOAD PUSH2 0x34B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x1BD DUP4 DUP3 PUSH2 0x360 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DC PUSH2 0x16F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x223 SWAP3 SWAP2 SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x235 DUP4 DUP4 PUSH2 0x36E JUMP JUMPDEST PUSH2 0x23D PUSH2 0x372 JUMP JUMPDEST PUSH2 0x247 DUP4 DUP4 PUSH2 0x3D9 JUMP JUMPDEST POP POP PUSH2 0x251 PUSH2 0x3DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x30F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x320 PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x32A DUP3 DUP3 PUSH2 0x430 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x344 PUSH1 0x3 SLOAD DUP4 PUSH2 0x4E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x36A DUP3 DUP3 PUSH2 0x4F9 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3D6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x28E JUMP JUMPDEST ISZERO PUSH2 0x42E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x425 SWAP1 PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D7 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x545 DUP3 DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x549 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5CA DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x568 SWAP3 SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x5CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x630 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x695 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x651 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x650 SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST JUMPDEST PUSH2 0x690 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x687 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6A3 DUP5 DUP5 PUSH0 DUP6 PUSH2 0x6AC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x6F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E8 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x719 SWAP2 SWAP1 PUSH2 0xEA5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x753 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x758 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x769 DUP8 DUP4 DUP4 DUP8 PUSH2 0x775 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x7D6 JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x7CE JUMPI PUSH2 0x78E DUP6 PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C4 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x7E0 DUP4 DUP4 PUSH2 0x80B JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x81D JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x851 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86C DUP2 PUSH2 0x85A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x885 PUSH0 DUP4 ADD DUP5 PUSH2 0x863 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8B4 DUP3 PUSH2 0x88B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C4 DUP2 PUSH2 0x8AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8DD PUSH0 DUP4 ADD DUP5 PUSH2 0x8BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F7 DUP2 PUSH2 0x8E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x910 PUSH0 DUP4 ADD DUP5 PUSH2 0x8EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x924 DUP3 PUSH2 0x88B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x934 DUP2 PUSH2 0x91A JUMP JUMPDEST DUP2 EQ PUSH2 0x93E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x94F DUP2 PUSH2 0x92B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x96A JUMPI PUSH2 0x969 PUSH2 0x916 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x977 DUP5 DUP3 DUP6 ADD PUSH2 0x941 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9A3 PUSH2 0x99E PUSH2 0x999 DUP5 PUSH2 0x88B JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9B4 DUP3 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9C5 DUP3 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D5 DUP2 PUSH2 0x9BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9EE PUSH0 DUP4 ADD DUP5 PUSH2 0x9CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA07 PUSH0 DUP4 ADD DUP6 PUSH2 0x863 JUMP JUMPDEST PUSH2 0xA14 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x863 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA5F PUSH1 0x1F DUP4 PUSH2 0xA1B JUMP JUMPDEST SWAP2 POP PUSH2 0xA6A DUP3 PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA8C DUP2 PUSH2 0xA53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xACA DUP3 PUSH2 0x85A JUMP JUMPDEST SWAP2 POP PUSH2 0xAD5 DUP4 PUSH2 0x85A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAED JUMPI PUSH2 0xAEC PUSH2 0xA93 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB27 PUSH1 0x10 DUP4 PUSH2 0xA1B JUMP JUMPDEST SWAP2 POP PUSH2 0xB32 DUP3 PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB54 DUP2 PUSH2 0xB1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBB5 PUSH1 0x2A DUP4 PUSH2 0xA1B JUMP JUMPDEST SWAP2 POP PUSH2 0xBC0 DUP3 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBE2 DUP2 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC1D PUSH1 0x19 DUP4 PUSH2 0xA1B JUMP JUMPDEST SWAP2 POP PUSH2 0xC28 DUP3 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC4A DUP2 PUSH2 0xC11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC5B DUP3 PUSH2 0x85A JUMP JUMPDEST SWAP2 POP PUSH2 0xC66 DUP4 PUSH2 0x85A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC74 DUP2 PUSH2 0x85A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC8B JUMPI PUSH2 0xC8A PUSH2 0xA93 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC9B DUP2 PUSH2 0x91A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCB4 PUSH0 DUP4 ADD DUP6 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0xCC1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x863 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCD1 DUP2 PUSH2 0x8E3 JUMP JUMPDEST DUP2 EQ PUSH2 0xCDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCEC DUP2 PUSH2 0xCC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0x916 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD14 DUP5 DUP3 DUP6 ADD PUSH2 0xCDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD77 PUSH1 0x2A DUP4 PUSH2 0xA1B JUMP JUMPDEST SWAP2 POP PUSH2 0xD82 DUP3 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDA4 DUP2 PUSH2 0xD6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE05 PUSH1 0x26 DUP4 PUSH2 0xA1B JUMP JUMPDEST SWAP2 POP PUSH2 0xE10 DUP3 PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE32 DUP2 PUSH2 0xDF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE6A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE4F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE7F DUP3 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0xE89 DUP2 DUP6 PUSH2 0xE43 JUMP JUMPDEST SWAP4 POP PUSH2 0xE99 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE4D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEB0 DUP3 DUP5 PUSH2 0xE75 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEEF PUSH1 0x1D DUP4 PUSH2 0xA1B JUMP JUMPDEST SWAP2 POP PUSH2 0xEFA DUP3 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF1C DUP2 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF47 DUP3 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0xF51 DUP2 DUP6 PUSH2 0xA1B JUMP JUMPDEST SWAP4 POP PUSH2 0xF61 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE4D JUMP JUMPDEST PUSH2 0xF6A DUP2 PUSH2 0xF2D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF8D DUP2 DUP5 PUSH2 0xF3D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 MSTORE CALLER 0xC3 SUB LOG2 SGT PUSH3 0x9DFE60 DUP8 DUP9 BALANCE ADDRESS 0xE2 ADD PUSH13 0x4688609B517F1D7DF84BD344EA 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "299:752:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3351:23:8;3361:12;:10;:12::i;:::-;3351:9;:23::i;:::-;299:752:9;;3270:23:8;3280:12;:10;:12::i;:::-;3270:9;:23::i;:::-;299:752:9;3784:85:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3937:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3605:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1615:84:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4289:622:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3446:78;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;656:96:6;709:7;735:10;728:17;;656:96;:::o;4289:622:8:-;2261:21:1;:19;:21::i;:::-;4368:17:8::1;4388:9;4368:29;;4408:44;4429:11;4442:9;4408:20;:44::i;:::-;4514:14;4531:26;4547:9;4531:15;:26::i;:::-;4514:43;;4608:25;4623:9;4608:10;;:14;;:25;;;;:::i;:::-;4595:10;:38;;;;4646:37;4663:11;4676:6;4646:16;:37::i;:::-;4729:11;4699:61;;4715:12;:10;:12::i;:::-;4699:61;;;4742:9;4753:6;4699:61;;;;;;;:::i;:::-;;;;;;;;4773:46;4796:11;4809:9;4773:22;:46::i;:::-;4832:15;:13;:15::i;:::-;4858:45;4880:11;4893:9;4858:21;:45::i;:::-;4357:554;;2303:20:1::0;:18;:20::i;:::-;4289:622:8;:::o;3784:85::-;3829:7;3856:5;;3849:12;;3784:85;:::o;3937:87::-;3979:7;4006:10;;3999:17;;3937:87;:::o;3605:89::-;3644:15;3679:7;;;;;;;;;;;3672:14;;3605:89;:::o;1615:84:0:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;3446:78:8:-;3484:6;3510;;;;;;;;;;;3503:13;;3446:78;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;861:187:9:-;1239:19:0;:17;:19::i;:::-;988:52:9::1;1015:12;1029:10;988:26;:52::i;:::-;861:187:::0;;:::o;7856:130:8:-;7931:7;7958:20;7972:5;;7958:9;:13;;:20;;;;:::i;:::-;7951:27;;7856:130;;;:::o;2755:96:7:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7023:144:8:-;7119:40;7134:11;7147;7119:14;:40::i;:::-;7023:144;;:::o;7445:155::-;;;:::o;8078:88::-;8131:7;;;;;;;;;;;:16;;:27;8148:9;8131:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8078:88::o;6155:159::-;;;:::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;1767:106:0:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;5464:388:8:-;5598:1;5575:25;;:11;:25;;;5567:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;5679:1;5666:9;:14;5658:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5464:388;;:::o;3465:96:7:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;6602:147:8:-;6696:45;6716:11;6729;6696:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6602:147;;:::o;941:175:4:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;5196:642::-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5749:1;5728:10;:17;:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5728:56;5720:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5266:572;5196:642;;:::o;4108:223:5:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:77:10;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:104::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;574:104;;;:::o;684:142::-;787:32;813:5;787:32;:::i;:::-;782:3;775:45;684:142;;:::o;832:254::-;941:4;979:2;968:9;964:18;956:26;;992:87;1076:1;1065:9;1061:17;1052:6;992:87;:::i;:::-;832:254;;;;:::o;1092:90::-;1126:7;1169:5;1162:13;1155:21;1144:32;;1092:90;;;:::o;1188:109::-;1269:21;1284:5;1269:21;:::i;:::-;1264:3;1257:34;1188:109;;:::o;1303:210::-;1390:4;1428:2;1417:9;1413:18;1405:26;;1441:65;1503:1;1492:9;1488:17;1479:6;1441:65;:::i;:::-;1303:210;;;;:::o;1600:117::-;1709:1;1706;1699:12;1846:96;1883:7;1912:24;1930:5;1912:24;:::i;:::-;1901:35;;1846:96;;;:::o;1948:122::-;2021:24;2039:5;2021:24;:::i;:::-;2014:5;2011:35;2001:63;;2060:1;2057;2050:12;2001:63;1948:122;:::o;2076:139::-;2122:5;2160:6;2147:20;2138:29;;2176:33;2203:5;2176:33;:::i;:::-;2076:139;;;;:::o;2221:329::-;2280:6;2329:2;2317:9;2308:7;2304:23;2300:32;2297:119;;;2335:79;;:::i;:::-;2297:119;2455:1;2480:53;2525:7;2516:6;2505:9;2501:22;2480:53;:::i;:::-;2470:63;;2426:117;2221:329;;;;:::o;2556:60::-;2584:3;2605:5;2598:12;;2556:60;;;:::o;2622:142::-;2672:9;2705:53;2723:34;2732:24;2750:5;2732:24;:::i;:::-;2723:34;:::i;:::-;2705:53;:::i;:::-;2692:66;;2622:142;;;:::o;2770:126::-;2820:9;2853:37;2884:5;2853:37;:::i;:::-;2840:50;;2770:126;;;:::o;2902:140::-;2966:9;2999:37;3030:5;2999:37;:::i;:::-;2986:50;;2902:140;;;:::o;3048:159::-;3149:51;3194:5;3149:51;:::i;:::-;3144:3;3137:64;3048:159;;:::o;3213:250::-;3320:4;3358:2;3347:9;3343:18;3335:26;;3371:85;3453:1;3442:9;3438:17;3429:6;3371:85;:::i;:::-;3213:250;;;;:::o;3469:332::-;3590:4;3628:2;3617:9;3613:18;3605:26;;3641:71;3709:1;3698:9;3694:17;3685:6;3641:71;:::i;:::-;3722:72;3790:2;3779:9;3775:18;3766:6;3722:72;:::i;:::-;3469:332;;;;;:::o;3807:169::-;3891:11;3925:6;3920:3;3913:19;3965:4;3960:3;3956:14;3941:29;;3807:169;;;;:::o;3982:181::-;4122:33;4118:1;4110:6;4106:14;4099:57;3982:181;:::o;4169:366::-;4311:3;4332:67;4396:2;4391:3;4332:67;:::i;:::-;4325:74;;4408:93;4497:3;4408:93;:::i;:::-;4526:2;4521:3;4517:12;4510:19;;4169:366;;;:::o;4541:419::-;4707:4;4745:2;4734:9;4730:18;4722:26;;4794:9;4788:4;4784:20;4780:1;4769:9;4765:17;4758:47;4822:131;4948:4;4822:131;:::i;:::-;4814:139;;4541:419;;;:::o;4966:180::-;5014:77;5011:1;5004:88;5111:4;5108:1;5101:15;5135:4;5132:1;5125:15;5152:191;5192:3;5211:20;5229:1;5211:20;:::i;:::-;5206:25;;5245:20;5263:1;5245:20;:::i;:::-;5240:25;;5288:1;5285;5281:9;5274:16;;5309:3;5306:1;5303:10;5300:36;;;5316:18;;:::i;:::-;5300:36;5152:191;;;;:::o;5349:166::-;5489:18;5485:1;5477:6;5473:14;5466:42;5349:166;:::o;5521:366::-;5663:3;5684:67;5748:2;5743:3;5684:67;:::i;:::-;5677:74;;5760:93;5849:3;5760:93;:::i;:::-;5878:2;5873:3;5869:12;5862:19;;5521:366;;;:::o;5893:419::-;6059:4;6097:2;6086:9;6082:18;6074:26;;6146:9;6140:4;6136:20;6132:1;6121:9;6117:17;6110:47;6174:131;6300:4;6174:131;:::i;:::-;6166:139;;5893:419;;;:::o;6318:229::-;6458:34;6454:1;6446:6;6442:14;6435:58;6527:12;6522:2;6514:6;6510:15;6503:37;6318:229;:::o;6553:366::-;6695:3;6716:67;6780:2;6775:3;6716:67;:::i;:::-;6709:74;;6792:93;6881:3;6792:93;:::i;:::-;6910:2;6905:3;6901:12;6894:19;;6553:366;;;:::o;6925:419::-;7091:4;7129:2;7118:9;7114:18;7106:26;;7178:9;7172:4;7168:20;7164:1;7153:9;7149:17;7142:47;7206:131;7332:4;7206:131;:::i;:::-;7198:139;;6925:419;;;:::o;7350:175::-;7490:27;7486:1;7478:6;7474:14;7467:51;7350:175;:::o;7531:366::-;7673:3;7694:67;7758:2;7753:3;7694:67;:::i;:::-;7687:74;;7770:93;7859:3;7770:93;:::i;:::-;7888:2;7883:3;7879:12;7872:19;;7531:366;;;:::o;7903:419::-;8069:4;8107:2;8096:9;8092:18;8084:26;;8156:9;8150:4;8146:20;8142:1;8131:9;8127:17;8120:47;8184:131;8310:4;8184:131;:::i;:::-;8176:139;;7903:419;;;:::o;8328:410::-;8368:7;8391:20;8409:1;8391:20;:::i;:::-;8386:25;;8425:20;8443:1;8425:20;:::i;:::-;8420:25;;8480:1;8477;8473:9;8502:30;8520:11;8502:30;:::i;:::-;8491:41;;8681:1;8672:7;8668:15;8665:1;8662:22;8642:1;8635:9;8615:83;8592:139;;8711:18;;:::i;:::-;8592:139;8376:362;8328:410;;;;:::o;8744:118::-;8831:24;8849:5;8831:24;:::i;:::-;8826:3;8819:37;8744:118;;:::o;8868:332::-;8989:4;9027:2;9016:9;9012:18;9004:26;;9040:71;9108:1;9097:9;9093:17;9084:6;9040:71;:::i;:::-;9121:72;9189:2;9178:9;9174:18;9165:6;9121:72;:::i;:::-;8868:332;;;;;:::o;9206:116::-;9276:21;9291:5;9276:21;:::i;:::-;9269:5;9266:32;9256:60;;9312:1;9309;9302:12;9256:60;9206:116;:::o;9328:137::-;9382:5;9413:6;9407:13;9398:22;;9429:30;9453:5;9429:30;:::i;:::-;9328:137;;;;:::o;9471:345::-;9538:6;9587:2;9575:9;9566:7;9562:23;9558:32;9555:119;;;9593:79;;:::i;:::-;9555:119;9713:1;9738:61;9791:7;9782:6;9771:9;9767:22;9738:61;:::i;:::-;9728:71;;9684:125;9471:345;;;;:::o;9822:229::-;9962:34;9958:1;9950:6;9946:14;9939:58;10031:12;10026:2;10018:6;10014:15;10007:37;9822:229;:::o;10057:366::-;10199:3;10220:67;10284:2;10279:3;10220:67;:::i;:::-;10213:74;;10296:93;10385:3;10296:93;:::i;:::-;10414:2;10409:3;10405:12;10398:19;;10057:366;;;:::o;10429:419::-;10595:4;10633:2;10622:9;10618:18;10610:26;;10682:9;10676:4;10672:20;10668:1;10657:9;10653:17;10646:47;10710:131;10836:4;10710:131;:::i;:::-;10702:139;;10429:419;;;:::o;10854:225::-;10994:34;10990:1;10982:6;10978:14;10971:58;11063:8;11058:2;11050:6;11046:15;11039:33;10854:225;:::o;11085:366::-;11227:3;11248:67;11312:2;11307:3;11248:67;:::i;:::-;11241:74;;11324:93;11413:3;11324:93;:::i;:::-;11442:2;11437:3;11433:12;11426:19;;11085:366;;;:::o;11457:419::-;11623:4;11661:2;11650:9;11646:18;11638:26;;11710:9;11704:4;11700:20;11696:1;11685:9;11681:17;11674:47;11738:131;11864:4;11738:131;:::i;:::-;11730:139;;11457:419;;;:::o;11882:98::-;11933:6;11967:5;11961:12;11951:22;;11882:98;;;:::o;11986:147::-;12087:11;12124:3;12109:18;;11986:147;;;;:::o;12139:246::-;12220:1;12230:113;12244:6;12241:1;12238:13;12230:113;;;12329:1;12324:3;12320:11;12314:18;12310:1;12305:3;12301:11;12294:39;12266:2;12263:1;12259:10;12254:15;;12230:113;;;12377:1;12368:6;12363:3;12359:16;12352:27;12201:184;12139:246;;;:::o;12391:386::-;12495:3;12523:38;12555:5;12523:38;:::i;:::-;12577:88;12658:6;12653:3;12577:88;:::i;:::-;12570:95;;12674:65;12732:6;12727:3;12720:4;12713:5;12709:16;12674:65;:::i;:::-;12764:6;12759:3;12755:16;12748:23;;12499:278;12391:386;;;;:::o;12783:271::-;12913:3;12935:93;13024:3;13015:6;12935:93;:::i;:::-;12928:100;;13045:3;13038:10;;12783:271;;;;:::o;13060:179::-;13200:31;13196:1;13188:6;13184:14;13177:55;13060:179;:::o;13245:366::-;13387:3;13408:67;13472:2;13467:3;13408:67;:::i;:::-;13401:74;;13484:93;13573:3;13484:93;:::i;:::-;13602:2;13597:3;13593:12;13586:19;;13245:366;;;:::o;13617:419::-;13783:4;13821:2;13810:9;13806:18;13798:26;;13870:9;13864:4;13860:20;13856:1;13845:9;13841:17;13834:47;13898:131;14024:4;13898:131;:::i;:::-;13890:139;;13617:419;;;:::o;14042:99::-;14094:6;14128:5;14122:12;14112:22;;14042:99;;;:::o;14147:102::-;14188:6;14239:2;14235:7;14230:2;14223:5;14219:14;14215:28;14205:38;;14147:102;;;:::o;14255:377::-;14343:3;14371:39;14404:5;14371:39;:::i;:::-;14426:71;14490:6;14485:3;14426:71;:::i;:::-;14419:78;;14506:65;14564:6;14559:3;14552:4;14545:5;14541:16;14506:65;:::i;:::-;14596:29;14618:6;14596:29;:::i;:::-;14591:3;14587:39;14580:46;;14347:285;14255:377;;;;:::o;14638:313::-;14751:4;14789:2;14778:9;14774:18;14766:26;;14838:9;14832:4;14828:20;14824:1;14813:9;14809:17;14802:47;14866:78;14939:4;14930:6;14866:78;:::i;:::-;14858:86;;14638:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "808600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"buyTokens(address)": "infinite",
								"paused()": "2517",
								"rate()": "2410",
								"token()": "infinite",
								"wallet()": "2537",
								"weiRaised()": "2432"
							},
							"internal": {
								"_preValidatePurchase(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 299,
									"end": 1051,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 299,
									"end": 1051,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 299,
									"end": 1051,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 356,
									"end": 477,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 356,
									"end": 477,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 356,
									"end": 477,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 356,
									"end": 477,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 356,
									"end": 477,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 356,
									"end": 477,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 356,
									"end": 477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 356,
									"end": 477,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 442,
									"end": 448,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 458,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 460,
									"end": 467,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2644,
									"end": 2645,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2635,
									"end": 2641,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2635,
									"end": 2645,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 2627,
									"end": 2670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2689,
									"end": 2697,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 2681,
									"end": 2753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2800,
									"end": 2801,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2780,
									"end": 2787,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 2764,
									"end": 2843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2864,
									"end": 2870,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2856,
									"end": 2861,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2888,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2881,
									"end": 2888,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2919,
									"end": 2926,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2916,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2910,
									"end": 2916,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 356,
									"end": 477,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 356,
									"end": 477,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 299,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 299,
									"end": 1051,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 826,
									"end": 930,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 826,
									"end": 930,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 871,
									"end": 878,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 918,
									"end": 923,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 900,
									"end": 924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 900,
									"end": 924,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 889,
									"end": 924,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 889,
									"end": 924,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 826,
									"end": 930,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 826,
									"end": 930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1043,
									"end": 1048,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1017,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1010,
									"end": 1015,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1007,
									"end": 1050,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1064,
									"end": 1065,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1061,
									"end": 1062,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1054,
									"end": 1066,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 936,
									"end": 1074,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1145,
									"end": 1150,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1176,
									"end": 1182,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1170,
									"end": 1183,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1227,
									"end": 1232,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1192,
									"end": 1233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1080,
									"end": 1239,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1282,
									"end": 1289,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1329,
									"end": 1334,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1311,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1341,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 1405,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1445,
									"end": 1450,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1427,
									"end": 1451,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1347,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1582,
									"end": 1587,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1550,
									"end": 1588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1543,
									"end": 1548,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1589,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1601,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1463,
									"end": 1613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1690,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1721,
									"end": 1727,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1728,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1778,
									"end": 1783,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1737,
									"end": 1784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1619,
									"end": 1790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 1912,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1914,
									"end": 1920,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1971,
									"end": 1973,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1959,
									"end": 1968,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1950,
									"end": 1957,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 1969,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1942,
									"end": 1974,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1977,
									"end": 2056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2178,
									"end": 2185,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2169,
									"end": 2175,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2158,
									"end": 2167,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2154,
									"end": 2176,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 2122,
									"end": 2186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2112,
									"end": 2186,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2112,
									"end": 2186,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2068,
									"end": 2196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2235,
									"end": 2237,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2325,
									"end": 2332,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2322,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2305,
									"end": 2314,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2301,
									"end": 2323,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2261,
									"end": 2333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2251,
									"end": 2333,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2251,
									"end": 2333,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2206,
									"end": 2343,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2382,
									"end": 2384,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 2478,
									"end": 2485,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2469,
									"end": 2475,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2467,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2454,
									"end": 2476,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 2408,
									"end": 2486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2398,
									"end": 2486,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2398,
									"end": 2486,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2353,
									"end": 2496,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2503,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2593,
									"end": 2604,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2627,
									"end": 2633,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2622,
									"end": 2625,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2615,
									"end": 2634,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2667,
									"end": 2671,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2662,
									"end": 2665,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2658,
									"end": 2672,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2643,
									"end": 2672,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2643,
									"end": 2672,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2824,
									"end": 2846,
									"name": "PUSH",
									"source": 10,
									"value": "43726F776473616C653A20726174652069732030000000000000000000000000"
								},
								{
									"begin": 2820,
									"end": 2821,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2812,
									"end": 2818,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2808,
									"end": 2822,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2801,
									"end": 2847,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2684,
									"end": 2854,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3005,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3087,
									"end": 3089,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 3082,
									"end": 3085,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 3023,
									"end": 3090,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3016,
									"end": 3090,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3016,
									"end": 3090,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3188,
									"end": 3191,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 3099,
									"end": 3192,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3217,
									"end": 3219,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3212,
									"end": 3215,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3208,
									"end": 3220,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3201,
									"end": 3220,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3201,
									"end": 3220,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2860,
									"end": 3226,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3398,
									"end": 3402,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3438,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3425,
									"end": 3434,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3421,
									"end": 3439,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3475,
									"end": 3495,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3471,
									"end": 3472,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3460,
									"end": 3469,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3456,
									"end": 3473,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3449,
									"end": 3496,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3639,
									"end": 3643,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 3513,
									"end": 3644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3505,
									"end": 3644,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3505,
									"end": 3644,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3232,
									"end": 3651,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3797,
									"end": 3831,
									"name": "PUSH",
									"source": 10,
									"value": "43726F776473616C653A2077616C6C657420697320746865207A65726F206164"
								},
								{
									"begin": 3793,
									"end": 3794,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3785,
									"end": 3791,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3781,
									"end": 3795,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3774,
									"end": 3832,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3866,
									"end": 3873,
									"name": "PUSH",
									"source": 10,
									"value": "6472657373000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3861,
									"end": 3863,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3853,
									"end": 3859,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3849,
									"end": 3864,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3842,
									"end": 3874,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3657,
									"end": 3881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4029,
									"end": 4032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 4114,
									"end": 4116,
									"name": "PUSH",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 4109,
									"end": 4112,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 4050,
									"end": 4117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4043,
									"end": 4117,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4043,
									"end": 4117,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 4215,
									"end": 4218,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 4126,
									"end": 4219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4244,
									"end": 4246,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4239,
									"end": 4242,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4235,
									"end": 4247,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4228,
									"end": 4247,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4228,
									"end": 4247,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3887,
									"end": 4253,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4425,
									"end": 4429,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4463,
									"end": 4465,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4452,
									"end": 4461,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4448,
									"end": 4466,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4440,
									"end": 4466,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4440,
									"end": 4466,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4521,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4506,
									"end": 4510,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4502,
									"end": 4522,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4498,
									"end": 4499,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4487,
									"end": 4496,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4483,
									"end": 4500,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4476,
									"end": 4523,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 4666,
									"end": 4670,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4540,
									"end": 4671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4532,
									"end": 4671,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4532,
									"end": 4671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4259,
									"end": 4678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4824,
									"end": 4858,
									"name": "PUSH",
									"source": 10,
									"value": "43726F776473616C653A20746F6B656E20697320746865207A65726F20616464"
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4812,
									"end": 4818,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4808,
									"end": 4822,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4801,
									"end": 4859,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4893,
									"end": 4899,
									"name": "PUSH",
									"source": 10,
									"value": "7265737300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4888,
									"end": 4890,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4880,
									"end": 4886,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4876,
									"end": 4891,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4869,
									"end": 4900,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4684,
									"end": 4907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5055,
									"end": 5058,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 5140,
									"end": 5142,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5135,
									"end": 5138,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 5076,
									"end": 5143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5143,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5143,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 5241,
									"end": 5244,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 5152,
									"end": 5245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5270,
									"end": 5272,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5265,
									"end": 5268,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5261,
									"end": 5273,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5254,
									"end": 5273,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5254,
									"end": 5273,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4913,
									"end": 5279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5451,
									"end": 5455,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5489,
									"end": 5491,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5478,
									"end": 5487,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5474,
									"end": 5492,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5538,
									"end": 5547,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5532,
									"end": 5536,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5528,
									"end": 5548,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5524,
									"end": 5525,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5513,
									"end": 5522,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5509,
									"end": 5526,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5549,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 5692,
									"end": 5696,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 5566,
									"end": 5697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5558,
									"end": 5697,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5558,
									"end": 5697,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5285,
									"end": 5704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 299,
									"end": 1051,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 299,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 299,
									"end": 1051,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 299,
									"end": 1051,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 299,
									"end": 1051,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 299,
									"end": 1051,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 1051,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 299,
									"end": 1051,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 1051,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220925233c303a213629dfe6087883130e2016c4688609b517f1d7df84bd344eac364736f6c63430008150033",
									".code": [
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "2C4E722E"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "4042B66F"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "521EB273"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "EC8AC4D8"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "FC0C546A"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 3361,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3361,
											"end": 3373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3351,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3280,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3280,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3270,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3270,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 299,
											"end": 1051,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4397,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4397,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4397,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 4429,
											"end": 4440,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4442,
											"end": 4451,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 4408,
											"end": 4452,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 4547,
											"end": 4556,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4531,
											"end": 4546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4531,
											"end": 4557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 4623,
											"end": 4632,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4608,
											"end": 4618,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 4608,
											"end": 4622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 4663,
											"end": 4674,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4676,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 4646,
											"end": 4683,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4729,
											"end": 4740,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 4715,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 4715,
											"end": 4727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B"
										},
										{
											"begin": 4742,
											"end": 4751,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4753,
											"end": 4759,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4699,
											"end": 4760,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4796,
											"end": 4807,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4809,
											"end": 4818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4773,
											"end": 4819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4832,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 4832,
											"end": 4847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4880,
											"end": 4891,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 4902,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4858,
											"end": 4903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4357,
											"end": 4911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4357,
											"end": 4911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3829,
											"end": 3836,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3856,
											"end": 3861,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3856,
											"end": 3861,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 3986,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4016,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4006,
											"end": 4016,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3644,
											"end": 3659,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3484,
											"end": 3490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3516,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 861,
											"end": 1048,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 861,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1015,
											"end": 1027,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1029,
											"end": 1039,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 988,
											"end": 1040,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 988,
											"end": 1040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 861,
											"end": 1048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 861,
											"end": 1048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 861,
											"end": 1048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7931,
											"end": 7938,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 7972,
											"end": 7977,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7972,
											"end": 7977,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7967,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 7958,
											"end": 7971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7978,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 7134,
											"end": 7145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7147,
											"end": 7158,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 7119,
											"end": 7159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7159,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 7119,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8078,
											"end": 8166,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 8078,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8147,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8147,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "8FC"
										},
										{
											"begin": 8148,
											"end": 8157,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8078,
											"end": 8166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5575,
											"end": 5586,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5567,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5679,
											"end": 5680,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5675,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5680,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5658,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 6716,
											"end": 6727,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6740,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1050,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1023,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5738,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5745,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5750,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5754,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5720,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5266,
											"end": 5838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4241,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4323,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4272,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5387,
											"end": 5392,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5354,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5446,
											"end": 5458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5511,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5487,
											"end": 5518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5562,
											"end": 5568,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5579,
											"end": 5589,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5535,
											"end": 5604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 8121,
											"end": 8139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 8113,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 8249,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 9324,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 574,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 574,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 619,
											"end": 626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 666,
											"end": 671,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 648,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 648,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 648,
											"end": 672,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 648,
											"end": 672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 637,
											"end": 672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 637,
											"end": 672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 574,
											"end": 678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 574,
											"end": 678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 574,
											"end": 678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 574,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 684,
											"end": 826,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 684,
											"end": 826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 787,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 787,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 787,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 787,
											"end": 819,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 787,
											"end": 819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 782,
											"end": 785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 775,
											"end": 820,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 684,
											"end": 826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 684,
											"end": 826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 684,
											"end": 826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 941,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 981,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 968,
											"end": 977,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 964,
											"end": 982,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 956,
											"end": 982,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 956,
											"end": 982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1076,
											"end": 1077,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1078,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 992,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1092,
											"end": 1182,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1092,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1174,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1175,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1155,
											"end": 1176,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1144,
											"end": 1176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1144,
											"end": 1176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1092,
											"end": 1182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1092,
											"end": 1182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1092,
											"end": 1182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1092,
											"end": 1182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1188,
											"end": 1297,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 1188,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1269,
											"end": 1290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1267,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1257,
											"end": 1291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1188,
											"end": 1297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1188,
											"end": 1297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1188,
											"end": 1297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1513,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1303,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1430,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1417,
											"end": 1426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1413,
											"end": 1431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1441,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1503,
											"end": 1504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1501,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1479,
											"end": 1485,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1441,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 1441,
											"end": 1506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1441,
											"end": 1506,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1441,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1513,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1513,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 1717,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1600,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1707,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1699,
											"end": 1711,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1942,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 1846,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1883,
											"end": 1890,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1930,
											"end": 1935,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1912,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1936,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1912,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1936,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1942,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1942,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 2070,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 1948,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2039,
											"end": 2044,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 2021,
											"end": 2045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2045,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2021,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2046,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2058,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2127,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2166,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2147,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2203,
											"end": 2208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 2176,
											"end": 2209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2331,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2326,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2308,
											"end": 2315,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2327,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2332,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2297,
											"end": 2416,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2297,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2297,
											"end": 2416,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 2335,
											"end": 2414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2297,
											"end": 2416,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2297,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2505,
											"end": 2514,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2501,
											"end": 2523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2480,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 2480,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2480,
											"end": 2533,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2480,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2533,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2426,
											"end": 2543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2616,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 2556,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2584,
											"end": 2587,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2610,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2764,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 2622,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2723,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2732,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 2732,
											"end": 2756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2756,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2732,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 2723,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2757,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2723,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 2705,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2692,
											"end": 2758,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2692,
											"end": 2758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2764,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2764,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2896,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2770,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2884,
											"end": 2889,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 2853,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2896,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2896,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3042,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 2902,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2966,
											"end": 2975,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2999,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2986,
											"end": 3036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2986,
											"end": 3036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3042,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3207,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3048,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 3194,
											"end": 3199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3149,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3200,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 3149,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3144,
											"end": 3147,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3137,
											"end": 3201,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3320,
											"end": 3324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3360,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3343,
											"end": 3361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3335,
											"end": 3361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3335,
											"end": 3361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 3453,
											"end": 3454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3438,
											"end": 3455,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3429,
											"end": 3435,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3371,
											"end": 3456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3456,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 3371,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3590,
											"end": 3594,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3613,
											"end": 3631,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3631,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3641,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 3709,
											"end": 3710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3707,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3685,
											"end": 3691,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3641,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3641,
											"end": 3712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3641,
											"end": 3712,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 3641,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3790,
											"end": 3792,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3788,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3775,
											"end": 3793,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3766,
											"end": 3772,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3722,
											"end": 3794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3794,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3722,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3891,
											"end": 3902,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3923,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3913,
											"end": 3932,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 3969,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 3970,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 3970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 3970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3982,
											"end": 4163,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3982,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4122,
											"end": 4155,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4118,
											"end": 4119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4116,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4120,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3982,
											"end": 4163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3982,
											"end": 4163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4535,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 4169,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4311,
											"end": 4314,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4332,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 4396,
											"end": 4398,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4391,
											"end": 4394,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4332,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 4332,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4332,
											"end": 4399,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 4332,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4325,
											"end": 4399,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4325,
											"end": 4399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 4497,
											"end": 4500,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 4408,
											"end": 4501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4501,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 4408,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4528,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4521,
											"end": 4524,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4535,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4535,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4960,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 4541,
											"end": 4960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4707,
											"end": 4711,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 4747,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4734,
											"end": 4743,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4748,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4748,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 4803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 4792,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4804,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4781,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4769,
											"end": 4778,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4765,
											"end": 4782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4805,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 4948,
											"end": 4952,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 4822,
											"end": 4953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4953,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 4822,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4953,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4960,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4966,
											"end": 5146,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 4966,
											"end": 5146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5091,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5092,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5108,
											"end": 5109,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5101,
											"end": 5116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5139,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5140,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5152,
											"end": 5343,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 5152,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5192,
											"end": 5195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 5229,
											"end": 5230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5211,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 5211,
											"end": 5231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5211,
											"end": 5231,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 5211,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5206,
											"end": 5231,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5206,
											"end": 5231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5245,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 5263,
											"end": 5264,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5245,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 5245,
											"end": 5265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5245,
											"end": 5265,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 5245,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5240,
											"end": 5265,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5240,
											"end": 5265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5288,
											"end": 5289,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5285,
											"end": 5286,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5274,
											"end": 5290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5274,
											"end": 5290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5312,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5313,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5300,
											"end": 5336,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5300,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 5300,
											"end": 5336,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 5316,
											"end": 5334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5300,
											"end": 5336,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 5300,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5152,
											"end": 5343,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5152,
											"end": 5343,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5152,
											"end": 5343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5152,
											"end": 5343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5152,
											"end": 5343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5349,
											"end": 5515,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 5349,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "PUSH",
											"source": 10,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 5485,
											"end": 5486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5487,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5466,
											"end": 5508,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5349,
											"end": 5515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5349,
											"end": 5515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5887,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 5521,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5663,
											"end": 5666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5684,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 5748,
											"end": 5750,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 5743,
											"end": 5746,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5684,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 5684,
											"end": 5751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5684,
											"end": 5751,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 5684,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5677,
											"end": 5751,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5677,
											"end": 5751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5760,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 5849,
											"end": 5852,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5760,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 5760,
											"end": 5853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5760,
											"end": 5853,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 5760,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5878,
											"end": 5880,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5873,
											"end": 5876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5869,
											"end": 5881,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5862,
											"end": 5881,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5862,
											"end": 5881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5887,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5893,
											"end": 6312,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 5893,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6099,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6086,
											"end": 6095,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6155,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6140,
											"end": 6144,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6136,
											"end": 6156,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6132,
											"end": 6133,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6134,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6110,
											"end": 6157,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6174,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 6300,
											"end": 6304,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6174,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 6174,
											"end": 6305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6174,
											"end": 6305,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 6174,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6166,
											"end": 6305,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6166,
											"end": 6305,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5893,
											"end": 6312,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5893,
											"end": 6312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5893,
											"end": 6312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5893,
											"end": 6312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6318,
											"end": 6547,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 6318,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6458,
											"end": 6492,
											"name": "PUSH",
											"source": 10,
											"value": "43726F776473616C653A2062656E656669636961727920697320746865207A65"
										},
										{
											"begin": 6454,
											"end": 6455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6446,
											"end": 6452,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6442,
											"end": 6456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6435,
											"end": 6493,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 10,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 6522,
											"end": 6524,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6514,
											"end": 6520,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6510,
											"end": 6525,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6540,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6318,
											"end": 6547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6318,
											"end": 6547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6919,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 6553,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6695,
											"end": 6698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6716,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 6780,
											"end": 6782,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 6775,
											"end": 6778,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6716,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 6716,
											"end": 6783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6716,
											"end": 6783,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 6716,
											"end": 6783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6709,
											"end": 6783,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6709,
											"end": 6783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6792,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 6881,
											"end": 6884,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6792,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 6792,
											"end": 6885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6792,
											"end": 6885,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 6792,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6905,
											"end": 6908,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6901,
											"end": 6913,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6894,
											"end": 6913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6894,
											"end": 6913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6919,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6919,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6925,
											"end": 7344,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 6925,
											"end": 7344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7129,
											"end": 7131,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7118,
											"end": 7127,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7114,
											"end": 7132,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7132,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7178,
											"end": 7187,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7172,
											"end": 7176,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7168,
											"end": 7188,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7153,
											"end": 7162,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7142,
											"end": 7189,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 7332,
											"end": 7336,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 7206,
											"end": 7337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7337,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 7206,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7198,
											"end": 7337,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7198,
											"end": 7337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6925,
											"end": 7344,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6925,
											"end": 7344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6925,
											"end": 7344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6925,
											"end": 7344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7350,
											"end": 7525,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 7350,
											"end": 7525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7490,
											"end": 7517,
											"name": "PUSH",
											"source": 10,
											"value": "43726F776473616C653A20776569416D6F756E74206973203000000000000000"
										},
										{
											"begin": 7486,
											"end": 7487,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7467,
											"end": 7518,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7350,
											"end": 7525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7350,
											"end": 7525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7897,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 7531,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7694,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 7758,
											"end": 7760,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 7753,
											"end": 7756,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7694,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 7694,
											"end": 7761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7694,
											"end": 7761,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 7694,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7687,
											"end": 7761,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7687,
											"end": 7761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7770,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 7859,
											"end": 7862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7770,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 7770,
											"end": 7863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7770,
											"end": 7863,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 7770,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7888,
											"end": 7890,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7883,
											"end": 7886,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7879,
											"end": 7891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7872,
											"end": 7891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7872,
											"end": 7891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7897,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7897,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7897,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 8322,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 7903,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8073,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8107,
											"end": 8109,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8096,
											"end": 8105,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8084,
											"end": 8110,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8084,
											"end": 8110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8156,
											"end": 8165,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8146,
											"end": 8166,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8142,
											"end": 8143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8140,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8127,
											"end": 8144,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8167,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 8310,
											"end": 8314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 8184,
											"end": 8315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8315,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 8184,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8176,
											"end": 8315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8176,
											"end": 8315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 8322,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 8322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 8322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 8322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8738,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 8328,
											"end": 8738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8368,
											"end": 8375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8391,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 8409,
											"end": 8410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8391,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 8391,
											"end": 8411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8391,
											"end": 8411,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 8391,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8386,
											"end": 8411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8386,
											"end": 8411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8425,
											"end": 8445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 8443,
											"end": 8444,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8425,
											"end": 8445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 8425,
											"end": 8445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8425,
											"end": 8445,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 8425,
											"end": 8445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8420,
											"end": 8445,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8420,
											"end": 8445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8480,
											"end": 8481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8477,
											"end": 8478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8482,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8502,
											"end": 8532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 8520,
											"end": 8531,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8502,
											"end": 8532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 8502,
											"end": 8532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8502,
											"end": 8532,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 8502,
											"end": 8532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8532,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8682,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8679,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8668,
											"end": 8683,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8666,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8662,
											"end": 8684,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8642,
											"end": 8643,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8635,
											"end": 8644,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8615,
											"end": 8698,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 8592,
											"end": 8731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 8711,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 8711,
											"end": 8729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8729,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 8711,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8731,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 8592,
											"end": 8731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8376,
											"end": 8738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8738,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8738,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8744,
											"end": 8862,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 8744,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 8849,
											"end": 8854,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 8831,
											"end": 8855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 8855,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 8831,
											"end": 8855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8826,
											"end": 8829,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8819,
											"end": 8856,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8744,
											"end": 8862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8744,
											"end": 8862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8744,
											"end": 8862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8868,
											"end": 9200,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 8868,
											"end": 9200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8989,
											"end": 8993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9027,
											"end": 9029,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9025,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9012,
											"end": 9030,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9004,
											"end": 9030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9004,
											"end": 9030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9040,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 9108,
											"end": 9109,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9106,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9093,
											"end": 9110,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9084,
											"end": 9090,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9040,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 9040,
											"end": 9111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9040,
											"end": 9111,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 9040,
											"end": 9111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9121,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 9189,
											"end": 9191,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9178,
											"end": 9187,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9192,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9165,
											"end": 9171,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9121,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 9121,
											"end": 9193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9121,
											"end": 9193,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 9121,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8868,
											"end": 9200,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8868,
											"end": 9200,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8868,
											"end": 9200,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8868,
											"end": 9200,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8868,
											"end": 9200,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8868,
											"end": 9200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9206,
											"end": 9322,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 9206,
											"end": 9322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9276,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 9291,
											"end": 9296,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9276,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 9276,
											"end": 9297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9276,
											"end": 9297,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 9276,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9266,
											"end": 9298,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 9256,
											"end": 9316,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9312,
											"end": 9313,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9309,
											"end": 9310,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9302,
											"end": 9314,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9316,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 9256,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9206,
											"end": 9322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9206,
											"end": 9322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9328,
											"end": 9465,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 9328,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9382,
											"end": 9387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9413,
											"end": 9419,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9407,
											"end": 9420,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9398,
											"end": 9420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9398,
											"end": 9420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 9453,
											"end": 9458,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 9429,
											"end": 9459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9459,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 9429,
											"end": 9459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9328,
											"end": 9465,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9328,
											"end": 9465,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9328,
											"end": 9465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9328,
											"end": 9465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9328,
											"end": 9465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9816,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 9471,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9538,
											"end": 9544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9587,
											"end": 9589,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9575,
											"end": 9584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9566,
											"end": 9573,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9562,
											"end": 9585,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9558,
											"end": 9590,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9555,
											"end": 9674,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9555,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 9555,
											"end": 9674,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9593,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 9593,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 9593,
											"end": 9672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9593,
											"end": 9672,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 9593,
											"end": 9672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9555,
											"end": 9674,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 9555,
											"end": 9674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9713,
											"end": 9714,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9738,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 9791,
											"end": 9798,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9782,
											"end": 9788,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9780,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9767,
											"end": 9789,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9738,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 9738,
											"end": 9799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9738,
											"end": 9799,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 9738,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9728,
											"end": 9799,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9728,
											"end": 9799,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9684,
											"end": 9809,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9816,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9816,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 10051,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 9822,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 9996,
											"name": "PUSH",
											"source": 10,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 9958,
											"end": 9959,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 9960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9939,
											"end": 9997,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10031,
											"end": 10043,
											"name": "PUSH",
											"source": 10,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 10026,
											"end": 10028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10018,
											"end": 10024,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10014,
											"end": 10029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10007,
											"end": 10044,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 10051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 10051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10057,
											"end": 10423,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 10057,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10199,
											"end": 10202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10220,
											"end": 10287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 10284,
											"end": 10286,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 10279,
											"end": 10282,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10220,
											"end": 10287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 10220,
											"end": 10287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10220,
											"end": 10287,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 10220,
											"end": 10287,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10213,
											"end": 10287,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10213,
											"end": 10287,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10296,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 10385,
											"end": 10388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10296,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 10296,
											"end": 10389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10296,
											"end": 10389,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 10296,
											"end": 10389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10414,
											"end": 10416,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10409,
											"end": 10412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10405,
											"end": 10417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10398,
											"end": 10417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10398,
											"end": 10417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10057,
											"end": 10423,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10057,
											"end": 10423,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10057,
											"end": 10423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10057,
											"end": 10423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10429,
											"end": 10848,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 10429,
											"end": 10848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10595,
											"end": 10599,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10633,
											"end": 10635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10622,
											"end": 10631,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10618,
											"end": 10636,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10610,
											"end": 10636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10610,
											"end": 10636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10682,
											"end": 10691,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10676,
											"end": 10680,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10692,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10668,
											"end": 10669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10657,
											"end": 10666,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10653,
											"end": 10670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10646,
											"end": 10693,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10710,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10710,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 10710,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10710,
											"end": 10841,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 10710,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10702,
											"end": 10841,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10702,
											"end": 10841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10429,
											"end": 10848,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10429,
											"end": 10848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10429,
											"end": 10848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10429,
											"end": 10848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10854,
											"end": 11079,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 10854,
											"end": 11079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10994,
											"end": 11028,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 10990,
											"end": 10991,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10982,
											"end": 10988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10978,
											"end": 10992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10971,
											"end": 11029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11063,
											"end": 11071,
											"name": "PUSH",
											"source": 10,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11058,
											"end": 11060,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11050,
											"end": 11056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11046,
											"end": 11061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11039,
											"end": 11072,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10854,
											"end": 11079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10854,
											"end": 11079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11085,
											"end": 11451,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 11085,
											"end": 11451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11227,
											"end": 11230,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11248,
											"end": 11315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 11312,
											"end": 11314,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 11307,
											"end": 11310,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11248,
											"end": 11315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 11248,
											"end": 11315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11248,
											"end": 11315,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 11248,
											"end": 11315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11241,
											"end": 11315,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11241,
											"end": 11315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11324,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 11413,
											"end": 11416,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11324,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 11324,
											"end": 11417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11324,
											"end": 11417,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 11324,
											"end": 11417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11442,
											"end": 11444,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11437,
											"end": 11440,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11433,
											"end": 11445,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11426,
											"end": 11445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11426,
											"end": 11445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11085,
											"end": 11451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11085,
											"end": 11451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11085,
											"end": 11451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11085,
											"end": 11451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11457,
											"end": 11876,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 11457,
											"end": 11876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11623,
											"end": 11627,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11661,
											"end": 11663,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11650,
											"end": 11659,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11646,
											"end": 11664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11638,
											"end": 11664,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11638,
											"end": 11664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11710,
											"end": 11719,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11704,
											"end": 11708,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11700,
											"end": 11720,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11696,
											"end": 11697,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11685,
											"end": 11694,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11681,
											"end": 11698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11674,
											"end": 11721,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 11864,
											"end": 11868,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 11738,
											"end": 11869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11869,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 11738,
											"end": 11869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11730,
											"end": 11869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11730,
											"end": 11869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11457,
											"end": 11876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11457,
											"end": 11876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11457,
											"end": 11876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11457,
											"end": 11876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11882,
											"end": 11980,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 11882,
											"end": 11980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11933,
											"end": 11939,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11967,
											"end": 11972,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11961,
											"end": 11973,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11951,
											"end": 11973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11951,
											"end": 11973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11882,
											"end": 11980,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11882,
											"end": 11980,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11882,
											"end": 11980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11882,
											"end": 11980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11986,
											"end": 12133,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 11986,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12087,
											"end": 12098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12124,
											"end": 12127,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12109,
											"end": 12127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12109,
											"end": 12127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11986,
											"end": 12133,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11986,
											"end": 12133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11986,
											"end": 12133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11986,
											"end": 12133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11986,
											"end": 12133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12139,
											"end": 12385,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 12139,
											"end": 12385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12220,
											"end": 12221,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12230,
											"end": 12343,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 12230,
											"end": 12343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12244,
											"end": 12250,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12241,
											"end": 12242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12238,
											"end": 12251,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12230,
											"end": 12343,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12230,
											"end": 12343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 12230,
											"end": 12343,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12329,
											"end": 12330,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12324,
											"end": 12327,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12320,
											"end": 12331,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12310,
											"end": 12311,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12305,
											"end": 12308,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12301,
											"end": 12312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12294,
											"end": 12333,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12266,
											"end": 12268,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12263,
											"end": 12264,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12259,
											"end": 12269,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12254,
											"end": 12269,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12254,
											"end": 12269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12230,
											"end": 12343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 12230,
											"end": 12343,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12230,
											"end": 12343,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 12230,
											"end": 12343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12377,
											"end": 12378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12368,
											"end": 12374,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12363,
											"end": 12366,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12359,
											"end": 12375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12352,
											"end": 12379,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12201,
											"end": 12385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12139,
											"end": 12385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12139,
											"end": 12385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12139,
											"end": 12385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12139,
											"end": 12385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12391,
											"end": 12777,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 12391,
											"end": 12777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12498,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12523,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 12555,
											"end": 12560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12523,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 12523,
											"end": 12561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12523,
											"end": 12561,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 12523,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12577,
											"end": 12665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 12658,
											"end": 12664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12653,
											"end": 12656,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12577,
											"end": 12665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 12577,
											"end": 12665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12577,
											"end": 12665,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 12577,
											"end": 12665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12665,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12665,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12674,
											"end": 12739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 12732,
											"end": 12738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12727,
											"end": 12730,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12720,
											"end": 12724,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12713,
											"end": 12718,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12709,
											"end": 12725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12674,
											"end": 12739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 12674,
											"end": 12739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12674,
											"end": 12739,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 12674,
											"end": 12739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12764,
											"end": 12770,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12759,
											"end": 12762,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12755,
											"end": 12771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12748,
											"end": 12771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12748,
											"end": 12771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12499,
											"end": 12777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12391,
											"end": 12777,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12391,
											"end": 12777,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12391,
											"end": 12777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12391,
											"end": 12777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12391,
											"end": 12777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12783,
											"end": 13054,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 12783,
											"end": 13054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12913,
											"end": 12916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12935,
											"end": 13028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 13024,
											"end": 13027,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13015,
											"end": 13021,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12935,
											"end": 13028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 12935,
											"end": 13028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12935,
											"end": 13028,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 12935,
											"end": 13028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12928,
											"end": 13028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12928,
											"end": 13028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13045,
											"end": 13048,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13038,
											"end": 13048,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13038,
											"end": 13048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12783,
											"end": 13054,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12783,
											"end": 13054,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12783,
											"end": 13054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12783,
											"end": 13054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12783,
											"end": 13054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13060,
											"end": 13239,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 13060,
											"end": 13239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13200,
											"end": 13231,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 13196,
											"end": 13197,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13188,
											"end": 13194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13184,
											"end": 13198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13177,
											"end": 13232,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13060,
											"end": 13239,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13060,
											"end": 13239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13245,
											"end": 13611,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 13245,
											"end": 13611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13387,
											"end": 13390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13408,
											"end": 13475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 13472,
											"end": 13474,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 13467,
											"end": 13470,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13408,
											"end": 13475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 13408,
											"end": 13475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13408,
											"end": 13475,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 13408,
											"end": 13475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13401,
											"end": 13475,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13401,
											"end": 13475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13484,
											"end": 13577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 13573,
											"end": 13576,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13484,
											"end": 13577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 13484,
											"end": 13577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13484,
											"end": 13577,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 13484,
											"end": 13577,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13602,
											"end": 13604,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13597,
											"end": 13600,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13593,
											"end": 13605,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13586,
											"end": 13605,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13586,
											"end": 13605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13245,
											"end": 13611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13245,
											"end": 13611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13245,
											"end": 13611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13245,
											"end": 13611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13617,
											"end": 14036,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 13617,
											"end": 14036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13783,
											"end": 13787,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13821,
											"end": 13823,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13810,
											"end": 13819,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13806,
											"end": 13824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13798,
											"end": 13824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13798,
											"end": 13824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13870,
											"end": 13879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13864,
											"end": 13868,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 13880,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13856,
											"end": 13857,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13845,
											"end": 13854,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13841,
											"end": 13858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13834,
											"end": 13881,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13898,
											"end": 14029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 14024,
											"end": 14028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13898,
											"end": 14029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 13898,
											"end": 14029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13898,
											"end": 14029,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 13898,
											"end": 14029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13890,
											"end": 14029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13890,
											"end": 14029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13617,
											"end": 14036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13617,
											"end": 14036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13617,
											"end": 14036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13617,
											"end": 14036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14042,
											"end": 14141,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 14042,
											"end": 14141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14094,
											"end": 14100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14128,
											"end": 14133,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14122,
											"end": 14134,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14112,
											"end": 14134,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14112,
											"end": 14134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14042,
											"end": 14141,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14042,
											"end": 14141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14042,
											"end": 14141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14042,
											"end": 14141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14147,
											"end": 14249,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 14147,
											"end": 14249,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14188,
											"end": 14194,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14239,
											"end": 14241,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 14235,
											"end": 14242,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 14230,
											"end": 14232,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 14223,
											"end": 14228,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14219,
											"end": 14233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14215,
											"end": 14243,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14205,
											"end": 14243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14205,
											"end": 14243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14147,
											"end": 14249,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14147,
											"end": 14249,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14147,
											"end": 14249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14147,
											"end": 14249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14632,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 14255,
											"end": 14632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14343,
											"end": 14346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14371,
											"end": 14410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 14404,
											"end": 14409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14371,
											"end": 14410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 14371,
											"end": 14410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14371,
											"end": 14410,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 14371,
											"end": 14410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14426,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 14490,
											"end": 14496,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14485,
											"end": 14488,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14426,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 14426,
											"end": 14497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14426,
											"end": 14497,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 14426,
											"end": 14497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14419,
											"end": 14497,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14419,
											"end": 14497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14506,
											"end": 14571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 14564,
											"end": 14570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14559,
											"end": 14562,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14552,
											"end": 14556,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14545,
											"end": 14550,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14541,
											"end": 14557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14506,
											"end": 14571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 14506,
											"end": 14571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14506,
											"end": 14571,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 14506,
											"end": 14571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14596,
											"end": 14625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 14618,
											"end": 14624,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14596,
											"end": 14625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 14596,
											"end": 14625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14596,
											"end": 14625,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 14596,
											"end": 14625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14591,
											"end": 14594,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14587,
											"end": 14626,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14580,
											"end": 14626,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14580,
											"end": 14626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14347,
											"end": 14632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14632,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14632,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14638,
											"end": 14951,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 14638,
											"end": 14951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14751,
											"end": 14755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14789,
											"end": 14791,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14778,
											"end": 14787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14774,
											"end": 14792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14766,
											"end": 14792,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14766,
											"end": 14792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14838,
											"end": 14847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14832,
											"end": 14836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14828,
											"end": 14848,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14824,
											"end": 14825,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14813,
											"end": 14822,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14809,
											"end": 14826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14802,
											"end": 14849,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14866,
											"end": 14944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 14939,
											"end": 14943,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14930,
											"end": 14936,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14866,
											"end": 14944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 14866,
											"end": 14944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14866,
											"end": 14944,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 14866,
											"end": 14944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14858,
											"end": 14944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14858,
											"end": 14944,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14638,
											"end": 14951,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14638,
											"end": 14951,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14638,
											"end": 14951,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14638,
											"end": 14951,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14638,
											"end": 14951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/pausableCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"paused()": "5c975abb",
							"rate()": "2c4e722e",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inRate\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"inWallet\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"inToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"PausableCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/validation/pausableCrowdsale.sol\":\"PausableCrowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0xee463c77b303be60fe3509ff7b9aa23f2674f07b68622278a611ab7908591689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cb0baa0aace90973f81b63d0d3769d000b113f68fd089e0988f0c3468f5a1d9\",\"dweb:/ipfs/QmTi1mH6UupQvzs1AW1kr1sgMWW4wtjKWxngYd6dQ6Pdgj\"]},\"crowdsale/validation/pausableCrowdsale.sol\":{\"keccak256\":\"0x9828b588b93ea52ab88c99bcf96cddc67fa24109d02467a842653ce6ef9692d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1e4d234f48ec8c43c7bf7db4064330a67af58f6a67a6f5ddccdff3f92d1b7cb\",\"dweb:/ipfs/QmYKX4FPKeQhb9sUPKmQJKwrKZXjnTHN48HcPUvf2Q61YU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 118,
								"contract": "crowdsale/validation/pausableCrowdsale.sol:PausableCrowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1348,
								"contract": "crowdsale/validation/pausableCrowdsale.sol:PausableCrowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)250"
							},
							{
								"astId": 1350,
								"contract": "crowdsale/validation/pausableCrowdsale.sol:PausableCrowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 1352,
								"contract": "crowdsale/validation/pausableCrowdsale.sol:PausableCrowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1354,
								"contract": "crowdsale/validation/pausableCrowdsale.sol:PausableCrowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 17,
								"contract": "crowdsale/validation/pausableCrowdsale.sol:PausableCrowdsale",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)250": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1014
						],
						"Pausable": [
							107
						]
					},
					"id": 108,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 108,
							"sourceUnit": 1015,
							"src": "130:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"632:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1014,
										"src": "632:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 107,
							"linearizedBaseContracts": [
								107,
								1014
							],
							"name": "Pausable",
							"nameLocation": "620:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 10,
									"name": "Paused",
									"nameLocation": "730:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "737:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:0"
									},
									"src": "724:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 15,
									"name": "Unpaused",
									"nameLocation": "841:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "850:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:0"
									},
									"src": "835:32:0"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "873:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 16,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "986:32:0",
										"statements": [
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 21,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "996:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "996:15:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:0"
									},
									"scope": 107,
									"src": "972:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "1229:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 29,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1239:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:0"
											}
										]
									},
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 34,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:0"
									},
									"src": "1204:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "1476:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 37,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1486:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:0"
											},
											{
												"id": 40,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:0"
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 42,
									"name": "whenPaused",
									"nameLocation": "1463:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:0"
									},
									"src": "1454:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1668:31:0",
										"statements": [
											{
												"expression": {
													"id": 48,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 17,
													"src": "1685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 47,
												"id": 49,
												"nodeType": "Return",
												"src": "1678:14:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1662:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:0"
									},
									"scope": 107,
									"src": "1615:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "1818:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 56,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "1837:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:0"
									},
									"scope": 107,
									"src": "1767:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1993:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 68,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "2011:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 67,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:0"
									},
									"scope": 107,
									"src": "1945:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "2235:66:0",
										"statements": [
											{
												"expression": {
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 80,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "2245:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 85,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "2281:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 84,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2274:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "EmitStatement",
												"src": "2269:25:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 78,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 77,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 34,
												"src": "2221:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:0"
									},
									"scope": 107,
									"src": "2186:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "2481:69:0",
										"statements": [
											{
												"expression": {
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 96,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "2491:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 101,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "2530:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 100,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "2521:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "EmitStatement",
												"src": "2516:27:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 94,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 93,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "2470:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:0"
									},
									"scope": 107,
									"src": "2433:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 108,
							"src": "602:1950:0",
							"usedErrors": [],
							"usedEvents": [
								10,
								15
							]
						}
					],
					"src": "105:2448:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							172
						]
					},
					"id": 173,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 109,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 110,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 172,
							"linearizedBaseContracts": [
								172
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 113,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 172,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 116,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 172,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 115,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 118,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 172,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 117,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 122,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 126,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 172,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 129,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 132,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 133,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 137,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 141,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 142,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 147,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 148,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 172,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 155,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 156,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 172,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 166,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 167,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 165,
												"id": 169,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 172,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 173,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							250
						]
					},
					"id": 251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 174,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 175,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 184,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 193,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 250,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 250,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 250,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 250,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 250,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2668:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2682:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2694:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2728:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:2"
									},
									"scope": 250,
									"src": "2646:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 251,
							"src": "202:2534:2",
							"usedErrors": [],
							"usedEvents": [
								184,
								193
							]
						}
					],
					"src": "106:2631:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							286
						]
					},
					"id": 287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3022:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3045:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3070:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3093:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3119:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 263,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3136:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 265,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3155:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 267,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:3"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:3"
									},
									"scope": 286,
									"src": "2997:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "3501:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:3"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "3539:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:3"
									},
									"scope": 286,
									"src": "3485:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:3"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3791:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 282,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:3"
									},
									"scope": 286,
									"src": "3740:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 287,
							"src": "2113:1689:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							992
						],
						"IERC20": [
							250
						],
						"IERC20Permit": [
							286
						],
						"SafeERC20": [
							662
						]
					},
					"id": 663,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 663,
							"sourceUnit": 251,
							"src": "140:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 663,
							"sourceUnit": 287,
							"src": "164:40:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 291,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 663,
							"sourceUnit": 993,
							"src": "205:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 292,
								"nodeType": "StructuredDocumentation",
								"src": "243:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 295,
									"libraryName": {
										"id": 293,
										"name": "Address",
										"nameLocations": [
											"731:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 992,
										"src": "731:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "725:26:4",
									"typeName": {
										"id": 294,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1013:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "1043:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 310,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 299,
																			"src": "1073:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$250",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1079:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "1073:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1088:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1073:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 313,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "1098:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 314,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "1102:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 308,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1050:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1054:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1050:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 306,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "1023:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "1023:86:4"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "757:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "950:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "970:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "963:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 298,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 297,
														"name": "IERC20",
														"nameLocations": [
															"963:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "963:6:4"
													},
													"referencedDeclaration": 250,
													"src": "963:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "985:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "977:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "997:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "989:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:4"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:4"
									},
									"scope": 662,
									"src": "941:175:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "1445:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 333,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "1475:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 336,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 323,
																			"src": "1505:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$250",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1511:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 249,
																		"src": "1505:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1524:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1505:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 339,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "1534:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 340,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "1540:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 341,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "1544:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1482:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1486:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1482:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1482:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 332,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "1455:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "1455:96:4"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1122:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1364:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1388:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1381:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 322,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 321,
														"name": "IERC20",
														"nameLocations": [
															"1381:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "1381:6:4"
													},
													"referencedDeclaration": 250,
													"src": "1381:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1403:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1395:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1417:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1409:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1429:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1421:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:55:4"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:4"
									},
									"scope": 662,
									"src": "1355:203:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "1894:497:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 358,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "2143:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2152:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2143:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 361,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2142:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 366,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2183:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$662",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$662",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 365,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2175:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 364,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2175:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2175:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 368,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 352,
																					"src": "2190:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 362,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 350,
																					"src": "2159:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$250",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2165:9:4",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 227,
																				"src": "2159:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2159:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2202:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2159:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 372,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2158:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2142:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "2121:163:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 378,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "2314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 381,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 350,
																			"src": "2344:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$250",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2350:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 237,
																		"src": "2344:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2358:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2344:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 384,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "2368:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 385,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "2377:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 379,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2321:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2325:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2321:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 377,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "2294:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "2294:90:4"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1564:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1827:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1846:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1839:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 348,
														"name": "IERC20",
														"nameLocations": [
															"1839:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "1839:6:4"
													},
													"referencedDeclaration": 250,
													"src": "1839:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1861:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1853:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1878:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1870:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:46:4"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:4"
									},
									"scope": 662,
									"src": "1818:573:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "2668:194:4",
										"statements": [
											{
												"assignments": [
													402
												],
												"declarations": [
													{
														"constant": false,
														"id": 402,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2686:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 426,
														"src": "2678:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 401,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2678:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 407,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2725:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$662",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$662",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2717:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 405,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2717:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "2732:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 403,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "2701:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2707:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 227,
														"src": "2701:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2678:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "2770:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 416,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "2800:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$250",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2806:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 237,
																		"src": "2800:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2814:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2800:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 419,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "2824:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 420,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "2833:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 421,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "2848:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2833:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2777:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2781:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2777:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2777:77:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "2750:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:105:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "2750:105:4"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "2397:180:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2591:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2620:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2613:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 392,
														"name": "IERC20",
														"nameLocations": [
															"2613:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "2613:6:4"
													},
													"referencedDeclaration": 250,
													"src": "2613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2635:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2627:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2644:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:46:4"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:4"
									},
									"scope": 662,
									"src": "2582:280:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "3139:321:4",
										"statements": [
											{
												"id": 470,
												"nodeType": "UncheckedBlock",
												"src": "3149:305:4",
												"statements": [
													{
														"assignments": [
															439
														],
														"declarations": [
															{
																"constant": false,
																"id": 439,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3181:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 470,
																"src": "3173:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 438,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3173:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 448,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 444,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3220:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$662",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$662",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3212:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 442,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3212:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3212:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 446,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "3227:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "3196:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3202:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 227,
																"src": "3196:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3173:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 450,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "3257:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 451,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "3273:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3280:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 449,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3249:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 455,
														"nodeType": "ExpressionStatement",
														"src": "3249:75:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 457,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "3358:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 460,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 431,
																					"src": "3388:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$250",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3394:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 237,
																				"src": "3388:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3402:8:4",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3388:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 463,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "3412:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 464,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 439,
																				"src": "3421:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 465,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 435,
																				"src": "3436:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3421:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 458,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3365:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3369:18:4",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3365:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3365:77:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 456,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "3338:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:105:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 469,
														"nodeType": "ExpressionStatement",
														"src": "3338:105:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2868:180:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3062:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3091:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3084:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 429,
														"name": "IERC20",
														"nameLocations": [
															"3084:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "3084:6:4"
													},
													"referencedDeclaration": 250,
													"src": "3084:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3106:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3098:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3123:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3115:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:46:4"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:4"
									},
									"scope": 662,
									"src": "3053:407:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "3856:333:4",
										"statements": [
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3879:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "3866:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 483,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3866:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 493,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 487,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "3917:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3923:7:4",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 237,
																"src": "3917:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3931:8:4",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3917:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 490,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "3941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 485,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3894:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3898:18:4",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3894:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3894:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3866:90:4"
											},
											{
												"condition": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3971:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 495,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "3996:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$250",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 496,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "4003:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$250",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 494,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "3972:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3972:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 517,
												"nodeType": "IfStatement",
												"src": "3967:216:4",
												"trueBody": {
													"id": 516,
													"nodeType": "Block",
													"src": "4018:165:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 500,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "4052:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 503,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 476,
																						"src": "4082:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$250",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 504,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4088:7:4",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 237,
																					"src": "4082:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4096:8:4",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4082:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 506,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 478,
																				"src": "4106:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4115:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 501,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4059:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4063:18:4",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4059:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4059:58:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 499,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "4032:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4032:86:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 510,
															"nodeType": "ExpressionStatement",
															"src": "4032:86:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 512,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "4152:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 513,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "4159:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 511,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "4132:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4132:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 515,
															"nodeType": "ExpressionStatement",
															"src": "4132:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "3466:308:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3788:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3808:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3801:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 475,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 474,
														"name": "IERC20",
														"nameLocations": [
															"3801:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "3801:6:4"
													},
													"referencedDeclaration": 250,
													"src": "3801:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3823:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3815:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3840:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3832:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:46:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3856:0:4"
									},
									"scope": 662,
									"src": "3779:410:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "4556:257:4",
										"statements": [
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4574:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "4566:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 540,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4566:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 546,
												"initialValue": {
													"arguments": [
														{
															"id": 544,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4601:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 542,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4588:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$286",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4594:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "4588:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4588:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4566:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4630:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "4637:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "4646:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 553,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "4653:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 554,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "4663:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 555,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "4666:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 556,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4669:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 547,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4617:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$286",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4623:6:4",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 271,
														"src": "4617:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "4617:54:4"
											},
											{
												"assignments": [
													560
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4689:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "4681:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 559,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4681:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 565,
												"initialValue": {
													"arguments": [
														{
															"id": 563,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4715:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 561,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4702:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$286",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4708:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "4702:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4702:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4681:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 567,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "4739:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 568,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "4753:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4767:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4753:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4739:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4770:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4731:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4731:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "4731:75:4"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "4195:141:4",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4350:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4383:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4370:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$286",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 522,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 521,
														"name": "IERC20Permit",
														"nameLocations": [
															"4370:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "4370:12:4"
													},
													"referencedDeclaration": 286,
													"src": "4370:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$286",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4406:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4398:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4429:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4421:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4421:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4477:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4469:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4501:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4495:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 532,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4520:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4512:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4539:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4531:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 536,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:186:4"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4556:0:4"
									},
									"scope": 662,
									"src": "4341:472:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "5266:572:4",
										"statements": [
											{
												"assignments": [
													586
												],
												"declarations": [
													{
														"constant": false,
														"id": 586,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5628:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 612,
														"src": "5615:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 585,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5615:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 595,
												"initialValue": {
													"arguments": [
														{
															"id": 592,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "5669:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5675:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 589,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "5649:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5641:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 587,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5641:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5641:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5656:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 752,
														"src": "5641:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5641:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5615:95:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 597,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "5728:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5739:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5728:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5749:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5728:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 603,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "5765:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5778:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 604,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5778:4:4",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 606,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5777:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 601,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5754:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5758:6:4",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5754:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5754:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5728:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5786:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 596,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5720:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5720:111:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "5720:111:4"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "4819:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5205:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5232:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5225:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 579,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 578,
														"name": "IERC20",
														"nameLocations": [
															"5225:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "5225:6:4"
													},
													"referencedDeclaration": 250,
													"src": "5225:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5252:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5239:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5239:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:33:4"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5266:0:4"
									},
									"scope": 662,
									"src": "5196:642:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "6428:505:4",
										"statements": [
											{
												"assignments": [
													625,
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6729:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "6724:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 624,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6724:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6751:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "6738:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 626,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6738:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"arguments": [
														{
															"id": 633,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "6785:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 630,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "6773:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6765:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 628,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6765:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6765:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6780:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6765:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6723:67:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 636,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "6819:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 637,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "6831:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6842:6:4",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6831:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6852:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6831:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 643,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "6868:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 645,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6881:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 644,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6881:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 646,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6880:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 641,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6857:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6861:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6857:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6857:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6831:56:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 649,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6830:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6819:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 655,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "6919:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6911:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 653,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6911:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6911:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 651,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "6892:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$992_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6900:10:4",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 680,
															"src": "6892:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6892:34:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6819:107:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 623,
												"id": 659,
												"nodeType": "Return",
												"src": "6800:126:4"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "5844:490:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6348:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6379:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6372:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 615,
														"name": "IERC20",
														"nameLocations": [
															"6372:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "6372:6:4"
													},
													"referencedDeclaration": 250,
													"src": "6372:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6399:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6386:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6371:33:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6422:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 621,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6422:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6421:6:4"
									},
									"scope": 662,
									"src": "6339:594:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 663,
							"src": "701:6234:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:6821:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							992
						]
					},
					"id": 993,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 665,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 992,
							"linearizedBaseContracts": [
								992
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "1478:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 673,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "1702:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 672,
												"id": 678,
												"nodeType": "Return",
												"src": "1695:30:5"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1432:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:5"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1472:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:5"
									},
									"scope": 992,
									"src": "1412:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "2718:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 691,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$992",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$992",
																				"typeString": "library Address"
																			}
																		],
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 689,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 694,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "2761:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:5"
											},
											{
												"assignments": [
													700,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 700,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "2813:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 699,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 707,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 701,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "2831:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 703,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "2853:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 709,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "2882:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 708,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:5"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2666:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2693:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:5"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:5"
									},
									"scope": 992,
									"src": "2647:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "3790:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 725,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "3829:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "3837:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 724,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															772,
															816
														],
														"referencedDeclaration": 816,
														"src": "3807:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 723,
												"id": 730,
												"nodeType": "Return",
												"src": "3800:79:5"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3723:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3739:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:5"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3776:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:5"
									},
									"scope": 992,
									"src": "3701:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "4255:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 745,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "4294:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 746,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "4302:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 748,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "4311:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 744,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															772,
															816
														],
														"referencedDeclaration": 816,
														"src": "4272:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 743,
												"id": 750,
												"nodeType": "Return",
												"src": "4265:59:5"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "4139:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "4163:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 736,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "4190:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 738,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:5"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "4241:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:5"
									},
									"scope": 992,
									"src": "4108:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "4806:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 765,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "4845:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "4853:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 767,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "4859:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 764,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															772,
															816
														],
														"referencedDeclaration": 816,
														"src": "4823:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 763,
												"id": 770,
												"nodeType": "Return",
												"src": "4816:94:5"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "4724:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "4740:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "4759:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:5"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "4792:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 761,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:5"
									},
									"scope": 992,
									"src": "4693:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "5344:267:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 789,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$992",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$992",
																				"typeString": "library Address"
																			}
																		],
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 787,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 792,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "5387:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:5"
											},
											{
												"assignments": [
													798,
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 815,
														"src": "5446:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 797,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 815,
														"src": "5460:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 799,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 807,
												"initialValue": {
													"arguments": [
														{
															"id": 805,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "5513:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 801,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "5487:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 803,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "5506:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 809,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "5562:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 810,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "5570:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 811,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "5579:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 812,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "5591:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 808,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "5535:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 785,
												"id": 814,
												"nodeType": "Return",
												"src": "5528:76:5"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5205:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5229:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 776,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5256:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5279:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 780,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:5"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5330:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 783,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:5"
									},
									"scope": 992,
									"src": "5165:446:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "5888:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 827,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "5924:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 828,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "5932:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 826,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															833,
															862
														],
														"referencedDeclaration": 862,
														"src": "5905:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 825,
												"id": 831,
												"nodeType": "Return",
												"src": "5898:80:5"
											}
										]
									},
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "5816:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "5832:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 820,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:5"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "5874:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 823,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:5"
									},
									"scope": 992,
									"src": "5788:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "6327:168:5",
										"statements": [
											{
												"assignments": [
													846,
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 846,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "6338:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 845,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "6352:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 847,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 853,
												"initialValue": {
													"arguments": [
														{
															"id": 851,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "6397:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 849,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "6379:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 855,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "6446:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "6454:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 857,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "6463:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 858,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "6475:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 854,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "6419:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 844,
												"id": 860,
												"nodeType": "Return",
												"src": "6412:76:5"
											}
										]
									},
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "6206:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "6230:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 837,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "6257:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 839,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:5"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "6313:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 842,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:5"
									},
									"scope": 992,
									"src": "6169:326:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "6771:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 873,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "6809:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "6817:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 872,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															879,
															908
														],
														"referencedDeclaration": 908,
														"src": "6788:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 871,
												"id": 877,
												"nodeType": "Return",
												"src": "6781:84:5"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "6704:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "6720:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 866,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:5"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "6757:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 869,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:5"
									},
									"scope": 992,
									"src": "6674:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "7213:170:5",
										"statements": [
											{
												"assignments": [
													892,
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 892,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 907,
														"src": "7224:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 891,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 907,
														"src": "7238:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 893,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 899,
												"initialValue": {
													"arguments": [
														{
															"id": 897,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "7285:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 895,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "7265:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 901,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "7334:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 902,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "7342:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 903,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "7351:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 904,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "7363:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 900,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "7307:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 890,
												"id": 906,
												"nodeType": "Return",
												"src": "7300:76:5"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "7097:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "7121:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 883,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "7148:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 885,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:5"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "7199:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 888,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:5"
									},
									"scope": 992,
									"src": "7058:325:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "7865:434:5",
										"statements": [
											{
												"condition": {
													"id": 922,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 913,
													"src": "7879:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 944,
													"nodeType": "Block",
													"src": "8235:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 940,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "8257:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 941,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "8269:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 939,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 991,
																	"src": "8249:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 943,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:5"
														}
													]
												},
												"id": 945,
												"nodeType": "IfStatement",
												"src": "7875:418:5",
												"trueBody": {
													"id": 938,
													"nodeType": "Block",
													"src": "7888:341:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 923,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "7906:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 935,
															"nodeType": "IfStatement",
															"src": "7902:286:5",
															"trueBody": {
																"id": 934,
																"nodeType": "Block",
																"src": "7930:258:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 929,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 911,
																							"src": "8132:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 928,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 680,
																						"src": "8121:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 930,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 931,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 927,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 933,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 936,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "8208:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 921,
															"id": 937,
															"nodeType": "Return",
															"src": "8201:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "7716:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "7740:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 912,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "7762:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "7795:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 916,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:5"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "7851:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:5"
									},
									"scope": 992,
									"src": "7671:628:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "8680:135:5",
										"statements": [
											{
												"condition": {
													"id": 959,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 950,
													"src": "8694:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "8751:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 964,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "8773:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 965,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "8785:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 963,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 991,
																	"src": "8765:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 967,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:5"
														}
													]
												},
												"id": 969,
												"nodeType": "IfStatement",
												"src": "8690:119:5",
												"trueBody": {
													"id": 962,
													"nodeType": "Block",
													"src": "8703:42:5",
													"statements": [
														{
															"expression": {
																"id": 960,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "8724:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 958,
															"id": 961,
															"nodeType": "Return",
															"src": "8717:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:5",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "8555:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "8577:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "8610:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 953,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:5"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "8666:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 956,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:5"
									},
									"scope": 992,
									"src": "8520:295:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "8904:457:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 978,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "8980:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 988,
													"nodeType": "Block",
													"src": "9310:45:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 985,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "9331:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 984,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 987,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:5"
														}
													]
												},
												"id": 989,
												"nodeType": "IfStatement",
												"src": "8976:379:5",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "9003:301:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9161:133:5",
																"nodeType": "YulBlock",
																"src": "9161:133:5",
																"statements": [
																	{
																		"nativeSrc": "9179:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9208:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9202:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:5"
																			},
																			"nativeSrc": "9202:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9183:15:5",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9247:2:5",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9251:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9243:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:5"
																					},
																					"nativeSrc": "9243:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9264:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9236:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:5"
																			},
																			"nativeSrc": "9236:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:5"
																		},
																		"nativeSrc": "9236:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 973,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 973,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:5",
																	"valueSize": 1
																}
															],
															"id": 982,
															"nodeType": "InlineAssembly",
															"src": "9152:142:5"
														}
													]
												}
											}
										]
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "8838:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "8863:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 974,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:5"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:5"
									},
									"scope": 992,
									"src": "8821:540:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 993,
							"src": "194:9169:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9263:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1014
						]
					},
					"id": 1015,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 994,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 995,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1014,
							"linearizedBaseContracts": [
								1014
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1000,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 999,
												"id": 1002,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1014,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1009,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1008,
												"id": 1011,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1006,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1014,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1015,
							"src": "624:235:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1326
						]
					},
					"id": 1327,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1016,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1017,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1326,
							"linearizedBaseContracts": [
								1326
							],
							"name": "SafeMath",
							"nameLocation": "490:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "717:140:7",
										"statements": [
											{
												"id": 1047,
												"nodeType": "UncheckedBlock",
												"src": "727:124:7",
												"statements": [
													{
														"assignments": [
															1030
														],
														"declarations": [
															{
																"constant": false,
																"id": 1030,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1047,
																"src": "751:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1029,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1034,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1031,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "763:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1032,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "767:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1035,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "786:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1036,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "790:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1042,
														"nodeType": "IfStatement",
														"src": "782:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1040,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1028,
															"id": 1041,
															"nodeType": "Return",
															"src": "793:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1044,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "838:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1045,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1028,
														"id": 1046,
														"nodeType": "Return",
														"src": "824:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:7"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "702:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "708:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:7"
									},
									"scope": 1326,
									"src": "641:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "1078:113:7",
										"statements": [
											{
												"id": 1075,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1061,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "1116:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1062,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "1120:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1068,
														"nodeType": "IfStatement",
														"src": "1112:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1066,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1060,
															"id": 1067,
															"nodeType": "Return",
															"src": "1123:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1070,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "1168:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1071,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "1172:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1073,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1060,
														"id": 1074,
														"nodeType": "Return",
														"src": "1154:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1018:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1029:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:7"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1063:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1056,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:7"
									},
									"scope": 1326,
									"src": "1002:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "1415:417:7",
										"statements": [
											{
												"id": 1117,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1089,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "1683:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1096,
														"nodeType": "IfStatement",
														"src": "1679:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1094,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1088,
															"id": 1095,
															"nodeType": "Return",
															"src": "1691:16:7"
														}
													},
													{
														"assignments": [
															1098
														],
														"declarations": [
															{
																"constant": false,
																"id": 1098,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1117,
																"src": "1721:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1097,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1102,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1099,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1100,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "1737:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1103,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "1756:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1104,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "1760:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1106,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "1765:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1112,
														"nodeType": "IfStatement",
														"src": "1752:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1110,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1088,
															"id": 1111,
															"nodeType": "Return",
															"src": "1768:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1114,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "1813:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1115,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1088,
														"id": 1116,
														"nodeType": "Return",
														"src": "1799:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1355:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:7"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1400:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1084,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1406:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:7"
									},
									"scope": 1326,
									"src": "1339:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "2057:114:7",
										"statements": [
											{
												"id": 1145,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1131,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "2095:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1138,
														"nodeType": "IfStatement",
														"src": "2091:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1136,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1130,
															"id": 1137,
															"nodeType": "Return",
															"src": "2103:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1140,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1122,
																		"src": "2148:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1141,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "2152:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1143,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1130,
														"id": 1144,
														"nodeType": "Return",
														"src": "2134:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:7"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2042:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2048:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:7"
									},
									"scope": 1326,
									"src": "1981:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "2406:114:7",
										"statements": [
											{
												"id": 1173,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1159,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "2444:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1166,
														"nodeType": "IfStatement",
														"src": "2440:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1164,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1158,
															"id": 1165,
															"nodeType": "Return",
															"src": "2452:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1168,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1150,
																		"src": "2497:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1169,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "2501:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1171,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1158,
														"id": 1172,
														"nodeType": "Return",
														"src": "2483:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2346:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2357:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:7"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2391:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:7"
									},
									"scope": 1326,
									"src": "2330:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "2822:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "2839:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "2843:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1184,
												"id": 1188,
												"nodeType": "Return",
												"src": "2832:12:7"
											}
										]
									},
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2779:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:7"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2813:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:7"
									},
									"scope": 1326,
									"src": "2755:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "3189:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "3206:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "3210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1199,
												"id": 1203,
												"nodeType": "Return",
												"src": "3199:12:7"
											}
										]
									},
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "3135:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "3146:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:7"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "3180:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:7"
									},
									"scope": 1326,
									"src": "3122:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "3532:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "3549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "3553:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1214,
												"id": 1218,
												"nodeType": "Return",
												"src": "3542:12:7"
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3478:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3489:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:7"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3523:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:7"
									},
									"scope": 1326,
									"src": "3465:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "3917:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "3934:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "3938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1229,
												"id": 1233,
												"nodeType": "Return",
												"src": "3927:12:7"
											}
										]
									},
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3863:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3874:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:7"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3908:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:7"
									},
									"scope": 1326,
									"src": "3850:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "4466:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "4483:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1246,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "4487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1244,
												"id": 1248,
												"nodeType": "Return",
												"src": "4476:12:7"
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "4412:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "4423:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:7"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "4457:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:7"
									},
									"scope": 1326,
									"src": "4399:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "5054:106:7",
										"statements": [
											{
												"id": 1273,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1263,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1255,
																		"src": "5096:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1264,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "5101:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1266,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "5104:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1262,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1268,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1269,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "5138:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1270,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "5142:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1261,
														"id": 1272,
														"nodeType": "Return",
														"src": "5131:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4972:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4983:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4994:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:7"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "5045:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:7"
									},
									"scope": 1326,
									"src": "4959:201:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "5739:105:7",
										"statements": [
											{
												"id": 1298,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1288,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "5781:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1291,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "5788:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1287,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1293,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1294,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "5822:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1295,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "5826:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1286,
														"id": 1297,
														"nodeType": "Return",
														"src": "5815:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "5657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "5668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "5679:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:7"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "5730:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:7"
									},
									"scope": 1326,
									"src": "5644:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "6585:105:7",
										"statements": [
											{
												"id": 1323,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1313,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1305,
																		"src": "6627:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1316,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1307,
																	"src": "6634:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1312,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1318,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1319,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "6668:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1320,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1305,
																"src": "6672:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1311,
														"id": 1322,
														"nodeType": "Return",
														"src": "6661:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6503:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6514:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6525:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1306,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:7"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6576:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:7"
									},
									"scope": 1326,
									"src": "6490:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1327,
							"src": "482:6210:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:7"
				},
				"id": 7
			},
			"crowdsale/crowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/crowdsale.sol",
					"exportedSymbols": {
						"Address": [
							992
						],
						"Context": [
							1014
						],
						"Crowdsale": [
							1636
						],
						"IERC20": [
							250
						],
						"IERC20Permit": [
							286
						],
						"ReentrancyGuard": [
							172
						],
						"SafeERC20": [
							662
						],
						"SafeMath": [
							1326
						]
					},
					"id": 1637,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1328,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 1015,
							"src": "60:51:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1330,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 251,
							"src": "113:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 173,
							"src": "171:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 663,
							"src": "235:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 1327,
							"src": "302:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1335,
										"name": "Context",
										"nameLocations": [
											"1102:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1014,
										"src": "1102:7:8"
									},
									"id": 1336,
									"nodeType": "InheritanceSpecifier",
									"src": "1102:7:8"
								},
								{
									"baseName": {
										"id": 1337,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1111:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 172,
										"src": "1111:15:8"
									},
									"id": 1338,
									"nodeType": "InheritanceSpecifier",
									"src": "1111:15:8"
								}
							],
							"canonicalName": "Crowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1334,
								"nodeType": "StructuredDocumentation",
								"src": "363:706:8",
								"text": " @title Crowdsale\n @dev Crowdsale is a base contract for managing a token crowdsale,\n allowing investors to purchase tokens with ether. This contract implements\n such functionality in its most fundamental form and can be extended to provide additional\n functionality and/or custom behavior.\n The external interface represents the basic interface for purchasing tokens, and conforms\n the base architecture for crowdsales. It is *not* intended to be modified / overridden.\n The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n the methods to add functionality. Consider using 'super' where appropriate to concatenate\n behavior."
							},
							"fullyImplemented": true,
							"id": 1636,
							"linearizedBaseContracts": [
								1636,
								172,
								1014
							],
							"name": "Crowdsale",
							"nameLocation": "1089:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1341,
									"libraryName": {
										"id": 1339,
										"name": "SafeMath",
										"nameLocations": [
											"1140:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1326,
										"src": "1140:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1134:27:8",
									"typeName": {
										"id": 1340,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1153:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1345,
									"libraryName": {
										"id": 1342,
										"name": "SafeERC20",
										"nameLocations": [
											"1173:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 662,
										"src": "1173:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1167:27:8",
									"typeName": {
										"id": 1344,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1343,
											"name": "IERC20",
											"nameLocations": [
												"1187:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 250,
											"src": "1187:6:8"
										},
										"referencedDeclaration": 250,
										"src": "1187:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$250",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 1348,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "1246:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "1231:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$250",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1347,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1346,
											"name": "IERC20",
											"nameLocations": [
												"1231:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 250,
											"src": "1231:6:8"
										},
										"referencedDeclaration": 250,
										"src": "1231:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$250",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1350,
									"mutability": "mutable",
									"name": "_wallet",
									"nameLocation": "1327:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "1303:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1349,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1303:15:8",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1352,
									"mutability": "mutable",
									"name": "_rate",
									"nameLocation": "1647:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "1631:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1351,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1631:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1354,
									"mutability": "mutable",
									"name": "_weiRaised",
									"nameLocation": "1706:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "1690:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1353,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1690:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "1725:241:8",
										"text": " Event for token purchase logging\n @param purchaser who paid for the tokens\n @param beneficiary who got the tokens\n @param value weis paid for purchase\n @param amount amount of tokens purchased"
									},
									"eventSelector": "6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b",
									"id": 1365,
									"name": "TokensPurchased",
									"nameLocation": "1978:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"indexed": true,
												"mutability": "mutable",
												"name": "purchaser",
												"nameLocation": "2010:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "1994:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2037:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2021:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2058:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2050:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2073:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2065:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:87:8"
									},
									"src": "1972:109:8"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "2616:318:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1377,
																"name": "inRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "2635:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2644:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2635:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20726174652069732030",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2647:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															},
															"value": "Crowdsale: rate is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															}
														],
														"id": 1376,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2627:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2627:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "2627:43:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1384,
																"name": "inWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1370,
																"src": "2689:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2709:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2701:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1385,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2701:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2701:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2689:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373",
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2713:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															},
															"value": "Crowdsale: wallet is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															}
														],
														"id": 1383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2681:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2681:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "2681:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1396,
																		"name": "inToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1373,
																		"src": "2780:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2772:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1394,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2772:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2772:16:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2800:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2792:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1398,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2792:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2792:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2772:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373",
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2804:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															},
															"value": "Crowdsale: token is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															}
														],
														"id": 1393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2764:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:79:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "2764:79:8"
											},
											{
												"expression": {
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1406,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "2856:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1407,
														"name": "inRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "2864:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2856:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "2856:14:8"
											},
											{
												"expression": {
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1410,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "2881:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1411,
														"name": "inWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "2891:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2881:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "2881:18:8"
											},
											{
												"expression": {
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1414,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1348,
														"src": "2910:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$250",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1415,
														"name": "inToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "2919:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$250",
															"typeString": "contract IERC20"
														}
													},
													"src": "2910:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "2910:16:8"
											}
										]
									},
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "2089:450:8",
										"text": " @param inRate Number of token units a buyer gets per wei\n @dev The rate is the conversion between wei and the smallest and indivisible\n token unit. So, if you are using a rate of 1 with a ERC20Detailed token\n with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n @param inWallet Address where collected funds will be forwarded to\n @param inToken Address of the token being sold"
									},
									"id": 1419,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "2566:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2558:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "2590:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2574:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2574:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "2607:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2600:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1372,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1371,
														"name": "IERC20",
														"nameLocations": [
															"2600:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "2600:6:8"
													},
													"referencedDeclaration": 250,
													"src": "2600:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2557:58:8"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2616:0:8"
									},
									"scope": 1636,
									"src": "2545:389:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "3259:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1424,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "3280:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3280:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1423,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "3270:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3270:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "3270:23:8"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "2942:283:8",
										"text": " @dev fallback function ***DO NOT OVERRIDE***\n Note that other contracts will transfer funds with a base gas stipend\n of 2300, which is not enough to call buyTokens. Consider calling\n buyTokens directly when purchasing tokens from a contract."
									},
									"id": 1429,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3239:2:8"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3259:0:8"
									},
									"scope": 1636,
									"src": "3231:70:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "3340:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1433,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "3361:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3361:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1432,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "3351:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "3351:23:8"
											}
										]
									},
									"id": 1438,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3320:2:8"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3340:0:8"
									},
									"scope": 1636,
									"src": "3313:69:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "3492:32:8",
										"statements": [
											{
												"expression": {
													"id": 1445,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1348,
													"src": "3510:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"functionReturnParameters": 1444,
												"id": 1446,
												"nodeType": "Return",
												"src": "3503:13:8"
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "3390:50:8",
										"text": " @return the token being sold."
									},
									"functionSelector": "fc0c546a",
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "3455:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3460:2:8"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "3484:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1441,
														"name": "IERC20",
														"nameLocations": [
															"3484:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "3484:6:8"
													},
													"referencedDeclaration": 250,
													"src": "3484:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3483:8:8"
									},
									"scope": 1636,
									"src": "3446:78:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "3661:33:8",
										"statements": [
											{
												"expression": {
													"id": 1454,
													"name": "_wallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1350,
													"src": "3679:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1453,
												"id": 1455,
												"nodeType": "Return",
												"src": "3672:14:8"
											}
										]
									},
									"documentation": {
										"id": 1449,
										"nodeType": "StructuredDocumentation",
										"src": "3532:67:8",
										"text": " @return the address where funds are collected."
									},
									"functionSelector": "521eb273",
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wallet",
									"nameLocation": "3614:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3620:2:8"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "3644:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3644:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3643:17:8"
									},
									"scope": 1636,
									"src": "3605:89:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "3838:31:8",
										"statements": [
											{
												"expression": {
													"id": 1463,
													"name": "_rate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1352,
													"src": "3856:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1462,
												"id": 1464,
												"nodeType": "Return",
												"src": "3849:12:8"
											}
										]
									},
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "3702:76:8",
										"text": " @return the number of token units a buyer gets per wei."
									},
									"functionSelector": "2c4e722e",
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rate",
									"nameLocation": "3793:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3797:2:8"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "3829:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3828:9:8"
									},
									"scope": 1636,
									"src": "3784:85:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "3988:36:8",
										"statements": [
											{
												"expression": {
													"id": 1472,
													"name": "_weiRaised",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1354,
													"src": "4006:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1471,
												"id": 1473,
												"nodeType": "Return",
												"src": "3999:17:8"
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "3877:54:8",
										"text": " @return the amount of wei raised."
									},
									"functionSelector": "4042b66f",
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "weiRaised",
									"nameLocation": "3946:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3955:2:8"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "3979:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:9:8"
									},
									"scope": 1636,
									"src": "3937:87:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "4357:554:8",
										"statements": [
											{
												"assignments": [
													1484
												],
												"declarations": [
													{
														"constant": false,
														"id": 1484,
														"mutability": "mutable",
														"name": "weiAmount",
														"nameLocation": "4376:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1532,
														"src": "4368:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4368:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1487,
												"initialValue": {
													"expression": {
														"id": 1485,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4388:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4392:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "4388:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4368:29:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1489,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "4429:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1490,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "4442:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1488,
														"name": "_preValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "4408:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4408:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "4408:44:8"
											},
											{
												"assignments": [
													1494
												],
												"declarations": [
													{
														"constant": false,
														"id": 1494,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "4522:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1532,
														"src": "4514:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1493,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4514:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1498,
												"initialValue": {
													"arguments": [
														{
															"id": 1496,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "4547:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1495,
														"name": "_getTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "4531:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4531:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4514:43:8"
											},
											{
												"expression": {
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1499,
														"name": "_weiRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "4595:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1502,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1484,
																"src": "4623:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1500,
																"name": "_weiRaised",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "4608:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4619:3:8",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1190,
															"src": "4608:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4608:25:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4595:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "4595:38:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1507,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "4663:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1508,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "4676:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1506,
														"name": "_processPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "4646:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4646:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "4646:37:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1512,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "4715:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4715:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1514,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "4729:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1515,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "4742:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1516,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "4753:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1511,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "4699:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4699:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1518,
												"nodeType": "EmitStatement",
												"src": "4694:66:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1520,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "4796:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1521,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "4809:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1519,
														"name": "_updatePurchasingState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "4773:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4773:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1523,
												"nodeType": "ExpressionStatement",
												"src": "4773:46:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1524,
														"name": "_forwardFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "4832:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "4832:15:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1528,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "4880:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1529,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "4893:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1527,
														"name": "_postValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "4858:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4858:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "4858:45:8"
											}
										]
									},
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "4032:251:8",
										"text": " @dev low level token purchase ***DO NOT OVERRIDE***\n This function has a non-reentrancy guard, so it shouldn't be called by\n another `nonReentrant` function.\n @param beneficiary Recipient of the token purchase"
									},
									"functionSelector": "ec8ac4d8",
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1481,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1480,
												"name": "nonReentrant",
												"nameLocations": [
													"4336:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 137,
												"src": "4336:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4336:12:8"
										}
									],
									"name": "buyTokens",
									"nameLocation": "4298:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4316:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "4308:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4308:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4307:21:8"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4357:0:8"
									},
									"scope": 1636,
									"src": "4289:622:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "5556:296:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1542,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "5575:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5598:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5590:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1543,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5590:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5590:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5575:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5602:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															},
															"value": "Crowdsale: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															}
														],
														"id": 1541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5567:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5567:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "5567:80:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1552,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "5666:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5679:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5666:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5682:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															},
															"value": "Crowdsale: weiAmount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															}
														],
														"id": 1551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5658:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5658:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "5658:52:8"
											},
											{
												"expression": {
													"id": 1558,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "5721:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Crowdsale_$1636",
														"typeString": "contract Crowdsale"
													}
												},
												"id": 1559,
												"nodeType": "ExpressionStatement",
												"src": "5721:4:8"
											}
										]
									},
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "4919:539:8",
										"text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n Use `super` in contracts that inherit from Crowdsale to extend their validations.\n Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     super._preValidatePurchase(beneficiary, weiAmount);\n     require(weiRaised().add(weiAmount) <= cap);\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preValidatePurchase",
									"nameLocation": "5473:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "5502:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "5494:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5494:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "5523:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "5515:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5515:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5493:40:8"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5556:0:8"
									},
									"scope": 1636,
									"src": "5464:388:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "6248:66:8",
										"statements": []
									},
									"documentation": {
										"id": 1562,
										"nodeType": "StructuredDocumentation",
										"src": "5860:289:8",
										"text": " @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n conditions are not met.\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_postValidatePurchase",
									"nameLocation": "6164:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6194:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "6186:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "6215:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "6207:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6207:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:40:8"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6248:0:8"
									},
									"scope": 1636,
									"src": "6155:159:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "6685:64:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1581,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "6716:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1582,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "6729:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1578,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "6696:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6703:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 319,
														"src": "6696:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$250_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6696:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "6696:45:8"
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "6322:274:8",
										"text": " @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\n its tokens.\n @param beneficiary Address performing the token purchase\n @param tokenAmount Number of tokens to be emitted"
									},
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deliverTokens",
									"nameLocation": "6611:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6634:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "6626:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6626:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6655:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "6647:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6625:42:8"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6685:0:8"
									},
									"scope": 1636,
									"src": "6602:147:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "7108:59:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1595,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "7134:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1596,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "7147:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1594,
														"name": "_deliverTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "7119:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1598,
												"nodeType": "ExpressionStatement",
												"src": "7119:40:8"
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "6757:260:8",
										"text": " @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\n tokens.\n @param beneficiary Address receiving the tokens\n @param tokenAmount Number of tokens to be purchased"
									},
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_processPurchase",
									"nameLocation": "7032:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7057:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "7049:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "7078:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "7070:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7070:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7048:42:8"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7108:0:8"
									},
									"scope": 1636,
									"src": "7023:144:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "7534:66:8",
										"statements": []
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "7175:264:8",
										"text": " @dev Override for extensions that require an internal state to check for validity (current user contributions,\n etc.)\n @param beneficiary Address receiving the tokens\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePurchasingState",
									"nameLocation": "7454:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7485:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "7477:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7477:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7506:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "7498:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7498:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7476:40:8"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:8"
									},
									"scope": 1636,
									"src": "7445:155:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "7940:46:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1619,
															"name": "_rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "7972:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1617,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "7958:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7968:3:8",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1220,
														"src": "7958:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7958:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1616,
												"id": 1621,
												"nodeType": "Return",
												"src": "7951:27:8"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "7608:242:8",
										"text": " @dev Override to extend the way in which ether is converted to tokens.\n @param weiAmount Value in wei to be converted into tokens\n @return Number of tokens that can be purchased with the specified _weiAmount"
									},
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAmount",
									"nameLocation": "7865:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7889:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "7881:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7881:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7880:19:8"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "7931:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7931:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7930:9:8"
									},
									"scope": 1636,
									"src": "7856:130:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "8120:46:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1630,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8148:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8152:5:8",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8148:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1627,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "8131:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8139:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8131:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8131:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1633,
												"nodeType": "ExpressionStatement",
												"src": "8131:27:8"
											}
										]
									},
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "7994:78:8",
										"text": " @dev Determines how ETH is stored/forwarded on purchases."
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_forwardFunds",
									"nameLocation": "8087:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8100:2:8"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8120:0:8"
									},
									"scope": 1636,
									"src": "8078:88:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1637,
							"src": "1071:7098:8",
							"usedErrors": [],
							"usedEvents": [
								1365
							]
						}
					],
					"src": "33:8136:8"
				},
				"id": 8
			},
			"crowdsale/validation/pausableCrowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/validation/pausableCrowdsale.sol",
					"exportedSymbols": {
						"Address": [
							992
						],
						"Context": [
							1014
						],
						"Crowdsale": [
							1636
						],
						"IERC20": [
							250
						],
						"IERC20Permit": [
							286
						],
						"Pausable": [
							107
						],
						"PausableCrowdsale": [
							1680
						],
						"ReentrancyGuard": [
							172
						],
						"SafeERC20": [
							662
						],
						"SafeMath": [
							1326
						]
					},
					"id": 1681,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1638,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1639,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1681,
							"sourceUnit": 108,
							"src": "62:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "crowdsale/crowdsale.sol",
							"file": "crowdsale/crowdsale.sol",
							"id": 1640,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1681,
							"sourceUnit": 1637,
							"src": "119:33:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1642,
										"name": "Crowdsale",
										"nameLocations": [
											"329:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1636,
										"src": "329:9:9"
									},
									"id": 1643,
									"nodeType": "InheritanceSpecifier",
									"src": "329:9:9"
								},
								{
									"baseName": {
										"id": 1644,
										"name": "Pausable",
										"nameLocations": [
											"340:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 107,
										"src": "340:8:9"
									},
									"id": 1645,
									"nodeType": "InheritanceSpecifier",
									"src": "340:8:9"
								}
							],
							"canonicalName": "PausableCrowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1641,
								"nodeType": "StructuredDocumentation",
								"src": "156:141:9",
								"text": " @title PausableCrowdsale\n @dev Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role."
							},
							"fullyImplemented": true,
							"id": 1680,
							"linearizedBaseContracts": [
								1680,
								107,
								1636,
								172,
								1014
							],
							"name": "PausableCrowdsale",
							"nameLocation": "308:17:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "469:8:9",
										"statements": []
									},
									"id": 1661,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1655,
													"name": "inRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1647,
													"src": "442:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 1656,
													"name": "inWallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1649,
													"src": "450:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												{
													"id": 1657,
													"name": "inToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1652,
													"src": "460:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												}
											],
											"id": 1658,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1654,
												"name": "Crowdsale",
												"nameLocations": [
													"432:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1636,
												"src": "432:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "432:36:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "376:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "368:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "400:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "384:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "384:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "417:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "410:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1650,
														"name": "IERC20",
														"nameLocations": [
															"410:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "410:6:9"
													},
													"referencedDeclaration": 250,
													"src": "410:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:58:9"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:0:9"
									},
									"scope": 1680,
									"src": "356:121:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1561
									],
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "970:78:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1674,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "1015:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1675,
															"name": "_weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "1029:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1672,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "988:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_PausableCrowdsale_$1680_$",
																"typeString": "type(contract super PausableCrowdsale)"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "994:20:9",
														"memberName": "_preValidatePurchase",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1561,
														"src": "988:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "988:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 1671,
												"id": 1677,
												"nodeType": "Return",
												"src": "981:59:9"
											}
										]
									},
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "483:372:9",
										"text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n Use super to concatenate validations.\n Adds the validation that the crowdsale must not be paused.\n @param _beneficiary Address performing the token purchase\n @param _weiAmount Value in wei involved in the purchase"
									},
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1670,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1669,
												"name": "whenNotPaused",
												"nameLocations": [
													"956:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 34,
												"src": "956:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "956:13:9"
										}
									],
									"name": "_preValidatePurchase",
									"nameLocation": "870:20:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1668,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "942:8:9"
									},
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nameLocation": "899:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "891:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "_weiAmount",
												"nameLocation": "921:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "913:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:42:9"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "970:0:9"
									},
									"scope": 1680,
									"src": "861:187:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1681,
							"src": "299:752:9",
							"usedErrors": [],
							"usedEvents": [
								10,
								15,
								1365
							]
						}
					],
					"src": "33:1018:9"
				},
				"id": 9
			}
		}
	}
}