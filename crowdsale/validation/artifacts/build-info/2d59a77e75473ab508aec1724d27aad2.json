{
	"id": "2d59a77e75473ab508aec1724d27aad2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"crowdsale/validation/cappedCrowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"crowdsale/crowdsale.sol\";\r\n\r\n/**\r\n * @title CappedCrowdsale\r\n * @dev Crowdsale with a limit for total contributions.\r\n */\r\ncontract CappedCrowdsale is Crowdsale {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 private _cap;\r\n\r\n    /**\r\n     * @dev Constructor, takes maximum amount of wei accepted in the crowdsale.\r\n     * @param inCap Max amount of wei to be contributed\r\n     * @param inRate The rate of the crowdsale\r\n     * @param inWallet The wallet address to receive the funds\r\n     * @param inToken The token contract address\r\n     */\r\n    constructor (uint256 inCap, uint256 inRate, address payable inWallet, IERC20 inToken) \r\n        Crowdsale(inRate, inWallet, inToken) \r\n    {\r\n        require(inCap > 0, \"CappedCrowdsale: cap is 0\");\r\n        _cap = inCap;\r\n    }\r\n\r\n\r\n    /**\r\n     * @return the cap of the crowdsale.\r\n     */\r\n    function cap() public view returns (uint256) {\r\n        return _cap;\r\n    }\r\n\r\n    /**\r\n     * @dev Checks whether the cap has been reached.\r\n     * @return Whether the cap was reached\r\n     */\r\n    function capReached() public view returns (bool) {\r\n        return weiRaised() >= _cap;\r\n    }\r\n\r\n    /**\r\n     * @dev Extend parent behavior requiring purchase to respect the funding cap.\r\n     * @param beneficiary Token purchaser\r\n     * @param weiAmount Amount of wei contributed\r\n     */\r\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal override view {\r\n        super._preValidatePurchase(beneficiary, weiAmount);\r\n        require(weiRaised().add(weiAmount) <= _cap, \"CappedCrowdsale: cap exceeded\");\r\n    }\r\n}"
			},
			"crowdsale/crowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n/**\r\n * @title Crowdsale\r\n * @dev Crowdsale is a base contract for managing a token crowdsale,\r\n * allowing investors to purchase tokens with ether. This contract implements\r\n * such functionality in its most fundamental form and can be extended to provide additional\r\n * functionality and/or custom behavior.\r\n * The external interface represents the basic interface for purchasing tokens, and conforms\r\n * the base architecture for crowdsales. It is *not* intended to be modified / overridden.\r\n * The internal interface conforms the extensible and modifiable surface of crowdsales. Override\r\n * the methods to add functionality. Consider using 'super' where appropriate to concatenate\r\n * behavior.\r\n */\r\nabstract contract Crowdsale is Context, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // The token being sold\r\n    IERC20 private _token;\r\n\r\n    // Address where funds are collected\r\n    address payable private _wallet;\r\n\r\n    // How many token units a buyer gets per wei.\r\n    // The rate is the conversion between wei and the smallest and indivisible token unit.\r\n    // So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK\r\n    // 1 wei will give you 1 unit, or 0.001 TOK.\r\n    uint256 private _rate;\r\n\r\n    // Amount of wei raised\r\n    uint256 private _weiRaised;\r\n\r\n    /**\r\n     * Event for token purchase logging\r\n     * @param purchaser who paid for the tokens\r\n     * @param beneficiary who got the tokens\r\n     * @param value weis paid for purchase\r\n     * @param amount amount of tokens purchased\r\n     */\r\n    event TokensPurchased(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\r\n    /**\r\n     * @param inRate Number of token units a buyer gets per wei\r\n     * @dev The rate is the conversion between wei and the smallest and indivisible\r\n     * token unit. So, if you are using a rate of 1 with a ERC20Detailed token\r\n     * with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\r\n     * @param inWallet Address where collected funds will be forwarded to\r\n     * @param inToken Address of the token being sold\r\n     */\r\n    constructor (uint256 inRate, address payable inWallet, IERC20 inToken) {\r\n        require(inRate > 0, \"Crowdsale: rate is 0\");\r\n        require(inWallet != address(0), \"Crowdsale: wallet is the zero address\");\r\n        require(address(inToken) != address(0), \"Crowdsale: token is the zero address\");\r\n\r\n        _rate = inRate;\r\n        _wallet = inWallet;\r\n        _token = inToken;\r\n    }\r\n\r\n    /**\r\n     * @dev fallback function ***DO NOT OVERRIDE***\r\n     * Note that other contracts will transfer funds with a base gas stipend\r\n     * of 2300, which is not enough to call buyTokens. Consider calling\r\n     * buyTokens directly when purchasing tokens from a contract.\r\n     */\r\n    fallback() external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n    \r\n    receive() external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @return the token being sold.\r\n     */\r\n    function token() public view returns (IERC20) {\r\n        return _token;\r\n    }\r\n\r\n    /**\r\n     * @return the address where funds are collected.\r\n     */\r\n    function wallet() public view returns (address payable) {\r\n        return _wallet;\r\n    }\r\n\r\n    /**\r\n     * @return the number of token units a buyer gets per wei.\r\n     */\r\n    function rate() public virtual view returns (uint256) {\r\n        return _rate;\r\n    }\r\n\r\n    /**\r\n     * @return the amount of wei raised.\r\n     */\r\n    function weiRaised() public view returns (uint256) {\r\n        return _weiRaised;\r\n    }\r\n\r\n    /**\r\n     * @dev low level token purchase ***DO NOT OVERRIDE***\r\n     * This function has a non-reentrancy guard, so it shouldn't be called by\r\n     * another `nonReentrant` function.\r\n     * @param beneficiary Recipient of the token purchase\r\n     */\r\n    function buyTokens(address beneficiary) public nonReentrant payable {\r\n        uint256 weiAmount = msg.value;\r\n        _preValidatePurchase(beneficiary, weiAmount);\r\n\r\n        // calculate token amount to be created\r\n        uint256 tokens = _getTokenAmount(weiAmount);\r\n\r\n        // update state\r\n        _weiRaised = _weiRaised.add(weiAmount);\r\n\r\n        _processPurchase(beneficiary, tokens);\r\n        emit TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens);\r\n\r\n        _updatePurchasingState(beneficiary, weiAmount);\r\n\r\n        _forwardFunds();\r\n        _postValidatePurchase(beneficiary, weiAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\r\n     * Use `super` in contracts that inherit from Crowdsale to extend their validations.\r\n     * Example from CappedCrowdsale.sol's _preValidatePurchase method:\r\n     *     super._preValidatePurchase(beneficiary, weiAmount);\r\n     *     require(weiRaised().add(weiAmount) <= cap);\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\");\r\n        require(weiAmount != 0, \"Crowdsale: weiAmount is 0\");\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\r\n     * conditions are not met.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\r\n     * its tokens.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param tokenAmount Number of tokens to be emitted\r\n     */\r\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {\r\n        _token.safeTransfer(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\r\n     * tokens.\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param tokenAmount Number of tokens to be purchased\r\n     */\r\n    function _processPurchase(address beneficiary, uint256 tokenAmount) internal {\r\n        _deliverTokens(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Override for extensions that require an internal state to check for validity (current user contributions,\r\n     * etc.)\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal virtual {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Override to extend the way in which ether is converted to tokens.\r\n     * @param weiAmount Value in wei to be converted into tokens\r\n     * @return Number of tokens that can be purchased with the specified _weiAmount\r\n     */\r\n    function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {\r\n        return weiAmount.mul(_rate);\r\n    }\r\n\r\n    /**\r\n     * @dev Determines how ETH is stored/forwarded on purchases.\r\n     */\r\n    function _forwardFunds() internal virtual {\r\n        _wallet.transfer(msg.value);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x27 0x24 0xB5 0x2E EXTCODECOPY CALLVALUE PUSH18 0xE7F8B6FEB5693F47018FC51716AED6B39E89 SAR LOG1 0xBF 0xDA LOG4 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "701:6234:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x27 0x24 0xB5 0x2E EXTCODECOPY CALLVALUE PUSH18 0xE7F8B6FEB5693F47018FC51716AED6B39E89 SAR LOG1 0xBF 0xDA LOG4 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "701:6234:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
									".code": [
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/cappedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xCF02F35D13875A9E5D07 0x2E 0xE3 0x2A 0xC1 0xD2 INVALID CODESIZE BALANCE EXTCODEHASH 0xB4 0xBD SWAP6 SWAP13 0xA8 INVALID 0xC2 0xE0 0xEA DUP16 DELEGATECALL 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xCF02F35D13875A9E5D07 0x2E 0xE3 0x2A 0xC1 0xD2 INVALID CODESIZE BALANCE EXTCODEHASH 0xB4 0xBD SWAP6 SWAP13 0xA8 INVALID 0xC2 0xE0 0xEA DUP16 DELEGATECALL 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/cappedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/cappedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/crowdsale.sol": {
				"Crowdsale": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.",
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"constructor": {
								"details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
								"params": {
									"inRate": "Number of token units a buyer gets per wei",
									"inToken": "Address of the token being sold",
									"inWallet": "Address where collected funds will be forwarded to"
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "Crowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"rate()": "2c4e722e",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.\",\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"constructor\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"inRate\":\"Number of token units a buyer gets per wei\",\"inToken\":\"Address of the token being sold\",\"inWallet\":\"Address where collected funds will be forwarded to\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"Crowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/crowdsale.sol\":\"Crowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0x995eb7096fd6ec056d60f86f20ae0590a296b449b821f41224ccafd3eafa2b56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a77398208a5b43f1dc4b2fc6dc940ef4edeacd81e7e3f34eafc4a39c75ef3886\",\"dweb:/ipfs/QmWi3666TzvNjh47BJ94PpL3D61LjfWesLZGXJyjzdym44\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1240,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)142"
							},
							{
								"astId": 1242,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 1244,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1246,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)142": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/validation/cappedCrowdsale.sol": {
				"CappedCrowdsale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inCap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "inRate",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "inWallet",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "inToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "capReached",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale with a limit for total contributions.",
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"cap()": {
								"returns": {
									"_0": "the cap of the crowdsale."
								}
							},
							"capReached()": {
								"details": "Checks whether the cap has been reached.",
								"returns": {
									"_0": "Whether the cap was reached"
								}
							},
							"constructor": {
								"details": "Constructor, takes maximum amount of wei accepted in the crowdsale.",
								"params": {
									"inCap": "Max amount of wei to be contributed",
									"inRate": "The rate of the crowdsale",
									"inToken": "The token contract address",
									"inWallet": "The wallet address to receive the funds"
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "CappedCrowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"crowdsale/validation/cappedCrowdsale.sol\":252:1725  contract CappedCrowdsale is Crowdsale {... */\n  mstore(0x40, 0x80)\n    /* \"crowdsale/validation/cappedCrowdsale.sol\":679:907  constructor (uint256 inCap, uint256 inRate, address payable inWallet, IERC20 inToken) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"crowdsale/validation/cappedCrowdsale.sol\":785:791  inRate */\n  dup3\n    /* \"crowdsale/validation/cappedCrowdsale.sol\":793:801  inWallet */\n  dup3\n    /* \"crowdsale/validation/cappedCrowdsale.sol\":803:810  inToken */\n  dup3\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2644:2645  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2635:2641  inRate */\n  dup4\n    /* \"crowdsale/crowdsale.sol\":2635:2645  inRate > 0 */\n  gt\n    /* \"crowdsale/crowdsale.sol\":2627:2670  require(inRate > 0, \"Crowdsale: rate is 0\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_9:\n    /* \"crowdsale/crowdsale.sol\":2709:2710  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2689:2711  inWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"crowdsale/crowdsale.sol\":2689:2697  inWallet */\n  dup3\n    /* \"crowdsale/crowdsale.sol\":2689:2711  inWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"crowdsale/crowdsale.sol\":2681:2753  require(inWallet != address(0), \"Crowdsale: wallet is the zero address\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"crowdsale/crowdsale.sol\":2800:2801  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2772:2802  address(inToken) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"crowdsale/crowdsale.sol\":2780:2787  inToken */\n  dup2\n    /* \"crowdsale/crowdsale.sol\":2772:2802  address(inToken) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"crowdsale/crowdsale.sol\":2764:2843  require(address(inToken) != address(0), \"Crowdsale: token is the zero address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"crowdsale/crowdsale.sol\":2864:2870  inRate */\n  dup3\n    /* \"crowdsale/crowdsale.sol\":2856:2861  _rate */\n  0x03\n    /* \"crowdsale/crowdsale.sol\":2856:2870  _rate = inRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2891:2899  inWallet */\n  dup2\n    /* \"crowdsale/crowdsale.sol\":2881:2888  _wallet */\n  0x02\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2881:2899  _wallet = inWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2919:2926  inToken */\n  dup1\n    /* \"crowdsale/crowdsale.sol\":2910:2916  _token */\n  0x01\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2910:2926  _token = inToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2545:2934  constructor (uint256 inRate, address payable inWallet, IERC20 inToken) {... */\n  pop\n  pop\n  pop\n    /* \"crowdsale/validation/cappedCrowdsale.sol\":845:846  0 */\n  0x00\n    /* \"crowdsale/validation/cappedCrowdsale.sol\":837:842  inCap */\n  dup5\n    /* \"crowdsale/validation/cappedCrowdsale.sol\":837:846  inCap > 0 */\n  gt\n    /* \"crowdsale/validation/cappedCrowdsale.sol\":829:876  require(inCap > 0, \"CappedCrowdsale: cap is 0\") */\n  tag_19\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_19:\n    /* \"crowdsale/validation/cappedCrowdsale.sol\":894:899  inCap */\n  dup4\n    /* \"crowdsale/validation/cappedCrowdsale.sol\":887:891  _cap */\n  0x05\n    /* \"crowdsale/validation/cappedCrowdsale.sol\":887:899  _cap = inCap */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/validation/cappedCrowdsale.sol\":679:907  constructor (uint256 inCap, uint256 inRate, address payable inWallet, IERC20 inToken) ... */\n  pop\n  pop\n  pop\n  pop\n    /* \"crowdsale/validation/cappedCrowdsale.sol\":252:1725  contract CappedCrowdsale is Crowdsale {... */\n  jump(tag_22)\n    /* \"#utility.yul\":88:205   */\ntag_24:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_26:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_27:\n    /* \"#utility.yul\":490:514   */\n  tag_52\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_26\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_53\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_53:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_28:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_55\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_27\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_29:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:930   */\ntag_30:\n    /* \"#utility.yul\":871:878   */\n  0x00\n    /* \"#utility.yul\":900:924   */\n  tag_58\n    /* \"#utility.yul\":918:923   */\n  dup3\n    /* \"#utility.yul\":900:924   */\n  tag_29\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":889:924   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:930   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":936:1074   */\ntag_31:\n    /* \"#utility.yul\":1017:1049   */\n  tag_60\n    /* \"#utility.yul\":1043:1048   */\n  dup2\n    /* \"#utility.yul\":1017:1049   */\n  tag_30\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1010:1015   */\n  dup2\n    /* \"#utility.yul\":1007:1050   */\n  eq\n    /* \"#utility.yul\":997:1068   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1064:1065   */\n  0x00\n    /* \"#utility.yul\":1061:1062   */\n  dup1\n    /* \"#utility.yul\":1054:1066   */\n  revert\n    /* \"#utility.yul\":997:1068   */\ntag_61:\n    /* \"#utility.yul\":936:1074   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1080:1239   */\ntag_32:\n    /* \"#utility.yul\":1145:1150   */\n  0x00\n    /* \"#utility.yul\":1176:1182   */\n  dup2\n    /* \"#utility.yul\":1170:1183   */\n  mload\n    /* \"#utility.yul\":1161:1183   */\n  swap1\n  pop\n    /* \"#utility.yul\":1192:1233   */\n  tag_63\n    /* \"#utility.yul\":1227:1232   */\n  dup2\n    /* \"#utility.yul\":1192:1233   */\n  tag_31\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1080:1239   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1245:1341   */\ntag_33:\n    /* \"#utility.yul\":1282:1289   */\n  0x00\n    /* \"#utility.yul\":1311:1335   */\n  tag_65\n    /* \"#utility.yul\":1329:1334   */\n  dup3\n    /* \"#utility.yul\":1311:1335   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1300:1335   */\n  swap1\n  pop\n    /* \"#utility.yul\":1245:1341   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1347:1457   */\ntag_34:\n    /* \"#utility.yul\":1398:1405   */\n  0x00\n    /* \"#utility.yul\":1427:1451   */\n  tag_67\n    /* \"#utility.yul\":1445:1450   */\n  dup3\n    /* \"#utility.yul\":1427:1451   */\n  tag_33\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1416:1451   */\n  swap1\n  pop\n    /* \"#utility.yul\":1347:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1613   */\ntag_35:\n    /* \"#utility.yul\":1550:1588   */\n  tag_69\n    /* \"#utility.yul\":1582:1587   */\n  dup2\n    /* \"#utility.yul\":1550:1588   */\n  tag_34\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1543:1548   */\n  dup2\n    /* \"#utility.yul\":1540:1589   */\n  eq\n    /* \"#utility.yul\":1530:1607   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1603:1604   */\n  0x00\n    /* \"#utility.yul\":1600:1601   */\n  dup1\n    /* \"#utility.yul\":1593:1605   */\n  revert\n    /* \"#utility.yul\":1530:1607   */\ntag_70:\n    /* \"#utility.yul\":1463:1613   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1619:1790   */\ntag_36:\n    /* \"#utility.yul\":1690:1695   */\n  0x00\n    /* \"#utility.yul\":1721:1727   */\n  dup2\n    /* \"#utility.yul\":1715:1728   */\n  mload\n    /* \"#utility.yul\":1706:1728   */\n  swap1\n  pop\n    /* \"#utility.yul\":1737:1784   */\n  tag_72\n    /* \"#utility.yul\":1778:1783   */\n  dup2\n    /* \"#utility.yul\":1737:1784   */\n  tag_35\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1619:1790   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1796:2660   */\ntag_3:\n    /* \"#utility.yul\":1915:1921   */\n  0x00\n    /* \"#utility.yul\":1923:1929   */\n  dup1\n    /* \"#utility.yul\":1931:1937   */\n  0x00\n    /* \"#utility.yul\":1939:1945   */\n  dup1\n    /* \"#utility.yul\":1988:1991   */\n  0x80\n    /* \"#utility.yul\":1976:1985   */\n  dup6\n    /* \"#utility.yul\":1967:1974   */\n  dup8\n    /* \"#utility.yul\":1963:1986   */\n  sub\n    /* \"#utility.yul\":1959:1992   */\n  slt\n    /* \"#utility.yul\":1956:2076   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":1995:2074   */\n  tag_75\n  tag_24\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1956:2076   */\ntag_74:\n    /* \"#utility.yul\":2115:2116   */\n  0x00\n    /* \"#utility.yul\":2140:2204   */\n  tag_76\n    /* \"#utility.yul\":2196:2203   */\n  dup8\n    /* \"#utility.yul\":2187:2193   */\n  dup3\n    /* \"#utility.yul\":2176:2185   */\n  dup9\n    /* \"#utility.yul\":2172:2194   */\n  add\n    /* \"#utility.yul\":2140:2204   */\n  tag_28\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2130:2204   */\n  swap5\n  pop\n    /* \"#utility.yul\":2086:2214   */\n  pop\n    /* \"#utility.yul\":2253:2255   */\n  0x20\n    /* \"#utility.yul\":2279:2343   */\n  tag_77\n    /* \"#utility.yul\":2335:2342   */\n  dup8\n    /* \"#utility.yul\":2326:2332   */\n  dup3\n    /* \"#utility.yul\":2315:2324   */\n  dup9\n    /* \"#utility.yul\":2311:2333   */\n  add\n    /* \"#utility.yul\":2279:2343   */\n  tag_28\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2269:2343   */\n  swap4\n  pop\n    /* \"#utility.yul\":2224:2353   */\n  pop\n    /* \"#utility.yul\":2392:2394   */\n  0x40\n    /* \"#utility.yul\":2418:2490   */\n  tag_78\n    /* \"#utility.yul\":2482:2489   */\n  dup8\n    /* \"#utility.yul\":2473:2479   */\n  dup3\n    /* \"#utility.yul\":2462:2471   */\n  dup9\n    /* \"#utility.yul\":2458:2480   */\n  add\n    /* \"#utility.yul\":2418:2490   */\n  tag_32\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2408:2490   */\n  swap3\n  pop\n    /* \"#utility.yul\":2363:2500   */\n  pop\n    /* \"#utility.yul\":2539:2541   */\n  0x60\n    /* \"#utility.yul\":2565:2643   */\n  tag_79\n    /* \"#utility.yul\":2635:2642   */\n  dup8\n    /* \"#utility.yul\":2626:2632   */\n  dup3\n    /* \"#utility.yul\":2615:2624   */\n  dup9\n    /* \"#utility.yul\":2611:2633   */\n  add\n    /* \"#utility.yul\":2565:2643   */\n  tag_36\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2555:2643   */\n  swap2\n  pop\n    /* \"#utility.yul\":2510:2653   */\n  pop\n    /* \"#utility.yul\":1796:2660   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2666:2835   */\ntag_37:\n    /* \"#utility.yul\":2750:2761   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup3\n    /* \"#utility.yul\":2779:2782   */\n  dup3\n    /* \"#utility.yul\":2772:2791   */\n  mstore\n    /* \"#utility.yul\":2824:2828   */\n  0x20\n    /* \"#utility.yul\":2819:2822   */\n  dup3\n    /* \"#utility.yul\":2815:2829   */\n  add\n    /* \"#utility.yul\":2800:2829   */\n  swap1\n  pop\n    /* \"#utility.yul\":2666:2835   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2841:3011   */\ntag_38:\n    /* \"#utility.yul\":2981:3003   */\n  0x43726f776473616c653a20726174652069732030000000000000000000000000\n    /* \"#utility.yul\":2977:2978   */\n  0x00\n    /* \"#utility.yul\":2969:2975   */\n  dup3\n    /* \"#utility.yul\":2965:2979   */\n  add\n    /* \"#utility.yul\":2958:3004   */\n  mstore\n    /* \"#utility.yul\":2841:3011   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3017:3383   */\ntag_39:\n    /* \"#utility.yul\":3159:3162   */\n  0x00\n    /* \"#utility.yul\":3180:3247   */\n  tag_83\n    /* \"#utility.yul\":3244:3246   */\n  0x14\n    /* \"#utility.yul\":3239:3242   */\n  dup4\n    /* \"#utility.yul\":3180:3247   */\n  tag_37\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3173:3247   */\n  swap2\n  pop\n    /* \"#utility.yul\":3256:3349   */\n  tag_84\n    /* \"#utility.yul\":3345:3348   */\n  dup3\n    /* \"#utility.yul\":3256:3349   */\n  tag_38\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3374:3376   */\n  0x20\n    /* \"#utility.yul\":3369:3372   */\n  dup3\n    /* \"#utility.yul\":3365:3377   */\n  add\n    /* \"#utility.yul\":3358:3377   */\n  swap1\n  pop\n    /* \"#utility.yul\":3017:3383   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3389:3808   */\ntag_11:\n    /* \"#utility.yul\":3555:3559   */\n  0x00\n    /* \"#utility.yul\":3593:3595   */\n  0x20\n    /* \"#utility.yul\":3582:3591   */\n  dup3\n    /* \"#utility.yul\":3578:3596   */\n  add\n    /* \"#utility.yul\":3570:3596   */\n  swap1\n  pop\n    /* \"#utility.yul\":3642:3651   */\n  dup2\n    /* \"#utility.yul\":3636:3640   */\n  dup2\n    /* \"#utility.yul\":3632:3652   */\n  sub\n    /* \"#utility.yul\":3628:3629   */\n  0x00\n    /* \"#utility.yul\":3617:3626   */\n  dup4\n    /* \"#utility.yul\":3613:3630   */\n  add\n    /* \"#utility.yul\":3606:3653   */\n  mstore\n    /* \"#utility.yul\":3670:3801   */\n  tag_86\n    /* \"#utility.yul\":3796:3800   */\n  dup2\n    /* \"#utility.yul\":3670:3801   */\n  tag_39\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3662:3801   */\n  swap1\n  pop\n    /* \"#utility.yul\":3389:3808   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3814:4038   */\ntag_40:\n    /* \"#utility.yul\":3954:3988   */\n  0x43726f776473616c653a2077616c6c657420697320746865207a65726f206164\n    /* \"#utility.yul\":3950:3951   */\n  0x00\n    /* \"#utility.yul\":3942:3948   */\n  dup3\n    /* \"#utility.yul\":3938:3952   */\n  add\n    /* \"#utility.yul\":3931:3989   */\n  mstore\n    /* \"#utility.yul\":4023:4030   */\n  0x6472657373000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4018:4020   */\n  0x20\n    /* \"#utility.yul\":4010:4016   */\n  dup3\n    /* \"#utility.yul\":4006:4021   */\n  add\n    /* \"#utility.yul\":3999:4031   */\n  mstore\n    /* \"#utility.yul\":3814:4038   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4044:4410   */\ntag_41:\n    /* \"#utility.yul\":4186:4189   */\n  0x00\n    /* \"#utility.yul\":4207:4274   */\n  tag_89\n    /* \"#utility.yul\":4271:4273   */\n  0x25\n    /* \"#utility.yul\":4266:4269   */\n  dup4\n    /* \"#utility.yul\":4207:4274   */\n  tag_37\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4200:4274   */\n  swap2\n  pop\n    /* \"#utility.yul\":4283:4376   */\n  tag_90\n    /* \"#utility.yul\":4372:4375   */\n  dup3\n    /* \"#utility.yul\":4283:4376   */\n  tag_40\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4401:4403   */\n  0x40\n    /* \"#utility.yul\":4396:4399   */\n  dup3\n    /* \"#utility.yul\":4392:4404   */\n  add\n    /* \"#utility.yul\":4385:4404   */\n  swap1\n  pop\n    /* \"#utility.yul\":4044:4410   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4416:4835   */\ntag_14:\n    /* \"#utility.yul\":4582:4586   */\n  0x00\n    /* \"#utility.yul\":4620:4622   */\n  0x20\n    /* \"#utility.yul\":4609:4618   */\n  dup3\n    /* \"#utility.yul\":4605:4623   */\n  add\n    /* \"#utility.yul\":4597:4623   */\n  swap1\n  pop\n    /* \"#utility.yul\":4669:4678   */\n  dup2\n    /* \"#utility.yul\":4663:4667   */\n  dup2\n    /* \"#utility.yul\":4659:4679   */\n  sub\n    /* \"#utility.yul\":4655:4656   */\n  0x00\n    /* \"#utility.yul\":4644:4653   */\n  dup4\n    /* \"#utility.yul\":4640:4657   */\n  add\n    /* \"#utility.yul\":4633:4680   */\n  mstore\n    /* \"#utility.yul\":4697:4828   */\n  tag_92\n    /* \"#utility.yul\":4823:4827   */\n  dup2\n    /* \"#utility.yul\":4697:4828   */\n  tag_41\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4689:4828   */\n  swap1\n  pop\n    /* \"#utility.yul\":4416:4835   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4841:5064   */\ntag_42:\n    /* \"#utility.yul\":4981:5015   */\n  0x43726f776473616c653a20746f6b656e20697320746865207a65726f20616464\n    /* \"#utility.yul\":4977:4978   */\n  0x00\n    /* \"#utility.yul\":4969:4975   */\n  dup3\n    /* \"#utility.yul\":4965:4979   */\n  add\n    /* \"#utility.yul\":4958:5016   */\n  mstore\n    /* \"#utility.yul\":5050:5056   */\n  0x7265737300000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5045:5047   */\n  0x20\n    /* \"#utility.yul\":5037:5043   */\n  dup3\n    /* \"#utility.yul\":5033:5048   */\n  add\n    /* \"#utility.yul\":5026:5057   */\n  mstore\n    /* \"#utility.yul\":4841:5064   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5070:5436   */\ntag_43:\n    /* \"#utility.yul\":5212:5215   */\n  0x00\n    /* \"#utility.yul\":5233:5300   */\n  tag_95\n    /* \"#utility.yul\":5297:5299   */\n  0x24\n    /* \"#utility.yul\":5292:5295   */\n  dup4\n    /* \"#utility.yul\":5233:5300   */\n  tag_37\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":5226:5300   */\n  swap2\n  pop\n    /* \"#utility.yul\":5309:5402   */\n  tag_96\n    /* \"#utility.yul\":5398:5401   */\n  dup3\n    /* \"#utility.yul\":5309:5402   */\n  tag_42\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5427:5429   */\n  0x40\n    /* \"#utility.yul\":5422:5425   */\n  dup3\n    /* \"#utility.yul\":5418:5430   */\n  add\n    /* \"#utility.yul\":5411:5430   */\n  swap1\n  pop\n    /* \"#utility.yul\":5070:5436   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5442:5861   */\ntag_17:\n    /* \"#utility.yul\":5608:5612   */\n  0x00\n    /* \"#utility.yul\":5646:5648   */\n  0x20\n    /* \"#utility.yul\":5635:5644   */\n  dup3\n    /* \"#utility.yul\":5631:5649   */\n  add\n    /* \"#utility.yul\":5623:5649   */\n  swap1\n  pop\n    /* \"#utility.yul\":5695:5704   */\n  dup2\n    /* \"#utility.yul\":5689:5693   */\n  dup2\n    /* \"#utility.yul\":5685:5705   */\n  sub\n    /* \"#utility.yul\":5681:5682   */\n  0x00\n    /* \"#utility.yul\":5670:5679   */\n  dup4\n    /* \"#utility.yul\":5666:5683   */\n  add\n    /* \"#utility.yul\":5659:5706   */\n  mstore\n    /* \"#utility.yul\":5723:5854   */\n  tag_98\n    /* \"#utility.yul\":5849:5853   */\n  dup2\n    /* \"#utility.yul\":5723:5854   */\n  tag_43\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":5715:5854   */\n  swap1\n  pop\n    /* \"#utility.yul\":5442:5861   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5867:6042   */\ntag_44:\n    /* \"#utility.yul\":6007:6034   */\n  0x43617070656443726f776473616c653a20636170206973203000000000000000\n    /* \"#utility.yul\":6003:6004   */\n  0x00\n    /* \"#utility.yul\":5995:6001   */\n  dup3\n    /* \"#utility.yul\":5991:6005   */\n  add\n    /* \"#utility.yul\":5984:6035   */\n  mstore\n    /* \"#utility.yul\":5867:6042   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6048:6414   */\ntag_45:\n    /* \"#utility.yul\":6190:6193   */\n  0x00\n    /* \"#utility.yul\":6211:6278   */\n  tag_101\n    /* \"#utility.yul\":6275:6277   */\n  0x19\n    /* \"#utility.yul\":6270:6273   */\n  dup4\n    /* \"#utility.yul\":6211:6278   */\n  tag_37\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":6204:6278   */\n  swap2\n  pop\n    /* \"#utility.yul\":6287:6380   */\n  tag_102\n    /* \"#utility.yul\":6376:6379   */\n  dup3\n    /* \"#utility.yul\":6287:6380   */\n  tag_44\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":6405:6407   */\n  0x20\n    /* \"#utility.yul\":6400:6403   */\n  dup3\n    /* \"#utility.yul\":6396:6408   */\n  add\n    /* \"#utility.yul\":6389:6408   */\n  swap1\n  pop\n    /* \"#utility.yul\":6048:6414   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6420:6839   */\ntag_21:\n    /* \"#utility.yul\":6586:6590   */\n  0x00\n    /* \"#utility.yul\":6624:6626   */\n  0x20\n    /* \"#utility.yul\":6613:6622   */\n  dup3\n    /* \"#utility.yul\":6609:6627   */\n  add\n    /* \"#utility.yul\":6601:6627   */\n  swap1\n  pop\n    /* \"#utility.yul\":6673:6682   */\n  dup2\n    /* \"#utility.yul\":6667:6671   */\n  dup2\n    /* \"#utility.yul\":6663:6683   */\n  sub\n    /* \"#utility.yul\":6659:6660   */\n  0x00\n    /* \"#utility.yul\":6648:6657   */\n  dup4\n    /* \"#utility.yul\":6644:6661   */\n  add\n    /* \"#utility.yul\":6637:6684   */\n  mstore\n    /* \"#utility.yul\":6701:6832   */\n  tag_104\n    /* \"#utility.yul\":6827:6831   */\n  dup2\n    /* \"#utility.yul\":6701:6832   */\n  tag_45\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":6693:6832   */\n  swap1\n  pop\n    /* \"#utility.yul\":6420:6839   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"crowdsale/validation/cappedCrowdsale.sol\":252:1725  contract CappedCrowdsale is Crowdsale {... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":252:1725  contract CappedCrowdsale is Crowdsale {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f935945\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x4f935945\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x521eb273\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xec8ac4d8\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x2c4e722e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4042b66f\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"crowdsale/crowdsale.sol\":3351:3374  buyTokens(_msgSender()) */\n      tag_13\n        /* \"crowdsale/crowdsale.sol\":3361:3373  _msgSender() */\n      tag_14\n        /* \"crowdsale/crowdsale.sol\":3361:3371  _msgSender */\n      tag_15\n        /* \"crowdsale/crowdsale.sol\":3361:3373  _msgSender() */\n      jump\t// in\n    tag_14:\n        /* \"crowdsale/crowdsale.sol\":3351:3360  buyTokens */\n      tag_16\n        /* \"crowdsale/crowdsale.sol\":3351:3374  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_13:\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":252:1725  contract CappedCrowdsale is Crowdsale {... */\n      stop\n    tag_2:\n        /* \"crowdsale/crowdsale.sol\":3270:3293  buyTokens(_msgSender()) */\n      tag_19\n        /* \"crowdsale/crowdsale.sol\":3280:3292  _msgSender() */\n      tag_20\n        /* \"crowdsale/crowdsale.sol\":3280:3290  _msgSender */\n      tag_15\n        /* \"crowdsale/crowdsale.sol\":3280:3292  _msgSender() */\n      jump\t// in\n    tag_20:\n        /* \"crowdsale/crowdsale.sol\":3270:3279  buyTokens */\n      tag_16\n        /* \"crowdsale/crowdsale.sol\":3270:3293  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_19:\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":252:1725  contract CappedCrowdsale is Crowdsale {... */\n      stop\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":977:1052  function cap() public view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1176:1270  function capReached() public view returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_16\n      jump\t// in\n    tag_44:\n      stop\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_54\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_55\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_54:\n        /* \"crowdsale/crowdsale.sol\":4368:4385  uint256 weiAmount */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4388:4397  msg.value */\n      callvalue\n        /* \"crowdsale/crowdsale.sol\":4368:4397  uint256 weiAmount = msg.value */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":4408:4452  _preValidatePurchase(beneficiary, weiAmount) */\n      tag_57\n        /* \"crowdsale/crowdsale.sol\":4429:4440  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4442:4451  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4408:4428  _preValidatePurchase */\n      tag_58\n        /* \"crowdsale/crowdsale.sol\":4408:4452  _preValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_57:\n        /* \"crowdsale/crowdsale.sol\":4514:4528  uint256 tokens */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4531:4557  _getTokenAmount(weiAmount) */\n      tag_59\n        /* \"crowdsale/crowdsale.sol\":4547:4556  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4531:4546  _getTokenAmount */\n      tag_60\n        /* \"crowdsale/crowdsale.sol\":4531:4557  _getTokenAmount(weiAmount) */\n      jump\t// in\n    tag_59:\n        /* \"crowdsale/crowdsale.sol\":4514:4557  uint256 tokens = _getTokenAmount(weiAmount) */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":4608:4633  _weiRaised.add(weiAmount) */\n      tag_61\n        /* \"crowdsale/crowdsale.sol\":4623:4632  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4608:4618  _weiRaised */\n      sload(0x04)\n        /* \"crowdsale/crowdsale.sol\":4608:4622  _weiRaised.add */\n      tag_62\n      swap1\n        /* \"crowdsale/crowdsale.sol\":4608:4633  _weiRaised.add(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_61:\n        /* \"crowdsale/crowdsale.sol\":4595:4605  _weiRaised */\n      0x04\n        /* \"crowdsale/crowdsale.sol\":4595:4633  _weiRaised = _weiRaised.add(weiAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"crowdsale/crowdsale.sol\":4646:4683  _processPurchase(beneficiary, tokens) */\n      tag_63\n        /* \"crowdsale/crowdsale.sol\":4663:4674  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4676:4682  tokens */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4646:4662  _processPurchase */\n      tag_64\n        /* \"crowdsale/crowdsale.sol\":4646:4683  _processPurchase(beneficiary, tokens) */\n      jump\t// in\n    tag_63:\n        /* \"crowdsale/crowdsale.sol\":4729:4740  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":4715:4727  _msgSender() */\n      tag_65\n        /* \"crowdsale/crowdsale.sol\":4715:4725  _msgSender */\n      tag_15\n        /* \"crowdsale/crowdsale.sol\":4715:4727  _msgSender() */\n      jump\t// in\n    tag_65:\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b\n        /* \"crowdsale/crowdsale.sol\":4742:4751  weiAmount */\n      dup5\n        /* \"crowdsale/crowdsale.sol\":4753:4759  tokens */\n      dup5\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      mload(0x40)\n      tag_66\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"crowdsale/crowdsale.sol\":4773:4819  _updatePurchasingState(beneficiary, weiAmount) */\n      tag_68\n        /* \"crowdsale/crowdsale.sol\":4796:4807  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4809:4818  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4773:4795  _updatePurchasingState */\n      tag_69\n        /* \"crowdsale/crowdsale.sol\":4773:4819  _updatePurchasingState(beneficiary, weiAmount) */\n      jump\t// in\n    tag_68:\n        /* \"crowdsale/crowdsale.sol\":4832:4847  _forwardFunds() */\n      tag_70\n        /* \"crowdsale/crowdsale.sol\":4832:4845  _forwardFunds */\n      tag_71\n        /* \"crowdsale/crowdsale.sol\":4832:4847  _forwardFunds() */\n      jump\t// in\n    tag_70:\n        /* \"crowdsale/crowdsale.sol\":4858:4903  _postValidatePurchase(beneficiary, weiAmount) */\n      tag_72\n        /* \"crowdsale/crowdsale.sol\":4880:4891  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4893:4902  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4858:4879  _postValidatePurchase */\n      tag_73\n        /* \"crowdsale/crowdsale.sol\":4858:4903  _postValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_72:\n        /* \"crowdsale/crowdsale.sol\":4357:4911  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_74\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_75\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_74:\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n    tag_23:\n        /* \"crowdsale/crowdsale.sol\":3829:3836  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3856:3861  _rate */\n      sload(0x03)\n        /* \"crowdsale/crowdsale.sol\":3849:3861  return _rate */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":977:1052  function cap() public view returns (uint256) {... */\n    tag_28:\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1013:1020  uint256 */\n      0x00\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1040:1044  _cap */\n      sload(0x05)\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1033:1044  return _cap */\n      swap1\n      pop\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":977:1052  function cap() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n    tag_32:\n        /* \"crowdsale/crowdsale.sol\":3979:3986  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4006:4016  _weiRaised */\n      sload(0x04)\n        /* \"crowdsale/crowdsale.sol\":3999:4016  return _weiRaised */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1176:1270  function capReached() public view returns (bool) {... */\n    tag_36:\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1219:1223  bool */\n      0x00\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1258:1262  _cap */\n      sload(0x05)\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1243:1254  weiRaised() */\n      tag_80\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1243:1252  weiRaised */\n      tag_32\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1243:1254  weiRaised() */\n      jump\t// in\n    tag_80:\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1243:1262  weiRaised() >= _cap */\n      lt\n      iszero\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1236:1262  return weiRaised() >= _cap */\n      swap1\n      pop\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1176:1270  function capReached() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n    tag_41:\n        /* \"crowdsale/crowdsale.sol\":3644:3659  address payable */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3679:3686  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":3672:3686  return _wallet */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n    tag_49:\n        /* \"crowdsale/crowdsale.sol\":3484:3490  IERC20 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3510:3516  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":3503:3516  return _token */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1473:1722  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal override view {... */\n    tag_58:\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1577:1627  super._preValidatePurchase(beneficiary, weiAmount) */\n      tag_88\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1604:1615  beneficiary */\n      dup3\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1617:1626  weiAmount */\n      dup3\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1577:1603  super._preValidatePurchase */\n      tag_89\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1577:1627  super._preValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_88:\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1676:1680  _cap */\n      sload(0x05)\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1646:1672  weiRaised().add(weiAmount) */\n      tag_90\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1662:1671  weiAmount */\n      dup3\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1646:1657  weiRaised() */\n      tag_91\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1646:1655  weiRaised */\n      tag_32\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1646:1657  weiRaised() */\n      jump\t// in\n    tag_91:\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1646:1661  weiRaised().add */\n      tag_62\n      swap1\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1646:1672  weiRaised().add(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_90:\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1646:1680  weiRaised().add(weiAmount) <= _cap */\n      gt\n      iszero\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1638:1714  require(weiRaised().add(weiAmount) <= _cap, \"CappedCrowdsale: cap exceeded\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"crowdsale/validation/cappedCrowdsale.sol\":1473:1722  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal override view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7848:7978  function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {... */\n    tag_60:\n        /* \"crowdsale/crowdsale.sol\":7923:7930  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":7950:7970  weiAmount.mul(_rate) */\n      tag_96\n        /* \"crowdsale/crowdsale.sol\":7964:7969  _rate */\n      sload(0x03)\n        /* \"crowdsale/crowdsale.sol\":7950:7959  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":7950:7963  weiAmount.mul */\n      tag_97\n      swap1\n        /* \"crowdsale/crowdsale.sol\":7950:7970  weiAmount.mul(_rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"crowdsale/crowdsale.sol\":7943:7970  return weiAmount.mul(_rate) */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":7848:7978  function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7023:7159  function _processPurchase(address beneficiary, uint256 tokenAmount) internal {... */\n    tag_64:\n        /* \"crowdsale/crowdsale.sol\":7111:7151  _deliverTokens(beneficiary, tokenAmount) */\n      tag_102\n        /* \"crowdsale/crowdsale.sol\":7126:7137  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":7139:7150  tokenAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":7111:7125  _deliverTokens */\n      tag_103\n        /* \"crowdsale/crowdsale.sol\":7111:7151  _deliverTokens(beneficiary, tokenAmount) */\n      jump\t// in\n    tag_102:\n        /* \"crowdsale/crowdsale.sol\":7023:7159  function _processPurchase(address beneficiary, uint256 tokenAmount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7437:7592  function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal virtual {... */\n    tag_69:\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":8070:8158  function _forwardFunds() internal virtual {... */\n    tag_71:\n        /* \"crowdsale/crowdsale.sol\":8123:8130  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":8123:8139  _wallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":8123:8150  _wallet.transfer(msg.value) */\n      0x08fc\n        /* \"crowdsale/crowdsale.sol\":8140:8149  msg.value */\n      callvalue\n        /* \"crowdsale/crowdsale.sol\":8123:8150  _wallet.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n        /* \"crowdsale/crowdsale.sol\":8070:8158  function _forwardFunds() internal virtual {... */\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":6155:6314  function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n    tag_73:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":5464:5852  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n    tag_89:\n        /* \"crowdsale/crowdsale.sol\":5598:5599  0 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":5575:5600  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":5575:5586  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":5575:5600  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"crowdsale/crowdsale.sol\":5567:5647  require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"crowdsale/crowdsale.sol\":5679:5680  0 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":5666:5675  weiAmount */\n      dup2\n        /* \"crowdsale/crowdsale.sol\":5666:5680  weiAmount != 0 */\n      sub\n        /* \"crowdsale/crowdsale.sol\":5658:5710  require(weiAmount != 0, \"Crowdsale: weiAmount is 0\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"crowdsale/crowdsale.sol\":5464:5852  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":6602:6749  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {... */\n    tag_103:\n        /* \"crowdsale/crowdsale.sol\":6696:6741  _token.safeTransfer(beneficiary, tokenAmount) */\n      tag_121\n        /* \"crowdsale/crowdsale.sol\":6716:6727  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":6729:6740  tokenAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":6696:6702  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":6696:6715  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_122\n      swap1\n        /* \"crowdsale/crowdsale.sol\":6696:6741  _token.safeTransfer(beneficiary, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"crowdsale/crowdsale.sol\":6602:6749  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1043:1048  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1073:1096  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1098:1100  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1102:1107  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1108  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_125\n      swap3\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1042  _callOptionalReturn */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5638  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5673  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5649:5654  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5668  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_130\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5710  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5749:5750  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5738  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5745  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5750  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_131\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5765:5775  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5754:5784  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5720:5831  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5266:5838  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4241:4253  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4294:4300  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4302:4306  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4308:4309  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4311:4323  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4293  functionCallWithValue */\n      tag_139\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4265:4324  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5342  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5387:5392  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5383  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5392  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5446:5458  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5460:5483  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5493  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5498  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5506:5511  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5513:5517  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5518  target.call{value: value}(data) */\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_148\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_147)\n    tag_148:\n      0x60\n      swap2\n      pop\n    tag_147:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5445:5518  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_149\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5562:5568  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5570:5577  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5579:5589  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5591:5603  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5561  verifyCallResultFromTarget */\n      tag_150\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5528:5604  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7916  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      tag_154\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8132:8138  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8131  isContract */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8208:8218  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8201:8218  return returndata */\n      swap1\n      pop\n      jump(tag_151)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_160\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8256  _revert */\n      tag_161\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_151:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9000:9001  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8990  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8997  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:84   */\n    tag_168:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_169:\n        /* \"#utility.yul\":177:201   */\n      tag_215\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_168\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_25:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_217\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_169\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:532   */\n    tag_170:\n        /* \"#utility.yul\":476:483   */\n      0x00\n        /* \"#utility.yul\":519:524   */\n      dup2\n        /* \"#utility.yul\":512:525   */\n      iszero\n        /* \"#utility.yul\":505:526   */\n      iszero\n        /* \"#utility.yul\":494:526   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":538:647   */\n    tag_171:\n        /* \"#utility.yul\":619:640   */\n      tag_220\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":619:640   */\n      tag_170\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":614:617   */\n      dup3\n        /* \"#utility.yul\":607:641   */\n      mstore\n        /* \"#utility.yul\":538:647   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":653:863   */\n    tag_38:\n        /* \"#utility.yul\":740:744   */\n      0x00\n        /* \"#utility.yul\":778:780   */\n      0x20\n        /* \"#utility.yul\":767:776   */\n      dup3\n        /* \"#utility.yul\":763:781   */\n      add\n        /* \"#utility.yul\":755:781   */\n      swap1\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_222\n        /* \"#utility.yul\":853:854   */\n      0x00\n        /* \"#utility.yul\":842:851   */\n      dup4\n        /* \"#utility.yul\":838:855   */\n      add\n        /* \"#utility.yul\":829:835   */\n      dup5\n        /* \"#utility.yul\":791:856   */\n      tag_171\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":653:863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":869:995   */\n    tag_172:\n        /* \"#utility.yul\":906:913   */\n      0x00\n        /* \"#utility.yul\":946:988   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":939:944   */\n      dup3\n        /* \"#utility.yul\":935:989   */\n      and\n        /* \"#utility.yul\":924:989   */\n      swap1\n      pop\n        /* \"#utility.yul\":869:995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1001:1105   */\n    tag_173:\n        /* \"#utility.yul\":1046:1053   */\n      0x00\n        /* \"#utility.yul\":1075:1099   */\n      tag_225\n        /* \"#utility.yul\":1093:1098   */\n      dup3\n        /* \"#utility.yul\":1075:1099   */\n      tag_172\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1064:1099   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1111:1253   */\n    tag_174:\n        /* \"#utility.yul\":1214:1246   */\n      tag_227\n        /* \"#utility.yul\":1240:1245   */\n      dup2\n        /* \"#utility.yul\":1214:1246   */\n      tag_173\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1209:1212   */\n      dup3\n        /* \"#utility.yul\":1202:1247   */\n      mstore\n        /* \"#utility.yul\":1111:1253   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1513   */\n    tag_43:\n        /* \"#utility.yul\":1368:1372   */\n      0x00\n        /* \"#utility.yul\":1406:1408   */\n      0x20\n        /* \"#utility.yul\":1395:1404   */\n      dup3\n        /* \"#utility.yul\":1391:1409   */\n      add\n        /* \"#utility.yul\":1383:1409   */\n      swap1\n      pop\n        /* \"#utility.yul\":1419:1506   */\n      tag_229\n        /* \"#utility.yul\":1503:1504   */\n      0x00\n        /* \"#utility.yul\":1492:1501   */\n      dup4\n        /* \"#utility.yul\":1488:1505   */\n      add\n        /* \"#utility.yul\":1479:1485   */\n      dup5\n        /* \"#utility.yul\":1419:1506   */\n      tag_174\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1259:1513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1600:1717   */\n    tag_176:\n        /* \"#utility.yul\":1709:1710   */\n      0x00\n        /* \"#utility.yul\":1706:1707   */\n      dup1\n        /* \"#utility.yul\":1699:1711   */\n      revert\n        /* \"#utility.yul\":1846:1942   */\n    tag_178:\n        /* \"#utility.yul\":1883:1890   */\n      0x00\n        /* \"#utility.yul\":1912:1936   */\n      tag_234\n        /* \"#utility.yul\":1930:1935   */\n      dup3\n        /* \"#utility.yul\":1912:1936   */\n      tag_172\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1901:1936   */\n      swap1\n      pop\n        /* \"#utility.yul\":1846:1942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1948:2070   */\n    tag_179:\n        /* \"#utility.yul\":2021:2045   */\n      tag_236\n        /* \"#utility.yul\":2039:2044   */\n      dup2\n        /* \"#utility.yul\":2021:2045   */\n      tag_178\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2014:2019   */\n      dup2\n        /* \"#utility.yul\":2011:2046   */\n      eq\n        /* \"#utility.yul\":2001:2064   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":2060:2061   */\n      0x00\n        /* \"#utility.yul\":2057:2058   */\n      dup1\n        /* \"#utility.yul\":2050:2062   */\n      revert\n        /* \"#utility.yul\":2001:2064   */\n    tag_237:\n        /* \"#utility.yul\":1948:2070   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2215   */\n    tag_180:\n        /* \"#utility.yul\":2122:2127   */\n      0x00\n        /* \"#utility.yul\":2160:2166   */\n      dup2\n        /* \"#utility.yul\":2147:2167   */\n      calldataload\n        /* \"#utility.yul\":2138:2167   */\n      swap1\n      pop\n        /* \"#utility.yul\":2176:2209   */\n      tag_239\n        /* \"#utility.yul\":2203:2208   */\n      dup2\n        /* \"#utility.yul\":2176:2209   */\n      tag_179\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2076:2215   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2221:2550   */\n    tag_46:\n        /* \"#utility.yul\":2280:2286   */\n      0x00\n        /* \"#utility.yul\":2329:2331   */\n      0x20\n        /* \"#utility.yul\":2317:2326   */\n      dup3\n        /* \"#utility.yul\":2308:2315   */\n      dup5\n        /* \"#utility.yul\":2304:2327   */\n      sub\n        /* \"#utility.yul\":2300:2332   */\n      slt\n        /* \"#utility.yul\":2297:2416   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":2335:2414   */\n      tag_242\n      tag_176\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2297:2416   */\n    tag_241:\n        /* \"#utility.yul\":2455:2456   */\n      0x00\n        /* \"#utility.yul\":2480:2533   */\n      tag_243\n        /* \"#utility.yul\":2525:2532   */\n      dup5\n        /* \"#utility.yul\":2516:2522   */\n      dup3\n        /* \"#utility.yul\":2505:2514   */\n      dup6\n        /* \"#utility.yul\":2501:2523   */\n      add\n        /* \"#utility.yul\":2480:2533   */\n      tag_180\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2470:2533   */\n      swap2\n      pop\n        /* \"#utility.yul\":2426:2543   */\n      pop\n        /* \"#utility.yul\":2221:2550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2556:2616   */\n    tag_181:\n        /* \"#utility.yul\":2584:2587   */\n      0x00\n        /* \"#utility.yul\":2605:2610   */\n      dup2\n        /* \"#utility.yul\":2598:2610   */\n      swap1\n      pop\n        /* \"#utility.yul\":2556:2616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2622:2764   */\n    tag_182:\n        /* \"#utility.yul\":2672:2681   */\n      0x00\n        /* \"#utility.yul\":2705:2758   */\n      tag_246\n        /* \"#utility.yul\":2723:2757   */\n      tag_247\n        /* \"#utility.yul\":2732:2756   */\n      tag_248\n        /* \"#utility.yul\":2750:2755   */\n      dup5\n        /* \"#utility.yul\":2732:2756   */\n      tag_172\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2723:2757   */\n      tag_181\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2705:2758   */\n      tag_172\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2692:2758   */\n      swap1\n      pop\n        /* \"#utility.yul\":2622:2764   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2770:2896   */\n    tag_183:\n        /* \"#utility.yul\":2820:2829   */\n      0x00\n        /* \"#utility.yul\":2853:2890   */\n      tag_250\n        /* \"#utility.yul\":2884:2889   */\n      dup3\n        /* \"#utility.yul\":2853:2890   */\n      tag_182\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2840:2890   */\n      swap1\n      pop\n        /* \"#utility.yul\":2770:2896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2902:3042   */\n    tag_184:\n        /* \"#utility.yul\":2966:2975   */\n      0x00\n        /* \"#utility.yul\":2999:3036   */\n      tag_252\n        /* \"#utility.yul\":3030:3035   */\n      dup3\n        /* \"#utility.yul\":2999:3036   */\n      tag_183\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2986:3036   */\n      swap1\n      pop\n        /* \"#utility.yul\":2902:3042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3048:3207   */\n    tag_185:\n        /* \"#utility.yul\":3149:3200   */\n      tag_254\n        /* \"#utility.yul\":3194:3199   */\n      dup2\n        /* \"#utility.yul\":3149:3200   */\n      tag_184\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3144:3147   */\n      dup3\n        /* \"#utility.yul\":3137:3201   */\n      mstore\n        /* \"#utility.yul\":3048:3207   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3463   */\n    tag_51:\n        /* \"#utility.yul\":3320:3324   */\n      0x00\n        /* \"#utility.yul\":3358:3360   */\n      0x20\n        /* \"#utility.yul\":3347:3356   */\n      dup3\n        /* \"#utility.yul\":3343:3361   */\n      add\n        /* \"#utility.yul\":3335:3361   */\n      swap1\n      pop\n        /* \"#utility.yul\":3371:3456   */\n      tag_256\n        /* \"#utility.yul\":3453:3454   */\n      0x00\n        /* \"#utility.yul\":3442:3451   */\n      dup4\n        /* \"#utility.yul\":3438:3455   */\n      add\n        /* \"#utility.yul\":3429:3435   */\n      dup5\n        /* \"#utility.yul\":3371:3456   */\n      tag_185\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3213:3463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3469:3801   */\n    tag_67:\n        /* \"#utility.yul\":3590:3594   */\n      0x00\n        /* \"#utility.yul\":3628:3630   */\n      0x40\n        /* \"#utility.yul\":3617:3626   */\n      dup3\n        /* \"#utility.yul\":3613:3631   */\n      add\n        /* \"#utility.yul\":3605:3631   */\n      swap1\n      pop\n        /* \"#utility.yul\":3641:3712   */\n      tag_258\n        /* \"#utility.yul\":3709:3710   */\n      0x00\n        /* \"#utility.yul\":3698:3707   */\n      dup4\n        /* \"#utility.yul\":3694:3711   */\n      add\n        /* \"#utility.yul\":3685:3691   */\n      dup6\n        /* \"#utility.yul\":3641:3712   */\n      tag_169\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":3722:3794   */\n      tag_259\n        /* \"#utility.yul\":3790:3792   */\n      0x20\n        /* \"#utility.yul\":3779:3788   */\n      dup4\n        /* \"#utility.yul\":3775:3793   */\n      add\n        /* \"#utility.yul\":3766:3772   */\n      dup5\n        /* \"#utility.yul\":3722:3794   */\n      tag_169\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3469:3801   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3807:3976   */\n    tag_186:\n        /* \"#utility.yul\":3891:3902   */\n      0x00\n        /* \"#utility.yul\":3925:3931   */\n      dup3\n        /* \"#utility.yul\":3920:3923   */\n      dup3\n        /* \"#utility.yul\":3913:3932   */\n      mstore\n        /* \"#utility.yul\":3965:3969   */\n      0x20\n        /* \"#utility.yul\":3960:3963   */\n      dup3\n        /* \"#utility.yul\":3956:3970   */\n      add\n        /* \"#utility.yul\":3941:3970   */\n      swap1\n      pop\n        /* \"#utility.yul\":3807:3976   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3982:4163   */\n    tag_187:\n        /* \"#utility.yul\":4122:4155   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4118:4119   */\n      0x00\n        /* \"#utility.yul\":4110:4116   */\n      dup3\n        /* \"#utility.yul\":4106:4120   */\n      add\n        /* \"#utility.yul\":4099:4156   */\n      mstore\n        /* \"#utility.yul\":3982:4163   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4169:4535   */\n    tag_188:\n        /* \"#utility.yul\":4311:4314   */\n      0x00\n        /* \"#utility.yul\":4332:4399   */\n      tag_263\n        /* \"#utility.yul\":4396:4398   */\n      0x1f\n        /* \"#utility.yul\":4391:4394   */\n      dup4\n        /* \"#utility.yul\":4332:4399   */\n      tag_186\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4325:4399   */\n      swap2\n      pop\n        /* \"#utility.yul\":4408:4501   */\n      tag_264\n        /* \"#utility.yul\":4497:4500   */\n      dup3\n        /* \"#utility.yul\":4408:4501   */\n      tag_187\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4526:4528   */\n      0x20\n        /* \"#utility.yul\":4521:4524   */\n      dup3\n        /* \"#utility.yul\":4517:4529   */\n      add\n        /* \"#utility.yul\":4510:4529   */\n      swap1\n      pop\n        /* \"#utility.yul\":4169:4535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4541:4960   */\n    tag_86:\n        /* \"#utility.yul\":4707:4711   */\n      0x00\n        /* \"#utility.yul\":4745:4747   */\n      0x20\n        /* \"#utility.yul\":4734:4743   */\n      dup3\n        /* \"#utility.yul\":4730:4748   */\n      add\n        /* \"#utility.yul\":4722:4748   */\n      swap1\n      pop\n        /* \"#utility.yul\":4794:4803   */\n      dup2\n        /* \"#utility.yul\":4788:4792   */\n      dup2\n        /* \"#utility.yul\":4784:4804   */\n      sub\n        /* \"#utility.yul\":4780:4781   */\n      0x00\n        /* \"#utility.yul\":4769:4778   */\n      dup4\n        /* \"#utility.yul\":4765:4782   */\n      add\n        /* \"#utility.yul\":4758:4805   */\n      mstore\n        /* \"#utility.yul\":4822:4953   */\n      tag_266\n        /* \"#utility.yul\":4948:4952   */\n      dup2\n        /* \"#utility.yul\":4822:4953   */\n      tag_188\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4814:4953   */\n      swap1\n      pop\n        /* \"#utility.yul\":4541:4960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4966:5145   */\n    tag_189:\n        /* \"#utility.yul\":5106:5137   */\n      0x43617070656443726f776473616c653a20636170206578636565646564000000\n        /* \"#utility.yul\":5102:5103   */\n      0x00\n        /* \"#utility.yul\":5094:5100   */\n      dup3\n        /* \"#utility.yul\":5090:5104   */\n      add\n        /* \"#utility.yul\":5083:5138   */\n      mstore\n        /* \"#utility.yul\":4966:5145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5151:5517   */\n    tag_190:\n        /* \"#utility.yul\":5293:5296   */\n      0x00\n        /* \"#utility.yul\":5314:5381   */\n      tag_269\n        /* \"#utility.yul\":5378:5380   */\n      0x1d\n        /* \"#utility.yul\":5373:5376   */\n      dup4\n        /* \"#utility.yul\":5314:5381   */\n      tag_186\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5307:5381   */\n      swap2\n      pop\n        /* \"#utility.yul\":5390:5483   */\n      tag_270\n        /* \"#utility.yul\":5479:5482   */\n      dup3\n        /* \"#utility.yul\":5390:5483   */\n      tag_189\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5508:5510   */\n      0x20\n        /* \"#utility.yul\":5503:5506   */\n      dup3\n        /* \"#utility.yul\":5499:5511   */\n      add\n        /* \"#utility.yul\":5492:5511   */\n      swap1\n      pop\n        /* \"#utility.yul\":5151:5517   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5942   */\n    tag_94:\n        /* \"#utility.yul\":5689:5693   */\n      0x00\n        /* \"#utility.yul\":5727:5729   */\n      0x20\n        /* \"#utility.yul\":5716:5725   */\n      dup3\n        /* \"#utility.yul\":5712:5730   */\n      add\n        /* \"#utility.yul\":5704:5730   */\n      swap1\n      pop\n        /* \"#utility.yul\":5776:5785   */\n      dup2\n        /* \"#utility.yul\":5770:5774   */\n      dup2\n        /* \"#utility.yul\":5766:5786   */\n      sub\n        /* \"#utility.yul\":5762:5763   */\n      0x00\n        /* \"#utility.yul\":5751:5760   */\n      dup4\n        /* \"#utility.yul\":5747:5764   */\n      add\n        /* \"#utility.yul\":5740:5787   */\n      mstore\n        /* \"#utility.yul\":5804:5935   */\n      tag_272\n        /* \"#utility.yul\":5930:5934   */\n      dup2\n        /* \"#utility.yul\":5804:5935   */\n      tag_190\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5796:5935   */\n      swap1\n      pop\n        /* \"#utility.yul\":5523:5942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5948:6128   */\n    tag_191:\n        /* \"#utility.yul\":5996:6073   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5993:5994   */\n      0x00\n        /* \"#utility.yul\":5986:6074   */\n      mstore\n        /* \"#utility.yul\":6093:6097   */\n      0x11\n        /* \"#utility.yul\":6090:6091   */\n      0x04\n        /* \"#utility.yul\":6083:6098   */\n      mstore\n        /* \"#utility.yul\":6117:6121   */\n      0x24\n        /* \"#utility.yul\":6114:6115   */\n      0x00\n        /* \"#utility.yul\":6107:6122   */\n      revert\n        /* \"#utility.yul\":6134:6325   */\n    tag_100:\n        /* \"#utility.yul\":6174:6177   */\n      0x00\n        /* \"#utility.yul\":6193:6213   */\n      tag_275\n        /* \"#utility.yul\":6211:6212   */\n      dup3\n        /* \"#utility.yul\":6193:6213   */\n      tag_168\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":6188:6213   */\n      swap2\n      pop\n        /* \"#utility.yul\":6227:6247   */\n      tag_276\n        /* \"#utility.yul\":6245:6246   */\n      dup4\n        /* \"#utility.yul\":6227:6247   */\n      tag_168\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6222:6247   */\n      swap3\n      pop\n        /* \"#utility.yul\":6270:6271   */\n      dup3\n        /* \"#utility.yul\":6267:6268   */\n      dup3\n        /* \"#utility.yul\":6263:6272   */\n      add\n        /* \"#utility.yul\":6256:6272   */\n      swap1\n      pop\n        /* \"#utility.yul\":6291:6294   */\n      dup1\n        /* \"#utility.yul\":6288:6289   */\n      dup3\n        /* \"#utility.yul\":6285:6295   */\n      gt\n        /* \"#utility.yul\":6282:6318   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":6298:6316   */\n      tag_278\n      tag_191\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":6282:6318   */\n    tag_277:\n        /* \"#utility.yul\":6134:6325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6331:6560   */\n    tag_192:\n        /* \"#utility.yul\":6471:6505   */\n      0x43726f776473616c653a2062656e656669636961727920697320746865207a65\n        /* \"#utility.yul\":6467:6468   */\n      0x00\n        /* \"#utility.yul\":6459:6465   */\n      dup3\n        /* \"#utility.yul\":6455:6469   */\n      add\n        /* \"#utility.yul\":6448:6506   */\n      mstore\n        /* \"#utility.yul\":6540:6552   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6535:6537   */\n      0x20\n        /* \"#utility.yul\":6527:6533   */\n      dup3\n        /* \"#utility.yul\":6523:6538   */\n      add\n        /* \"#utility.yul\":6516:6553   */\n      mstore\n        /* \"#utility.yul\":6331:6560   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6566:6932   */\n    tag_193:\n        /* \"#utility.yul\":6708:6711   */\n      0x00\n        /* \"#utility.yul\":6729:6796   */\n      tag_281\n        /* \"#utility.yul\":6793:6795   */\n      0x2a\n        /* \"#utility.yul\":6788:6791   */\n      dup4\n        /* \"#utility.yul\":6729:6796   */\n      tag_186\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":6722:6796   */\n      swap2\n      pop\n        /* \"#utility.yul\":6805:6898   */\n      tag_282\n        /* \"#utility.yul\":6894:6897   */\n      dup3\n        /* \"#utility.yul\":6805:6898   */\n      tag_192\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6923:6925   */\n      0x40\n        /* \"#utility.yul\":6918:6921   */\n      dup3\n        /* \"#utility.yul\":6914:6926   */\n      add\n        /* \"#utility.yul\":6907:6926   */\n      swap1\n      pop\n        /* \"#utility.yul\":6566:6932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6938:7357   */\n    tag_113:\n        /* \"#utility.yul\":7104:7108   */\n      0x00\n        /* \"#utility.yul\":7142:7144   */\n      0x20\n        /* \"#utility.yul\":7131:7140   */\n      dup3\n        /* \"#utility.yul\":7127:7145   */\n      add\n        /* \"#utility.yul\":7119:7145   */\n      swap1\n      pop\n        /* \"#utility.yul\":7191:7200   */\n      dup2\n        /* \"#utility.yul\":7185:7189   */\n      dup2\n        /* \"#utility.yul\":7181:7201   */\n      sub\n        /* \"#utility.yul\":7177:7178   */\n      0x00\n        /* \"#utility.yul\":7166:7175   */\n      dup4\n        /* \"#utility.yul\":7162:7179   */\n      add\n        /* \"#utility.yul\":7155:7202   */\n      mstore\n        /* \"#utility.yul\":7219:7350   */\n      tag_284\n        /* \"#utility.yul\":7345:7349   */\n      dup2\n        /* \"#utility.yul\":7219:7350   */\n      tag_193\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7211:7350   */\n      swap1\n      pop\n        /* \"#utility.yul\":6938:7357   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7363:7538   */\n    tag_194:\n        /* \"#utility.yul\":7503:7530   */\n      0x43726f776473616c653a20776569416d6f756e74206973203000000000000000\n        /* \"#utility.yul\":7499:7500   */\n      0x00\n        /* \"#utility.yul\":7491:7497   */\n      dup3\n        /* \"#utility.yul\":7487:7501   */\n      add\n        /* \"#utility.yul\":7480:7531   */\n      mstore\n        /* \"#utility.yul\":7363:7538   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7544:7910   */\n    tag_195:\n        /* \"#utility.yul\":7686:7689   */\n      0x00\n        /* \"#utility.yul\":7707:7774   */\n      tag_287\n        /* \"#utility.yul\":7771:7773   */\n      0x19\n        /* \"#utility.yul\":7766:7769   */\n      dup4\n        /* \"#utility.yul\":7707:7774   */\n      tag_186\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":7700:7774   */\n      swap2\n      pop\n        /* \"#utility.yul\":7783:7876   */\n      tag_288\n        /* \"#utility.yul\":7872:7875   */\n      dup3\n        /* \"#utility.yul\":7783:7876   */\n      tag_194\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":7901:7903   */\n      0x20\n        /* \"#utility.yul\":7896:7899   */\n      dup3\n        /* \"#utility.yul\":7892:7904   */\n      add\n        /* \"#utility.yul\":7885:7904   */\n      swap1\n      pop\n        /* \"#utility.yul\":7544:7910   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7916:8335   */\n    tag_116:\n        /* \"#utility.yul\":8082:8086   */\n      0x00\n        /* \"#utility.yul\":8120:8122   */\n      0x20\n        /* \"#utility.yul\":8109:8118   */\n      dup3\n        /* \"#utility.yul\":8105:8123   */\n      add\n        /* \"#utility.yul\":8097:8123   */\n      swap1\n      pop\n        /* \"#utility.yul\":8169:8178   */\n      dup2\n        /* \"#utility.yul\":8163:8167   */\n      dup2\n        /* \"#utility.yul\":8159:8179   */\n      sub\n        /* \"#utility.yul\":8155:8156   */\n      0x00\n        /* \"#utility.yul\":8144:8153   */\n      dup4\n        /* \"#utility.yul\":8140:8157   */\n      add\n        /* \"#utility.yul\":8133:8180   */\n      mstore\n        /* \"#utility.yul\":8197:8328   */\n      tag_290\n        /* \"#utility.yul\":8323:8327   */\n      dup2\n        /* \"#utility.yul\":8197:8328   */\n      tag_195\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8189:8328   */\n      swap1\n      pop\n        /* \"#utility.yul\":7916:8335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8341:8751   */\n    tag_119:\n        /* \"#utility.yul\":8381:8388   */\n      0x00\n        /* \"#utility.yul\":8404:8424   */\n      tag_292\n        /* \"#utility.yul\":8422:8423   */\n      dup3\n        /* \"#utility.yul\":8404:8424   */\n      tag_168\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":8399:8424   */\n      swap2\n      pop\n        /* \"#utility.yul\":8438:8458   */\n      tag_293\n        /* \"#utility.yul\":8456:8457   */\n      dup4\n        /* \"#utility.yul\":8438:8458   */\n      tag_168\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8433:8458   */\n      swap3\n      pop\n        /* \"#utility.yul\":8493:8494   */\n      dup3\n        /* \"#utility.yul\":8490:8491   */\n      dup3\n        /* \"#utility.yul\":8486:8495   */\n      mul\n        /* \"#utility.yul\":8515:8545   */\n      tag_294\n        /* \"#utility.yul\":8533:8544   */\n      dup2\n        /* \"#utility.yul\":8515:8545   */\n      tag_168\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":8504:8545   */\n      swap2\n      pop\n        /* \"#utility.yul\":8694:8695   */\n      dup3\n        /* \"#utility.yul\":8685:8692   */\n      dup3\n        /* \"#utility.yul\":8681:8696   */\n      div\n        /* \"#utility.yul\":8678:8679   */\n      dup5\n        /* \"#utility.yul\":8675:8697   */\n      eq\n        /* \"#utility.yul\":8655:8656   */\n      dup4\n        /* \"#utility.yul\":8648:8657   */\n      iszero\n        /* \"#utility.yul\":8628:8711   */\n      or\n        /* \"#utility.yul\":8605:8744   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":8724:8742   */\n      tag_296\n      tag_191\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8605:8744   */\n    tag_295:\n        /* \"#utility.yul\":8389:8751   */\n      pop\n        /* \"#utility.yul\":8341:8751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8757:8875   */\n    tag_196:\n        /* \"#utility.yul\":8844:8868   */\n      tag_298\n        /* \"#utility.yul\":8862:8867   */\n      dup2\n        /* \"#utility.yul\":8844:8868   */\n      tag_178\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":8839:8842   */\n      dup3\n        /* \"#utility.yul\":8832:8869   */\n      mstore\n        /* \"#utility.yul\":8757:8875   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8881:9213   */\n    tag_126:\n        /* \"#utility.yul\":9002:9006   */\n      0x00\n        /* \"#utility.yul\":9040:9042   */\n      0x40\n        /* \"#utility.yul\":9029:9038   */\n      dup3\n        /* \"#utility.yul\":9025:9043   */\n      add\n        /* \"#utility.yul\":9017:9043   */\n      swap1\n      pop\n        /* \"#utility.yul\":9053:9124   */\n      tag_300\n        /* \"#utility.yul\":9121:9122   */\n      0x00\n        /* \"#utility.yul\":9110:9119   */\n      dup4\n        /* \"#utility.yul\":9106:9123   */\n      add\n        /* \"#utility.yul\":9097:9103   */\n      dup6\n        /* \"#utility.yul\":9053:9124   */\n      tag_196\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":9134:9206   */\n      tag_301\n        /* \"#utility.yul\":9202:9204   */\n      0x20\n        /* \"#utility.yul\":9191:9200   */\n      dup4\n        /* \"#utility.yul\":9187:9205   */\n      add\n        /* \"#utility.yul\":9178:9184   */\n      dup5\n        /* \"#utility.yul\":9134:9206   */\n      tag_169\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":8881:9213   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9219:9335   */\n    tag_197:\n        /* \"#utility.yul\":9289:9310   */\n      tag_303\n        /* \"#utility.yul\":9304:9309   */\n      dup2\n        /* \"#utility.yul\":9289:9310   */\n      tag_170\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":9282:9287   */\n      dup2\n        /* \"#utility.yul\":9279:9311   */\n      eq\n        /* \"#utility.yul\":9269:9329   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":9325:9326   */\n      0x00\n        /* \"#utility.yul\":9322:9323   */\n      dup1\n        /* \"#utility.yul\":9315:9327   */\n      revert\n        /* \"#utility.yul\":9269:9329   */\n    tag_304:\n        /* \"#utility.yul\":9219:9335   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9341:9478   */\n    tag_198:\n        /* \"#utility.yul\":9395:9400   */\n      0x00\n        /* \"#utility.yul\":9426:9432   */\n      dup2\n        /* \"#utility.yul\":9420:9433   */\n      mload\n        /* \"#utility.yul\":9411:9433   */\n      swap1\n      pop\n        /* \"#utility.yul\":9442:9472   */\n      tag_306\n        /* \"#utility.yul\":9466:9471   */\n      dup2\n        /* \"#utility.yul\":9442:9472   */\n      tag_197\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":9341:9478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9484:9829   */\n    tag_133:\n        /* \"#utility.yul\":9551:9557   */\n      0x00\n        /* \"#utility.yul\":9600:9602   */\n      0x20\n        /* \"#utility.yul\":9588:9597   */\n      dup3\n        /* \"#utility.yul\":9579:9586   */\n      dup5\n        /* \"#utility.yul\":9575:9598   */\n      sub\n        /* \"#utility.yul\":9571:9603   */\n      slt\n        /* \"#utility.yul\":9568:9687   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":9606:9685   */\n      tag_309\n      tag_176\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":9568:9687   */\n    tag_308:\n        /* \"#utility.yul\":9726:9727   */\n      0x00\n        /* \"#utility.yul\":9751:9812   */\n      tag_310\n        /* \"#utility.yul\":9804:9811   */\n      dup5\n        /* \"#utility.yul\":9795:9801   */\n      dup3\n        /* \"#utility.yul\":9784:9793   */\n      dup6\n        /* \"#utility.yul\":9780:9802   */\n      add\n        /* \"#utility.yul\":9751:9812   */\n      tag_198\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":9741:9812   */\n      swap2\n      pop\n        /* \"#utility.yul\":9697:9822   */\n      pop\n        /* \"#utility.yul\":9484:9829   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9835:10064   */\n    tag_199:\n        /* \"#utility.yul\":9975:10009   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":9971:9972   */\n      0x00\n        /* \"#utility.yul\":9963:9969   */\n      dup3\n        /* \"#utility.yul\":9959:9973   */\n      add\n        /* \"#utility.yul\":9952:10010   */\n      mstore\n        /* \"#utility.yul\":10044:10056   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10039:10041   */\n      0x20\n        /* \"#utility.yul\":10031:10037   */\n      dup3\n        /* \"#utility.yul\":10027:10042   */\n      add\n        /* \"#utility.yul\":10020:10057   */\n      mstore\n        /* \"#utility.yul\":9835:10064   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10070:10436   */\n    tag_200:\n        /* \"#utility.yul\":10212:10215   */\n      0x00\n        /* \"#utility.yul\":10233:10300   */\n      tag_313\n        /* \"#utility.yul\":10297:10299   */\n      0x2a\n        /* \"#utility.yul\":10292:10295   */\n      dup4\n        /* \"#utility.yul\":10233:10300   */\n      tag_186\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":10226:10300   */\n      swap2\n      pop\n        /* \"#utility.yul\":10309:10402   */\n      tag_314\n        /* \"#utility.yul\":10398:10401   */\n      dup3\n        /* \"#utility.yul\":10309:10402   */\n      tag_199\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":10427:10429   */\n      0x40\n        /* \"#utility.yul\":10422:10425   */\n      dup3\n        /* \"#utility.yul\":10418:10430   */\n      add\n        /* \"#utility.yul\":10411:10430   */\n      swap1\n      pop\n        /* \"#utility.yul\":10070:10436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10442:10861   */\n    tag_136:\n        /* \"#utility.yul\":10608:10612   */\n      0x00\n        /* \"#utility.yul\":10646:10648   */\n      0x20\n        /* \"#utility.yul\":10635:10644   */\n      dup3\n        /* \"#utility.yul\":10631:10649   */\n      add\n        /* \"#utility.yul\":10623:10649   */\n      swap1\n      pop\n        /* \"#utility.yul\":10695:10704   */\n      dup2\n        /* \"#utility.yul\":10689:10693   */\n      dup2\n        /* \"#utility.yul\":10685:10705   */\n      sub\n        /* \"#utility.yul\":10681:10682   */\n      0x00\n        /* \"#utility.yul\":10670:10679   */\n      dup4\n        /* \"#utility.yul\":10666:10683   */\n      add\n        /* \"#utility.yul\":10659:10706   */\n      mstore\n        /* \"#utility.yul\":10723:10854   */\n      tag_316\n        /* \"#utility.yul\":10849:10853   */\n      dup2\n        /* \"#utility.yul\":10723:10854   */\n      tag_200\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":10715:10854   */\n      swap1\n      pop\n        /* \"#utility.yul\":10442:10861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10867:11092   */\n    tag_201:\n        /* \"#utility.yul\":11007:11041   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":11003:11004   */\n      0x00\n        /* \"#utility.yul\":10995:11001   */\n      dup3\n        /* \"#utility.yul\":10991:11005   */\n      add\n        /* \"#utility.yul\":10984:11042   */\n      mstore\n        /* \"#utility.yul\":11076:11084   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11071:11073   */\n      0x20\n        /* \"#utility.yul\":11063:11069   */\n      dup3\n        /* \"#utility.yul\":11059:11074   */\n      add\n        /* \"#utility.yul\":11052:11085   */\n      mstore\n        /* \"#utility.yul\":10867:11092   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11098:11464   */\n    tag_202:\n        /* \"#utility.yul\":11240:11243   */\n      0x00\n        /* \"#utility.yul\":11261:11328   */\n      tag_319\n        /* \"#utility.yul\":11325:11327   */\n      0x26\n        /* \"#utility.yul\":11320:11323   */\n      dup4\n        /* \"#utility.yul\":11261:11328   */\n      tag_186\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":11254:11328   */\n      swap2\n      pop\n        /* \"#utility.yul\":11337:11430   */\n      tag_320\n        /* \"#utility.yul\":11426:11429   */\n      dup3\n        /* \"#utility.yul\":11337:11430   */\n      tag_201\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":11455:11457   */\n      0x40\n        /* \"#utility.yul\":11450:11453   */\n      dup3\n        /* \"#utility.yul\":11446:11458   */\n      add\n        /* \"#utility.yul\":11439:11458   */\n      swap1\n      pop\n        /* \"#utility.yul\":11098:11464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11470:11889   */\n    tag_143:\n        /* \"#utility.yul\":11636:11640   */\n      0x00\n        /* \"#utility.yul\":11674:11676   */\n      0x20\n        /* \"#utility.yul\":11663:11672   */\n      dup3\n        /* \"#utility.yul\":11659:11677   */\n      add\n        /* \"#utility.yul\":11651:11677   */\n      swap1\n      pop\n        /* \"#utility.yul\":11723:11732   */\n      dup2\n        /* \"#utility.yul\":11717:11721   */\n      dup2\n        /* \"#utility.yul\":11713:11733   */\n      sub\n        /* \"#utility.yul\":11709:11710   */\n      0x00\n        /* \"#utility.yul\":11698:11707   */\n      dup4\n        /* \"#utility.yul\":11694:11711   */\n      add\n        /* \"#utility.yul\":11687:11734   */\n      mstore\n        /* \"#utility.yul\":11751:11882   */\n      tag_322\n        /* \"#utility.yul\":11877:11881   */\n      dup2\n        /* \"#utility.yul\":11751:11882   */\n      tag_202\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":11743:11882   */\n      swap1\n      pop\n        /* \"#utility.yul\":11470:11889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11895:11993   */\n    tag_203:\n        /* \"#utility.yul\":11946:11952   */\n      0x00\n        /* \"#utility.yul\":11980:11985   */\n      dup2\n        /* \"#utility.yul\":11974:11986   */\n      mload\n        /* \"#utility.yul\":11964:11986   */\n      swap1\n      pop\n        /* \"#utility.yul\":11895:11993   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11999:12146   */\n    tag_204:\n        /* \"#utility.yul\":12100:12111   */\n      0x00\n        /* \"#utility.yul\":12137:12140   */\n      dup2\n        /* \"#utility.yul\":12122:12140   */\n      swap1\n      pop\n        /* \"#utility.yul\":11999:12146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12152:12398   */\n    tag_205:\n        /* \"#utility.yul\":12233:12234   */\n      0x00\n        /* \"#utility.yul\":12243:12356   */\n    tag_326:\n        /* \"#utility.yul\":12257:12263   */\n      dup4\n        /* \"#utility.yul\":12254:12255   */\n      dup2\n        /* \"#utility.yul\":12251:12264   */\n      lt\n        /* \"#utility.yul\":12243:12356   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":12342:12343   */\n      dup1\n        /* \"#utility.yul\":12337:12340   */\n      dup3\n        /* \"#utility.yul\":12333:12344   */\n      add\n        /* \"#utility.yul\":12327:12345   */\n      mload\n        /* \"#utility.yul\":12323:12324   */\n      dup2\n        /* \"#utility.yul\":12318:12321   */\n      dup5\n        /* \"#utility.yul\":12314:12325   */\n      add\n        /* \"#utility.yul\":12307:12346   */\n      mstore\n        /* \"#utility.yul\":12279:12281   */\n      0x20\n        /* \"#utility.yul\":12276:12277   */\n      dup2\n        /* \"#utility.yul\":12272:12282   */\n      add\n        /* \"#utility.yul\":12267:12282   */\n      swap1\n      pop\n        /* \"#utility.yul\":12243:12356   */\n      jump(tag_326)\n    tag_328:\n        /* \"#utility.yul\":12390:12391   */\n      0x00\n        /* \"#utility.yul\":12381:12387   */\n      dup5\n        /* \"#utility.yul\":12376:12379   */\n      dup5\n        /* \"#utility.yul\":12372:12388   */\n      add\n        /* \"#utility.yul\":12365:12392   */\n      mstore\n        /* \"#utility.yul\":12214:12398   */\n      pop\n        /* \"#utility.yul\":12152:12398   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12404:12790   */\n    tag_206:\n        /* \"#utility.yul\":12508:12511   */\n      0x00\n        /* \"#utility.yul\":12536:12574   */\n      tag_330\n        /* \"#utility.yul\":12568:12573   */\n      dup3\n        /* \"#utility.yul\":12536:12574   */\n      tag_203\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":12590:12678   */\n      tag_331\n        /* \"#utility.yul\":12671:12677   */\n      dup2\n        /* \"#utility.yul\":12666:12669   */\n      dup6\n        /* \"#utility.yul\":12590:12678   */\n      tag_204\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":12583:12678   */\n      swap4\n      pop\n        /* \"#utility.yul\":12687:12752   */\n      tag_332\n        /* \"#utility.yul\":12745:12751   */\n      dup2\n        /* \"#utility.yul\":12740:12743   */\n      dup6\n        /* \"#utility.yul\":12733:12737   */\n      0x20\n        /* \"#utility.yul\":12726:12731   */\n      dup7\n        /* \"#utility.yul\":12722:12738   */\n      add\n        /* \"#utility.yul\":12687:12752   */\n      tag_205\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":12777:12783   */\n      dup1\n        /* \"#utility.yul\":12772:12775   */\n      dup5\n        /* \"#utility.yul\":12768:12784   */\n      add\n        /* \"#utility.yul\":12761:12784   */\n      swap2\n      pop\n        /* \"#utility.yul\":12512:12790   */\n      pop\n        /* \"#utility.yul\":12404:12790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12796:13067   */\n    tag_145:\n        /* \"#utility.yul\":12926:12929   */\n      0x00\n        /* \"#utility.yul\":12948:13041   */\n      tag_334\n        /* \"#utility.yul\":13037:13040   */\n      dup3\n        /* \"#utility.yul\":13028:13034   */\n      dup5\n        /* \"#utility.yul\":12948:13041   */\n      tag_206\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":12941:13041   */\n      swap2\n      pop\n        /* \"#utility.yul\":13058:13061   */\n      dup2\n        /* \"#utility.yul\":13051:13061   */\n      swap1\n      pop\n        /* \"#utility.yul\":12796:13067   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13073:13252   */\n    tag_207:\n        /* \"#utility.yul\":13213:13244   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":13209:13210   */\n      0x00\n        /* \"#utility.yul\":13201:13207   */\n      dup3\n        /* \"#utility.yul\":13197:13211   */\n      add\n        /* \"#utility.yul\":13190:13245   */\n      mstore\n        /* \"#utility.yul\":13073:13252   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13258:13624   */\n    tag_208:\n        /* \"#utility.yul\":13400:13403   */\n      0x00\n        /* \"#utility.yul\":13421:13488   */\n      tag_337\n        /* \"#utility.yul\":13485:13487   */\n      0x1d\n        /* \"#utility.yul\":13480:13483   */\n      dup4\n        /* \"#utility.yul\":13421:13488   */\n      tag_186\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13414:13488   */\n      swap2\n      pop\n        /* \"#utility.yul\":13497:13590   */\n      tag_338\n        /* \"#utility.yul\":13586:13589   */\n      dup3\n        /* \"#utility.yul\":13497:13590   */\n      tag_207\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":13615:13617   */\n      0x20\n        /* \"#utility.yul\":13610:13613   */\n      dup3\n        /* \"#utility.yul\":13606:13618   */\n      add\n        /* \"#utility.yul\":13599:13618   */\n      swap1\n      pop\n        /* \"#utility.yul\":13258:13624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13630:14049   */\n    tag_158:\n        /* \"#utility.yul\":13796:13800   */\n      0x00\n        /* \"#utility.yul\":13834:13836   */\n      0x20\n        /* \"#utility.yul\":13823:13832   */\n      dup3\n        /* \"#utility.yul\":13819:13837   */\n      add\n        /* \"#utility.yul\":13811:13837   */\n      swap1\n      pop\n        /* \"#utility.yul\":13883:13892   */\n      dup2\n        /* \"#utility.yul\":13877:13881   */\n      dup2\n        /* \"#utility.yul\":13873:13893   */\n      sub\n        /* \"#utility.yul\":13869:13870   */\n      0x00\n        /* \"#utility.yul\":13858:13867   */\n      dup4\n        /* \"#utility.yul\":13854:13871   */\n      add\n        /* \"#utility.yul\":13847:13894   */\n      mstore\n        /* \"#utility.yul\":13911:14042   */\n      tag_340\n        /* \"#utility.yul\":14037:14041   */\n      dup2\n        /* \"#utility.yul\":13911:14042   */\n      tag_208\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":13903:14042   */\n      swap1\n      pop\n        /* \"#utility.yul\":13630:14049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14055:14154   */\n    tag_209:\n        /* \"#utility.yul\":14107:14113   */\n      0x00\n        /* \"#utility.yul\":14141:14146   */\n      dup2\n        /* \"#utility.yul\":14135:14147   */\n      mload\n        /* \"#utility.yul\":14125:14147   */\n      swap1\n      pop\n        /* \"#utility.yul\":14055:14154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14160:14262   */\n    tag_210:\n        /* \"#utility.yul\":14201:14207   */\n      0x00\n        /* \"#utility.yul\":14252:14254   */\n      0x1f\n        /* \"#utility.yul\":14248:14255   */\n      not\n        /* \"#utility.yul\":14243:14245   */\n      0x1f\n        /* \"#utility.yul\":14236:14241   */\n      dup4\n        /* \"#utility.yul\":14232:14246   */\n      add\n        /* \"#utility.yul\":14228:14256   */\n      and\n        /* \"#utility.yul\":14218:14256   */\n      swap1\n      pop\n        /* \"#utility.yul\":14160:14262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14268:14645   */\n    tag_211:\n        /* \"#utility.yul\":14356:14359   */\n      0x00\n        /* \"#utility.yul\":14384:14423   */\n      tag_344\n        /* \"#utility.yul\":14417:14422   */\n      dup3\n        /* \"#utility.yul\":14384:14423   */\n      tag_209\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":14439:14510   */\n      tag_345\n        /* \"#utility.yul\":14503:14509   */\n      dup2\n        /* \"#utility.yul\":14498:14501   */\n      dup6\n        /* \"#utility.yul\":14439:14510   */\n      tag_186\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":14432:14510   */\n      swap4\n      pop\n        /* \"#utility.yul\":14519:14584   */\n      tag_346\n        /* \"#utility.yul\":14577:14583   */\n      dup2\n        /* \"#utility.yul\":14572:14575   */\n      dup6\n        /* \"#utility.yul\":14565:14569   */\n      0x20\n        /* \"#utility.yul\":14558:14563   */\n      dup7\n        /* \"#utility.yul\":14554:14570   */\n      add\n        /* \"#utility.yul\":14519:14584   */\n      tag_205\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":14609:14638   */\n      tag_347\n        /* \"#utility.yul\":14631:14637   */\n      dup2\n        /* \"#utility.yul\":14609:14638   */\n      tag_210\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":14604:14607   */\n      dup5\n        /* \"#utility.yul\":14600:14639   */\n      add\n        /* \"#utility.yul\":14593:14639   */\n      swap2\n      pop\n        /* \"#utility.yul\":14360:14645   */\n      pop\n        /* \"#utility.yul\":14268:14645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14651:14964   */\n    tag_167:\n        /* \"#utility.yul\":14764:14768   */\n      0x00\n        /* \"#utility.yul\":14802:14804   */\n      0x20\n        /* \"#utility.yul\":14791:14800   */\n      dup3\n        /* \"#utility.yul\":14787:14805   */\n      add\n        /* \"#utility.yul\":14779:14805   */\n      swap1\n      pop\n        /* \"#utility.yul\":14851:14860   */\n      dup2\n        /* \"#utility.yul\":14845:14849   */\n      dup2\n        /* \"#utility.yul\":14841:14861   */\n      sub\n        /* \"#utility.yul\":14837:14838   */\n      0x00\n        /* \"#utility.yul\":14826:14835   */\n      dup4\n        /* \"#utility.yul\":14822:14839   */\n      add\n        /* \"#utility.yul\":14815:14862   */\n      mstore\n        /* \"#utility.yul\":14879:14957   */\n      tag_349\n        /* \"#utility.yul\":14952:14956   */\n      dup2\n        /* \"#utility.yul\":14943:14949   */\n      dup5\n        /* \"#utility.yul\":14879:14957   */\n      tag_211\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":14871:14957   */\n      swap1\n      pop\n        /* \"#utility.yul\":14651:14964   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bbeefd1359e4a6070e1ea042f164929a2027fda79e898fe73155b0c4a2ffb2c864736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1311": {
									"entryPoint": null,
									"id": 1311,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_1570": {
									"entryPoint": null,
									"id": 1570,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$142_fromMemory": {
									"entryPoint": 803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address_payablet_contract$_IERC20_$142_fromMemory": {
									"entryPoint": 825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_64e5a6167e9149487c39484a18ce5d080c5288b2e26eed530ccbcf3220dc9f14_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64e5a6167e9149487c39484a18ce5d080c5288b2e26eed530ccbcf3220dc9f14__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$142": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82": {
									"entryPoint": 1210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_64e5a6167e9149487c39484a18ce5d080c5288b2e26eed530ccbcf3220dc9f14": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$142": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6842:9",
										"nodeType": "YulBlock",
										"src": "0:6842:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:32:9",
													"nodeType": "YulBlock",
													"src": "379:32:9",
													"statements": [
														{
															"nativeSrc": "389:16:9",
															"nodeType": "YulAssignment",
															"src": "389:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:9",
																"nodeType": "YulIdentifier",
																"src": "400:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:77:9"
											},
											{
												"body": {
													"nativeSrc": "460:79:9",
													"nodeType": "YulBlock",
													"src": "460:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:9",
																"nodeType": "YulBlock",
																"src": "517:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:9",
																					"nodeType": "YulLiteral",
																					"src": "526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:9",
																					"nodeType": "YulLiteral",
																					"src": "529:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:9"
																			},
																			"nativeSrc": "519:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:9"
																		},
																		"nativeSrc": "519:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:9"
																				},
																				"nativeSrc": "490:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:9"
																		},
																		"nativeSrc": "480:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:9"
																},
																"nativeSrc": "473:43:9",
																"nodeType": "YulFunctionCall",
																"src": "473:43:9"
															},
															"nativeSrc": "470:63:9",
															"nodeType": "YulIf",
															"src": "470:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:9",
														"nodeType": "YulTypedName",
														"src": "453:5:9",
														"type": ""
													}
												],
												"src": "417:122:9"
											},
											{
												"body": {
													"nativeSrc": "608:80:9",
													"nodeType": "YulBlock",
													"src": "608:80:9",
													"statements": [
														{
															"nativeSrc": "618:22:9",
															"nodeType": "YulAssignment",
															"src": "618:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:9"
																},
																"nativeSrc": "627:13:9",
																"nodeType": "YulFunctionCall",
																"src": "627:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:9"
																},
																"nativeSrc": "649:33:9",
																"nodeType": "YulFunctionCall",
																"src": "649:33:9"
															},
															"nativeSrc": "649:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:9",
														"nodeType": "YulTypedName",
														"src": "586:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:9",
														"nodeType": "YulTypedName",
														"src": "594:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:9",
														"nodeType": "YulTypedName",
														"src": "602:5:9",
														"type": ""
													}
												],
												"src": "545:143:9"
											},
											{
												"body": {
													"nativeSrc": "739:81:9",
													"nodeType": "YulBlock",
													"src": "739:81:9",
													"statements": [
														{
															"nativeSrc": "749:65:9",
															"nodeType": "YulAssignment",
															"src": "749:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:9",
																		"nodeType": "YulLiteral",
																		"src": "771:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:9"
																},
																"nativeSrc": "760:54:9",
																"nodeType": "YulFunctionCall",
																"src": "760:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:9",
														"nodeType": "YulTypedName",
														"src": "721:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:9",
														"nodeType": "YulTypedName",
														"src": "731:7:9",
														"type": ""
													}
												],
												"src": "694:126:9"
											},
											{
												"body": {
													"nativeSrc": "879:51:9",
													"nodeType": "YulBlock",
													"src": "879:51:9",
													"statements": [
														{
															"nativeSrc": "889:35:9",
															"nodeType": "YulAssignment",
															"src": "889:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "918:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "918:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "900:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "900:17:9"
																},
																"nativeSrc": "900:24:9",
																"nodeType": "YulFunctionCall",
																"src": "900:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "889:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "889:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "826:104:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "861:5:9",
														"nodeType": "YulTypedName",
														"src": "861:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "871:7:9",
														"nodeType": "YulTypedName",
														"src": "871:7:9",
														"type": ""
													}
												],
												"src": "826:104:9"
											},
											{
												"body": {
													"nativeSrc": "987:87:9",
													"nodeType": "YulBlock",
													"src": "987:87:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1052:16:9",
																"nodeType": "YulBlock",
																"src": "1052:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1061:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1061:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1064:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1064:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1054:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1054:6:9"
																			},
																			"nativeSrc": "1054:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1054:12:9"
																		},
																		"nativeSrc": "1054:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1054:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1010:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1010:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1043:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1043:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "1017:25:9",
																					"nodeType": "YulIdentifier",
																					"src": "1017:25:9"
																				},
																				"nativeSrc": "1017:32:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1017:32:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1007:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1007:2:9"
																		},
																		"nativeSrc": "1007:43:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1007:43:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1000:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:9"
																},
																"nativeSrc": "1000:51:9",
																"nodeType": "YulFunctionCall",
																"src": "1000:51:9"
															},
															"nativeSrc": "997:71:9",
															"nodeType": "YulIf",
															"src": "997:71:9"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "936:138:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "980:5:9",
														"nodeType": "YulTypedName",
														"src": "980:5:9",
														"type": ""
													}
												],
												"src": "936:138:9"
											},
											{
												"body": {
													"nativeSrc": "1151:88:9",
													"nodeType": "YulBlock",
													"src": "1151:88:9",
													"statements": [
														{
															"nativeSrc": "1161:22:9",
															"nodeType": "YulAssignment",
															"src": "1161:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1176:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1176:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1170:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1170:5:9"
																},
																"nativeSrc": "1170:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1170:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1161:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1161:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1227:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1227:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "1192:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "1192:34:9"
																},
																"nativeSrc": "1192:41:9",
																"nodeType": "YulFunctionCall",
																"src": "1192:41:9"
															},
															"nativeSrc": "1192:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "1192:41:9"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nativeSrc": "1080:159:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1129:6:9",
														"nodeType": "YulTypedName",
														"src": "1129:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1137:3:9",
														"nodeType": "YulTypedName",
														"src": "1137:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1145:5:9",
														"nodeType": "YulTypedName",
														"src": "1145:5:9",
														"type": ""
													}
												],
												"src": "1080:159:9"
											},
											{
												"body": {
													"nativeSrc": "1290:51:9",
													"nodeType": "YulBlock",
													"src": "1290:51:9",
													"statements": [
														{
															"nativeSrc": "1300:35:9",
															"nodeType": "YulAssignment",
															"src": "1300:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1329:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1329:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1311:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1311:17:9"
																},
																"nativeSrc": "1311:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1311:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1300:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1300:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1245:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1272:5:9",
														"nodeType": "YulTypedName",
														"src": "1272:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1282:7:9",
														"nodeType": "YulTypedName",
														"src": "1282:7:9",
														"type": ""
													}
												],
												"src": "1245:96:9"
											},
											{
												"body": {
													"nativeSrc": "1406:51:9",
													"nodeType": "YulBlock",
													"src": "1406:51:9",
													"statements": [
														{
															"nativeSrc": "1416:35:9",
															"nodeType": "YulAssignment",
															"src": "1416:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1445:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1445:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1427:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1427:17:9"
																},
																"nativeSrc": "1427:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1427:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1416:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1416:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$142",
												"nativeSrc": "1347:110:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1388:5:9",
														"nodeType": "YulTypedName",
														"src": "1388:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1398:7:9",
														"nodeType": "YulTypedName",
														"src": "1398:7:9",
														"type": ""
													}
												],
												"src": "1347:110:9"
											},
											{
												"body": {
													"nativeSrc": "1520:93:9",
													"nodeType": "YulBlock",
													"src": "1520:93:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1591:16:9",
																"nodeType": "YulBlock",
																"src": "1591:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1600:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1600:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1603:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1603:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1593:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:9"
																			},
																			"nativeSrc": "1593:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1593:12:9"
																		},
																		"nativeSrc": "1593:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1593:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1543:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1543:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1582:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1582:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$142",
																					"nativeSrc": "1550:31:9",
																					"nodeType": "YulIdentifier",
																					"src": "1550:31:9"
																				},
																				"nativeSrc": "1550:38:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1550:38:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1540:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1540:2:9"
																		},
																		"nativeSrc": "1540:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1540:49:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1533:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:9"
																},
																"nativeSrc": "1533:57:9",
																"nodeType": "YulFunctionCall",
																"src": "1533:57:9"
															},
															"nativeSrc": "1530:77:9",
															"nodeType": "YulIf",
															"src": "1530:77:9"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$142",
												"nativeSrc": "1463:150:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1513:5:9",
														"nodeType": "YulTypedName",
														"src": "1513:5:9",
														"type": ""
													}
												],
												"src": "1463:150:9"
											},
											{
												"body": {
													"nativeSrc": "1696:94:9",
													"nodeType": "YulBlock",
													"src": "1696:94:9",
													"statements": [
														{
															"nativeSrc": "1706:22:9",
															"nodeType": "YulAssignment",
															"src": "1706:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1721:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1721:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1715:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1715:5:9"
																},
																"nativeSrc": "1715:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1715:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1706:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1706:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1778:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1778:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$142",
																	"nativeSrc": "1737:40:9",
																	"nodeType": "YulIdentifier",
																	"src": "1737:40:9"
																},
																"nativeSrc": "1737:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1737:47:9"
															},
															"nativeSrc": "1737:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1737:47:9"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$142_fromMemory",
												"nativeSrc": "1619:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1674:6:9",
														"nodeType": "YulTypedName",
														"src": "1674:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1682:3:9",
														"nodeType": "YulTypedName",
														"src": "1682:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1690:5:9",
														"nodeType": "YulTypedName",
														"src": "1690:5:9",
														"type": ""
													}
												],
												"src": "1619:171:9"
											},
											{
												"body": {
													"nativeSrc": "1946:714:9",
													"nodeType": "YulBlock",
													"src": "1946:714:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1993:83:9",
																"nodeType": "YulBlock",
																"src": "1993:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1995:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1995:77:9"
																			},
																			"nativeSrc": "1995:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1995:79:9"
																		},
																		"nativeSrc": "1995:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1995:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1967:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1967:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1976:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1976:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1963:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1963:3:9"
																		},
																		"nativeSrc": "1963:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1963:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1988:3:9",
																		"nodeType": "YulLiteral",
																		"src": "1988:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1959:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1959:3:9"
																},
																"nativeSrc": "1959:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1959:33:9"
															},
															"nativeSrc": "1956:120:9",
															"nodeType": "YulIf",
															"src": "1956:120:9"
														},
														{
															"nativeSrc": "2086:128:9",
															"nodeType": "YulBlock",
															"src": "2086:128:9",
															"statements": [
																{
																	"nativeSrc": "2101:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2115:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2115:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2105:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2130:74:9",
																	"nodeType": "YulAssignment",
																	"src": "2130:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2176:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2176:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2187:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2187:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2172:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2172:3:9"
																				},
																				"nativeSrc": "2172:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2172:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2196:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2196:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2140:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "2140:31:9"
																		},
																		"nativeSrc": "2140:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2140:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2130:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2130:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2224:129:9",
															"nodeType": "YulBlock",
															"src": "2224:129:9",
															"statements": [
																{
																	"nativeSrc": "2239:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2239:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2253:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2253:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2243:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2243:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2269:74:9",
																	"nodeType": "YulAssignment",
																	"src": "2269:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2315:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2315:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2326:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2326:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2311:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2311:3:9"
																				},
																				"nativeSrc": "2311:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2311:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2335:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2335:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2279:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "2279:31:9"
																		},
																		"nativeSrc": "2279:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2279:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2269:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2269:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2363:137:9",
															"nodeType": "YulBlock",
															"src": "2363:137:9",
															"statements": [
																{
																	"nativeSrc": "2378:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2378:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2392:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2382:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2382:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2408:82:9",
																	"nodeType": "YulAssignment",
																	"src": "2408:82:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2462:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2462:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2473:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2473:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2458:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2458:3:9"
																				},
																				"nativeSrc": "2458:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2458:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2482:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2482:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nativeSrc": "2418:39:9",
																			"nodeType": "YulIdentifier",
																			"src": "2418:39:9"
																		},
																		"nativeSrc": "2418:72:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2418:72:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2408:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2408:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2510:143:9",
															"nodeType": "YulBlock",
															"src": "2510:143:9",
															"statements": [
																{
																	"nativeSrc": "2525:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2525:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2539:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2539:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2529:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2529:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2555:88:9",
																	"nodeType": "YulAssignment",
																	"src": "2555:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2615:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2615:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2626:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2626:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2611:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2611:3:9"
																				},
																				"nativeSrc": "2611:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2611:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2635:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2635:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$142_fromMemory",
																			"nativeSrc": "2565:45:9",
																			"nodeType": "YulIdentifier",
																			"src": "2565:45:9"
																		},
																		"nativeSrc": "2565:78:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2565:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2555:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2555:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address_payablet_contract$_IERC20_$142_fromMemory",
												"nativeSrc": "1796:864:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1892:9:9",
														"nodeType": "YulTypedName",
														"src": "1892:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1903:7:9",
														"nodeType": "YulTypedName",
														"src": "1903:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1915:6:9",
														"nodeType": "YulTypedName",
														"src": "1915:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1923:6:9",
														"nodeType": "YulTypedName",
														"src": "1923:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1931:6:9",
														"nodeType": "YulTypedName",
														"src": "1931:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1939:6:9",
														"nodeType": "YulTypedName",
														"src": "1939:6:9",
														"type": ""
													}
												],
												"src": "1796:864:9"
											},
											{
												"body": {
													"nativeSrc": "2762:73:9",
													"nodeType": "YulBlock",
													"src": "2762:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2779:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2779:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2784:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2772:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2772:6:9"
																},
																"nativeSrc": "2772:19:9",
																"nodeType": "YulFunctionCall",
																"src": "2772:19:9"
															},
															"nativeSrc": "2772:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "2772:19:9"
														},
														{
															"nativeSrc": "2800:29:9",
															"nodeType": "YulAssignment",
															"src": "2800:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2819:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2819:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2824:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2824:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2815:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2815:3:9"
																},
																"nativeSrc": "2815:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2815:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2800:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "2800:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2666:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2734:3:9",
														"nodeType": "YulTypedName",
														"src": "2734:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2739:6:9",
														"nodeType": "YulTypedName",
														"src": "2739:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2750:11:9",
														"nodeType": "YulTypedName",
														"src": "2750:11:9",
														"type": ""
													}
												],
												"src": "2666:169:9"
											},
											{
												"body": {
													"nativeSrc": "2947:64:9",
													"nodeType": "YulBlock",
													"src": "2947:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2969:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2969:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2977:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2977:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2965:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2965:3:9"
																		},
																		"nativeSrc": "2965:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2965:14:9"
																	},
																	{
																		"hexValue": "43726f776473616c653a20726174652069732030",
																		"kind": "string",
																		"nativeSrc": "2981:22:9",
																		"nodeType": "YulLiteral",
																		"src": "2981:22:9",
																		"type": "",
																		"value": "Crowdsale: rate is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2958:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2958:6:9"
																},
																"nativeSrc": "2958:46:9",
																"nodeType": "YulFunctionCall",
																"src": "2958:46:9"
															},
															"nativeSrc": "2958:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "2958:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
												"nativeSrc": "2841:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2939:6:9",
														"nodeType": "YulTypedName",
														"src": "2939:6:9",
														"type": ""
													}
												],
												"src": "2841:170:9"
											},
											{
												"body": {
													"nativeSrc": "3163:220:9",
													"nodeType": "YulBlock",
													"src": "3163:220:9",
													"statements": [
														{
															"nativeSrc": "3173:74:9",
															"nodeType": "YulAssignment",
															"src": "3173:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3239:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3239:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3244:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3244:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3180:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "3180:58:9"
																},
																"nativeSrc": "3180:67:9",
																"nodeType": "YulFunctionCall",
																"src": "3180:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3173:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3173:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3345:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3345:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																	"nativeSrc": "3256:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "3256:88:9"
																},
																"nativeSrc": "3256:93:9",
																"nodeType": "YulFunctionCall",
																"src": "3256:93:9"
															},
															"nativeSrc": "3256:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "3256:93:9"
														},
														{
															"nativeSrc": "3358:19:9",
															"nodeType": "YulAssignment",
															"src": "3358:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3369:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3369:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3374:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3374:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3365:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3365:3:9"
																},
																"nativeSrc": "3365:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3365:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3358:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3358:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3017:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3151:3:9",
														"nodeType": "YulTypedName",
														"src": "3151:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3159:3:9",
														"nodeType": "YulTypedName",
														"src": "3159:3:9",
														"type": ""
													}
												],
												"src": "3017:366:9"
											},
											{
												"body": {
													"nativeSrc": "3560:248:9",
													"nodeType": "YulBlock",
													"src": "3560:248:9",
													"statements": [
														{
															"nativeSrc": "3570:26:9",
															"nodeType": "YulAssignment",
															"src": "3570:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3582:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3582:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3593:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3593:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3578:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3578:3:9"
																},
																"nativeSrc": "3578:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3578:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3570:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3570:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3617:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3617:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3628:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3628:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3613:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3613:3:9"
																		},
																		"nativeSrc": "3613:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3613:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3636:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "3636:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3642:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3642:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3632:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3632:3:9"
																		},
																		"nativeSrc": "3632:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3632:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3606:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:9"
																},
																"nativeSrc": "3606:47:9",
																"nodeType": "YulFunctionCall",
																"src": "3606:47:9"
															},
															"nativeSrc": "3606:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "3606:47:9"
														},
														{
															"nativeSrc": "3662:139:9",
															"nodeType": "YulAssignment",
															"src": "3662:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3796:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3796:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3670:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "3670:124:9"
																},
																"nativeSrc": "3670:131:9",
																"nodeType": "YulFunctionCall",
																"src": "3670:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3662:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3662:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3389:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3540:9:9",
														"nodeType": "YulTypedName",
														"src": "3540:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3555:4:9",
														"nodeType": "YulTypedName",
														"src": "3555:4:9",
														"type": ""
													}
												],
												"src": "3389:419:9"
											},
											{
												"body": {
													"nativeSrc": "3920:118:9",
													"nodeType": "YulBlock",
													"src": "3920:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3942:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3942:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3950:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3950:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3938:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3938:3:9"
																		},
																		"nativeSrc": "3938:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3938:14:9"
																	},
																	{
																		"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "3954:34:9",
																		"nodeType": "YulLiteral",
																		"src": "3954:34:9",
																		"type": "",
																		"value": "Crowdsale: wallet is the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3931:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3931:6:9"
																},
																"nativeSrc": "3931:58:9",
																"nodeType": "YulFunctionCall",
																"src": "3931:58:9"
															},
															"nativeSrc": "3931:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "3931:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4010:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4018:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4018:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4006:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4006:3:9"
																		},
																		"nativeSrc": "4006:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4006:15:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4023:7:9",
																		"nodeType": "YulLiteral",
																		"src": "4023:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3999:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3999:6:9"
																},
																"nativeSrc": "3999:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3999:32:9"
															},
															"nativeSrc": "3999:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "3999:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
												"nativeSrc": "3814:224:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3912:6:9",
														"nodeType": "YulTypedName",
														"src": "3912:6:9",
														"type": ""
													}
												],
												"src": "3814:224:9"
											},
											{
												"body": {
													"nativeSrc": "4190:220:9",
													"nodeType": "YulBlock",
													"src": "4190:220:9",
													"statements": [
														{
															"nativeSrc": "4200:74:9",
															"nodeType": "YulAssignment",
															"src": "4200:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4266:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4266:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4271:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4271:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4207:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "4207:58:9"
																},
																"nativeSrc": "4207:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4207:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4200:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4200:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4372:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4372:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																	"nativeSrc": "4283:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "4283:88:9"
																},
																"nativeSrc": "4283:93:9",
																"nodeType": "YulFunctionCall",
																"src": "4283:93:9"
															},
															"nativeSrc": "4283:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "4283:93:9"
														},
														{
															"nativeSrc": "4385:19:9",
															"nodeType": "YulAssignment",
															"src": "4385:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4396:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4396:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4401:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4401:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4392:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4392:3:9"
																},
																"nativeSrc": "4392:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4392:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4385:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4385:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4044:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4178:3:9",
														"nodeType": "YulTypedName",
														"src": "4178:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4186:3:9",
														"nodeType": "YulTypedName",
														"src": "4186:3:9",
														"type": ""
													}
												],
												"src": "4044:366:9"
											},
											{
												"body": {
													"nativeSrc": "4587:248:9",
													"nodeType": "YulBlock",
													"src": "4587:248:9",
													"statements": [
														{
															"nativeSrc": "4597:26:9",
															"nodeType": "YulAssignment",
															"src": "4597:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4609:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4609:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4620:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4620:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4605:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4605:3:9"
																},
																"nativeSrc": "4605:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4605:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4597:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4597:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4644:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4644:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4655:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4655:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4640:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4640:3:9"
																		},
																		"nativeSrc": "4640:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4640:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4663:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4663:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4669:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4669:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4659:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4659:3:9"
																		},
																		"nativeSrc": "4659:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4659:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4633:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4633:6:9"
																},
																"nativeSrc": "4633:47:9",
																"nodeType": "YulFunctionCall",
																"src": "4633:47:9"
															},
															"nativeSrc": "4633:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "4633:47:9"
														},
														{
															"nativeSrc": "4689:139:9",
															"nodeType": "YulAssignment",
															"src": "4689:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4823:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4823:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4697:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "4697:124:9"
																},
																"nativeSrc": "4697:131:9",
																"nodeType": "YulFunctionCall",
																"src": "4697:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4689:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4689:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4416:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4567:9:9",
														"nodeType": "YulTypedName",
														"src": "4567:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4582:4:9",
														"nodeType": "YulTypedName",
														"src": "4582:4:9",
														"type": ""
													}
												],
												"src": "4416:419:9"
											},
											{
												"body": {
													"nativeSrc": "4947:117:9",
													"nodeType": "YulBlock",
													"src": "4947:117:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4969:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4969:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4977:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4977:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4965:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4965:3:9"
																		},
																		"nativeSrc": "4965:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4965:14:9"
																	},
																	{
																		"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "4981:34:9",
																		"nodeType": "YulLiteral",
																		"src": "4981:34:9",
																		"type": "",
																		"value": "Crowdsale: token is the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4958:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4958:6:9"
																},
																"nativeSrc": "4958:58:9",
																"nodeType": "YulFunctionCall",
																"src": "4958:58:9"
															},
															"nativeSrc": "4958:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "4958:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5037:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5037:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5045:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5045:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5033:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5033:3:9"
																		},
																		"nativeSrc": "5033:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5033:15:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "5050:6:9",
																		"nodeType": "YulLiteral",
																		"src": "5050:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5026:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5026:6:9"
																},
																"nativeSrc": "5026:31:9",
																"nodeType": "YulFunctionCall",
																"src": "5026:31:9"
															},
															"nativeSrc": "5026:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "5026:31:9"
														}
													]
												},
												"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
												"nativeSrc": "4841:223:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4939:6:9",
														"nodeType": "YulTypedName",
														"src": "4939:6:9",
														"type": ""
													}
												],
												"src": "4841:223:9"
											},
											{
												"body": {
													"nativeSrc": "5216:220:9",
													"nodeType": "YulBlock",
													"src": "5216:220:9",
													"statements": [
														{
															"nativeSrc": "5226:74:9",
															"nodeType": "YulAssignment",
															"src": "5226:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5292:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5292:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5297:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5297:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5233:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "5233:58:9"
																},
																"nativeSrc": "5233:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5233:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5226:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5226:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5398:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5398:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																	"nativeSrc": "5309:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "5309:88:9"
																},
																"nativeSrc": "5309:93:9",
																"nodeType": "YulFunctionCall",
																"src": "5309:93:9"
															},
															"nativeSrc": "5309:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "5309:93:9"
														},
														{
															"nativeSrc": "5411:19:9",
															"nodeType": "YulAssignment",
															"src": "5411:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5422:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5422:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5427:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5427:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5418:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5418:3:9"
																},
																"nativeSrc": "5418:12:9",
																"nodeType": "YulFunctionCall",
																"src": "5418:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5411:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5411:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5070:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5204:3:9",
														"nodeType": "YulTypedName",
														"src": "5204:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5212:3:9",
														"nodeType": "YulTypedName",
														"src": "5212:3:9",
														"type": ""
													}
												],
												"src": "5070:366:9"
											},
											{
												"body": {
													"nativeSrc": "5613:248:9",
													"nodeType": "YulBlock",
													"src": "5613:248:9",
													"statements": [
														{
															"nativeSrc": "5623:26:9",
															"nodeType": "YulAssignment",
															"src": "5623:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5635:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5635:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5646:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5646:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5631:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5631:3:9"
																},
																"nativeSrc": "5631:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5631:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5623:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5623:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5670:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5670:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5681:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5681:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5666:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5666:3:9"
																		},
																		"nativeSrc": "5666:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5666:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5689:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5689:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5695:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5695:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5685:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5685:3:9"
																		},
																		"nativeSrc": "5685:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5685:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5659:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5659:6:9"
																},
																"nativeSrc": "5659:47:9",
																"nodeType": "YulFunctionCall",
																"src": "5659:47:9"
															},
															"nativeSrc": "5659:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "5659:47:9"
														},
														{
															"nativeSrc": "5715:139:9",
															"nodeType": "YulAssignment",
															"src": "5715:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5849:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5849:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5723:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "5723:124:9"
																},
																"nativeSrc": "5723:131:9",
																"nodeType": "YulFunctionCall",
																"src": "5723:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5715:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5715:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5442:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5593:9:9",
														"nodeType": "YulTypedName",
														"src": "5593:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5608:4:9",
														"nodeType": "YulTypedName",
														"src": "5608:4:9",
														"type": ""
													}
												],
												"src": "5442:419:9"
											},
											{
												"body": {
													"nativeSrc": "5973:69:9",
													"nodeType": "YulBlock",
													"src": "5973:69:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5995:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5995:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6003:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6003:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5991:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5991:3:9"
																		},
																		"nativeSrc": "5991:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5991:14:9"
																	},
																	{
																		"hexValue": "43617070656443726f776473616c653a206361702069732030",
																		"kind": "string",
																		"nativeSrc": "6007:27:9",
																		"nodeType": "YulLiteral",
																		"src": "6007:27:9",
																		"type": "",
																		"value": "CappedCrowdsale: cap is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5984:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5984:6:9"
																},
																"nativeSrc": "5984:51:9",
																"nodeType": "YulFunctionCall",
																"src": "5984:51:9"
															},
															"nativeSrc": "5984:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "5984:51:9"
														}
													]
												},
												"name": "store_literal_in_memory_64e5a6167e9149487c39484a18ce5d080c5288b2e26eed530ccbcf3220dc9f14",
												"nativeSrc": "5867:175:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5965:6:9",
														"nodeType": "YulTypedName",
														"src": "5965:6:9",
														"type": ""
													}
												],
												"src": "5867:175:9"
											},
											{
												"body": {
													"nativeSrc": "6194:220:9",
													"nodeType": "YulBlock",
													"src": "6194:220:9",
													"statements": [
														{
															"nativeSrc": "6204:74:9",
															"nodeType": "YulAssignment",
															"src": "6204:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6270:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6270:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6275:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6275:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6211:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "6211:58:9"
																},
																"nativeSrc": "6211:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6211:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6204:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6204:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6376:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6376:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64e5a6167e9149487c39484a18ce5d080c5288b2e26eed530ccbcf3220dc9f14",
																	"nativeSrc": "6287:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "6287:88:9"
																},
																"nativeSrc": "6287:93:9",
																"nodeType": "YulFunctionCall",
																"src": "6287:93:9"
															},
															"nativeSrc": "6287:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "6287:93:9"
														},
														{
															"nativeSrc": "6389:19:9",
															"nodeType": "YulAssignment",
															"src": "6389:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6400:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6400:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6405:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6405:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6396:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6396:3:9"
																},
																"nativeSrc": "6396:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6396:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6389:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6389:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64e5a6167e9149487c39484a18ce5d080c5288b2e26eed530ccbcf3220dc9f14_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6048:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6182:3:9",
														"nodeType": "YulTypedName",
														"src": "6182:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6190:3:9",
														"nodeType": "YulTypedName",
														"src": "6190:3:9",
														"type": ""
													}
												],
												"src": "6048:366:9"
											},
											{
												"body": {
													"nativeSrc": "6591:248:9",
													"nodeType": "YulBlock",
													"src": "6591:248:9",
													"statements": [
														{
															"nativeSrc": "6601:26:9",
															"nodeType": "YulAssignment",
															"src": "6601:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6613:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6613:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6624:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6624:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6609:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6609:3:9"
																},
																"nativeSrc": "6609:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6609:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6601:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6601:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6648:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6648:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6659:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6659:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6644:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6644:3:9"
																		},
																		"nativeSrc": "6644:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6644:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6667:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6667:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6673:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6673:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6663:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6663:3:9"
																		},
																		"nativeSrc": "6663:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6663:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6637:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6637:6:9"
																},
																"nativeSrc": "6637:47:9",
																"nodeType": "YulFunctionCall",
																"src": "6637:47:9"
															},
															"nativeSrc": "6637:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "6637:47:9"
														},
														{
															"nativeSrc": "6693:139:9",
															"nodeType": "YulAssignment",
															"src": "6693:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6827:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6827:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64e5a6167e9149487c39484a18ce5d080c5288b2e26eed530ccbcf3220dc9f14_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6701:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "6701:124:9"
																},
																"nativeSrc": "6701:131:9",
																"nodeType": "YulFunctionCall",
																"src": "6701:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6693:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6693:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64e5a6167e9149487c39484a18ce5d080c5288b2e26eed530ccbcf3220dc9f14__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6420:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6571:9:9",
														"nodeType": "YulTypedName",
														"src": "6571:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6586:4:9",
														"nodeType": "YulTypedName",
														"src": "6586:4:9",
														"type": ""
													}
												],
												"src": "6420:419:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$142(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$142(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$142(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$142_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$142(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address_payablet_contract$_IERC20_$142_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_contract$_IERC20_$142_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: rate is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: wallet is the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: token is the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_64e5a6167e9149487c39484a18ce5d080c5288b2e26eed530ccbcf3220dc9f14(memPtr) {\n\n        mstore(add(memPtr, 0), \"CappedCrowdsale: cap is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_64e5a6167e9149487c39484a18ce5d080c5288b2e26eed530ccbcf3220dc9f14_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_64e5a6167e9149487c39484a18ce5d080c5288b2e26eed530ccbcf3220dc9f14(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64e5a6167e9149487c39484a18ce5d080c5288b2e26eed530ccbcf3220dc9f14__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64e5a6167e9149487c39484a18ce5d080c5288b2e26eed530ccbcf3220dc9f14_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x15ED CODESIZE SUB DUP1 PUSH3 0x15ED DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x339 JUMP JUMPDEST DUP3 DUP3 DUP3 PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 DUP4 GT PUSH3 0x85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7C SWAP1 PUSH3 0x406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xED SWAP1 PUSH3 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x167 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x15E SWAP1 PUSH3 0x52E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH0 DUP5 GT PUSH3 0x236 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x22D SWAP1 PUSH3 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x5BC JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x25F DUP2 PUSH3 0x24B JUMP JUMPDEST DUP2 EQ PUSH3 0x26A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x27D DUP2 PUSH3 0x254 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2AE DUP3 PUSH3 0x283 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2C0 DUP2 PUSH3 0x2A2 JUMP JUMPDEST DUP2 EQ PUSH3 0x2CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2DE DUP2 PUSH3 0x2B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2F0 DUP3 PUSH3 0x283 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x303 DUP3 PUSH3 0x2E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x315 DUP2 PUSH3 0x2F7 JUMP JUMPDEST DUP2 EQ PUSH3 0x320 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x333 DUP2 PUSH3 0x30A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x354 JUMPI PUSH3 0x353 PUSH3 0x247 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x363 DUP8 DUP3 DUP9 ADD PUSH3 0x26D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x376 DUP8 DUP3 DUP9 ADD PUSH3 0x26D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x389 DUP8 DUP3 DUP9 ADD PUSH3 0x2CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x39C DUP8 DUP3 DUP9 ADD PUSH3 0x323 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20726174652069732030000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x3EE PUSH1 0x14 DUP4 PUSH3 0x3A8 JUMP JUMPDEST SWAP2 POP PUSH3 0x3FB DUP3 PUSH3 0x3B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x41F DUP2 PUSH3 0x3E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2077616C6C657420697320746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x482 PUSH1 0x25 DUP4 PUSH3 0x3A8 JUMP JUMPDEST SWAP2 POP PUSH3 0x48F DUP3 PUSH3 0x426 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x4B3 DUP2 PUSH3 0x474 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20746F6B656E20697320746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x516 PUSH1 0x24 DUP4 PUSH3 0x3A8 JUMP JUMPDEST SWAP2 POP PUSH3 0x523 DUP3 PUSH3 0x4BA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x547 DUP2 PUSH3 0x508 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43617070656443726F776473616C653A20636170206973203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x584 PUSH1 0x19 DUP4 PUSH3 0x3A8 JUMP JUMPDEST SWAP2 POP PUSH3 0x591 DUP3 PUSH3 0x54E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x5B5 DUP2 PUSH3 0x576 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1023 DUP1 PUSH3 0x5CA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x73 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F935945 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x4F935945 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x18A JUMPI PUSH2 0x8A JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0xF0 JUMPI PUSH2 0x8A JUMP JUMPDEST CALLDATASIZE PUSH2 0x8A JUMPI PUSH2 0x88 PUSH2 0x83 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0x95 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x2A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x104 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x955 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x317 JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x364 JUMP JUMPDEST PUSH0 PUSH2 0x1DB DUP3 PUSH2 0x3D0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F2 DUP3 PUSH1 0x4 SLOAD PUSH2 0x3ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x202 DUP4 DUP3 PUSH2 0x402 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x221 PUSH2 0x1B4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x268 SWAP3 SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x27A DUP4 DUP4 PUSH2 0x410 JUMP JUMPDEST PUSH2 0x282 PUSH2 0x414 JUMP JUMPDEST PUSH2 0x28C DUP4 DUP4 PUSH2 0x47B JUMP JUMPDEST POP POP PUSH2 0x296 PUSH2 0x47F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD PUSH2 0x2C0 PUSH2 0x2AB JUMP JUMPDEST LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP1 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x36E DUP3 DUP3 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x38B DUP3 PUSH2 0x37D PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x3ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x3CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C3 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E6 PUSH1 0x3 SLOAD DUP4 PUSH2 0x53C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x40C DUP3 DUP3 PUSH2 0x551 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x478 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52F SWAP1 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x549 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x59D DUP3 DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5A1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x622 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5C0 SWAP3 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x627 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x688 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6ED SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x6A9 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST JUMPDEST PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6FB DUP5 DUP5 PUSH0 DUP6 PUSH2 0x704 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x740 SWAP1 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x771 SWAP2 SWAP1 PUSH2 0xEFD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x7C1 DUP8 DUP4 DUP4 DUP8 PUSH2 0x7CD JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x82E JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x826 JUMPI PUSH2 0x7E6 DUP6 PUSH2 0x841 JUMP JUMPDEST PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81C SWAP1 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x839 JUMP JUMPDEST PUSH2 0x838 DUP4 DUP4 PUSH2 0x863 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x875 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A9 SWAP2 SWAP1 PUSH2 0xFCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C4 DUP2 PUSH2 0x8B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8DD PUSH0 DUP4 ADD DUP5 PUSH2 0x8BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F7 DUP2 PUSH2 0x8E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x910 PUSH0 DUP4 ADD DUP5 PUSH2 0x8EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x93F DUP3 PUSH2 0x916 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94F DUP2 PUSH2 0x935 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x968 PUSH0 DUP4 ADD DUP5 PUSH2 0x946 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x97C DUP3 PUSH2 0x916 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98C DUP2 PUSH2 0x972 JUMP JUMPDEST DUP2 EQ PUSH2 0x996 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9A7 DUP2 PUSH2 0x983 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C2 JUMPI PUSH2 0x9C1 PUSH2 0x96E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9CF DUP5 DUP3 DUP6 ADD PUSH2 0x999 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9FB PUSH2 0x9F6 PUSH2 0x9F1 DUP5 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA0C DUP3 PUSH2 0x9E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA1D DUP3 PUSH2 0xA02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2D DUP2 PUSH2 0xA13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA46 PUSH0 DUP4 ADD DUP5 PUSH2 0xA24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA5F PUSH0 DUP4 ADD DUP6 PUSH2 0x8BB JUMP JUMPDEST PUSH2 0xA6C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAB7 PUSH1 0x1F DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC2 DUP3 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAE4 DUP2 PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43617070656443726F776473616C653A20636170206578636565646564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB1F PUSH1 0x1D DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP2 POP PUSH2 0xB2A DUP3 PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB4C DUP2 PUSH2 0xB13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB8A DUP3 PUSH2 0x8B2 JUMP JUMPDEST SWAP2 POP PUSH2 0xB95 DUP4 PUSH2 0x8B2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBAD JUMPI PUSH2 0xBAC PUSH2 0xB53 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC0D PUSH1 0x2A DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP2 POP PUSH2 0xC18 DUP3 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC3A DUP2 PUSH2 0xC01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC75 PUSH1 0x19 DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP2 POP PUSH2 0xC80 DUP3 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCA2 DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCB3 DUP3 PUSH2 0x8B2 JUMP JUMPDEST SWAP2 POP PUSH2 0xCBE DUP4 PUSH2 0x8B2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xCCC DUP2 PUSH2 0x8B2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xCE3 JUMPI PUSH2 0xCE2 PUSH2 0xB53 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCF3 DUP2 PUSH2 0x972 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD0C PUSH0 DUP4 ADD DUP6 PUSH2 0xCEA JUMP JUMPDEST PUSH2 0xD19 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD29 DUP2 PUSH2 0x8E3 JUMP JUMPDEST DUP2 EQ PUSH2 0xD33 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD44 DUP2 PUSH2 0xD20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5F JUMPI PUSH2 0xD5E PUSH2 0x96E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD6C DUP5 DUP3 DUP6 ADD PUSH2 0xD36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDCF PUSH1 0x2A DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDA DUP3 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDFC DUP2 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE5D PUSH1 0x26 DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP2 POP PUSH2 0xE68 DUP3 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE8A DUP2 PUSH2 0xE51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEA7 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xED7 DUP3 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xEE1 DUP2 DUP6 PUSH2 0xE9B JUMP JUMPDEST SWAP4 POP PUSH2 0xEF1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEA5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF08 DUP3 DUP5 PUSH2 0xECD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF47 PUSH1 0x1D DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP2 POP PUSH2 0xF52 DUP3 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF74 DUP2 PUSH2 0xF3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF9F DUP3 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0xFA9 DUP2 DUP6 PUSH2 0xA73 JUMP JUMPDEST SWAP4 POP PUSH2 0xFB9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0xFC2 DUP2 PUSH2 0xF85 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFE5 DUP2 DUP5 PUSH2 0xF95 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xEE REVERT SGT MSIZE 0xE4 0xA6 SMOD 0xE 0x1E LOG0 TIMESTAMP CALL PUSH5 0x929A2027FD 0xA7 SWAP15 DUP10 DUP16 0xE7 BALANCE SSTORE 0xB0 0xC4 LOG2 SELFDESTRUCT 0xB2 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "252:1473:8:-:0;;;679:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;785:6;793:8;803:7;1716:1:0;1821:7;:22;;;;2644:1:7;2635:6;:10;2627:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;2709:1;2689:22;;:8;:22;;;2681:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2800:1;2772:30;;2780:7;2772:30;;;2764:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2864:6;2856:5;:14;;;;2891:8;2881:7;;:18;;;;;;;;;;;;;;;;;;2919:7;2910:6;;:16;;;;;;;;;;;;;;;;;;2545:389;;;845:1:8::1;837:5;:9;829:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;894:5;887:4;:12;;;;679:228:::0;;;;252:1473;;88:117:9;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:104::-;871:7;900:24;918:5;900:24;:::i;:::-;889:35;;826:104;;;:::o;936:138::-;1017:32;1043:5;1017:32;:::i;:::-;1010:5;1007:43;997:71;;1064:1;1061;1054:12;997:71;936:138;:::o;1080:159::-;1145:5;1176:6;1170:13;1161:22;;1192:41;1227:5;1192:41;:::i;:::-;1080:159;;;;:::o;1245:96::-;1282:7;1311:24;1329:5;1311:24;:::i;:::-;1300:35;;1245:96;;;:::o;1347:110::-;1398:7;1427:24;1445:5;1427:24;:::i;:::-;1416:35;;1347:110;;;:::o;1463:150::-;1550:38;1582:5;1550:38;:::i;:::-;1543:5;1540:49;1530:77;;1603:1;1600;1593:12;1530:77;1463:150;:::o;1619:171::-;1690:5;1721:6;1715:13;1706:22;;1737:47;1778:5;1737:47;:::i;:::-;1619:171;;;;:::o;1796:864::-;1915:6;1923;1931;1939;1988:3;1976:9;1967:7;1963:23;1959:33;1956:120;;;1995:79;;:::i;:::-;1956:120;2115:1;2140:64;2196:7;2187:6;2176:9;2172:22;2140:64;:::i;:::-;2130:74;;2086:128;2253:2;2279:64;2335:7;2326:6;2315:9;2311:22;2279:64;:::i;:::-;2269:74;;2224:129;2392:2;2418:72;2482:7;2473:6;2462:9;2458:22;2418:72;:::i;:::-;2408:82;;2363:137;2539:2;2565:78;2635:7;2626:6;2615:9;2611:22;2565:78;:::i;:::-;2555:88;;2510:143;1796:864;;;;;;;:::o;2666:169::-;2750:11;2784:6;2779:3;2772:19;2824:4;2819:3;2815:14;2800:29;;2666:169;;;;:::o;2841:170::-;2981:22;2977:1;2969:6;2965:14;2958:46;2841:170;:::o;3017:366::-;3159:3;3180:67;3244:2;3239:3;3180:67;:::i;:::-;3173:74;;3256:93;3345:3;3256:93;:::i;:::-;3374:2;3369:3;3365:12;3358:19;;3017:366;;;:::o;3389:419::-;3555:4;3593:2;3582:9;3578:18;3570:26;;3642:9;3636:4;3632:20;3628:1;3617:9;3613:17;3606:47;3670:131;3796:4;3670:131;:::i;:::-;3662:139;;3389:419;;;:::o;3814:224::-;3954:34;3950:1;3942:6;3938:14;3931:58;4023:7;4018:2;4010:6;4006:15;3999:32;3814:224;:::o;4044:366::-;4186:3;4207:67;4271:2;4266:3;4207:67;:::i;:::-;4200:74;;4283:93;4372:3;4283:93;:::i;:::-;4401:2;4396:3;4392:12;4385:19;;4044:366;;;:::o;4416:419::-;4582:4;4620:2;4609:9;4605:18;4597:26;;4669:9;4663:4;4659:20;4655:1;4644:9;4640:17;4633:47;4697:131;4823:4;4697:131;:::i;:::-;4689:139;;4416:419;;;:::o;4841:223::-;4981:34;4977:1;4969:6;4965:14;4958:58;5050:6;5045:2;5037:6;5033:15;5026:31;4841:223;:::o;5070:366::-;5212:3;5233:67;5297:2;5292:3;5233:67;:::i;:::-;5226:74;;5309:93;5398:3;5309:93;:::i;:::-;5427:2;5422:3;5418:12;5411:19;;5070:366;;;:::o;5442:419::-;5608:4;5646:2;5635:9;5631:18;5623:26;;5695:9;5689:4;5685:20;5681:1;5670:9;5666:17;5659:47;5723:131;5849:4;5723:131;:::i;:::-;5715:139;;5442:419;;;:::o;5867:175::-;6007:27;6003:1;5995:6;5991:14;5984:51;5867:175;:::o;6048:366::-;6190:3;6211:67;6275:2;6270:3;6211:67;:::i;:::-;6204:74;;6287:93;6376:3;6287:93;:::i;:::-;6405:2;6400:3;6396:12;6389:19;;6048:366;;;:::o;6420:419::-;6586:4;6624:2;6613:9;6609:18;6601:26;;6673:9;6667:4;6663:20;6659:1;6648:9;6644:17;6637:47;6701:131;6827:4;6701:131;:::i;:::-;6693:139;;6420:419;;;:::o;252:1473:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1321": {
									"entryPoint": null,
									"id": 1321,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1330": {
									"entryPoint": null,
									"id": 1330,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_505": {
									"entryPoint": 1575,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_deliverTokens_1478": {
									"entryPoint": 1361,
									"id": 1478,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_forwardFunds_1527": {
									"entryPoint": 1044,
									"id": 1527,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTokenAmount_1515": {
									"entryPoint": 976,
									"id": 1515,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_896": {
									"entryPoint": 436,
									"id": 896,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_52": {
									"entryPoint": 1151,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 791,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_postValidatePurchase_1462": {
									"entryPoint": 1147,
									"id": 1462,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_1453": {
									"entryPoint": 1160,
									"id": 1453,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_1619": {
									"entryPoint": 868,
									"id": 1619,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_processPurchase_1492": {
									"entryPoint": 1026,
									"id": 1492,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_883": {
									"entryPoint": 2147,
									"id": 883,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_updatePurchasingState_1501": {
									"entryPoint": 1040,
									"id": 1501,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_1082": {
									"entryPoint": 1005,
									"id": 1082,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@buyTokens_1425": {
									"entryPoint": 443,
									"id": 1425,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@capReached_1591": {
									"entryPoint": 692,
									"id": 1591,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@cap_1579": {
									"entryPoint": 674,
									"id": 1579,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionCallWithValue_708": {
									"entryPoint": 1796,
									"id": 708,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_644": {
									"entryPoint": 1773,
									"id": 644,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_572": {
									"entryPoint": 2113,
									"id": 572,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_1112": {
									"entryPoint": 1340,
									"id": 1112,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@rate_1358": {
									"entryPoint": 665,
									"id": 1358,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransfer_211": {
									"entryPoint": 1441,
									"id": 211,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@token_1340": {
									"entryPoint": 751,
									"id": 1340,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_839": {
									"entryPoint": 1997,
									"id": 839,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@wallet_1349": {
									"entryPoint": 711,
									"id": 1349,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@weiRaised_1367": {
									"entryPoint": 683,
									"id": 1367,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 2374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack": {
									"entryPoint": 2596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2c4df665e7843abc0c81818f3beddf3ec071d2283193f32a87d6b4d1c758ed74_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 2389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3321,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed": {
									"entryPoint": 2611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c4df665e7843abc0c81818f3beddf3ec071d2283193f32a87d6b4d1c758ed74__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2636,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 2357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$142_to_t_address": {
									"entryPoint": 2579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3749,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2414,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_2c4df665e7843abc0c81818f3beddf3ec071d2283193f32a87d6b4d1c758ed74": {
									"entryPoint": 2795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 3587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e": {
									"entryPoint": 2995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 3859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 3445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 2691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c": {
									"entryPoint": 3137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14967:9",
										"nodeType": "YulBlock",
										"src": "0:14967:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:9",
													"nodeType": "YulBlock",
													"src": "52:32:9",
													"statements": [
														{
															"nativeSrc": "62:16:9",
															"nodeType": "YulAssignment",
															"src": "62:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:9",
																"nodeType": "YulIdentifier",
																"src": "73:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:9",
														"nodeType": "YulTypedName",
														"src": "34:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:9",
														"nodeType": "YulTypedName",
														"src": "44:7:9",
														"type": ""
													}
												],
												"src": "7:77:9"
											},
											{
												"body": {
													"nativeSrc": "155:53:9",
													"nodeType": "YulBlock",
													"src": "155:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:9"
																		},
																		"nativeSrc": "177:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:9"
																},
																"nativeSrc": "165:37:9",
																"nodeType": "YulFunctionCall",
																"src": "165:37:9"
															},
															"nativeSrc": "165:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:9",
														"nodeType": "YulTypedName",
														"src": "143:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:9",
														"nodeType": "YulTypedName",
														"src": "150:3:9",
														"type": ""
													}
												],
												"src": "90:118:9"
											},
											{
												"body": {
													"nativeSrc": "312:124:9",
													"nodeType": "YulBlock",
													"src": "312:124:9",
													"statements": [
														{
															"nativeSrc": "322:26:9",
															"nodeType": "YulAssignment",
															"src": "322:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:9",
																		"nodeType": "YulLiteral",
																		"src": "345:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:9"
																},
																"nativeSrc": "330:18:9",
																"nodeType": "YulFunctionCall",
																"src": "330:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:9",
																				"nodeType": "YulLiteral",
																				"src": "426:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:9"
																		},
																		"nativeSrc": "411:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:9"
																},
																"nativeSrc": "358:71:9",
																"nodeType": "YulFunctionCall",
																"src": "358:71:9"
															},
															"nativeSrc": "358:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:9",
														"nodeType": "YulTypedName",
														"src": "284:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:9",
														"nodeType": "YulTypedName",
														"src": "296:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:9",
														"nodeType": "YulTypedName",
														"src": "307:4:9",
														"type": ""
													}
												],
												"src": "214:222:9"
											},
											{
												"body": {
													"nativeSrc": "484:48:9",
													"nodeType": "YulBlock",
													"src": "484:48:9",
													"statements": [
														{
															"nativeSrc": "494:32:9",
															"nodeType": "YulAssignment",
															"src": "494:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "519:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "519:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "512:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "512:6:9"
																		},
																		"nativeSrc": "512:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "512:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "505:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "505:6:9"
																},
																"nativeSrc": "505:21:9",
																"nodeType": "YulFunctionCall",
																"src": "505:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "494:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "494:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "442:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "466:5:9",
														"nodeType": "YulTypedName",
														"src": "466:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "476:7:9",
														"nodeType": "YulTypedName",
														"src": "476:7:9",
														"type": ""
													}
												],
												"src": "442:90:9"
											},
											{
												"body": {
													"nativeSrc": "597:50:9",
													"nodeType": "YulBlock",
													"src": "597:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "614:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "614:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "619:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "619:14:9"
																		},
																		"nativeSrc": "619:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "619:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "607:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "607:6:9"
																},
																"nativeSrc": "607:34:9",
																"nodeType": "YulFunctionCall",
																"src": "607:34:9"
															},
															"nativeSrc": "607:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "607:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "538:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "585:5:9",
														"nodeType": "YulTypedName",
														"src": "585:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "592:3:9",
														"nodeType": "YulTypedName",
														"src": "592:3:9",
														"type": ""
													}
												],
												"src": "538:109:9"
											},
											{
												"body": {
													"nativeSrc": "745:118:9",
													"nodeType": "YulBlock",
													"src": "745:118:9",
													"statements": [
														{
															"nativeSrc": "755:26:9",
															"nodeType": "YulAssignment",
															"src": "755:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "767:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "767:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "778:2:9",
																		"nodeType": "YulLiteral",
																		"src": "778:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "763:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "763:3:9"
																},
																"nativeSrc": "763:18:9",
																"nodeType": "YulFunctionCall",
																"src": "763:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "755:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "755:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "829:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "829:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "842:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "842:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "853:1:9",
																				"nodeType": "YulLiteral",
																				"src": "853:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "838:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "838:3:9"
																		},
																		"nativeSrc": "838:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "838:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "791:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "791:37:9"
																},
																"nativeSrc": "791:65:9",
																"nodeType": "YulFunctionCall",
																"src": "791:65:9"
															},
															"nativeSrc": "791:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "653:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "717:9:9",
														"nodeType": "YulTypedName",
														"src": "717:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "729:6:9",
														"nodeType": "YulTypedName",
														"src": "729:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "740:4:9",
														"nodeType": "YulTypedName",
														"src": "740:4:9",
														"type": ""
													}
												],
												"src": "653:210:9"
											},
											{
												"body": {
													"nativeSrc": "914:81:9",
													"nodeType": "YulBlock",
													"src": "914:81:9",
													"statements": [
														{
															"nativeSrc": "924:65:9",
															"nodeType": "YulAssignment",
															"src": "924:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "939:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "939:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "946:42:9",
																		"nodeType": "YulLiteral",
																		"src": "946:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "935:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:9"
																},
																"nativeSrc": "935:54:9",
																"nodeType": "YulFunctionCall",
																"src": "935:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "924:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "924:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "869:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "896:5:9",
														"nodeType": "YulTypedName",
														"src": "896:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "906:7:9",
														"nodeType": "YulTypedName",
														"src": "906:7:9",
														"type": ""
													}
												],
												"src": "869:126:9"
											},
											{
												"body": {
													"nativeSrc": "1054:51:9",
													"nodeType": "YulBlock",
													"src": "1054:51:9",
													"statements": [
														{
															"nativeSrc": "1064:35:9",
															"nodeType": "YulAssignment",
															"src": "1064:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1093:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1093:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1075:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1075:17:9"
																},
																"nativeSrc": "1075:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1075:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1064:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1064:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "1001:104:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1036:5:9",
														"nodeType": "YulTypedName",
														"src": "1036:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1046:7:9",
														"nodeType": "YulTypedName",
														"src": "1046:7:9",
														"type": ""
													}
												],
												"src": "1001:104:9"
											},
											{
												"body": {
													"nativeSrc": "1192:61:9",
													"nodeType": "YulBlock",
													"src": "1192:61:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1209:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1209:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1240:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1240:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "1214:25:9",
																			"nodeType": "YulIdentifier",
																			"src": "1214:25:9"
																		},
																		"nativeSrc": "1214:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1214:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1202:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1202:6:9"
																},
																"nativeSrc": "1202:45:9",
																"nodeType": "YulFunctionCall",
																"src": "1202:45:9"
															},
															"nativeSrc": "1202:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "1202:45:9"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nativeSrc": "1111:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1180:5:9",
														"nodeType": "YulTypedName",
														"src": "1180:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1187:3:9",
														"nodeType": "YulTypedName",
														"src": "1187:3:9",
														"type": ""
													}
												],
												"src": "1111:142:9"
											},
											{
												"body": {
													"nativeSrc": "1373:140:9",
													"nodeType": "YulBlock",
													"src": "1373:140:9",
													"statements": [
														{
															"nativeSrc": "1383:26:9",
															"nodeType": "YulAssignment",
															"src": "1383:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1395:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1395:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1406:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1406:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1391:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1391:3:9"
																},
																"nativeSrc": "1391:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1391:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1383:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1383:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1479:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1479:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1492:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1492:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1503:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1503:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1488:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1488:3:9"
																		},
																		"nativeSrc": "1488:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1488:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nativeSrc": "1419:59:9",
																	"nodeType": "YulIdentifier",
																	"src": "1419:59:9"
																},
																"nativeSrc": "1419:87:9",
																"nodeType": "YulFunctionCall",
																"src": "1419:87:9"
															},
															"nativeSrc": "1419:87:9",
															"nodeType": "YulExpressionStatement",
															"src": "1419:87:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nativeSrc": "1259:254:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1345:9:9",
														"nodeType": "YulTypedName",
														"src": "1345:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1357:6:9",
														"nodeType": "YulTypedName",
														"src": "1357:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1368:4:9",
														"nodeType": "YulTypedName",
														"src": "1368:4:9",
														"type": ""
													}
												],
												"src": "1259:254:9"
											},
											{
												"body": {
													"nativeSrc": "1559:35:9",
													"nodeType": "YulBlock",
													"src": "1559:35:9",
													"statements": [
														{
															"nativeSrc": "1569:19:9",
															"nodeType": "YulAssignment",
															"src": "1569:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1585:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1585:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1579:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1579:5:9"
																},
																"nativeSrc": "1579:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1579:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1569:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1569:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1519:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1552:6:9",
														"nodeType": "YulTypedName",
														"src": "1552:6:9",
														"type": ""
													}
												],
												"src": "1519:75:9"
											},
											{
												"body": {
													"nativeSrc": "1689:28:9",
													"nodeType": "YulBlock",
													"src": "1689:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1706:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1706:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1709:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1709:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1699:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1699:6:9"
																},
																"nativeSrc": "1699:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1699:12:9"
															},
															"nativeSrc": "1699:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1699:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1600:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1600:117:9"
											},
											{
												"body": {
													"nativeSrc": "1812:28:9",
													"nodeType": "YulBlock",
													"src": "1812:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1829:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1829:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1832:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1832:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1822:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1822:6:9"
																},
																"nativeSrc": "1822:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1822:12:9"
															},
															"nativeSrc": "1822:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1822:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1723:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1723:117:9"
											},
											{
												"body": {
													"nativeSrc": "1891:51:9",
													"nodeType": "YulBlock",
													"src": "1891:51:9",
													"statements": [
														{
															"nativeSrc": "1901:35:9",
															"nodeType": "YulAssignment",
															"src": "1901:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1930:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1930:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1912:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1912:17:9"
																},
																"nativeSrc": "1912:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1912:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1901:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1901:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1846:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1873:5:9",
														"nodeType": "YulTypedName",
														"src": "1873:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1883:7:9",
														"nodeType": "YulTypedName",
														"src": "1883:7:9",
														"type": ""
													}
												],
												"src": "1846:96:9"
											},
											{
												"body": {
													"nativeSrc": "1991:79:9",
													"nodeType": "YulBlock",
													"src": "1991:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2048:16:9",
																"nodeType": "YulBlock",
																"src": "2048:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2057:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2057:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2060:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2060:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2050:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2050:6:9"
																			},
																			"nativeSrc": "2050:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2050:12:9"
																		},
																		"nativeSrc": "2050:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2050:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2014:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2014:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2039:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2039:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2021:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2021:17:9"
																				},
																				"nativeSrc": "2021:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2021:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2011:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2011:2:9"
																		},
																		"nativeSrc": "2011:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2011:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2004:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:9"
																},
																"nativeSrc": "2004:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2004:43:9"
															},
															"nativeSrc": "2001:63:9",
															"nodeType": "YulIf",
															"src": "2001:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1948:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1984:5:9",
														"nodeType": "YulTypedName",
														"src": "1984:5:9",
														"type": ""
													}
												],
												"src": "1948:122:9"
											},
											{
												"body": {
													"nativeSrc": "2128:87:9",
													"nodeType": "YulBlock",
													"src": "2128:87:9",
													"statements": [
														{
															"nativeSrc": "2138:29:9",
															"nodeType": "YulAssignment",
															"src": "2138:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2160:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2160:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2147:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2147:12:9"
																},
																"nativeSrc": "2147:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2147:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2138:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2138:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2203:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2203:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2176:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2176:26:9"
																},
																"nativeSrc": "2176:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2176:33:9"
															},
															"nativeSrc": "2176:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2176:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2076:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2106:6:9",
														"nodeType": "YulTypedName",
														"src": "2106:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2114:3:9",
														"nodeType": "YulTypedName",
														"src": "2114:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2122:5:9",
														"nodeType": "YulTypedName",
														"src": "2122:5:9",
														"type": ""
													}
												],
												"src": "2076:139:9"
											},
											{
												"body": {
													"nativeSrc": "2287:263:9",
													"nodeType": "YulBlock",
													"src": "2287:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2333:83:9",
																"nodeType": "YulBlock",
																"src": "2333:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2335:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2335:77:9"
																			},
																			"nativeSrc": "2335:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2335:79:9"
																		},
																		"nativeSrc": "2335:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2335:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2308:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2308:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2317:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2317:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2304:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2304:3:9"
																		},
																		"nativeSrc": "2304:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2304:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2329:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2329:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2300:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2300:3:9"
																},
																"nativeSrc": "2300:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2300:32:9"
															},
															"nativeSrc": "2297:119:9",
															"nodeType": "YulIf",
															"src": "2297:119:9"
														},
														{
															"nativeSrc": "2426:117:9",
															"nodeType": "YulBlock",
															"src": "2426:117:9",
															"statements": [
																{
																	"nativeSrc": "2441:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2441:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2455:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2455:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2445:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2445:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2470:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2470:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2505:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2505:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2516:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2516:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2501:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2501:3:9"
																				},
																				"nativeSrc": "2501:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2501:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2525:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2525:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2480:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2480:20:9"
																		},
																		"nativeSrc": "2480:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2480:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2470:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2470:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2221:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2257:9:9",
														"nodeType": "YulTypedName",
														"src": "2257:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2268:7:9",
														"nodeType": "YulTypedName",
														"src": "2268:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2280:6:9",
														"nodeType": "YulTypedName",
														"src": "2280:6:9",
														"type": ""
													}
												],
												"src": "2221:329:9"
											},
											{
												"body": {
													"nativeSrc": "2588:28:9",
													"nodeType": "YulBlock",
													"src": "2588:28:9",
													"statements": [
														{
															"nativeSrc": "2598:12:9",
															"nodeType": "YulAssignment",
															"src": "2598:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "2605:5:9",
																"nodeType": "YulIdentifier",
																"src": "2605:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2598:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2598:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2556:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2574:5:9",
														"nodeType": "YulTypedName",
														"src": "2574:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2584:3:9",
														"nodeType": "YulTypedName",
														"src": "2584:3:9",
														"type": ""
													}
												],
												"src": "2556:60:9"
											},
											{
												"body": {
													"nativeSrc": "2682:82:9",
													"nodeType": "YulBlock",
													"src": "2682:82:9",
													"statements": [
														{
															"nativeSrc": "2692:66:9",
															"nodeType": "YulAssignment",
															"src": "2692:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2750:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2750:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2732:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2732:17:9"
																				},
																				"nativeSrc": "2732:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2732:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2723:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "2723:8:9"
																		},
																		"nativeSrc": "2723:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2705:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2705:17:9"
																},
																"nativeSrc": "2705:53:9",
																"nodeType": "YulFunctionCall",
																"src": "2705:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2692:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2692:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2622:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2662:5:9",
														"nodeType": "YulTypedName",
														"src": "2662:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2672:9:9",
														"nodeType": "YulTypedName",
														"src": "2672:9:9",
														"type": ""
													}
												],
												"src": "2622:142:9"
											},
											{
												"body": {
													"nativeSrc": "2830:66:9",
													"nodeType": "YulBlock",
													"src": "2830:66:9",
													"statements": [
														{
															"nativeSrc": "2840:50:9",
															"nodeType": "YulAssignment",
															"src": "2840:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2884:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2884:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2853:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "2853:30:9"
																},
																"nativeSrc": "2853:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2853:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2840:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2840:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2770:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:9",
														"nodeType": "YulTypedName",
														"src": "2810:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2820:9:9",
														"nodeType": "YulTypedName",
														"src": "2820:9:9",
														"type": ""
													}
												],
												"src": "2770:126:9"
											},
											{
												"body": {
													"nativeSrc": "2976:66:9",
													"nodeType": "YulBlock",
													"src": "2976:66:9",
													"statements": [
														{
															"nativeSrc": "2986:50:9",
															"nodeType": "YulAssignment",
															"src": "2986:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3030:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3030:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2999:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "2999:30:9"
																},
																"nativeSrc": "2999:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2999:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2986:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2986:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$142_to_t_address",
												"nativeSrc": "2902:140:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2956:5:9",
														"nodeType": "YulTypedName",
														"src": "2956:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2966:9:9",
														"nodeType": "YulTypedName",
														"src": "2966:9:9",
														"type": ""
													}
												],
												"src": "2902:140:9"
											},
											{
												"body": {
													"nativeSrc": "3127:80:9",
													"nodeType": "YulBlock",
													"src": "3127:80:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3144:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3144:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3194:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3194:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$142_to_t_address",
																			"nativeSrc": "3149:44:9",
																			"nodeType": "YulIdentifier",
																			"src": "3149:44:9"
																		},
																		"nativeSrc": "3149:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:51:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3137:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3137:6:9"
																},
																"nativeSrc": "3137:64:9",
																"nodeType": "YulFunctionCall",
																"src": "3137:64:9"
															},
															"nativeSrc": "3137:64:9",
															"nodeType": "YulExpressionStatement",
															"src": "3137:64:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
												"nativeSrc": "3048:159:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3115:5:9",
														"nodeType": "YulTypedName",
														"src": "3115:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3122:3:9",
														"nodeType": "YulTypedName",
														"src": "3122:3:9",
														"type": ""
													}
												],
												"src": "3048:159:9"
											},
											{
												"body": {
													"nativeSrc": "3325:138:9",
													"nodeType": "YulBlock",
													"src": "3325:138:9",
													"statements": [
														{
															"nativeSrc": "3335:26:9",
															"nodeType": "YulAssignment",
															"src": "3335:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3347:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3347:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3358:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3358:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3343:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3343:3:9"
																},
																"nativeSrc": "3343:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3343:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3335:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3335:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3429:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3442:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3442:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3453:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3453:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3438:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3438:3:9"
																		},
																		"nativeSrc": "3438:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3438:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
																	"nativeSrc": "3371:57:9",
																	"nodeType": "YulIdentifier",
																	"src": "3371:57:9"
																},
																"nativeSrc": "3371:85:9",
																"nodeType": "YulFunctionCall",
																"src": "3371:85:9"
															},
															"nativeSrc": "3371:85:9",
															"nodeType": "YulExpressionStatement",
															"src": "3371:85:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed",
												"nativeSrc": "3213:250:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3297:9:9",
														"nodeType": "YulTypedName",
														"src": "3297:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3309:6:9",
														"nodeType": "YulTypedName",
														"src": "3309:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3320:4:9",
														"nodeType": "YulTypedName",
														"src": "3320:4:9",
														"type": ""
													}
												],
												"src": "3213:250:9"
											},
											{
												"body": {
													"nativeSrc": "3595:206:9",
													"nodeType": "YulBlock",
													"src": "3595:206:9",
													"statements": [
														{
															"nativeSrc": "3605:26:9",
															"nodeType": "YulAssignment",
															"src": "3605:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3617:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3613:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3613:3:9"
																},
																"nativeSrc": "3613:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3613:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3605:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3605:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3685:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3685:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3698:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3698:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3709:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3709:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3694:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3694:3:9"
																		},
																		"nativeSrc": "3694:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3694:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3641:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3641:43:9"
																},
																"nativeSrc": "3641:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3641:71:9"
															},
															"nativeSrc": "3641:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3641:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3766:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3766:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3779:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3779:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3790:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3790:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3775:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3775:3:9"
																		},
																		"nativeSrc": "3775:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3775:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3722:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3722:43:9"
																},
																"nativeSrc": "3722:72:9",
																"nodeType": "YulFunctionCall",
																"src": "3722:72:9"
															},
															"nativeSrc": "3722:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "3722:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3469:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3559:9:9",
														"nodeType": "YulTypedName",
														"src": "3559:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3571:6:9",
														"nodeType": "YulTypedName",
														"src": "3571:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3579:6:9",
														"nodeType": "YulTypedName",
														"src": "3579:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3590:4:9",
														"nodeType": "YulTypedName",
														"src": "3590:4:9",
														"type": ""
													}
												],
												"src": "3469:332:9"
											},
											{
												"body": {
													"nativeSrc": "3903:73:9",
													"nodeType": "YulBlock",
													"src": "3903:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3920:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3920:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3925:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3925:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3913:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3913:6:9"
																},
																"nativeSrc": "3913:19:9",
																"nodeType": "YulFunctionCall",
																"src": "3913:19:9"
															},
															"nativeSrc": "3913:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "3913:19:9"
														},
														{
															"nativeSrc": "3941:29:9",
															"nodeType": "YulAssignment",
															"src": "3941:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3960:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3960:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3965:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3965:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3956:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3956:3:9"
																},
																"nativeSrc": "3956:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3956:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3941:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "3941:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3807:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3875:3:9",
														"nodeType": "YulTypedName",
														"src": "3875:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3880:6:9",
														"nodeType": "YulTypedName",
														"src": "3880:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3891:11:9",
														"nodeType": "YulTypedName",
														"src": "3891:11:9",
														"type": ""
													}
												],
												"src": "3807:169:9"
											},
											{
												"body": {
													"nativeSrc": "4088:75:9",
													"nodeType": "YulBlock",
													"src": "4088:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4110:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4110:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4118:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4118:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:9"
																		},
																		"nativeSrc": "4106:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "4122:33:9",
																		"nodeType": "YulLiteral",
																		"src": "4122:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4099:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4099:6:9"
																},
																"nativeSrc": "4099:57:9",
																"nodeType": "YulFunctionCall",
																"src": "4099:57:9"
															},
															"nativeSrc": "4099:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "4099:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "3982:181:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4080:6:9",
														"nodeType": "YulTypedName",
														"src": "4080:6:9",
														"type": ""
													}
												],
												"src": "3982:181:9"
											},
											{
												"body": {
													"nativeSrc": "4315:220:9",
													"nodeType": "YulBlock",
													"src": "4315:220:9",
													"statements": [
														{
															"nativeSrc": "4325:74:9",
															"nodeType": "YulAssignment",
															"src": "4325:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4391:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4391:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4396:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4396:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4332:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "4332:58:9"
																},
																"nativeSrc": "4332:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4332:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4325:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4325:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4497:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4497:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "4408:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "4408:88:9"
																},
																"nativeSrc": "4408:93:9",
																"nodeType": "YulFunctionCall",
																"src": "4408:93:9"
															},
															"nativeSrc": "4408:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "4408:93:9"
														},
														{
															"nativeSrc": "4510:19:9",
															"nodeType": "YulAssignment",
															"src": "4510:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4521:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4521:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4526:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4517:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4517:3:9"
																},
																"nativeSrc": "4517:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4517:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4510:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4510:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4169:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4303:3:9",
														"nodeType": "YulTypedName",
														"src": "4303:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4311:3:9",
														"nodeType": "YulTypedName",
														"src": "4311:3:9",
														"type": ""
													}
												],
												"src": "4169:366:9"
											},
											{
												"body": {
													"nativeSrc": "4712:248:9",
													"nodeType": "YulBlock",
													"src": "4712:248:9",
													"statements": [
														{
															"nativeSrc": "4722:26:9",
															"nodeType": "YulAssignment",
															"src": "4722:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4734:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4734:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4745:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4745:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4730:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4730:3:9"
																},
																"nativeSrc": "4730:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4730:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4722:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4722:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4769:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4769:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4780:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4780:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4765:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4765:3:9"
																		},
																		"nativeSrc": "4765:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4765:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4788:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4788:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4794:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4794:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4784:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4784:3:9"
																		},
																		"nativeSrc": "4784:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4784:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4758:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4758:6:9"
																},
																"nativeSrc": "4758:47:9",
																"nodeType": "YulFunctionCall",
																"src": "4758:47:9"
															},
															"nativeSrc": "4758:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "4758:47:9"
														},
														{
															"nativeSrc": "4814:139:9",
															"nodeType": "YulAssignment",
															"src": "4814:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4948:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4948:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4822:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "4822:124:9"
																},
																"nativeSrc": "4822:131:9",
																"nodeType": "YulFunctionCall",
																"src": "4822:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4814:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4814:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4541:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4692:9:9",
														"nodeType": "YulTypedName",
														"src": "4692:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4707:4:9",
														"nodeType": "YulTypedName",
														"src": "4707:4:9",
														"type": ""
													}
												],
												"src": "4541:419:9"
											},
											{
												"body": {
													"nativeSrc": "5072:73:9",
													"nodeType": "YulBlock",
													"src": "5072:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5094:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5094:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5102:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5102:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5090:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5090:3:9"
																		},
																		"nativeSrc": "5090:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5090:14:9"
																	},
																	{
																		"hexValue": "43617070656443726f776473616c653a20636170206578636565646564",
																		"kind": "string",
																		"nativeSrc": "5106:31:9",
																		"nodeType": "YulLiteral",
																		"src": "5106:31:9",
																		"type": "",
																		"value": "CappedCrowdsale: cap exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5083:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5083:6:9"
																},
																"nativeSrc": "5083:55:9",
																"nodeType": "YulFunctionCall",
																"src": "5083:55:9"
															},
															"nativeSrc": "5083:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "5083:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_2c4df665e7843abc0c81818f3beddf3ec071d2283193f32a87d6b4d1c758ed74",
												"nativeSrc": "4966:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5064:6:9",
														"nodeType": "YulTypedName",
														"src": "5064:6:9",
														"type": ""
													}
												],
												"src": "4966:179:9"
											},
											{
												"body": {
													"nativeSrc": "5297:220:9",
													"nodeType": "YulBlock",
													"src": "5297:220:9",
													"statements": [
														{
															"nativeSrc": "5307:74:9",
															"nodeType": "YulAssignment",
															"src": "5307:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5373:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5373:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5378:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5378:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5314:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "5314:58:9"
																},
																"nativeSrc": "5314:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5314:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5307:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5307:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5479:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5479:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2c4df665e7843abc0c81818f3beddf3ec071d2283193f32a87d6b4d1c758ed74",
																	"nativeSrc": "5390:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "5390:88:9"
																},
																"nativeSrc": "5390:93:9",
																"nodeType": "YulFunctionCall",
																"src": "5390:93:9"
															},
															"nativeSrc": "5390:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "5390:93:9"
														},
														{
															"nativeSrc": "5492:19:9",
															"nodeType": "YulAssignment",
															"src": "5492:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5503:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5503:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5508:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5508:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5499:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:9"
																},
																"nativeSrc": "5499:12:9",
																"nodeType": "YulFunctionCall",
																"src": "5499:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5492:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5492:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2c4df665e7843abc0c81818f3beddf3ec071d2283193f32a87d6b4d1c758ed74_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5151:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5285:3:9",
														"nodeType": "YulTypedName",
														"src": "5285:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5293:3:9",
														"nodeType": "YulTypedName",
														"src": "5293:3:9",
														"type": ""
													}
												],
												"src": "5151:366:9"
											},
											{
												"body": {
													"nativeSrc": "5694:248:9",
													"nodeType": "YulBlock",
													"src": "5694:248:9",
													"statements": [
														{
															"nativeSrc": "5704:26:9",
															"nodeType": "YulAssignment",
															"src": "5704:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5716:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5716:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5727:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5727:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5712:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5712:3:9"
																},
																"nativeSrc": "5712:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5712:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5704:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5704:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5751:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5751:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5762:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5762:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5747:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5747:3:9"
																		},
																		"nativeSrc": "5747:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5747:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5770:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5770:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5776:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5776:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5766:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5766:3:9"
																		},
																		"nativeSrc": "5766:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5766:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5740:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5740:6:9"
																},
																"nativeSrc": "5740:47:9",
																"nodeType": "YulFunctionCall",
																"src": "5740:47:9"
															},
															"nativeSrc": "5740:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "5740:47:9"
														},
														{
															"nativeSrc": "5796:139:9",
															"nodeType": "YulAssignment",
															"src": "5796:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5930:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5930:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2c4df665e7843abc0c81818f3beddf3ec071d2283193f32a87d6b4d1c758ed74_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5804:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "5804:124:9"
																},
																"nativeSrc": "5804:131:9",
																"nodeType": "YulFunctionCall",
																"src": "5804:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5796:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5796:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c4df665e7843abc0c81818f3beddf3ec071d2283193f32a87d6b4d1c758ed74__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5523:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5674:9:9",
														"nodeType": "YulTypedName",
														"src": "5674:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5689:4:9",
														"nodeType": "YulTypedName",
														"src": "5689:4:9",
														"type": ""
													}
												],
												"src": "5523:419:9"
											},
											{
												"body": {
													"nativeSrc": "5976:152:9",
													"nodeType": "YulBlock",
													"src": "5976:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5993:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5993:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5996:77:9",
																		"nodeType": "YulLiteral",
																		"src": "5996:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5986:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5986:6:9"
																},
																"nativeSrc": "5986:88:9",
																"nodeType": "YulFunctionCall",
																"src": "5986:88:9"
															},
															"nativeSrc": "5986:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "5986:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6090:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6090:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6093:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6093:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6083:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6083:6:9"
																},
																"nativeSrc": "6083:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6083:15:9"
															},
															"nativeSrc": "6083:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6083:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6114:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6114:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6117:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6117:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6107:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6107:6:9"
																},
																"nativeSrc": "6107:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6107:15:9"
															},
															"nativeSrc": "6107:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6107:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5948:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "5948:180:9"
											},
											{
												"body": {
													"nativeSrc": "6178:147:9",
													"nodeType": "YulBlock",
													"src": "6178:147:9",
													"statements": [
														{
															"nativeSrc": "6188:25:9",
															"nodeType": "YulAssignment",
															"src": "6188:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6211:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6211:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6193:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "6193:17:9"
																},
																"nativeSrc": "6193:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6193:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6188:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "6188:1:9"
																}
															]
														},
														{
															"nativeSrc": "6222:25:9",
															"nodeType": "YulAssignment",
															"src": "6222:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6245:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6245:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6227:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "6227:17:9"
																},
																"nativeSrc": "6227:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6227:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6222:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "6222:1:9"
																}
															]
														},
														{
															"nativeSrc": "6256:16:9",
															"nodeType": "YulAssignment",
															"src": "6256:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6267:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6267:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6270:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6270:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6263:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6263:3:9"
																},
																"nativeSrc": "6263:9:9",
																"nodeType": "YulFunctionCall",
																"src": "6263:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6256:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6256:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6296:22:9",
																"nodeType": "YulBlock",
																"src": "6296:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6298:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6298:16:9"
																			},
																			"nativeSrc": "6298:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6298:18:9"
																		},
																		"nativeSrc": "6298:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6288:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6288:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6291:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6291:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6285:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6285:2:9"
																},
																"nativeSrc": "6285:10:9",
																"nodeType": "YulFunctionCall",
																"src": "6285:10:9"
															},
															"nativeSrc": "6282:36:9",
															"nodeType": "YulIf",
															"src": "6282:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6134:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6165:1:9",
														"nodeType": "YulTypedName",
														"src": "6165:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6168:1:9",
														"nodeType": "YulTypedName",
														"src": "6168:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6174:3:9",
														"nodeType": "YulTypedName",
														"src": "6174:3:9",
														"type": ""
													}
												],
												"src": "6134:191:9"
											},
											{
												"body": {
													"nativeSrc": "6437:123:9",
													"nodeType": "YulBlock",
													"src": "6437:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6459:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6459:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6467:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6467:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6455:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6455:3:9"
																		},
																		"nativeSrc": "6455:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6455:14:9"
																	},
																	{
																		"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65",
																		"kind": "string",
																		"nativeSrc": "6471:34:9",
																		"nodeType": "YulLiteral",
																		"src": "6471:34:9",
																		"type": "",
																		"value": "Crowdsale: beneficiary is the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6448:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6448:6:9"
																},
																"nativeSrc": "6448:58:9",
																"nodeType": "YulFunctionCall",
																"src": "6448:58:9"
															},
															"nativeSrc": "6448:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "6448:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6527:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6527:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6535:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6535:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6523:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6523:3:9"
																		},
																		"nativeSrc": "6523:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6523:15:9"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "6540:12:9",
																		"nodeType": "YulLiteral",
																		"src": "6540:12:9",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6516:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6516:6:9"
																},
																"nativeSrc": "6516:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6516:37:9"
															},
															"nativeSrc": "6516:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "6516:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
												"nativeSrc": "6331:229:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6429:6:9",
														"nodeType": "YulTypedName",
														"src": "6429:6:9",
														"type": ""
													}
												],
												"src": "6331:229:9"
											},
											{
												"body": {
													"nativeSrc": "6712:220:9",
													"nodeType": "YulBlock",
													"src": "6712:220:9",
													"statements": [
														{
															"nativeSrc": "6722:74:9",
															"nodeType": "YulAssignment",
															"src": "6722:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6788:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6788:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6793:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6793:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6729:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "6729:58:9"
																},
																"nativeSrc": "6729:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6729:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6722:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6722:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6894:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6894:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																	"nativeSrc": "6805:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "6805:88:9"
																},
																"nativeSrc": "6805:93:9",
																"nodeType": "YulFunctionCall",
																"src": "6805:93:9"
															},
															"nativeSrc": "6805:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "6805:93:9"
														},
														{
															"nativeSrc": "6907:19:9",
															"nodeType": "YulAssignment",
															"src": "6907:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6918:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6918:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6923:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6923:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6914:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6914:3:9"
																},
																"nativeSrc": "6914:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6914:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6907:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6907:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6566:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6700:3:9",
														"nodeType": "YulTypedName",
														"src": "6700:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6708:3:9",
														"nodeType": "YulTypedName",
														"src": "6708:3:9",
														"type": ""
													}
												],
												"src": "6566:366:9"
											},
											{
												"body": {
													"nativeSrc": "7109:248:9",
													"nodeType": "YulBlock",
													"src": "7109:248:9",
													"statements": [
														{
															"nativeSrc": "7119:26:9",
															"nodeType": "YulAssignment",
															"src": "7119:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7131:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7131:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7142:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7142:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7127:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7127:3:9"
																},
																"nativeSrc": "7127:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7127:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7119:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7119:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7166:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7166:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7177:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7177:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7162:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7162:3:9"
																		},
																		"nativeSrc": "7162:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7162:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7185:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7185:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7191:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7191:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7181:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7181:3:9"
																		},
																		"nativeSrc": "7181:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7181:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7155:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7155:6:9"
																},
																"nativeSrc": "7155:47:9",
																"nodeType": "YulFunctionCall",
																"src": "7155:47:9"
															},
															"nativeSrc": "7155:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "7155:47:9"
														},
														{
															"nativeSrc": "7211:139:9",
															"nodeType": "YulAssignment",
															"src": "7211:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7345:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7345:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7219:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "7219:124:9"
																},
																"nativeSrc": "7219:131:9",
																"nodeType": "YulFunctionCall",
																"src": "7219:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7211:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7211:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6938:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7089:9:9",
														"nodeType": "YulTypedName",
														"src": "7089:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7104:4:9",
														"nodeType": "YulTypedName",
														"src": "7104:4:9",
														"type": ""
													}
												],
												"src": "6938:419:9"
											},
											{
												"body": {
													"nativeSrc": "7469:69:9",
													"nodeType": "YulBlock",
													"src": "7469:69:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7491:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7491:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7499:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7499:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7487:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7487:3:9"
																		},
																		"nativeSrc": "7487:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7487:14:9"
																	},
																	{
																		"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
																		"kind": "string",
																		"nativeSrc": "7503:27:9",
																		"nodeType": "YulLiteral",
																		"src": "7503:27:9",
																		"type": "",
																		"value": "Crowdsale: weiAmount is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7480:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7480:6:9"
																},
																"nativeSrc": "7480:51:9",
																"nodeType": "YulFunctionCall",
																"src": "7480:51:9"
															},
															"nativeSrc": "7480:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "7480:51:9"
														}
													]
												},
												"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
												"nativeSrc": "7363:175:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7461:6:9",
														"nodeType": "YulTypedName",
														"src": "7461:6:9",
														"type": ""
													}
												],
												"src": "7363:175:9"
											},
											{
												"body": {
													"nativeSrc": "7690:220:9",
													"nodeType": "YulBlock",
													"src": "7690:220:9",
													"statements": [
														{
															"nativeSrc": "7700:74:9",
															"nodeType": "YulAssignment",
															"src": "7700:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7766:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7766:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7771:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7771:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7707:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "7707:58:9"
																},
																"nativeSrc": "7707:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7707:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7700:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7700:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7872:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7872:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																	"nativeSrc": "7783:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "7783:88:9"
																},
																"nativeSrc": "7783:93:9",
																"nodeType": "YulFunctionCall",
																"src": "7783:93:9"
															},
															"nativeSrc": "7783:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "7783:93:9"
														},
														{
															"nativeSrc": "7885:19:9",
															"nodeType": "YulAssignment",
															"src": "7885:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7896:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7896:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7901:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7901:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7892:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7892:3:9"
																},
																"nativeSrc": "7892:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7892:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7885:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7885:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7544:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7678:3:9",
														"nodeType": "YulTypedName",
														"src": "7678:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7686:3:9",
														"nodeType": "YulTypedName",
														"src": "7686:3:9",
														"type": ""
													}
												],
												"src": "7544:366:9"
											},
											{
												"body": {
													"nativeSrc": "8087:248:9",
													"nodeType": "YulBlock",
													"src": "8087:248:9",
													"statements": [
														{
															"nativeSrc": "8097:26:9",
															"nodeType": "YulAssignment",
															"src": "8097:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8109:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8109:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8120:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8120:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8105:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8105:3:9"
																},
																"nativeSrc": "8105:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8105:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8097:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8097:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8144:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8144:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8155:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8155:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8140:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8140:3:9"
																		},
																		"nativeSrc": "8140:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8140:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8163:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8163:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8169:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8169:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8159:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8159:3:9"
																		},
																		"nativeSrc": "8159:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8159:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8133:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8133:6:9"
																},
																"nativeSrc": "8133:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8133:47:9"
															},
															"nativeSrc": "8133:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8133:47:9"
														},
														{
															"nativeSrc": "8189:139:9",
															"nodeType": "YulAssignment",
															"src": "8189:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8323:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8323:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8197:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8197:124:9"
																},
																"nativeSrc": "8197:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8197:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8189:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8189:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7916:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8067:9:9",
														"nodeType": "YulTypedName",
														"src": "8067:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8082:4:9",
														"nodeType": "YulTypedName",
														"src": "8082:4:9",
														"type": ""
													}
												],
												"src": "7916:419:9"
											},
											{
												"body": {
													"nativeSrc": "8389:362:9",
													"nodeType": "YulBlock",
													"src": "8389:362:9",
													"statements": [
														{
															"nativeSrc": "8399:25:9",
															"nodeType": "YulAssignment",
															"src": "8399:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8422:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8422:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8404:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8404:17:9"
																},
																"nativeSrc": "8404:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8404:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8399:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8399:1:9"
																}
															]
														},
														{
															"nativeSrc": "8433:25:9",
															"nodeType": "YulAssignment",
															"src": "8433:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8456:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8456:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8438:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8438:17:9"
																},
																"nativeSrc": "8438:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8438:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8433:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8433:1:9"
																}
															]
														},
														{
															"nativeSrc": "8467:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8467:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8490:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8490:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8493:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8493:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8486:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8486:3:9"
																},
																"nativeSrc": "8486:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8486:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8471:11:9",
																	"nodeType": "YulTypedName",
																	"src": "8471:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8504:41:9",
															"nodeType": "YulAssignment",
															"src": "8504:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8533:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "8533:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8515:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8515:17:9"
																},
																"nativeSrc": "8515:30:9",
																"nodeType": "YulFunctionCall",
																"src": "8515:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8504:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "8504:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8722:22:9",
																"nodeType": "YulBlock",
																"src": "8722:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8724:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8724:16:9"
																			},
																			"nativeSrc": "8724:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8724:18:9"
																		},
																		"nativeSrc": "8724:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8724:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8655:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "8655:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8648:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "8648:6:9"
																				},
																				"nativeSrc": "8648:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8648:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8678:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "8678:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8685:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "8685:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8694:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "8694:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8681:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "8681:3:9"
																						},
																						"nativeSrc": "8681:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "8681:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8675:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "8675:2:9"
																				},
																				"nativeSrc": "8675:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8675:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8628:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "8628:2:9"
																		},
																		"nativeSrc": "8628:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8628:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8608:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8608:6:9"
																},
																"nativeSrc": "8608:113:9",
																"nodeType": "YulFunctionCall",
																"src": "8608:113:9"
															},
															"nativeSrc": "8605:139:9",
															"nodeType": "YulIf",
															"src": "8605:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8341:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8372:1:9",
														"nodeType": "YulTypedName",
														"src": "8372:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8375:1:9",
														"nodeType": "YulTypedName",
														"src": "8375:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8381:7:9",
														"nodeType": "YulTypedName",
														"src": "8381:7:9",
														"type": ""
													}
												],
												"src": "8341:410:9"
											},
											{
												"body": {
													"nativeSrc": "8822:53:9",
													"nodeType": "YulBlock",
													"src": "8822:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8839:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8839:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8862:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8862:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8844:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "8844:17:9"
																		},
																		"nativeSrc": "8844:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8844:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8832:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8832:6:9"
																},
																"nativeSrc": "8832:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8832:37:9"
															},
															"nativeSrc": "8832:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "8832:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8757:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8810:5:9",
														"nodeType": "YulTypedName",
														"src": "8810:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8817:3:9",
														"nodeType": "YulTypedName",
														"src": "8817:3:9",
														"type": ""
													}
												],
												"src": "8757:118:9"
											},
											{
												"body": {
													"nativeSrc": "9007:206:9",
													"nodeType": "YulBlock",
													"src": "9007:206:9",
													"statements": [
														{
															"nativeSrc": "9017:26:9",
															"nodeType": "YulAssignment",
															"src": "9017:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9029:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9029:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9040:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9040:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9025:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9025:3:9"
																},
																"nativeSrc": "9025:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9025:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9017:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9017:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9097:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9097:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9110:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9110:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9121:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9121:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9106:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9106:3:9"
																		},
																		"nativeSrc": "9106:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9106:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9053:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9053:43:9"
																},
																"nativeSrc": "9053:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9053:71:9"
															},
															"nativeSrc": "9053:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "9053:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9178:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9178:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9191:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9191:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9202:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9202:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9187:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9187:3:9"
																		},
																		"nativeSrc": "9187:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9187:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9134:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9134:43:9"
																},
																"nativeSrc": "9134:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9134:72:9"
															},
															"nativeSrc": "9134:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9134:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8881:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8971:9:9",
														"nodeType": "YulTypedName",
														"src": "8971:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8983:6:9",
														"nodeType": "YulTypedName",
														"src": "8983:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8991:6:9",
														"nodeType": "YulTypedName",
														"src": "8991:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9002:4:9",
														"nodeType": "YulTypedName",
														"src": "9002:4:9",
														"type": ""
													}
												],
												"src": "8881:332:9"
											},
											{
												"body": {
													"nativeSrc": "9259:76:9",
													"nodeType": "YulBlock",
													"src": "9259:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "9313:16:9",
																"nodeType": "YulBlock",
																"src": "9313:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9322:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9322:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9325:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9325:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9315:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9315:6:9"
																			},
																			"nativeSrc": "9315:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9315:12:9"
																		},
																		"nativeSrc": "9315:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9315:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9282:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9282:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9304:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9304:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9289:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "9289:14:9"
																				},
																				"nativeSrc": "9289:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9289:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9279:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9279:2:9"
																		},
																		"nativeSrc": "9279:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9279:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9272:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9272:6:9"
																},
																"nativeSrc": "9272:40:9",
																"nodeType": "YulFunctionCall",
																"src": "9272:40:9"
															},
															"nativeSrc": "9269:60:9",
															"nodeType": "YulIf",
															"src": "9269:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9219:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9252:5:9",
														"nodeType": "YulTypedName",
														"src": "9252:5:9",
														"type": ""
													}
												],
												"src": "9219:116:9"
											},
											{
												"body": {
													"nativeSrc": "9401:77:9",
													"nodeType": "YulBlock",
													"src": "9401:77:9",
													"statements": [
														{
															"nativeSrc": "9411:22:9",
															"nodeType": "YulAssignment",
															"src": "9411:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9426:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9426:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9420:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9420:5:9"
																},
																"nativeSrc": "9420:13:9",
																"nodeType": "YulFunctionCall",
																"src": "9420:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9411:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9411:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9466:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9466:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9442:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "9442:23:9"
																},
																"nativeSrc": "9442:30:9",
																"nodeType": "YulFunctionCall",
																"src": "9442:30:9"
															},
															"nativeSrc": "9442:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "9442:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9341:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9379:6:9",
														"nodeType": "YulTypedName",
														"src": "9379:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9387:3:9",
														"nodeType": "YulTypedName",
														"src": "9387:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9395:5:9",
														"nodeType": "YulTypedName",
														"src": "9395:5:9",
														"type": ""
													}
												],
												"src": "9341:137:9"
											},
											{
												"body": {
													"nativeSrc": "9558:271:9",
													"nodeType": "YulBlock",
													"src": "9558:271:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "9604:83:9",
																"nodeType": "YulBlock",
																"src": "9604:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9606:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "9606:77:9"
																			},
																			"nativeSrc": "9606:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9606:79:9"
																		},
																		"nativeSrc": "9606:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9606:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9579:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9579:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9588:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9588:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9575:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9575:3:9"
																		},
																		"nativeSrc": "9575:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9575:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9600:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9600:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9571:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9571:3:9"
																},
																"nativeSrc": "9571:32:9",
																"nodeType": "YulFunctionCall",
																"src": "9571:32:9"
															},
															"nativeSrc": "9568:119:9",
															"nodeType": "YulIf",
															"src": "9568:119:9"
														},
														{
															"nativeSrc": "9697:125:9",
															"nodeType": "YulBlock",
															"src": "9697:125:9",
															"statements": [
																{
																	"nativeSrc": "9712:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9712:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9726:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9726:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9716:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9716:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9741:71:9",
																	"nodeType": "YulAssignment",
																	"src": "9741:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9784:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9784:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9795:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9795:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9780:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9780:3:9"
																				},
																				"nativeSrc": "9780:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9780:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9804:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9804:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9751:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "9751:28:9"
																		},
																		"nativeSrc": "9751:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9751:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9741:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9741:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9484:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9528:9:9",
														"nodeType": "YulTypedName",
														"src": "9528:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9539:7:9",
														"nodeType": "YulTypedName",
														"src": "9539:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9551:6:9",
														"nodeType": "YulTypedName",
														"src": "9551:6:9",
														"type": ""
													}
												],
												"src": "9484:345:9"
											},
											{
												"body": {
													"nativeSrc": "9941:123:9",
													"nodeType": "YulBlock",
													"src": "9941:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9963:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9963:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9971:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9971:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9959:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9959:3:9"
																		},
																		"nativeSrc": "9959:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9959:14:9"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nativeSrc": "9975:34:9",
																		"nodeType": "YulLiteral",
																		"src": "9975:34:9",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9952:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9952:6:9"
																},
																"nativeSrc": "9952:58:9",
																"nodeType": "YulFunctionCall",
																"src": "9952:58:9"
															},
															"nativeSrc": "9952:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "9952:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10031:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10031:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10039:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10039:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10027:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10027:3:9"
																		},
																		"nativeSrc": "10027:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10027:15:9"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nativeSrc": "10044:12:9",
																		"nodeType": "YulLiteral",
																		"src": "10044:12:9",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10020:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10020:6:9"
																},
																"nativeSrc": "10020:37:9",
																"nodeType": "YulFunctionCall",
																"src": "10020:37:9"
															},
															"nativeSrc": "10020:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "10020:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nativeSrc": "9835:229:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9933:6:9",
														"nodeType": "YulTypedName",
														"src": "9933:6:9",
														"type": ""
													}
												],
												"src": "9835:229:9"
											},
											{
												"body": {
													"nativeSrc": "10216:220:9",
													"nodeType": "YulBlock",
													"src": "10216:220:9",
													"statements": [
														{
															"nativeSrc": "10226:74:9",
															"nodeType": "YulAssignment",
															"src": "10226:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10292:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10292:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10297:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10297:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10233:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "10233:58:9"
																},
																"nativeSrc": "10233:67:9",
																"nodeType": "YulFunctionCall",
																"src": "10233:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10226:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10226:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10398:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10398:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nativeSrc": "10309:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10309:88:9"
																},
																"nativeSrc": "10309:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10309:93:9"
															},
															"nativeSrc": "10309:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10309:93:9"
														},
														{
															"nativeSrc": "10411:19:9",
															"nodeType": "YulAssignment",
															"src": "10411:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10422:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10422:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10427:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10427:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10418:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10418:3:9"
																},
																"nativeSrc": "10418:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10418:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10411:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10411:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10070:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10204:3:9",
														"nodeType": "YulTypedName",
														"src": "10204:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10212:3:9",
														"nodeType": "YulTypedName",
														"src": "10212:3:9",
														"type": ""
													}
												],
												"src": "10070:366:9"
											},
											{
												"body": {
													"nativeSrc": "10613:248:9",
													"nodeType": "YulBlock",
													"src": "10613:248:9",
													"statements": [
														{
															"nativeSrc": "10623:26:9",
															"nodeType": "YulAssignment",
															"src": "10623:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10635:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10635:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10646:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10646:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10631:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10631:3:9"
																},
																"nativeSrc": "10631:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10631:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10623:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10623:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10670:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10670:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10681:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10681:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10666:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10666:3:9"
																		},
																		"nativeSrc": "10666:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10666:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10689:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10689:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10695:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10695:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10685:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10685:3:9"
																		},
																		"nativeSrc": "10685:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10685:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10659:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10659:6:9"
																},
																"nativeSrc": "10659:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10659:47:9"
															},
															"nativeSrc": "10659:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10659:47:9"
														},
														{
															"nativeSrc": "10715:139:9",
															"nodeType": "YulAssignment",
															"src": "10715:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10849:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10849:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10723:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10723:124:9"
																},
																"nativeSrc": "10723:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10723:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10715:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10715:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10442:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10593:9:9",
														"nodeType": "YulTypedName",
														"src": "10593:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10608:4:9",
														"nodeType": "YulTypedName",
														"src": "10608:4:9",
														"type": ""
													}
												],
												"src": "10442:419:9"
											},
											{
												"body": {
													"nativeSrc": "10973:119:9",
													"nodeType": "YulBlock",
													"src": "10973:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10995:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10995:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11003:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11003:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10991:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10991:3:9"
																		},
																		"nativeSrc": "10991:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10991:14:9"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nativeSrc": "11007:34:9",
																		"nodeType": "YulLiteral",
																		"src": "11007:34:9",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10984:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10984:6:9"
																},
																"nativeSrc": "10984:58:9",
																"nodeType": "YulFunctionCall",
																"src": "10984:58:9"
															},
															"nativeSrc": "10984:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "10984:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11063:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11063:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11071:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11071:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11059:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11059:3:9"
																		},
																		"nativeSrc": "11059:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11059:15:9"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nativeSrc": "11076:8:9",
																		"nodeType": "YulLiteral",
																		"src": "11076:8:9",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11052:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11052:6:9"
																},
																"nativeSrc": "11052:33:9",
																"nodeType": "YulFunctionCall",
																"src": "11052:33:9"
															},
															"nativeSrc": "11052:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "11052:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nativeSrc": "10867:225:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10965:6:9",
														"nodeType": "YulTypedName",
														"src": "10965:6:9",
														"type": ""
													}
												],
												"src": "10867:225:9"
											},
											{
												"body": {
													"nativeSrc": "11244:220:9",
													"nodeType": "YulBlock",
													"src": "11244:220:9",
													"statements": [
														{
															"nativeSrc": "11254:74:9",
															"nodeType": "YulAssignment",
															"src": "11254:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11320:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11320:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11325:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11325:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11261:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11261:58:9"
																},
																"nativeSrc": "11261:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11261:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11254:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11254:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11426:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11426:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nativeSrc": "11337:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11337:88:9"
																},
																"nativeSrc": "11337:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11337:93:9"
															},
															"nativeSrc": "11337:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11337:93:9"
														},
														{
															"nativeSrc": "11439:19:9",
															"nodeType": "YulAssignment",
															"src": "11439:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11450:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11450:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11455:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11455:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11446:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11446:3:9"
																},
																"nativeSrc": "11446:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11446:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11439:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11439:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11098:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11232:3:9",
														"nodeType": "YulTypedName",
														"src": "11232:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11240:3:9",
														"nodeType": "YulTypedName",
														"src": "11240:3:9",
														"type": ""
													}
												],
												"src": "11098:366:9"
											},
											{
												"body": {
													"nativeSrc": "11641:248:9",
													"nodeType": "YulBlock",
													"src": "11641:248:9",
													"statements": [
														{
															"nativeSrc": "11651:26:9",
															"nodeType": "YulAssignment",
															"src": "11651:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11663:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11663:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11674:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11674:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11659:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11659:3:9"
																},
																"nativeSrc": "11659:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11659:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11651:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11651:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11698:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11698:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11709:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11709:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11694:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11694:3:9"
																		},
																		"nativeSrc": "11694:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11694:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11717:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11717:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11723:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11723:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11713:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11713:3:9"
																		},
																		"nativeSrc": "11713:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11713:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11687:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11687:6:9"
																},
																"nativeSrc": "11687:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11687:47:9"
															},
															"nativeSrc": "11687:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11687:47:9"
														},
														{
															"nativeSrc": "11743:139:9",
															"nodeType": "YulAssignment",
															"src": "11743:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11877:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11877:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11751:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11751:124:9"
																},
																"nativeSrc": "11751:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11751:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11743:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11743:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11470:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11621:9:9",
														"nodeType": "YulTypedName",
														"src": "11621:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11636:4:9",
														"nodeType": "YulTypedName",
														"src": "11636:4:9",
														"type": ""
													}
												],
												"src": "11470:419:9"
											},
											{
												"body": {
													"nativeSrc": "11953:40:9",
													"nodeType": "YulBlock",
													"src": "11953:40:9",
													"statements": [
														{
															"nativeSrc": "11964:22:9",
															"nodeType": "YulAssignment",
															"src": "11964:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11980:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11980:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11974:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11974:5:9"
																},
																"nativeSrc": "11974:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11974:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11964:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11964:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "11895:98:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11936:5:9",
														"nodeType": "YulTypedName",
														"src": "11936:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11946:6:9",
														"nodeType": "YulTypedName",
														"src": "11946:6:9",
														"type": ""
													}
												],
												"src": "11895:98:9"
											},
											{
												"body": {
													"nativeSrc": "12112:34:9",
													"nodeType": "YulBlock",
													"src": "12112:34:9",
													"statements": [
														{
															"nativeSrc": "12122:18:9",
															"nodeType": "YulAssignment",
															"src": "12122:18:9",
															"value": {
																"name": "pos",
																"nativeSrc": "12137:3:9",
																"nodeType": "YulIdentifier",
																"src": "12137:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12122:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "12122:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11999:147:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12084:3:9",
														"nodeType": "YulTypedName",
														"src": "12084:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12089:6:9",
														"nodeType": "YulTypedName",
														"src": "12089:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12100:11:9",
														"nodeType": "YulTypedName",
														"src": "12100:11:9",
														"type": ""
													}
												],
												"src": "11999:147:9"
											},
											{
												"body": {
													"nativeSrc": "12214:184:9",
													"nodeType": "YulBlock",
													"src": "12214:184:9",
													"statements": [
														{
															"nativeSrc": "12224:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "12224:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "12233:1:9",
																"nodeType": "YulLiteral",
																"src": "12233:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "12228:1:9",
																	"nodeType": "YulTypedName",
																	"src": "12228:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12293:63:9",
																"nodeType": "YulBlock",
																"src": "12293:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "12318:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "12318:3:9"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "12323:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "12323:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "12314:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "12314:3:9"
																					},
																					"nativeSrc": "12314:11:9",
																					"nodeType": "YulFunctionCall",
																					"src": "12314:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "12337:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "12337:3:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "12342:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "12342:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12333:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "12333:3:9"
																							},
																							"nativeSrc": "12333:11:9",
																							"nodeType": "YulFunctionCall",
																							"src": "12333:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "12327:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "12327:5:9"
																					},
																					"nativeSrc": "12327:18:9",
																					"nodeType": "YulFunctionCall",
																					"src": "12327:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12307:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12307:6:9"
																			},
																			"nativeSrc": "12307:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12307:39:9"
																		},
																		"nativeSrc": "12307:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12307:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "12254:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12254:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12257:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12257:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12251:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "12251:2:9"
																},
																"nativeSrc": "12251:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12251:13:9"
															},
															"nativeSrc": "12243:113:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12265:19:9",
																"nodeType": "YulBlock",
																"src": "12265:19:9",
																"statements": [
																	{
																		"nativeSrc": "12267:15:9",
																		"nodeType": "YulAssignment",
																		"src": "12267:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "12276:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "12276:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12279:2:9",
																					"nodeType": "YulLiteral",
																					"src": "12279:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12272:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "12272:3:9"
																			},
																			"nativeSrc": "12272:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12272:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "12267:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "12267:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12247:3:9",
																"nodeType": "YulBlock",
																"src": "12247:3:9",
																"statements": []
															},
															"src": "12243:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "12376:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "12376:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12381:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12381:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12372:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12372:3:9"
																		},
																		"nativeSrc": "12372:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12372:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12390:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12390:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12365:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12365:6:9"
																},
																"nativeSrc": "12365:27:9",
																"nodeType": "YulFunctionCall",
																"src": "12365:27:9"
															},
															"nativeSrc": "12365:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "12365:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "12152:246:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12196:3:9",
														"nodeType": "YulTypedName",
														"src": "12196:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "12201:3:9",
														"nodeType": "YulTypedName",
														"src": "12201:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12206:6:9",
														"nodeType": "YulTypedName",
														"src": "12206:6:9",
														"type": ""
													}
												],
												"src": "12152:246:9"
											},
											{
												"body": {
													"nativeSrc": "12512:278:9",
													"nodeType": "YulBlock",
													"src": "12512:278:9",
													"statements": [
														{
															"nativeSrc": "12522:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "12522:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12568:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12568:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "12536:31:9",
																	"nodeType": "YulIdentifier",
																	"src": "12536:31:9"
																},
																"nativeSrc": "12536:38:9",
																"nodeType": "YulFunctionCall",
																"src": "12536:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12526:6:9",
																	"nodeType": "YulTypedName",
																	"src": "12526:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12583:95:9",
															"nodeType": "YulAssignment",
															"src": "12583:95:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12666:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12666:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12671:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12671:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12590:75:9",
																	"nodeType": "YulIdentifier",
																	"src": "12590:75:9"
																},
																"nativeSrc": "12590:88:9",
																"nodeType": "YulFunctionCall",
																"src": "12590:88:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12583:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12583:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12726:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12726:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12733:4:9",
																				"nodeType": "YulLiteral",
																				"src": "12733:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12722:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12722:3:9"
																		},
																		"nativeSrc": "12722:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12722:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12740:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12740:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12745:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12745:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12687:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "12687:34:9"
																},
																"nativeSrc": "12687:65:9",
																"nodeType": "YulFunctionCall",
																"src": "12687:65:9"
															},
															"nativeSrc": "12687:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "12687:65:9"
														},
														{
															"nativeSrc": "12761:23:9",
															"nodeType": "YulAssignment",
															"src": "12761:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12772:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12772:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12777:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12777:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12768:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12768:3:9"
																},
																"nativeSrc": "12768:16:9",
																"nodeType": "YulFunctionCall",
																"src": "12768:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12761:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12761:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12404:386:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12493:5:9",
														"nodeType": "YulTypedName",
														"src": "12493:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12500:3:9",
														"nodeType": "YulTypedName",
														"src": "12500:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12508:3:9",
														"nodeType": "YulTypedName",
														"src": "12508:3:9",
														"type": ""
													}
												],
												"src": "12404:386:9"
											},
											{
												"body": {
													"nativeSrc": "12930:137:9",
													"nodeType": "YulBlock",
													"src": "12930:137:9",
													"statements": [
														{
															"nativeSrc": "12941:100:9",
															"nodeType": "YulAssignment",
															"src": "12941:100:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13028:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13028:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13037:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13037:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12948:79:9",
																	"nodeType": "YulIdentifier",
																	"src": "12948:79:9"
																},
																"nativeSrc": "12948:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12948:93:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12941:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12941:3:9"
																}
															]
														},
														{
															"nativeSrc": "13051:10:9",
															"nodeType": "YulAssignment",
															"src": "13051:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "13058:3:9",
																"nodeType": "YulIdentifier",
																"src": "13058:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13051:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13051:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12796:271:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12909:3:9",
														"nodeType": "YulTypedName",
														"src": "12909:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12915:6:9",
														"nodeType": "YulTypedName",
														"src": "12915:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12926:3:9",
														"nodeType": "YulTypedName",
														"src": "12926:3:9",
														"type": ""
													}
												],
												"src": "12796:271:9"
											},
											{
												"body": {
													"nativeSrc": "13179:73:9",
													"nodeType": "YulBlock",
													"src": "13179:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13201:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13201:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13209:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13209:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13197:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13197:3:9"
																		},
																		"nativeSrc": "13197:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13197:14:9"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "13213:31:9",
																		"nodeType": "YulLiteral",
																		"src": "13213:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13190:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13190:6:9"
																},
																"nativeSrc": "13190:55:9",
																"nodeType": "YulFunctionCall",
																"src": "13190:55:9"
															},
															"nativeSrc": "13190:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "13190:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nativeSrc": "13073:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13171:6:9",
														"nodeType": "YulTypedName",
														"src": "13171:6:9",
														"type": ""
													}
												],
												"src": "13073:179:9"
											},
											{
												"body": {
													"nativeSrc": "13404:220:9",
													"nodeType": "YulBlock",
													"src": "13404:220:9",
													"statements": [
														{
															"nativeSrc": "13414:74:9",
															"nodeType": "YulAssignment",
															"src": "13414:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13480:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13480:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13485:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13485:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13421:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13421:58:9"
																},
																"nativeSrc": "13421:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13421:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13414:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13414:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13586:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13586:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nativeSrc": "13497:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13497:88:9"
																},
																"nativeSrc": "13497:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13497:93:9"
															},
															"nativeSrc": "13497:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13497:93:9"
														},
														{
															"nativeSrc": "13599:19:9",
															"nodeType": "YulAssignment",
															"src": "13599:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13610:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13610:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13615:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13615:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13606:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13606:3:9"
																},
																"nativeSrc": "13606:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13606:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13599:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13599:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13258:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13392:3:9",
														"nodeType": "YulTypedName",
														"src": "13392:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13400:3:9",
														"nodeType": "YulTypedName",
														"src": "13400:3:9",
														"type": ""
													}
												],
												"src": "13258:366:9"
											},
											{
												"body": {
													"nativeSrc": "13801:248:9",
													"nodeType": "YulBlock",
													"src": "13801:248:9",
													"statements": [
														{
															"nativeSrc": "13811:26:9",
															"nodeType": "YulAssignment",
															"src": "13811:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13823:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13823:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13834:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13834:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13819:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13819:3:9"
																},
																"nativeSrc": "13819:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13819:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13811:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13811:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13858:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13858:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13869:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13869:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13854:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13854:3:9"
																		},
																		"nativeSrc": "13854:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13854:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13877:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13877:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13883:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13883:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13873:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13873:3:9"
																		},
																		"nativeSrc": "13873:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13873:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13847:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13847:6:9"
																},
																"nativeSrc": "13847:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13847:47:9"
															},
															"nativeSrc": "13847:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13847:47:9"
														},
														{
															"nativeSrc": "13903:139:9",
															"nodeType": "YulAssignment",
															"src": "13903:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14037:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14037:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13911:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "13911:124:9"
																},
																"nativeSrc": "13911:131:9",
																"nodeType": "YulFunctionCall",
																"src": "13911:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13903:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13903:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13630:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13781:9:9",
														"nodeType": "YulTypedName",
														"src": "13781:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13796:4:9",
														"nodeType": "YulTypedName",
														"src": "13796:4:9",
														"type": ""
													}
												],
												"src": "13630:419:9"
											},
											{
												"body": {
													"nativeSrc": "14114:40:9",
													"nodeType": "YulBlock",
													"src": "14114:40:9",
													"statements": [
														{
															"nativeSrc": "14125:22:9",
															"nodeType": "YulAssignment",
															"src": "14125:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14141:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "14141:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14135:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "14135:5:9"
																},
																"nativeSrc": "14135:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14135:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14125:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14125:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "14055:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14097:5:9",
														"nodeType": "YulTypedName",
														"src": "14097:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14107:6:9",
														"nodeType": "YulTypedName",
														"src": "14107:6:9",
														"type": ""
													}
												],
												"src": "14055:99:9"
											},
											{
												"body": {
													"nativeSrc": "14208:54:9",
													"nodeType": "YulBlock",
													"src": "14208:54:9",
													"statements": [
														{
															"nativeSrc": "14218:38:9",
															"nodeType": "YulAssignment",
															"src": "14218:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14236:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "14236:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14243:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14243:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14232:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14232:3:9"
																		},
																		"nativeSrc": "14232:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14232:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14252:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14252:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14248:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14248:3:9"
																		},
																		"nativeSrc": "14248:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14248:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14228:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14228:3:9"
																},
																"nativeSrc": "14228:28:9",
																"nodeType": "YulFunctionCall",
																"src": "14228:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14218:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "14160:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14191:5:9",
														"nodeType": "YulTypedName",
														"src": "14191:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14201:6:9",
														"nodeType": "YulTypedName",
														"src": "14201:6:9",
														"type": ""
													}
												],
												"src": "14160:102:9"
											},
											{
												"body": {
													"nativeSrc": "14360:285:9",
													"nodeType": "YulBlock",
													"src": "14360:285:9",
													"statements": [
														{
															"nativeSrc": "14370:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "14370:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14417:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "14417:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "14384:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "14384:32:9"
																},
																"nativeSrc": "14384:39:9",
																"nodeType": "YulFunctionCall",
																"src": "14384:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14374:6:9",
																	"nodeType": "YulTypedName",
																	"src": "14374:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14432:78:9",
															"nodeType": "YulAssignment",
															"src": "14432:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14498:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14498:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14503:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14503:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14439:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14439:58:9"
																},
																"nativeSrc": "14439:71:9",
																"nodeType": "YulFunctionCall",
																"src": "14439:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14432:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14432:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14558:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "14558:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14565:4:9",
																				"nodeType": "YulLiteral",
																				"src": "14565:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14554:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14554:3:9"
																		},
																		"nativeSrc": "14554:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14554:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14572:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14572:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14577:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14577:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14519:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "14519:34:9"
																},
																"nativeSrc": "14519:65:9",
																"nodeType": "YulFunctionCall",
																"src": "14519:65:9"
															},
															"nativeSrc": "14519:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "14519:65:9"
														},
														{
															"nativeSrc": "14593:46:9",
															"nodeType": "YulAssignment",
															"src": "14593:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14604:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14604:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14631:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14631:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "14609:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "14609:21:9"
																		},
																		"nativeSrc": "14609:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14609:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14600:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14600:3:9"
																},
																"nativeSrc": "14600:39:9",
																"nodeType": "YulFunctionCall",
																"src": "14600:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14593:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14593:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14268:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14341:5:9",
														"nodeType": "YulTypedName",
														"src": "14341:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14348:3:9",
														"nodeType": "YulTypedName",
														"src": "14348:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14356:3:9",
														"nodeType": "YulTypedName",
														"src": "14356:3:9",
														"type": ""
													}
												],
												"src": "14268:377:9"
											},
											{
												"body": {
													"nativeSrc": "14769:195:9",
													"nodeType": "YulBlock",
													"src": "14769:195:9",
													"statements": [
														{
															"nativeSrc": "14779:26:9",
															"nodeType": "YulAssignment",
															"src": "14779:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14791:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14791:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14802:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14802:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14787:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14787:3:9"
																},
																"nativeSrc": "14787:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14787:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14779:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14779:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14826:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14826:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14837:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14837:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14822:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14822:3:9"
																		},
																		"nativeSrc": "14822:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14822:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14845:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14845:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14851:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14851:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14841:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14841:3:9"
																		},
																		"nativeSrc": "14841:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14841:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14815:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14815:6:9"
																},
																"nativeSrc": "14815:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14815:47:9"
															},
															"nativeSrc": "14815:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14815:47:9"
														},
														{
															"nativeSrc": "14871:86:9",
															"nodeType": "YulAssignment",
															"src": "14871:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14943:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14943:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14952:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14952:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14879:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "14879:63:9"
																},
																"nativeSrc": "14879:78:9",
																"nodeType": "YulFunctionCall",
																"src": "14879:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14871:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14871:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14651:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14741:9:9",
														"nodeType": "YulTypedName",
														"src": "14741:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14753:6:9",
														"nodeType": "YulTypedName",
														"src": "14753:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14764:4:9",
														"nodeType": "YulTypedName",
														"src": "14764:4:9",
														"type": ""
													}
												],
												"src": "14651:313:9"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$142_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$142_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2c4df665e7843abc0c81818f3beddf3ec071d2283193f32a87d6b4d1c758ed74(memPtr) {\n\n        mstore(add(memPtr, 0), \"CappedCrowdsale: cap exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_2c4df665e7843abc0c81818f3beddf3ec071d2283193f32a87d6b4d1c758ed74_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_2c4df665e7843abc0c81818f3beddf3ec071d2283193f32a87d6b4d1c758ed74(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2c4df665e7843abc0c81818f3beddf3ec071d2283193f32a87d6b4d1c758ed74__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2c4df665e7843abc0c81818f3beddf3ec071d2283193f32a87d6b4d1c758ed74_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: beneficiary is the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: weiAmount is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x73 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F935945 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x4F935945 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x18A JUMPI PUSH2 0x8A JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0xF0 JUMPI PUSH2 0x8A JUMP JUMPDEST CALLDATASIZE PUSH2 0x8A JUMPI PUSH2 0x88 PUSH2 0x83 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0x95 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x2A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x104 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x955 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x317 JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x364 JUMP JUMPDEST PUSH0 PUSH2 0x1DB DUP3 PUSH2 0x3D0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F2 DUP3 PUSH1 0x4 SLOAD PUSH2 0x3ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x202 DUP4 DUP3 PUSH2 0x402 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x221 PUSH2 0x1B4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x268 SWAP3 SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x27A DUP4 DUP4 PUSH2 0x410 JUMP JUMPDEST PUSH2 0x282 PUSH2 0x414 JUMP JUMPDEST PUSH2 0x28C DUP4 DUP4 PUSH2 0x47B JUMP JUMPDEST POP POP PUSH2 0x296 PUSH2 0x47F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD PUSH2 0x2C0 PUSH2 0x2AB JUMP JUMPDEST LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP1 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x36E DUP3 DUP3 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x38B DUP3 PUSH2 0x37D PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x3ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x3CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C3 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E6 PUSH1 0x3 SLOAD DUP4 PUSH2 0x53C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x40C DUP3 DUP3 PUSH2 0x551 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x478 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52F SWAP1 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x549 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x59D DUP3 DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5A1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x622 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5C0 SWAP3 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x627 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x688 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6ED SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x6A9 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST JUMPDEST PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6FB DUP5 DUP5 PUSH0 DUP6 PUSH2 0x704 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x740 SWAP1 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x771 SWAP2 SWAP1 PUSH2 0xEFD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x7C1 DUP8 DUP4 DUP4 DUP8 PUSH2 0x7CD JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x82E JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x826 JUMPI PUSH2 0x7E6 DUP6 PUSH2 0x841 JUMP JUMPDEST PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81C SWAP1 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x839 JUMP JUMPDEST PUSH2 0x838 DUP4 DUP4 PUSH2 0x863 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x875 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A9 SWAP2 SWAP1 PUSH2 0xFCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C4 DUP2 PUSH2 0x8B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8DD PUSH0 DUP4 ADD DUP5 PUSH2 0x8BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F7 DUP2 PUSH2 0x8E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x910 PUSH0 DUP4 ADD DUP5 PUSH2 0x8EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x93F DUP3 PUSH2 0x916 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94F DUP2 PUSH2 0x935 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x968 PUSH0 DUP4 ADD DUP5 PUSH2 0x946 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x97C DUP3 PUSH2 0x916 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98C DUP2 PUSH2 0x972 JUMP JUMPDEST DUP2 EQ PUSH2 0x996 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9A7 DUP2 PUSH2 0x983 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C2 JUMPI PUSH2 0x9C1 PUSH2 0x96E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9CF DUP5 DUP3 DUP6 ADD PUSH2 0x999 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9FB PUSH2 0x9F6 PUSH2 0x9F1 DUP5 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA0C DUP3 PUSH2 0x9E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA1D DUP3 PUSH2 0xA02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2D DUP2 PUSH2 0xA13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA46 PUSH0 DUP4 ADD DUP5 PUSH2 0xA24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA5F PUSH0 DUP4 ADD DUP6 PUSH2 0x8BB JUMP JUMPDEST PUSH2 0xA6C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAB7 PUSH1 0x1F DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC2 DUP3 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAE4 DUP2 PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43617070656443726F776473616C653A20636170206578636565646564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB1F PUSH1 0x1D DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP2 POP PUSH2 0xB2A DUP3 PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB4C DUP2 PUSH2 0xB13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB8A DUP3 PUSH2 0x8B2 JUMP JUMPDEST SWAP2 POP PUSH2 0xB95 DUP4 PUSH2 0x8B2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBAD JUMPI PUSH2 0xBAC PUSH2 0xB53 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC0D PUSH1 0x2A DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP2 POP PUSH2 0xC18 DUP3 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC3A DUP2 PUSH2 0xC01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC75 PUSH1 0x19 DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP2 POP PUSH2 0xC80 DUP3 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCA2 DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCB3 DUP3 PUSH2 0x8B2 JUMP JUMPDEST SWAP2 POP PUSH2 0xCBE DUP4 PUSH2 0x8B2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xCCC DUP2 PUSH2 0x8B2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xCE3 JUMPI PUSH2 0xCE2 PUSH2 0xB53 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCF3 DUP2 PUSH2 0x972 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD0C PUSH0 DUP4 ADD DUP6 PUSH2 0xCEA JUMP JUMPDEST PUSH2 0xD19 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD29 DUP2 PUSH2 0x8E3 JUMP JUMPDEST DUP2 EQ PUSH2 0xD33 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD44 DUP2 PUSH2 0xD20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5F JUMPI PUSH2 0xD5E PUSH2 0x96E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD6C DUP5 DUP3 DUP6 ADD PUSH2 0xD36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDCF PUSH1 0x2A DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDA DUP3 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDFC DUP2 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE5D PUSH1 0x26 DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP2 POP PUSH2 0xE68 DUP3 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE8A DUP2 PUSH2 0xE51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEA7 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xED7 DUP3 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xEE1 DUP2 DUP6 PUSH2 0xE9B JUMP JUMPDEST SWAP4 POP PUSH2 0xEF1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEA5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF08 DUP3 DUP5 PUSH2 0xECD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF47 PUSH1 0x1D DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP2 POP PUSH2 0xF52 DUP3 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF74 DUP2 PUSH2 0xF3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF9F DUP3 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0xFA9 DUP2 DUP6 PUSH2 0xA73 JUMP JUMPDEST SWAP4 POP PUSH2 0xFB9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0xFC2 DUP2 PUSH2 0xF85 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFE5 DUP2 DUP5 PUSH2 0xF95 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xEE REVERT SGT MSIZE 0xE4 0xA6 SMOD 0xE 0x1E LOG0 TIMESTAMP CALL PUSH5 0x929A2027FD 0xA7 SWAP15 DUP10 DUP16 0xE7 BALANCE SSTORE 0xB0 0xC4 LOG2 SELFDESTRUCT 0xB2 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "252:1473:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3351:23:7;3361:12;:10;:12::i;:::-;3351:9;:23::i;:::-;252:1473:8;;3270:23:7;3280:12;:10;:12::i;:::-;3270:9;:23::i;:::-;252:1473:8;3784:85:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;977:75:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3937:87:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1176:94:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3605:89:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4289:622;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3446:78;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;656:96:5;709:7;735:10;728:17;;656:96;:::o;4289:622:7:-;2261:21:0;:19;:21::i;:::-;4368:17:7::1;4388:9;4368:29;;4408:44;4429:11;4442:9;4408:20;:44::i;:::-;4514:14;4531:26;4547:9;4531:15;:26::i;:::-;4514:43;;4608:25;4623:9;4608:10;;:14;;:25;;;;:::i;:::-;4595:10;:38;;;;4646:37;4663:11;4676:6;4646:16;:37::i;:::-;4729:11;4699:61;;4715:12;:10;:12::i;:::-;4699:61;;;4742:9;4753:6;4699:61;;;;;;;:::i;:::-;;;;;;;;4773:46;4796:11;4809:9;4773:22;:46::i;:::-;4832:15;:13;:15::i;:::-;4858:45;4880:11;4893:9;4858:21;:45::i;:::-;4357:554;;2303:20:0::0;:18;:20::i;:::-;4289:622:7;:::o;3784:85::-;3829:7;3856:5;;3849:12;;3784:85;:::o;977:75:8:-;1013:7;1040:4;;1033:11;;977:75;:::o;3937:87:7:-;3979:7;4006:10;;3999:17;;3937:87;:::o;1176:94:8:-;1219:4;1258;;1243:11;:9;:11::i;:::-;:19;;1236:26;;1176:94;:::o;3605:89:7:-;3644:15;3679:7;;;;;;;;;;;3672:14;;3605:89;:::o;3446:78::-;3484:6;3510;;;;;;;;;;;3503:13;;3446:78;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1473:249:8:-;1577:50;1604:11;1617:9;1577:26;:50::i;:::-;1676:4;;1646:26;1662:9;1646:11;:9;:11::i;:::-;:15;;:26;;;;:::i;:::-;:34;;1638:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;1473:249;;:::o;7848:130:7:-;7923:7;7950:20;7964:5;;7950:9;:13;;:20;;;;:::i;:::-;7943:27;;7848:130;;;:::o;2755:96:6:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7023:136:7:-;7111:40;7126:11;7139;7111:14;:40::i;:::-;7023:136;;:::o;7437:155::-;;;:::o;8070:88::-;8123:7;;;;;;;;;;;:16;;:27;8140:9;8123:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8070:88::o;6155:159::-;;;:::o;2629:209:0:-;1716:1;2809:7;:22;;;;2629:209::o;5464:388:7:-;5598:1;5575:25;;:11;:25;;;5567:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;5679:1;5666:9;:14;5658:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5464:388;;:::o;3465:96:6:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;6602:147:7:-;6696:45;6716:11;6729;6696:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6602:147;;:::o;941:175:3:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;5196:642::-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5749:1;5728:10;:17;:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5728:56;5720:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5266:572;5196:642;;:::o;4108:223:4:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:77:9;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:90::-;476:7;519:5;512:13;505:21;494:32;;442:90;;;:::o;538:109::-;619:21;634:5;619:21;:::i;:::-;614:3;607:34;538:109;;:::o;653:210::-;740:4;778:2;767:9;763:18;755:26;;791:65;853:1;842:9;838:17;829:6;791:65;:::i;:::-;653:210;;;;:::o;869:126::-;906:7;946:42;939:5;935:54;924:65;;869:126;;;:::o;1001:104::-;1046:7;1075:24;1093:5;1075:24;:::i;:::-;1064:35;;1001:104;;;:::o;1111:142::-;1214:32;1240:5;1214:32;:::i;:::-;1209:3;1202:45;1111:142;;:::o;1259:254::-;1368:4;1406:2;1395:9;1391:18;1383:26;;1419:87;1503:1;1492:9;1488:17;1479:6;1419:87;:::i;:::-;1259:254;;;;:::o;1600:117::-;1709:1;1706;1699:12;1846:96;1883:7;1912:24;1930:5;1912:24;:::i;:::-;1901:35;;1846:96;;;:::o;1948:122::-;2021:24;2039:5;2021:24;:::i;:::-;2014:5;2011:35;2001:63;;2060:1;2057;2050:12;2001:63;1948:122;:::o;2076:139::-;2122:5;2160:6;2147:20;2138:29;;2176:33;2203:5;2176:33;:::i;:::-;2076:139;;;;:::o;2221:329::-;2280:6;2329:2;2317:9;2308:7;2304:23;2300:32;2297:119;;;2335:79;;:::i;:::-;2297:119;2455:1;2480:53;2525:7;2516:6;2505:9;2501:22;2480:53;:::i;:::-;2470:63;;2426:117;2221:329;;;;:::o;2556:60::-;2584:3;2605:5;2598:12;;2556:60;;;:::o;2622:142::-;2672:9;2705:53;2723:34;2732:24;2750:5;2732:24;:::i;:::-;2723:34;:::i;:::-;2705:53;:::i;:::-;2692:66;;2622:142;;;:::o;2770:126::-;2820:9;2853:37;2884:5;2853:37;:::i;:::-;2840:50;;2770:126;;;:::o;2902:140::-;2966:9;2999:37;3030:5;2999:37;:::i;:::-;2986:50;;2902:140;;;:::o;3048:159::-;3149:51;3194:5;3149:51;:::i;:::-;3144:3;3137:64;3048:159;;:::o;3213:250::-;3320:4;3358:2;3347:9;3343:18;3335:26;;3371:85;3453:1;3442:9;3438:17;3429:6;3371:85;:::i;:::-;3213:250;;;;:::o;3469:332::-;3590:4;3628:2;3617:9;3613:18;3605:26;;3641:71;3709:1;3698:9;3694:17;3685:6;3641:71;:::i;:::-;3722:72;3790:2;3779:9;3775:18;3766:6;3722:72;:::i;:::-;3469:332;;;;;:::o;3807:169::-;3891:11;3925:6;3920:3;3913:19;3965:4;3960:3;3956:14;3941:29;;3807:169;;;;:::o;3982:181::-;4122:33;4118:1;4110:6;4106:14;4099:57;3982:181;:::o;4169:366::-;4311:3;4332:67;4396:2;4391:3;4332:67;:::i;:::-;4325:74;;4408:93;4497:3;4408:93;:::i;:::-;4526:2;4521:3;4517:12;4510:19;;4169:366;;;:::o;4541:419::-;4707:4;4745:2;4734:9;4730:18;4722:26;;4794:9;4788:4;4784:20;4780:1;4769:9;4765:17;4758:47;4822:131;4948:4;4822:131;:::i;:::-;4814:139;;4541:419;;;:::o;4966:179::-;5106:31;5102:1;5094:6;5090:14;5083:55;4966:179;:::o;5151:366::-;5293:3;5314:67;5378:2;5373:3;5314:67;:::i;:::-;5307:74;;5390:93;5479:3;5390:93;:::i;:::-;5508:2;5503:3;5499:12;5492:19;;5151:366;;;:::o;5523:419::-;5689:4;5727:2;5716:9;5712:18;5704:26;;5776:9;5770:4;5766:20;5762:1;5751:9;5747:17;5740:47;5804:131;5930:4;5804:131;:::i;:::-;5796:139;;5523:419;;;:::o;5948:180::-;5996:77;5993:1;5986:88;6093:4;6090:1;6083:15;6117:4;6114:1;6107:15;6134:191;6174:3;6193:20;6211:1;6193:20;:::i;:::-;6188:25;;6227:20;6245:1;6227:20;:::i;:::-;6222:25;;6270:1;6267;6263:9;6256:16;;6291:3;6288:1;6285:10;6282:36;;;6298:18;;:::i;:::-;6282:36;6134:191;;;;:::o;6331:229::-;6471:34;6467:1;6459:6;6455:14;6448:58;6540:12;6535:2;6527:6;6523:15;6516:37;6331:229;:::o;6566:366::-;6708:3;6729:67;6793:2;6788:3;6729:67;:::i;:::-;6722:74;;6805:93;6894:3;6805:93;:::i;:::-;6923:2;6918:3;6914:12;6907:19;;6566:366;;;:::o;6938:419::-;7104:4;7142:2;7131:9;7127:18;7119:26;;7191:9;7185:4;7181:20;7177:1;7166:9;7162:17;7155:47;7219:131;7345:4;7219:131;:::i;:::-;7211:139;;6938:419;;;:::o;7363:175::-;7503:27;7499:1;7491:6;7487:14;7480:51;7363:175;:::o;7544:366::-;7686:3;7707:67;7771:2;7766:3;7707:67;:::i;:::-;7700:74;;7783:93;7872:3;7783:93;:::i;:::-;7901:2;7896:3;7892:12;7885:19;;7544:366;;;:::o;7916:419::-;8082:4;8120:2;8109:9;8105:18;8097:26;;8169:9;8163:4;8159:20;8155:1;8144:9;8140:17;8133:47;8197:131;8323:4;8197:131;:::i;:::-;8189:139;;7916:419;;;:::o;8341:410::-;8381:7;8404:20;8422:1;8404:20;:::i;:::-;8399:25;;8438:20;8456:1;8438:20;:::i;:::-;8433:25;;8493:1;8490;8486:9;8515:30;8533:11;8515:30;:::i;:::-;8504:41;;8694:1;8685:7;8681:15;8678:1;8675:22;8655:1;8648:9;8628:83;8605:139;;8724:18;;:::i;:::-;8605:139;8389:362;8341:410;;;;:::o;8757:118::-;8844:24;8862:5;8844:24;:::i;:::-;8839:3;8832:37;8757:118;;:::o;8881:332::-;9002:4;9040:2;9029:9;9025:18;9017:26;;9053:71;9121:1;9110:9;9106:17;9097:6;9053:71;:::i;:::-;9134:72;9202:2;9191:9;9187:18;9178:6;9134:72;:::i;:::-;8881:332;;;;;:::o;9219:116::-;9289:21;9304:5;9289:21;:::i;:::-;9282:5;9279:32;9269:60;;9325:1;9322;9315:12;9269:60;9219:116;:::o;9341:137::-;9395:5;9426:6;9420:13;9411:22;;9442:30;9466:5;9442:30;:::i;:::-;9341:137;;;;:::o;9484:345::-;9551:6;9600:2;9588:9;9579:7;9575:23;9571:32;9568:119;;;9606:79;;:::i;:::-;9568:119;9726:1;9751:61;9804:7;9795:6;9784:9;9780:22;9751:61;:::i;:::-;9741:71;;9697:125;9484:345;;;;:::o;9835:229::-;9975:34;9971:1;9963:6;9959:14;9952:58;10044:12;10039:2;10031:6;10027:15;10020:37;9835:229;:::o;10070:366::-;10212:3;10233:67;10297:2;10292:3;10233:67;:::i;:::-;10226:74;;10309:93;10398:3;10309:93;:::i;:::-;10427:2;10422:3;10418:12;10411:19;;10070:366;;;:::o;10442:419::-;10608:4;10646:2;10635:9;10631:18;10623:26;;10695:9;10689:4;10685:20;10681:1;10670:9;10666:17;10659:47;10723:131;10849:4;10723:131;:::i;:::-;10715:139;;10442:419;;;:::o;10867:225::-;11007:34;11003:1;10995:6;10991:14;10984:58;11076:8;11071:2;11063:6;11059:15;11052:33;10867:225;:::o;11098:366::-;11240:3;11261:67;11325:2;11320:3;11261:67;:::i;:::-;11254:74;;11337:93;11426:3;11337:93;:::i;:::-;11455:2;11450:3;11446:12;11439:19;;11098:366;;;:::o;11470:419::-;11636:4;11674:2;11663:9;11659:18;11651:26;;11723:9;11717:4;11713:20;11709:1;11698:9;11694:17;11687:47;11751:131;11877:4;11751:131;:::i;:::-;11743:139;;11470:419;;;:::o;11895:98::-;11946:6;11980:5;11974:12;11964:22;;11895:98;;;:::o;11999:147::-;12100:11;12137:3;12122:18;;11999:147;;;;:::o;12152:246::-;12233:1;12243:113;12257:6;12254:1;12251:13;12243:113;;;12342:1;12337:3;12333:11;12327:18;12323:1;12318:3;12314:11;12307:39;12279:2;12276:1;12272:10;12267:15;;12243:113;;;12390:1;12381:6;12376:3;12372:16;12365:27;12214:184;12152:246;;;:::o;12404:386::-;12508:3;12536:38;12568:5;12536:38;:::i;:::-;12590:88;12671:6;12666:3;12590:88;:::i;:::-;12583:95;;12687:65;12745:6;12740:3;12733:4;12726:5;12722:16;12687:65;:::i;:::-;12777:6;12772:3;12768:16;12761:23;;12512:278;12404:386;;;;:::o;12796:271::-;12926:3;12948:93;13037:3;13028:6;12948:93;:::i;:::-;12941:100;;13058:3;13051:10;;12796:271;;;;:::o;13073:179::-;13213:31;13209:1;13201:6;13197:14;13190:55;13073:179;:::o;13258:366::-;13400:3;13421:67;13485:2;13480:3;13421:67;:::i;:::-;13414:74;;13497:93;13586:3;13497:93;:::i;:::-;13615:2;13610:3;13606:12;13599:19;;13258:366;;;:::o;13630:419::-;13796:4;13834:2;13823:9;13819:18;13811:26;;13883:9;13877:4;13873:20;13869:1;13858:9;13854:17;13847:47;13911:131;14037:4;13911:131;:::i;:::-;13903:139;;13630:419;;;:::o;14055:99::-;14107:6;14141:5;14135:12;14125:22;;14055:99;;;:::o;14160:102::-;14201:6;14252:2;14248:7;14243:2;14236:5;14232:14;14228:28;14218:38;;14160:102;;;:::o;14268:377::-;14356:3;14384:39;14417:5;14384:39;:::i;:::-;14439:71;14503:6;14498:3;14439:71;:::i;:::-;14432:78;;14519:65;14577:6;14572:3;14565:4;14558:5;14554:16;14519:65;:::i;:::-;14609:29;14631:6;14609:29;:::i;:::-;14604:3;14600:39;14593:46;;14360:285;14268:377;;;;:::o;14651:313::-;14764:4;14802:2;14791:9;14787:18;14779:26;;14851:9;14845:4;14841:20;14837:1;14826:9;14822:17;14815:47;14879:78;14952:4;14943:6;14879:78;:::i;:::-;14871:86;;14651:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "826200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"buyTokens(address)": "infinite",
								"cap()": "2455",
								"capReached()": "4581",
								"rate()": "2433",
								"token()": "infinite",
								"wallet()": "2537",
								"weiRaised()": "2477"
							},
							"internal": {
								"_preValidatePurchase(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 252,
									"end": 1725,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 252,
									"end": 1725,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 1725,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 679,
									"end": 907,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 907,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 679,
									"end": 907,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 679,
									"end": 907,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 679,
									"end": 907,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 679,
									"end": 907,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 679,
									"end": 907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 679,
									"end": 907,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 793,
									"end": 801,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 803,
									"end": 810,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2644,
									"end": 2645,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2635,
									"end": 2641,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2635,
									"end": 2645,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 7,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 2627,
									"end": 2670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2689,
									"end": 2697,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 7,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2681,
									"end": 2753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2800,
									"end": 2801,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2787,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 7,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 2764,
									"end": 2843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2864,
									"end": 2870,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2856,
									"end": 2861,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2881,
									"end": 2888,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2881,
									"end": 2888,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2926,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2916,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2910,
									"end": 2916,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 846,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 837,
									"end": 842,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 837,
									"end": 846,
									"modifierDepth": 1,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 829,
									"end": 876,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 829,
									"end": 876,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 894,
									"end": 899,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 887,
									"end": 891,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 887,
									"end": 899,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 887,
									"end": 899,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 887,
									"end": 899,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 887,
									"end": 899,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 679,
									"end": 907,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 252,
									"end": 1725,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 252,
									"end": 1725,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 826,
									"end": 930,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 826,
									"end": 930,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 871,
									"end": 878,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 918,
									"end": 923,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 900,
									"end": 924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 900,
									"end": 924,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 889,
									"end": 924,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 889,
									"end": 924,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 826,
									"end": 930,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 826,
									"end": 930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1043,
									"end": 1048,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1017,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1010,
									"end": 1015,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1007,
									"end": 1050,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1064,
									"end": 1065,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1061,
									"end": 1062,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1054,
									"end": 1066,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 936,
									"end": 1074,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1145,
									"end": 1150,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1176,
									"end": 1182,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1170,
									"end": 1183,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1227,
									"end": 1232,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1192,
									"end": 1233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1080,
									"end": 1239,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1282,
									"end": 1289,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 1329,
									"end": 1334,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1311,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1341,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1398,
									"end": 1405,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 1445,
									"end": 1450,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1427,
									"end": 1451,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1347,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 1582,
									"end": 1587,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1550,
									"end": 1588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1543,
									"end": 1548,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1540,
									"end": 1589,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1601,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1463,
									"end": 1613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1690,
									"end": 1695,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1721,
									"end": 1727,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1728,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 1778,
									"end": 1783,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1737,
									"end": 1784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1619,
									"end": 1790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2660,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1796,
									"end": 2660,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1915,
									"end": 1921,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1923,
									"end": 1929,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1931,
									"end": 1937,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 1945,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1988,
									"end": 1991,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1976,
									"end": 1985,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1967,
									"end": 1974,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1963,
									"end": 1986,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1959,
									"end": 1992,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1956,
									"end": 2076,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1956,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 1956,
									"end": 2076,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1995,
									"end": 2074,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 1995,
									"end": 2074,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1995,
									"end": 2074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1995,
									"end": 2074,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 1995,
									"end": 2074,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1956,
									"end": 2076,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 1956,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2115,
									"end": 2116,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2140,
									"end": 2204,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2196,
									"end": 2203,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2187,
									"end": 2193,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2176,
									"end": 2185,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2172,
									"end": 2194,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2140,
									"end": 2204,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 2140,
									"end": 2204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2140,
									"end": 2204,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2140,
									"end": 2204,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2130,
									"end": 2204,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2130,
									"end": 2204,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2086,
									"end": 2214,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2253,
									"end": 2255,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2279,
									"end": 2343,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2335,
									"end": 2342,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2332,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2324,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2311,
									"end": 2333,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2279,
									"end": 2343,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 2279,
									"end": 2343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2279,
									"end": 2343,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2279,
									"end": 2343,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2269,
									"end": 2343,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2269,
									"end": 2343,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2353,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2418,
									"end": 2490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2482,
									"end": 2489,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2473,
									"end": 2479,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2462,
									"end": 2471,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2458,
									"end": 2480,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 2418,
									"end": 2490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2490,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2418,
									"end": 2490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2408,
									"end": 2490,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2408,
									"end": 2490,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2363,
									"end": 2500,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2539,
									"end": 2541,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2565,
									"end": 2643,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 2635,
									"end": 2642,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2632,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2615,
									"end": 2624,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2633,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2643,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 2565,
									"end": 2643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2643,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 2565,
									"end": 2643,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2643,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2643,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2510,
									"end": 2653,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2660,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2660,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2660,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2660,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2660,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2660,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2660,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2660,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2666,
									"end": 2835,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 2666,
									"end": 2835,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2750,
									"end": 2761,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2779,
									"end": 2782,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2772,
									"end": 2791,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2824,
									"end": 2828,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2819,
									"end": 2822,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2815,
									"end": 2829,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2800,
									"end": 2829,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2800,
									"end": 2829,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2666,
									"end": 2835,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2666,
									"end": 2835,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2666,
									"end": 2835,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2666,
									"end": 2835,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2666,
									"end": 2835,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2841,
									"end": 3011,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 2841,
									"end": 3011,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2981,
									"end": 3003,
									"name": "PUSH",
									"source": 9,
									"value": "43726F776473616C653A20726174652069732030000000000000000000000000"
								},
								{
									"begin": 2977,
									"end": 2978,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2975,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2965,
									"end": 2979,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2958,
									"end": 3004,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2841,
									"end": 3011,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2841,
									"end": 3011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3017,
									"end": 3383,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 3017,
									"end": 3383,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3159,
									"end": 3162,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3180,
									"end": 3247,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3244,
									"end": 3246,
									"name": "PUSH",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 3239,
									"end": 3242,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3180,
									"end": 3247,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 3180,
									"end": 3247,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3180,
									"end": 3247,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3180,
									"end": 3247,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3173,
									"end": 3247,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3173,
									"end": 3247,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3256,
									"end": 3349,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 3345,
									"end": 3348,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3256,
									"end": 3349,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 3256,
									"end": 3349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3256,
									"end": 3349,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 3256,
									"end": 3349,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3374,
									"end": 3376,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3369,
									"end": 3372,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3365,
									"end": 3377,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3358,
									"end": 3377,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3358,
									"end": 3377,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3017,
									"end": 3383,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3017,
									"end": 3383,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3017,
									"end": 3383,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3017,
									"end": 3383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3808,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 3389,
									"end": 3808,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3555,
									"end": 3559,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3593,
									"end": 3595,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3582,
									"end": 3591,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3578,
									"end": 3596,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3570,
									"end": 3596,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3570,
									"end": 3596,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3642,
									"end": 3651,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3636,
									"end": 3640,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3632,
									"end": 3652,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3628,
									"end": 3629,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3626,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3630,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3606,
									"end": 3653,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3670,
									"end": 3801,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 3796,
									"end": 3800,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3670,
									"end": 3801,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 3670,
									"end": 3801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3670,
									"end": 3801,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 3670,
									"end": 3801,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3662,
									"end": 3801,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3662,
									"end": 3801,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3808,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3808,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3808,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3808,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 4038,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3814,
									"end": 4038,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3954,
									"end": 3988,
									"name": "PUSH",
									"source": 9,
									"value": "43726F776473616C653A2077616C6C657420697320746865207A65726F206164"
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3942,
									"end": 3948,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3938,
									"end": 3952,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3931,
									"end": 3989,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4023,
									"end": 4030,
									"name": "PUSH",
									"source": 9,
									"value": "6472657373000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4018,
									"end": 4020,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4010,
									"end": 4016,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4006,
									"end": 4021,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3999,
									"end": 4031,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 4038,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 4038,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4044,
									"end": 4410,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 4044,
									"end": 4410,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4186,
									"end": 4189,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4207,
									"end": 4274,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 4271,
									"end": 4273,
									"name": "PUSH",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 4266,
									"end": 4269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4207,
									"end": 4274,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 4207,
									"end": 4274,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4207,
									"end": 4274,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 4207,
									"end": 4274,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4200,
									"end": 4274,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4200,
									"end": 4274,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4283,
									"end": 4376,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 4372,
									"end": 4375,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4283,
									"end": 4376,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4283,
									"end": 4376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4283,
									"end": 4376,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 4283,
									"end": 4376,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4401,
									"end": 4403,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4396,
									"end": 4399,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4392,
									"end": 4404,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4385,
									"end": 4404,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4385,
									"end": 4404,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4044,
									"end": 4410,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4044,
									"end": 4410,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4044,
									"end": 4410,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4044,
									"end": 4410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4835,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 4416,
									"end": 4835,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4582,
									"end": 4586,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4620,
									"end": 4622,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4609,
									"end": 4618,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4605,
									"end": 4623,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4597,
									"end": 4623,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4597,
									"end": 4623,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4669,
									"end": 4678,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4663,
									"end": 4667,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4659,
									"end": 4679,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4655,
									"end": 4656,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4644,
									"end": 4653,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4640,
									"end": 4657,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4633,
									"end": 4680,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4697,
									"end": 4828,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 4823,
									"end": 4827,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4697,
									"end": 4828,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 4697,
									"end": 4828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4697,
									"end": 4828,
									"name": "tag",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 4697,
									"end": 4828,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4689,
									"end": 4828,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4689,
									"end": 4828,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4835,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4835,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4835,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4835,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 5064,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 4841,
									"end": 5064,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4981,
									"end": 5015,
									"name": "PUSH",
									"source": 9,
									"value": "43726F776473616C653A20746F6B656E20697320746865207A65726F20616464"
								},
								{
									"begin": 4977,
									"end": 4978,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4969,
									"end": 4975,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4965,
									"end": 4979,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4958,
									"end": 5016,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5050,
									"end": 5056,
									"name": "PUSH",
									"source": 9,
									"value": "7265737300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5045,
									"end": 5047,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5037,
									"end": 5043,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5033,
									"end": 5048,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5026,
									"end": 5057,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 5064,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 5064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5070,
									"end": 5436,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 5070,
									"end": 5436,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5212,
									"end": 5215,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5233,
									"end": 5300,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 5297,
									"end": 5299,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 5292,
									"end": 5295,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5233,
									"end": 5300,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 5233,
									"end": 5300,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5233,
									"end": 5300,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 5233,
									"end": 5300,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5226,
									"end": 5300,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5226,
									"end": 5300,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5309,
									"end": 5402,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 5398,
									"end": 5401,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5309,
									"end": 5402,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 5309,
									"end": 5402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5309,
									"end": 5402,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 5309,
									"end": 5402,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5427,
									"end": 5429,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 5422,
									"end": 5425,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5418,
									"end": 5430,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5411,
									"end": 5430,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5411,
									"end": 5430,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5070,
									"end": 5436,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5070,
									"end": 5436,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5070,
									"end": 5436,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5070,
									"end": 5436,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5442,
									"end": 5861,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 5442,
									"end": 5861,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5608,
									"end": 5612,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5646,
									"end": 5648,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5635,
									"end": 5644,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5631,
									"end": 5649,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5623,
									"end": 5649,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5623,
									"end": 5649,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5695,
									"end": 5704,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5689,
									"end": 5693,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5685,
									"end": 5705,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 5681,
									"end": 5682,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5670,
									"end": 5679,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5666,
									"end": 5683,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5659,
									"end": 5706,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5723,
									"end": 5854,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 5849,
									"end": 5853,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5723,
									"end": 5854,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 5723,
									"end": 5854,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5723,
									"end": 5854,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 5723,
									"end": 5854,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5715,
									"end": 5854,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5715,
									"end": 5854,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5442,
									"end": 5861,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5442,
									"end": 5861,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5442,
									"end": 5861,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5442,
									"end": 5861,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5867,
									"end": 6042,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 5867,
									"end": 6042,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6007,
									"end": 6034,
									"name": "PUSH",
									"source": 9,
									"value": "43617070656443726F776473616C653A20636170206973203000000000000000"
								},
								{
									"begin": 6003,
									"end": 6004,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5995,
									"end": 6001,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5991,
									"end": 6005,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5984,
									"end": 6035,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5867,
									"end": 6042,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5867,
									"end": 6042,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6048,
									"end": 6414,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 6048,
									"end": 6414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6190,
									"end": 6193,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 6275,
									"end": 6277,
									"name": "PUSH",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 6270,
									"end": 6273,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6211,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 6211,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6211,
									"end": 6278,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 6211,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6204,
									"end": 6278,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6204,
									"end": 6278,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6287,
									"end": 6380,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 6376,
									"end": 6379,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6287,
									"end": 6380,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 6287,
									"end": 6380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6287,
									"end": 6380,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 6287,
									"end": 6380,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6405,
									"end": 6407,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6400,
									"end": 6403,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6396,
									"end": 6408,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6389,
									"end": 6408,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6389,
									"end": 6408,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6048,
									"end": 6414,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6048,
									"end": 6414,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6048,
									"end": 6414,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6048,
									"end": 6414,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6420,
									"end": 6839,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 6420,
									"end": 6839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6586,
									"end": 6590,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6624,
									"end": 6626,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6613,
									"end": 6622,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6609,
									"end": 6627,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6601,
									"end": 6627,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6601,
									"end": 6627,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6667,
									"end": 6671,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6663,
									"end": 6683,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 6659,
									"end": 6660,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6648,
									"end": 6657,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6644,
									"end": 6661,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6637,
									"end": 6684,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6701,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 6827,
									"end": 6831,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6701,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 6701,
									"end": 6832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6701,
									"end": 6832,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 6701,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6693,
									"end": 6832,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6693,
									"end": 6832,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6420,
									"end": 6839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6420,
									"end": 6839,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6420,
									"end": 6839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6420,
									"end": 6839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 252,
									"end": 1725,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 252,
									"end": 1725,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 252,
									"end": 1725,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 1725,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 252,
									"end": 1725,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 1725,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 1725,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 252,
									"end": 1725,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 1725,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bbeefd1359e4a6070e1ea042f164929a2027fda79e898fe73155b0c4a2ffb2c864736f6c63430008150033",
									".code": [
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "4F935945"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "4F935945"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "521EB273"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "EC8AC4D8"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "FC0C546A"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "2C4E722E"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "355274EA"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "4042B66F"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3361,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 3361,
											"end": 3373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3351,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3280,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 3280,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3270,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 252,
											"end": 1725,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 977,
											"end": 1052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 977,
											"end": 1052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1176,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1176,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4397,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4397,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4397,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4429,
											"end": 4440,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4442,
											"end": 4451,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4408,
											"end": 4452,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4514,
											"end": 4528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4547,
											"end": 4556,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4531,
											"end": 4557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4514,
											"end": 4557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4514,
											"end": 4557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4623,
											"end": 4632,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4608,
											"end": 4618,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4608,
											"end": 4622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4663,
											"end": 4674,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4646,
											"end": 4683,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4729,
											"end": 4740,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4715,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 4715,
											"end": 4727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B"
										},
										{
											"begin": 4742,
											"end": 4751,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4753,
											"end": 4759,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 4699,
											"end": 4760,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 4796,
											"end": 4807,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4809,
											"end": 4818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4773,
											"end": 4819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4832,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4832,
											"end": 4847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4880,
											"end": 4891,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4893,
											"end": 4902,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4858,
											"end": 4879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4858,
											"end": 4903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4357,
											"end": 4911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4357,
											"end": 4911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3856,
											"end": 3861,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3856,
											"end": 3861,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1013,
											"end": 1020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1044,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1040,
											"end": 1044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1033,
											"end": 1044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1033,
											"end": 1044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 3986,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4016,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4006,
											"end": 4016,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1223,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1262,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1258,
											"end": 1262,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1243,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1243,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1243,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1243,
											"end": 1254,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1243,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1243,
											"end": 1262,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1243,
											"end": 1262,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1236,
											"end": 1262,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1236,
											"end": 1262,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3659,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3484,
											"end": 3490,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3516,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1722,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1473,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1604,
											"end": 1615,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1617,
											"end": 1626,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1577,
											"end": 1627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1627,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1577,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1646,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1646,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1657,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1646,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1646,
											"end": 1661,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1680,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1638,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1473,
											"end": 1722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1473,
											"end": 1722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1473,
											"end": 1722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7848,
											"end": 7978,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7848,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 7930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7950,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 7964,
											"end": 7969,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7964,
											"end": 7969,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7950,
											"end": 7959,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7950,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 7950,
											"end": 7963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7950,
											"end": 7970,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7950,
											"end": 7970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7950,
											"end": 7970,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7950,
											"end": 7970,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7950,
											"end": 7970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7950,
											"end": 7970,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 7950,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7943,
											"end": 7970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7943,
											"end": 7970,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7848,
											"end": 7978,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7848,
											"end": 7978,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7848,
											"end": 7978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7848,
											"end": 7978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7023,
											"end": 7159,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7023,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 7126,
											"end": 7137,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7139,
											"end": 7150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 7111,
											"end": 7151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7151,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 7111,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7023,
											"end": 7159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7023,
											"end": 7159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7023,
											"end": 7159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7437,
											"end": 7592,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 7437,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7437,
											"end": 7592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7437,
											"end": 7592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7437,
											"end": 7592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8070,
											"end": 8158,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 8070,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8139,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8123,
											"end": 8139,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 8140,
											"end": 8149,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8070,
											"end": 8158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5586,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 5567,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 5680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5675,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5680,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 5658,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6716,
											"end": 6727,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6729,
											"end": 6740,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1050,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1023,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 941,
											"end": 1116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5615,
											"end": 5638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5738,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5745,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5750,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5754,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5720,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5266,
											"end": 5838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5196,
											"end": 5838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4253,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4323,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4272,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5387,
											"end": 5392,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5354,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5506,
											"end": 5511,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5487,
											"end": 5518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5562,
											"end": 5568,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5579,
											"end": 5589,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5535,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5535,
											"end": 5604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8121,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 8121,
											"end": 8139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 8113,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 8249,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 9324,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 442,
											"end": 532,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 442,
											"end": 532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 476,
											"end": 483,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 512,
											"end": 525,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 505,
											"end": 526,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 494,
											"end": 526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 494,
											"end": 526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 442,
											"end": 532,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 442,
											"end": 532,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 442,
											"end": 532,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 442,
											"end": 532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 538,
											"end": 647,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 538,
											"end": 647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 619,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 619,
											"end": 640,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 614,
											"end": 617,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 607,
											"end": 641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 538,
											"end": 647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 538,
											"end": 647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 538,
											"end": 647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 653,
											"end": 863,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 653,
											"end": 863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 740,
											"end": 744,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 776,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 763,
											"end": 781,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 755,
											"end": 781,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 755,
											"end": 781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 851,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 838,
											"end": 855,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 829,
											"end": 835,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 653,
											"end": 863,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 653,
											"end": 863,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 653,
											"end": 863,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 653,
											"end": 863,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 653,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 869,
											"end": 995,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 869,
											"end": 995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 906,
											"end": 913,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 988,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 935,
											"end": 989,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 924,
											"end": 989,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 924,
											"end": 989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 869,
											"end": 995,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 869,
											"end": 995,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 869,
											"end": 995,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 869,
											"end": 995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1105,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1001,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1046,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1093,
											"end": 1098,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1075,
											"end": 1099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1099,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1075,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1064,
											"end": 1099,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1064,
											"end": 1099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1105,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1111,
											"end": 1253,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1111,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1240,
											"end": 1245,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1214,
											"end": 1246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1246,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1214,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1209,
											"end": 1212,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1247,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1111,
											"end": 1253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1111,
											"end": 1253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1111,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1513,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1259,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1395,
											"end": 1404,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 1409,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1409,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1409,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1503,
											"end": 1504,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1501,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1488,
											"end": 1505,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1485,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1419,
											"end": 1506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1506,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1419,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1513,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1513,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1513,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1513,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1717,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1600,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1707,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1711,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1942,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 1846,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1883,
											"end": 1890,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 1930,
											"end": 1935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1912,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 1936,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 1912,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1936,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1936,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1942,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1948,
											"end": 2070,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 1948,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2039,
											"end": 2044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 2021,
											"end": 2045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2045,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2021,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2011,
											"end": 2046,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2061,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2058,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1948,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1948,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2122,
											"end": 2127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2166,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2147,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 2203,
											"end": 2208,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 2176,
											"end": 2209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2280,
											"end": 2286,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2331,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2326,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2315,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2327,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2332,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2297,
											"end": 2416,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2297,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2297,
											"end": 2416,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 2335,
											"end": 2414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2297,
											"end": 2416,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2297,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2505,
											"end": 2514,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 2480,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2533,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2480,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2470,
											"end": 2533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2470,
											"end": 2533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2556,
											"end": 2616,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 2556,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2587,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2610,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2598,
											"end": 2610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2598,
											"end": 2610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2556,
											"end": 2616,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2556,
											"end": 2616,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2556,
											"end": 2616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2556,
											"end": 2616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2622,
											"end": 2764,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 2622,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2672,
											"end": 2681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 2723,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 2732,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2732,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 2732,
											"end": 2756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2732,
											"end": 2756,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 2732,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 2723,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2757,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 2723,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 2705,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2692,
											"end": 2758,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2692,
											"end": 2758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2622,
											"end": 2764,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2622,
											"end": 2764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2622,
											"end": 2764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2622,
											"end": 2764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2896,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 2770,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2829,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 2884,
											"end": 2889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 2853,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2896,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2902,
											"end": 3042,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 2902,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 2975,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 2999,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3036,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3036,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2902,
											"end": 3042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2902,
											"end": 3042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2902,
											"end": 3042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2902,
											"end": 3042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3207,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 3048,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3149,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3194,
											"end": 3199,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3149,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 3149,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3149,
											"end": 3200,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3149,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3147,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3137,
											"end": 3201,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3360,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3343,
											"end": 3361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3371,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3453,
											"end": 3454,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3438,
											"end": 3455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3435,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3371,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 3371,
											"end": 3456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3371,
											"end": 3456,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3371,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3590,
											"end": 3594,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3626,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3709,
											"end": 3710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3707,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3694,
											"end": 3711,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3691,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3641,
											"end": 3712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3712,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3641,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 3790,
											"end": 3792,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3788,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 3793,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3766,
											"end": 3772,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3722,
											"end": 3794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3794,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 3722,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 3902,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3920,
											"end": 3923,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3913,
											"end": 3932,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 3969,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3970,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3941,
											"end": 3970,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3941,
											"end": 3970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3982,
											"end": 4163,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 3982,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4122,
											"end": 4155,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4118,
											"end": 4119,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4106,
											"end": 4120,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4156,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3982,
											"end": 4163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3982,
											"end": 4163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4535,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4169,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4314,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4332,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 4396,
											"end": 4398,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4391,
											"end": 4394,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4332,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4332,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4332,
											"end": 4399,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 4332,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4399,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 4497,
											"end": 4500,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4408,
											"end": 4501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4501,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 4408,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4528,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4521,
											"end": 4524,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4517,
											"end": 4529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4541,
											"end": 4960,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4541,
											"end": 4960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4711,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 4747,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4734,
											"end": 4743,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4748,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4748,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4792,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4804,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 4781,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4769,
											"end": 4778,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4765,
											"end": 4782,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4758,
											"end": 4805,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 4948,
											"end": 4952,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4822,
											"end": 4953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4953,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 4822,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4814,
											"end": 4953,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4814,
											"end": 4953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4541,
											"end": 4960,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4541,
											"end": 4960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4541,
											"end": 4960,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4541,
											"end": 4960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4966,
											"end": 5145,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4966,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5137,
											"name": "PUSH",
											"source": 9,
											"value": "43617070656443726F776473616C653A20636170206578636565646564000000"
										},
										{
											"begin": 5102,
											"end": 5103,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5094,
											"end": 5100,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5090,
											"end": 5104,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5083,
											"end": 5138,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4966,
											"end": 5145,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4966,
											"end": 5145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5517,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 5151,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5293,
											"end": 5296,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 5373,
											"end": 5376,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 5314,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5381,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5314,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5307,
											"end": 5381,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5307,
											"end": 5381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5390,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5479,
											"end": 5482,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5390,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 5390,
											"end": 5483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5390,
											"end": 5483,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5390,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5508,
											"end": 5510,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5503,
											"end": 5506,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5511,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5517,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5517,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5942,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 5523,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5727,
											"end": 5729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5716,
											"end": 5725,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5712,
											"end": 5730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5776,
											"end": 5785,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 5774,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5786,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5760,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5747,
											"end": 5764,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5740,
											"end": 5787,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5930,
											"end": 5934,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 5804,
											"end": 5935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5935,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5804,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5796,
											"end": 5935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5796,
											"end": 5935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5942,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5948,
											"end": 6128,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 5948,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5996,
											"end": 6073,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5993,
											"end": 5994,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5986,
											"end": 6074,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6093,
											"end": 6097,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6090,
											"end": 6091,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6083,
											"end": 6098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6121,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6114,
											"end": 6115,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6122,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6325,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6134,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6174,
											"end": 6177,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6193,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 6211,
											"end": 6212,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 6193,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6213,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 6193,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6188,
											"end": 6213,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6188,
											"end": 6213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6227,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 6245,
											"end": 6246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6227,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 6227,
											"end": 6247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6227,
											"end": 6247,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 6227,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6247,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6247,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6270,
											"end": 6271,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6267,
											"end": 6268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6263,
											"end": 6272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6272,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6291,
											"end": 6294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6288,
											"end": 6289,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6285,
											"end": 6295,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6318,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 6282,
											"end": 6318,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 6298,
											"end": 6316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6318,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 6282,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6325,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6325,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6325,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6325,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6331,
											"end": 6560,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 6331,
											"end": 6560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6471,
											"end": 6505,
											"name": "PUSH",
											"source": 9,
											"value": "43726F776473616C653A2062656E656669636961727920697320746865207A65"
										},
										{
											"begin": 6467,
											"end": 6468,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6465,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 6469,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6448,
											"end": 6506,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6540,
											"end": 6552,
											"name": "PUSH",
											"source": 9,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 6535,
											"end": 6537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6523,
											"end": 6538,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6516,
											"end": 6553,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6331,
											"end": 6560,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6331,
											"end": 6560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6566,
											"end": 6932,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 6566,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6708,
											"end": 6711,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 6793,
											"end": 6795,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 6788,
											"end": 6791,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 6729,
											"end": 6796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6796,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 6729,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6722,
											"end": 6796,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6722,
											"end": 6796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6805,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6894,
											"end": 6897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6805,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 6805,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6805,
											"end": 6898,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6805,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6923,
											"end": 6925,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6918,
											"end": 6921,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 6926,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6926,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6926,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6566,
											"end": 6932,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6566,
											"end": 6932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6566,
											"end": 6932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6566,
											"end": 6932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6938,
											"end": 7357,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 6938,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7104,
											"end": 7108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7142,
											"end": 7144,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7131,
											"end": 7140,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7119,
											"end": 7145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7119,
											"end": 7145,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7191,
											"end": 7200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7181,
											"end": 7201,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7177,
											"end": 7178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7175,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7162,
											"end": 7179,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7155,
											"end": 7202,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7219,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 7345,
											"end": 7349,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7219,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 7219,
											"end": 7350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7219,
											"end": 7350,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 7219,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6938,
											"end": 7357,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6938,
											"end": 7357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6938,
											"end": 7357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6938,
											"end": 7357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7363,
											"end": 7538,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 7363,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7503,
											"end": 7530,
											"name": "PUSH",
											"source": 9,
											"value": "43726F776473616C653A20776569416D6F756E74206973203000000000000000"
										},
										{
											"begin": 7499,
											"end": 7500,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7491,
											"end": 7497,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7487,
											"end": 7501,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7480,
											"end": 7531,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7363,
											"end": 7538,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7363,
											"end": 7538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7910,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 7544,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7686,
											"end": 7689,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 7771,
											"end": 7773,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 7766,
											"end": 7769,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7707,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 7707,
											"end": 7774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7707,
											"end": 7774,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 7707,
											"end": 7774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7700,
											"end": 7774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7700,
											"end": 7774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7783,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 7872,
											"end": 7875,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7783,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 7783,
											"end": 7876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7783,
											"end": 7876,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 7783,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7901,
											"end": 7903,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7896,
											"end": 7899,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7904,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7885,
											"end": 7904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7885,
											"end": 7904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7910,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7910,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7910,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7916,
											"end": 8335,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 7916,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8082,
											"end": 8086,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8120,
											"end": 8122,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8118,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8105,
											"end": 8123,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8097,
											"end": 8123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8097,
											"end": 8123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8178,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8167,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8159,
											"end": 8179,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8155,
											"end": 8156,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8144,
											"end": 8153,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8157,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8133,
											"end": 8180,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8197,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 8323,
											"end": 8327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8197,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 8197,
											"end": 8328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8197,
											"end": 8328,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 8197,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7916,
											"end": 8335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7916,
											"end": 8335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7916,
											"end": 8335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7916,
											"end": 8335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8341,
											"end": 8751,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 8341,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8381,
											"end": 8388,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 8422,
											"end": 8423,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 8404,
											"end": 8424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8399,
											"end": 8424,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8399,
											"end": 8424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8438,
											"end": 8458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 8456,
											"end": 8457,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8438,
											"end": 8458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 8438,
											"end": 8458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8438,
											"end": 8458,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 8438,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8433,
											"end": 8458,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8433,
											"end": 8458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8493,
											"end": 8494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8491,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8486,
											"end": 8495,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8515,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 8533,
											"end": 8544,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8515,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 8515,
											"end": 8545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8515,
											"end": 8545,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 8515,
											"end": 8545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8545,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8504,
											"end": 8545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8694,
											"end": 8695,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8692,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8681,
											"end": 8696,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8679,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8675,
											"end": 8697,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8655,
											"end": 8656,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8648,
											"end": 8657,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8628,
											"end": 8711,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8605,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 8605,
											"end": 8744,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 8724,
											"end": 8742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8605,
											"end": 8744,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 8605,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8751,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8341,
											"end": 8751,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8341,
											"end": 8751,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8341,
											"end": 8751,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8341,
											"end": 8751,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8341,
											"end": 8751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8875,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 8757,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 8862,
											"end": 8867,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 8844,
											"end": 8868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8839,
											"end": 8842,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8869,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 9213,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 8881,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9002,
											"end": 9006,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9040,
											"end": 9042,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9029,
											"end": 9038,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9043,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9017,
											"end": 9043,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9017,
											"end": 9043,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 9121,
											"end": 9122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9110,
											"end": 9119,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9106,
											"end": 9123,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9097,
											"end": 9103,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 9053,
											"end": 9124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9124,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 9053,
											"end": 9124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 9202,
											"end": 9204,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9191,
											"end": 9200,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9187,
											"end": 9205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9178,
											"end": 9184,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 9134,
											"end": 9206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9206,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 9134,
											"end": 9206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 9213,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 9213,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 9213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 9213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 9213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 9213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9219,
											"end": 9335,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 9219,
											"end": 9335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9289,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 9304,
											"end": 9309,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9289,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 9289,
											"end": 9310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9289,
											"end": 9310,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 9289,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9282,
											"end": 9287,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9311,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9269,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 9269,
											"end": 9329,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9322,
											"end": 9323,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9315,
											"end": 9327,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9269,
											"end": 9329,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 9269,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9219,
											"end": 9335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9219,
											"end": 9335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9478,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 9341,
											"end": 9478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9395,
											"end": 9400,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9426,
											"end": 9432,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9420,
											"end": 9433,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9411,
											"end": 9433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9411,
											"end": 9433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9442,
											"end": 9472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 9466,
											"end": 9471,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9442,
											"end": 9472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 9442,
											"end": 9472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9442,
											"end": 9472,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 9442,
											"end": 9472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9478,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9478,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9478,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9478,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9484,
											"end": 9829,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 9484,
											"end": 9829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9551,
											"end": 9557,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9600,
											"end": 9602,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9588,
											"end": 9597,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9579,
											"end": 9586,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9575,
											"end": 9598,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9571,
											"end": 9603,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9568,
											"end": 9687,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9568,
											"end": 9687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 9568,
											"end": 9687,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9606,
											"end": 9685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 9606,
											"end": 9685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 9606,
											"end": 9685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9606,
											"end": 9685,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 9606,
											"end": 9685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9568,
											"end": 9687,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 9568,
											"end": 9687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9726,
											"end": 9727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9751,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 9804,
											"end": 9811,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9795,
											"end": 9801,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9793,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9780,
											"end": 9802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9751,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 9751,
											"end": 9812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9751,
											"end": 9812,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 9751,
											"end": 9812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9741,
											"end": 9812,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9741,
											"end": 9812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9697,
											"end": 9822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9484,
											"end": 9829,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9484,
											"end": 9829,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9484,
											"end": 9829,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9484,
											"end": 9829,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9484,
											"end": 9829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9835,
											"end": 10064,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 9835,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9975,
											"end": 10009,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 9971,
											"end": 9972,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 10010,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "PUSH",
											"source": 9,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 10039,
											"end": 10041,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10031,
											"end": 10037,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10027,
											"end": 10042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10020,
											"end": 10057,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9835,
											"end": 10064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9835,
											"end": 10064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10070,
											"end": 10436,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 10070,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10212,
											"end": 10215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10233,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 10297,
											"end": 10299,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 10292,
											"end": 10295,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10233,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 10233,
											"end": 10300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10233,
											"end": 10300,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 10233,
											"end": 10300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10300,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10309,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 10398,
											"end": 10401,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10309,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 10309,
											"end": 10402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10309,
											"end": 10402,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 10309,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10427,
											"end": 10429,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10422,
											"end": 10425,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10418,
											"end": 10430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10411,
											"end": 10430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10411,
											"end": 10430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10070,
											"end": 10436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10070,
											"end": 10436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10070,
											"end": 10436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10070,
											"end": 10436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10442,
											"end": 10861,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 10442,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10608,
											"end": 10612,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10646,
											"end": 10648,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10635,
											"end": 10644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10631,
											"end": 10649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10623,
											"end": 10649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10623,
											"end": 10649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10695,
											"end": 10704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10693,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10685,
											"end": 10705,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10681,
											"end": 10682,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10670,
											"end": 10679,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10666,
											"end": 10683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10659,
											"end": 10706,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10723,
											"end": 10854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10723,
											"end": 10854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 10723,
											"end": 10854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10723,
											"end": 10854,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 10723,
											"end": 10854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10715,
											"end": 10854,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10715,
											"end": 10854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10442,
											"end": 10861,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10442,
											"end": 10861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10442,
											"end": 10861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10442,
											"end": 10861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10867,
											"end": 11092,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 10867,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11007,
											"end": 11041,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 11003,
											"end": 11004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10995,
											"end": 11001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10991,
											"end": 11005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10984,
											"end": 11042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11076,
											"end": 11084,
											"name": "PUSH",
											"source": 9,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11071,
											"end": 11073,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11063,
											"end": 11069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11059,
											"end": 11074,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11052,
											"end": 11085,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10867,
											"end": 11092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10867,
											"end": 11092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11098,
											"end": 11464,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 11098,
											"end": 11464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11240,
											"end": 11243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11261,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 11325,
											"end": 11327,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 11320,
											"end": 11323,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11261,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 11261,
											"end": 11328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11261,
											"end": 11328,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 11261,
											"end": 11328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11254,
											"end": 11328,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11254,
											"end": 11328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11337,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 11426,
											"end": 11429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11337,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 11337,
											"end": 11430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11337,
											"end": 11430,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 11337,
											"end": 11430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11455,
											"end": 11457,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11450,
											"end": 11453,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11446,
											"end": 11458,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11439,
											"end": 11458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11439,
											"end": 11458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11098,
											"end": 11464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11098,
											"end": 11464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11098,
											"end": 11464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11098,
											"end": 11464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11470,
											"end": 11889,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 11470,
											"end": 11889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11636,
											"end": 11640,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11674,
											"end": 11676,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11663,
											"end": 11672,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11651,
											"end": 11677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11651,
											"end": 11677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11723,
											"end": 11732,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11717,
											"end": 11721,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11713,
											"end": 11733,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11709,
											"end": 11710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11698,
											"end": 11707,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 11711,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11687,
											"end": 11734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11751,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 11877,
											"end": 11881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11751,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 11751,
											"end": 11882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11751,
											"end": 11882,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 11751,
											"end": 11882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11743,
											"end": 11882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11743,
											"end": 11882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11470,
											"end": 11889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11470,
											"end": 11889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11470,
											"end": 11889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11470,
											"end": 11889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11895,
											"end": 11993,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 11895,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11946,
											"end": 11952,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11980,
											"end": 11985,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11974,
											"end": 11986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11964,
											"end": 11986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11964,
											"end": 11986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11895,
											"end": 11993,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11895,
											"end": 11993,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11895,
											"end": 11993,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11895,
											"end": 11993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11999,
											"end": 12146,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 11999,
											"end": 12146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12100,
											"end": 12111,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12137,
											"end": 12140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12122,
											"end": 12140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12122,
											"end": 12140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11999,
											"end": 12146,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11999,
											"end": 12146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11999,
											"end": 12146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11999,
											"end": 12146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11999,
											"end": 12146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12152,
											"end": 12398,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 12152,
											"end": 12398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12233,
											"end": 12234,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12243,
											"end": 12356,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 12243,
											"end": 12356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12257,
											"end": 12263,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12254,
											"end": 12255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12251,
											"end": 12264,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12243,
											"end": 12356,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12243,
											"end": 12356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 12243,
											"end": 12356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12342,
											"end": 12343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12337,
											"end": 12340,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12333,
											"end": 12344,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12327,
											"end": 12345,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12323,
											"end": 12324,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12318,
											"end": 12321,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12314,
											"end": 12325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12307,
											"end": 12346,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12279,
											"end": 12281,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12276,
											"end": 12277,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12272,
											"end": 12282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12267,
											"end": 12282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12267,
											"end": 12282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12243,
											"end": 12356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 12243,
											"end": 12356,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12243,
											"end": 12356,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 12243,
											"end": 12356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12390,
											"end": 12391,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12381,
											"end": 12387,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12379,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12365,
											"end": 12392,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 12398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12152,
											"end": 12398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12152,
											"end": 12398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12152,
											"end": 12398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12152,
											"end": 12398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12404,
											"end": 12790,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 12404,
											"end": 12790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12508,
											"end": 12511,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12536,
											"end": 12574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 12568,
											"end": 12573,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12536,
											"end": 12574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 12536,
											"end": 12574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12536,
											"end": 12574,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 12536,
											"end": 12574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12590,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 12671,
											"end": 12677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12666,
											"end": 12669,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12590,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 12590,
											"end": 12678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12590,
											"end": 12678,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 12590,
											"end": 12678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12583,
											"end": 12678,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12583,
											"end": 12678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12687,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 12745,
											"end": 12751,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12740,
											"end": 12743,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12733,
											"end": 12737,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12726,
											"end": 12731,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12722,
											"end": 12738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12687,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 12687,
											"end": 12752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12687,
											"end": 12752,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 12687,
											"end": 12752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12777,
											"end": 12783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12775,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12768,
											"end": 12784,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12761,
											"end": 12784,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12761,
											"end": 12784,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12512,
											"end": 12790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12404,
											"end": 12790,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12404,
											"end": 12790,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12404,
											"end": 12790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12404,
											"end": 12790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12404,
											"end": 12790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12796,
											"end": 13067,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 12796,
											"end": 13067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12926,
											"end": 12929,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12948,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 13037,
											"end": 13040,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13028,
											"end": 13034,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12948,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 12948,
											"end": 13041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12948,
											"end": 13041,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 12948,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12941,
											"end": 13041,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12941,
											"end": 13041,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13058,
											"end": 13061,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13051,
											"end": 13061,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13051,
											"end": 13061,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12796,
											"end": 13067,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12796,
											"end": 13067,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12796,
											"end": 13067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12796,
											"end": 13067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12796,
											"end": 13067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13073,
											"end": 13252,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 13073,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13213,
											"end": 13244,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 13209,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13201,
											"end": 13207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13197,
											"end": 13211,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13073,
											"end": 13252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13073,
											"end": 13252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13258,
											"end": 13624,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 13258,
											"end": 13624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13400,
											"end": 13403,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13421,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 13485,
											"end": 13487,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 13480,
											"end": 13483,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13421,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 13421,
											"end": 13488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13421,
											"end": 13488,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 13421,
											"end": 13488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13414,
											"end": 13488,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13414,
											"end": 13488,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13497,
											"end": 13590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 13586,
											"end": 13589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13497,
											"end": 13590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 13497,
											"end": 13590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13497,
											"end": 13590,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 13497,
											"end": 13590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13615,
											"end": 13617,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13610,
											"end": 13613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13606,
											"end": 13618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13599,
											"end": 13618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13599,
											"end": 13618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13258,
											"end": 13624,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13258,
											"end": 13624,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13258,
											"end": 13624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13258,
											"end": 13624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13630,
											"end": 14049,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 13630,
											"end": 14049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13796,
											"end": 13800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13834,
											"end": 13836,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13823,
											"end": 13832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13819,
											"end": 13837,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13811,
											"end": 13837,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13811,
											"end": 13837,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13883,
											"end": 13892,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13877,
											"end": 13881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13869,
											"end": 13870,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13858,
											"end": 13867,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13854,
											"end": 13871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13847,
											"end": 13894,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13911,
											"end": 14042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 14037,
											"end": 14041,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13911,
											"end": 14042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 13911,
											"end": 14042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13911,
											"end": 14042,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 13911,
											"end": 14042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13903,
											"end": 14042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13903,
											"end": 14042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13630,
											"end": 14049,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13630,
											"end": 14049,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13630,
											"end": 14049,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13630,
											"end": 14049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14055,
											"end": 14154,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 14055,
											"end": 14154,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14107,
											"end": 14113,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14141,
											"end": 14146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14135,
											"end": 14147,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14125,
											"end": 14147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14125,
											"end": 14147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14055,
											"end": 14154,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14055,
											"end": 14154,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14055,
											"end": 14154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14055,
											"end": 14154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14160,
											"end": 14262,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 14160,
											"end": 14262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14201,
											"end": 14207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14252,
											"end": 14254,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14248,
											"end": 14255,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14243,
											"end": 14245,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14236,
											"end": 14241,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14232,
											"end": 14246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14228,
											"end": 14256,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14218,
											"end": 14256,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14218,
											"end": 14256,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14160,
											"end": 14262,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14160,
											"end": 14262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14160,
											"end": 14262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14160,
											"end": 14262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14268,
											"end": 14645,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 14268,
											"end": 14645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14356,
											"end": 14359,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14384,
											"end": 14423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 14417,
											"end": 14422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14384,
											"end": 14423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 14384,
											"end": 14423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14384,
											"end": 14423,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 14384,
											"end": 14423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14439,
											"end": 14510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 14503,
											"end": 14509,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14498,
											"end": 14501,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14439,
											"end": 14510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 14439,
											"end": 14510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14439,
											"end": 14510,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 14439,
											"end": 14510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14432,
											"end": 14510,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14432,
											"end": 14510,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14519,
											"end": 14584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 14577,
											"end": 14583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14572,
											"end": 14575,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14565,
											"end": 14569,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14558,
											"end": 14563,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14554,
											"end": 14570,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14519,
											"end": 14584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 14519,
											"end": 14584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14519,
											"end": 14584,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 14519,
											"end": 14584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14609,
											"end": 14638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 14631,
											"end": 14637,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14609,
											"end": 14638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 14609,
											"end": 14638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14609,
											"end": 14638,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 14609,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14604,
											"end": 14607,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14600,
											"end": 14639,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14639,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14639,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14360,
											"end": 14645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14268,
											"end": 14645,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14268,
											"end": 14645,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14268,
											"end": 14645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14268,
											"end": 14645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14268,
											"end": 14645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14651,
											"end": 14964,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 14651,
											"end": 14964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14764,
											"end": 14768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14802,
											"end": 14804,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14791,
											"end": 14800,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14787,
											"end": 14805,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14779,
											"end": 14805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14779,
											"end": 14805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14851,
											"end": 14860,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14845,
											"end": 14849,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14841,
											"end": 14861,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14837,
											"end": 14838,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14826,
											"end": 14835,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14822,
											"end": 14839,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14815,
											"end": 14862,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14879,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 14952,
											"end": 14956,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14943,
											"end": 14949,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14879,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 14879,
											"end": 14957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14879,
											"end": 14957,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 14879,
											"end": 14957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14871,
											"end": 14957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14871,
											"end": 14957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14651,
											"end": 14964,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14651,
											"end": 14964,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14651,
											"end": 14964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14651,
											"end": 14964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14651,
											"end": 14964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/cappedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"cap()": "355274ea",
							"capReached()": "4f935945",
							"rate()": "2c4e722e",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inRate\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"inWallet\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"inToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"capReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale with a limit for total contributions.\",\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"cap()\":{\"returns\":{\"_0\":\"the cap of the crowdsale.\"}},\"capReached()\":{\"details\":\"Checks whether the cap has been reached.\",\"returns\":{\"_0\":\"Whether the cap was reached\"}},\"constructor\":{\"details\":\"Constructor, takes maximum amount of wei accepted in the crowdsale.\",\"params\":{\"inCap\":\"Max amount of wei to be contributed\",\"inRate\":\"The rate of the crowdsale\",\"inToken\":\"The token contract address\",\"inWallet\":\"The wallet address to receive the funds\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"CappedCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/validation/cappedCrowdsale.sol\":\"CappedCrowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0x995eb7096fd6ec056d60f86f20ae0590a296b449b821f41224ccafd3eafa2b56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a77398208a5b43f1dc4b2fc6dc940ef4edeacd81e7e3f34eafc4a39c75ef3886\",\"dweb:/ipfs/QmWi3666TzvNjh47BJ94PpL3D61LjfWesLZGXJyjzdym44\"]},\"crowdsale/validation/cappedCrowdsale.sol\":{\"keccak256\":\"0xfe1c00f4092dfe81cb6ba65414a1ed440f1fd63db1e90dbca68d8a34280399ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://610b3d437d28c69bda0f4e8b38d2dfea0b31c708ff6d0e8439c6ee62dbc7abd2\",\"dweb:/ipfs/QmR1fW6DE9kUUvJy8fRxq31sQaXsS5RFNhL4BKttn583FV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "crowdsale/validation/cappedCrowdsale.sol:CappedCrowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1240,
								"contract": "crowdsale/validation/cappedCrowdsale.sol:CappedCrowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)142"
							},
							{
								"astId": 1242,
								"contract": "crowdsale/validation/cappedCrowdsale.sol:CappedCrowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 1244,
								"contract": "crowdsale/validation/cappedCrowdsale.sol:CappedCrowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1246,
								"contract": "crowdsale/validation/cappedCrowdsale.sol:CappedCrowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1540,
								"contract": "crowdsale/validation/cappedCrowdsale.sol:CappedCrowdsale",
								"label": "_cap",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)142": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 64,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 64,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 64,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3081:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3091:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:0"
									},
									"scope": 64,
									"src": "3017:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "888:2238:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							142
						]
					},
					"id": 143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 76,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 85,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 142,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 142,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 142,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 142,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 142,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 142,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 143,
							"src": "202:2534:1",
							"usedErrors": [],
							"usedEvents": [
								76,
								85
							]
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							178
						]
					},
					"id": 179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 145,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 178,
							"linearizedBaseContracts": [
								178
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3022:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3093:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3119:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 155,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 157,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3155:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 159,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:2"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:2"
									},
									"scope": 178,
									"src": "2997:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3501:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:2"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3539:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:2"
									},
									"scope": 178,
									"src": "3485:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3791:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 174,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:2"
									},
									"scope": 178,
									"src": "3740:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 179,
							"src": "2113:1689:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							884
						],
						"IERC20": [
							142
						],
						"IERC20Permit": [
							178
						],
						"SafeERC20": [
							554
						]
					},
					"id": 555,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 555,
							"sourceUnit": 143,
							"src": "140:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 555,
							"sourceUnit": 179,
							"src": "164:40:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 555,
							"sourceUnit": 885,
							"src": "205:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 184,
								"nodeType": "StructuredDocumentation",
								"src": "243:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 554,
							"linearizedBaseContracts": [
								554
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 187,
									"libraryName": {
										"id": 185,
										"name": "Address",
										"nameLocations": [
											"731:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 884,
										"src": "731:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "725:26:3",
									"typeName": {
										"id": 186,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1013:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 199,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1043:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 202,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 191,
																			"src": "1073:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$142",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1079:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 109,
																		"src": "1073:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1088:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1073:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 205,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "1098:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 206,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "1102:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 200,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1050:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1054:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1050:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 198,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "1023:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "1023:86:3"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "757:179:3",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "950:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "970:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "963:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 190,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 189,
														"name": "IERC20",
														"nameLocations": [
															"963:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "963:6:3"
													},
													"referencedDeclaration": 142,
													"src": "963:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "985:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "977:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "997:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "989:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:3"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:3"
									},
									"scope": 554,
									"src": "941:175:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1445:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 225,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "1475:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 228,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 215,
																			"src": "1505:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$142",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1511:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 141,
																		"src": "1505:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1524:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1505:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 231,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "1534:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 232,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "1540:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 233,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "1544:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 226,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1482:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1486:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1482:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1482:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 224,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "1455:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1455:96:3"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1122:228:3",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1364:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1388:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1381:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 214,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 213,
														"name": "IERC20",
														"nameLocations": [
															"1381:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "1381:6:3"
													},
													"referencedDeclaration": 142,
													"src": "1381:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1403:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1395:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1417:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1409:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1429:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1421:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:55:3"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:3"
									},
									"scope": 554,
									"src": "1355:203:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "1894:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 250,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 246,
																			"src": "2143:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2152:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2143:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 253,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2142:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 258,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2183:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$554",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$554",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 257,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2175:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 256,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2175:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 259,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2175:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 260,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 244,
																					"src": "2190:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 254,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 242,
																					"src": "2159:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$142",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2165:9:3",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 119,
																				"src": "2159:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2159:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2202:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2159:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 264,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2158:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2142:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "2121:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 270,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "2314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 273,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 242,
																			"src": "2344:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$142",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2350:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 129,
																		"src": "2344:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2358:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2344:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 276,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "2368:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 277,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "2377:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 271,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2321:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2325:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2321:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 269,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "2294:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2294:90:3"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "1564:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1827:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1846:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1839:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 241,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 240,
														"name": "IERC20",
														"nameLocations": [
															"1839:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "1839:6:3"
													},
													"referencedDeclaration": 142,
													"src": "1839:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1861:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1853:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1878:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1870:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:46:3"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:3"
									},
									"scope": 554,
									"src": "1818:573:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2668:194:3",
										"statements": [
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2686:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "2678:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2678:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 303,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 299,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2725:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$554",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$554",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2717:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 297,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2717:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "2732:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 295,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "2701:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2707:9:3",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "2701:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2678:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "2770:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 308,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 286,
																			"src": "2800:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$142",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2806:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 129,
																		"src": "2800:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2814:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2800:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 311,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "2824:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 312,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 294,
																		"src": "2833:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 313,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "2848:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2833:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 306,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2777:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2781:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2777:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2777:77:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 304,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "2750:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:105:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "2750:105:3"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "2397:180:3",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2591:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2620:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2613:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 285,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 284,
														"name": "IERC20",
														"nameLocations": [
															"2613:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "2613:6:3"
													},
													"referencedDeclaration": 142,
													"src": "2613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2635:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2627:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2644:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:46:3"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:3"
									},
									"scope": 554,
									"src": "2582:280:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "3139:321:3",
										"statements": [
											{
												"id": 362,
												"nodeType": "UncheckedBlock",
												"src": "3149:305:3",
												"statements": [
													{
														"assignments": [
															331
														],
														"declarations": [
															{
																"constant": false,
																"id": 331,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3181:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 362,
																"src": "3173:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 330,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3173:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 340,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 336,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3220:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$554",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$554",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3212:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 334,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3212:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3212:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 338,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "3227:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 332,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "3196:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3202:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 119,
																"src": "3196:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3173:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 342,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "3257:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 343,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "3273:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3280:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 341,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3249:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 347,
														"nodeType": "ExpressionStatement",
														"src": "3249:75:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 349,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "3358:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 352,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 323,
																					"src": "3388:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$142",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3394:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 129,
																				"src": "3388:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3402:8:3",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3388:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 355,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 325,
																			"src": "3412:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 356,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 331,
																				"src": "3421:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 357,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "3436:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3421:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 350,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3365:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3369:18:3",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3365:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3365:77:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 348,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "3338:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:105:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 361,
														"nodeType": "ExpressionStatement",
														"src": "3338:105:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "2868:180:3",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3062:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3091:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "3084:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 322,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 321,
														"name": "IERC20",
														"nameLocations": [
															"3084:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "3084:6:3"
													},
													"referencedDeclaration": 142,
													"src": "3084:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3106:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "3098:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3123:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "3115:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:46:3"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:3"
									},
									"scope": 554,
									"src": "3053:407:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "3856:333:3",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3879:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 410,
														"src": "3866:25:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 375,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3866:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 379,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "3917:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3923:7:3",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 129,
																"src": "3917:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3931:8:3",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3917:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 382,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 377,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3894:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3898:18:3",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3894:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3894:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3866:90:3"
											},
											{
												"condition": {
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3971:45:3",
													"subExpression": {
														"arguments": [
															{
																"id": 387,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "3996:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$142",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 388,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "4003:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$142",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 386,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "3972:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3972:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 409,
												"nodeType": "IfStatement",
												"src": "3967:216:3",
												"trueBody": {
													"id": 408,
													"nodeType": "Block",
													"src": "4018:165:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 392,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "4052:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 395,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 368,
																						"src": "4082:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$142",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 396,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4088:7:3",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 129,
																					"src": "4082:13:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4096:8:3",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4082:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 398,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 370,
																				"src": "4106:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4115:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 393,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4059:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4063:18:3",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4059:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4059:58:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 391,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "4032:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4032:86:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 402,
															"nodeType": "ExpressionStatement",
															"src": "4032:86:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 404,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "4152:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 405,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "4159:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 403,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "4132:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4132:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 407,
															"nodeType": "ExpressionStatement",
															"src": "4132:40:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "3466:308:3",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3788:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3808:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3801:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 367,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 366,
														"name": "IERC20",
														"nameLocations": [
															"3801:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "3801:6:3"
													},
													"referencedDeclaration": 142,
													"src": "3801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3823:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3815:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3840:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3832:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:46:3"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3856:0:3"
									},
									"scope": 554,
									"src": "3779:410:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "4556:257:3",
										"statements": [
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4574:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "4566:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 432,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4566:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [
														{
															"id": 436,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "4601:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 434,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "4588:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$178",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4594:6:3",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 171,
														"src": "4588:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4588:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4566:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "4630:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "4637:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "4646:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 445,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "4653:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 446,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "4663:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 447,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "4666:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 448,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4669:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "4617:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$178",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4623:6:3",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "4617:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "4617:54:3"
											},
											{
												"assignments": [
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4689:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "4681:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4681:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"arguments": [
														{
															"id": 455,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "4715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 453,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "4702:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$178",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4708:6:3",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 171,
														"src": "4702:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4702:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4681:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 459,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "4739:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 460,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "4753:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4767:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4753:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4739:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4770:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4731:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4731:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "4731:75:3"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "4195:141:3",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4350:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4383:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4370:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$178",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 413,
														"name": "IERC20Permit",
														"nameLocations": [
															"4370:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 178,
														"src": "4370:12:3"
													},
													"referencedDeclaration": 178,
													"src": "4370:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$178",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4406:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4398:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4429:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4421:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4421:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4477:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4469:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4501:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4495:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 424,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4520:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4512:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 426,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4539:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4531:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 428,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:186:3"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4556:0:3"
									},
									"scope": 554,
									"src": "4341:472:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "5266:572:3",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5628:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 504,
														"src": "5615:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 477,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5615:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5669:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5675:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 481,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "5649:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5641:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 479,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5641:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5641:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5656:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 644,
														"src": "5641:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5641:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5615:95:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 489,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "5728:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5739:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5728:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5749:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5728:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "5765:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5778:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 496,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5778:4:3",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 498,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5777:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 493,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5754:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5758:6:3",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5754:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5754:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5728:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5786:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5720:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5720:111:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "5720:111:3"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "4819:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5205:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5232:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5225:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "IERC20",
														"nameLocations": [
															"5225:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "5225:6:3"
													},
													"referencedDeclaration": 142,
													"src": "5225:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5252:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5239:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5239:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:33:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5266:0:3"
									},
									"scope": 554,
									"src": "5196:642:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "6428:505:3",
										"statements": [
											{
												"assignments": [
													517,
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 517,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6729:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "6724:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 516,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6724:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6751:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "6738:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 518,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6738:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 527,
												"initialValue": {
													"arguments": [
														{
															"id": 525,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "6785:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 522,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "6773:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6765:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 520,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6765:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6765:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6780:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6765:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6723:67:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 528,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "6819:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 529,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 519,
																				"src": "6831:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6842:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6831:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6852:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6831:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 535,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 519,
																				"src": "6868:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 537,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6881:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 536,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6881:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 538,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6880:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 533,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6857:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6861:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6857:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6857:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6831:56:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 541,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6830:58:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6819:69:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 547,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "6919:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6911:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 545,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6911:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6911:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 543,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "6892:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$884_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6900:10:3",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 572,
															"src": "6892:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6892:34:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6819:107:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 515,
												"id": 551,
												"nodeType": "Return",
												"src": "6800:126:3"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "5844:490:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6348:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6379:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "6372:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 507,
														"name": "IERC20",
														"nameLocations": [
															"6372:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "6372:6:3"
													},
													"referencedDeclaration": 142,
													"src": "6372:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6399:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "6386:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 510,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6371:33:3"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "6422:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6422:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6421:6:3"
									},
									"scope": 554,
									"src": "6339:594:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 555,
							"src": "701:6234:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:6821:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							884
						]
					},
					"id": 885,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 556,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 557,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 884,
							"linearizedBaseContracts": [
								884
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "1478:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 565,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "1702:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 564,
												"id": 570,
												"nodeType": "Return",
												"src": "1695:30:4"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1432:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:4"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1472:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:4"
									},
									"scope": 884,
									"src": "1412:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "2718:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 583,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$884",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$884",
																				"typeString": "library Address"
																			}
																		],
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 581,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 586,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "2761:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:4"
											},
											{
												"assignments": [
													592,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "2813:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 591,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 593,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "2831:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 595,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "2853:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "2882:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 600,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:4"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "2666:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "2693:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:4"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:4"
									},
									"scope": 884,
									"src": "2647:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "3790:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 617,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "3829:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "3837:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 616,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															664,
															708
														],
														"referencedDeclaration": 708,
														"src": "3807:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 615,
												"id": 622,
												"nodeType": "Return",
												"src": "3800:79:4"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "3723:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "3739:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 610,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:4"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "3776:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 613,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:4"
									},
									"scope": 884,
									"src": "3701:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "4255:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "4294:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "4302:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 640,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "4311:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 636,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															664,
															708
														],
														"referencedDeclaration": 708,
														"src": "4272:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 635,
												"id": 642,
												"nodeType": "Return",
												"src": "4265:59:4"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4139:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4163:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4190:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 630,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:4"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4241:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 633,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:4"
									},
									"scope": 884,
									"src": "4108:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "4806:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "4845:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 658,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "4853:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 659,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "4859:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 656,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															664,
															708
														],
														"referencedDeclaration": 708,
														"src": "4823:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 655,
												"id": 662,
												"nodeType": "Return",
												"src": "4816:94:4"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4724:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4740:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4759:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4792:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 653,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:4"
									},
									"scope": 884,
									"src": "4693:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "5344:267:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 681,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$884",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$884",
																				"typeString": "library Address"
																			}
																		],
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 679,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 684,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "5387:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:4"
											},
											{
												"assignments": [
													690,
													692
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 707,
														"src": "5446:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 689,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 692,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 707,
														"src": "5460:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 691,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 699,
												"initialValue": {
													"arguments": [
														{
															"id": 697,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "5513:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 693,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "5487:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 695,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "5506:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 701,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "5562:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "5570:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 703,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "5579:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 704,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "5591:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 700,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "5535:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 677,
												"id": 706,
												"nodeType": "Return",
												"src": "5528:76:4"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "5205:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "5229:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 668,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "5256:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "5279:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:4"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "5330:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:4"
									},
									"scope": 884,
									"src": "5165:446:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "5888:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 719,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "5924:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "5932:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 718,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															725,
															754
														],
														"referencedDeclaration": 754,
														"src": "5905:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 717,
												"id": 723,
												"nodeType": "Return",
												"src": "5898:80:4"
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5816:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5832:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 712,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5874:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 715,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:4"
									},
									"scope": 884,
									"src": "5788:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "6327:168:4",
										"statements": [
											{
												"assignments": [
													738,
													740
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "6338:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 737,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 740,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "6352:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 739,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 745,
												"initialValue": {
													"arguments": [
														{
															"id": 743,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "6397:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 741,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "6379:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 747,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "6446:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "6454:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 749,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "6463:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 750,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "6475:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 746,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "6419:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 736,
												"id": 752,
												"nodeType": "Return",
												"src": "6412:76:4"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "6206:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "6230:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 729,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "6257:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 731,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:4"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "6313:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 734,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:4"
									},
									"scope": 884,
									"src": "6169:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "6771:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 765,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "6809:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "6817:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 764,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															771,
															800
														],
														"referencedDeclaration": 800,
														"src": "6788:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 763,
												"id": 769,
												"nodeType": "Return",
												"src": "6781:84:4"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "6704:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "6720:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 758,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:4"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "6757:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 761,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:4"
									},
									"scope": 884,
									"src": "6674:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "7213:170:4",
										"statements": [
											{
												"assignments": [
													784,
													786
												],
												"declarations": [
													{
														"constant": false,
														"id": 784,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 799,
														"src": "7224:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 783,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 786,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 799,
														"src": "7238:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 785,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 791,
												"initialValue": {
													"arguments": [
														{
															"id": 789,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "7285:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 787,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "7265:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 793,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "7334:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "7342:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 795,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "7351:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 796,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "7363:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 792,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "7307:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 782,
												"id": 798,
												"nodeType": "Return",
												"src": "7300:76:4"
											}
										]
									},
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7097:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7121:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 775,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7148:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 777,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:4"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7199:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 780,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:4"
									},
									"scope": 884,
									"src": "7058:325:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "7865:434:4",
										"statements": [
											{
												"condition": {
													"id": 814,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "7879:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 836,
													"nodeType": "Block",
													"src": "8235:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 832,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "8257:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 833,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "8269:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 831,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "8249:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 835,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:4"
														}
													]
												},
												"id": 837,
												"nodeType": "IfStatement",
												"src": "7875:418:4",
												"trueBody": {
													"id": 830,
													"nodeType": "Block",
													"src": "7888:341:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 815,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "7906:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 827,
															"nodeType": "IfStatement",
															"src": "7902:286:4",
															"trueBody": {
																"id": 826,
																"nodeType": "Block",
																"src": "7930:258:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 821,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 803,
																							"src": "8132:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 820,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 572,
																						"src": "8121:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 822,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 823,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 819,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 825,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 828,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "8208:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 813,
															"id": 829,
															"nodeType": "Return",
															"src": "8201:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "7716:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "7740:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 804,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "7762:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 806,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "7795:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 808,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:4"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "7851:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 811,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:4"
									},
									"scope": 884,
									"src": "7671:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "8680:135:4",
										"statements": [
											{
												"condition": {
													"id": 851,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 842,
													"src": "8694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "8751:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 856,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "8773:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 857,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "8785:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 855,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "8765:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 859,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:4"
														}
													]
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "8690:119:4",
												"trueBody": {
													"id": 854,
													"nodeType": "Block",
													"src": "8703:42:4",
													"statements": [
														{
															"expression": {
																"id": 852,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "8724:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 850,
															"id": 853,
															"nodeType": "Return",
															"src": "8717:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8555:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8577:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:4"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8666:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 848,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:4"
									},
									"scope": 884,
									"src": "8520:295:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "8904:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 870,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "8980:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "9310:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 877,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 867,
																		"src": "9331:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 876,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 879,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:4"
														}
													]
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "8976:379:4",
												"trueBody": {
													"id": 875,
													"nodeType": "Block",
													"src": "9003:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9161:133:4",
																"nodeType": "YulBlock",
																"src": "9161:133:4",
																"statements": [
																	{
																		"nativeSrc": "9179:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9208:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9202:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:4"
																			},
																			"nativeSrc": "9202:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9183:15:4",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9247:2:4",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9251:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9243:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:4"
																					},
																					"nativeSrc": "9243:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9264:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9236:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:4"
																			},
																			"nativeSrc": "9236:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:4"
																		},
																		"nativeSrc": "9236:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 865,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 865,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:4",
																	"valueSize": 1
																}
															],
															"id": 874,
															"nodeType": "InlineAssembly",
															"src": "9152:142:4"
														}
													]
												}
											}
										]
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "8838:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 864,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "8863:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 866,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:4"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:4"
									},
									"scope": 884,
									"src": "8821:540:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 885,
							"src": "194:9169:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9263:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							906
						]
					},
					"id": 907,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 886,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 887,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 906,
							"linearizedBaseContracts": [
								906
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 892,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 891,
												"id": 894,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 906,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 901,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 900,
												"id": 903,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 898,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 906,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 907,
							"src": "624:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1218
						]
					},
					"id": 1219,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 908,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 909,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1218,
							"linearizedBaseContracts": [
								1218
							],
							"name": "SafeMath",
							"nameLocation": "490:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "717:140:6",
										"statements": [
											{
												"id": 939,
												"nodeType": "UncheckedBlock",
												"src": "727:124:6",
												"statements": [
													{
														"assignments": [
															922
														],
														"declarations": [
															{
																"constant": false,
																"id": 922,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 939,
																"src": "751:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 921,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 926,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 923,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "763:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 924,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "767:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 927,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "786:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 928,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "790:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 934,
														"nodeType": "IfStatement",
														"src": "782:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 932,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 920,
															"id": 933,
															"nodeType": "Return",
															"src": "793:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 936,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "838:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 937,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 920,
														"id": 938,
														"nodeType": "Return",
														"src": "824:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "657:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "668:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:6"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "702:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 916,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "708:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:6"
									},
									"scope": 1218,
									"src": "641:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "1078:113:6",
										"statements": [
											{
												"id": 967,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 953,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "1116:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 954,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "1120:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 960,
														"nodeType": "IfStatement",
														"src": "1112:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 958,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 952,
															"id": 959,
															"nodeType": "Return",
															"src": "1123:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 962,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "1168:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 963,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "1172:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 965,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 952,
														"id": 966,
														"nodeType": "Return",
														"src": "1154:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:6",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1018:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1029:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:6"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1063:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 948,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1069:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:6"
									},
									"scope": 1218,
									"src": "1002:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "1415:417:6",
										"statements": [
											{
												"id": 1009,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 981,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "1683:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 988,
														"nodeType": "IfStatement",
														"src": "1679:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 980,
															"id": 987,
															"nodeType": "Return",
															"src": "1691:16:6"
														}
													},
													{
														"assignments": [
															990
														],
														"declarations": [
															{
																"constant": false,
																"id": 990,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1009,
																"src": "1721:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 989,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 994,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 991,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "1733:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 992,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "1737:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 995,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "1756:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 996,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "1760:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 998,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "1765:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1004,
														"nodeType": "IfStatement",
														"src": "1752:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1002,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 980,
															"id": 1003,
															"nodeType": "Return",
															"src": "1768:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1006,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "1813:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1007,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 980,
														"id": 1008,
														"nodeType": "Return",
														"src": "1799:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1355:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1366:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:6"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1400:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 976,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1406:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:6"
									},
									"scope": 1218,
									"src": "1339:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "2057:114:6",
										"statements": [
											{
												"id": 1037,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1023,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "2095:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1030,
														"nodeType": "IfStatement",
														"src": "2091:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1028,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1022,
															"id": 1029,
															"nodeType": "Return",
															"src": "2103:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1032,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "2148:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1033,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "2152:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1035,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1022,
														"id": 1036,
														"nodeType": "Return",
														"src": "2134:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "1997:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2008:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:6"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2042:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1018,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2048:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:6"
									},
									"scope": 1218,
									"src": "1981:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "2406:114:6",
										"statements": [
											{
												"id": 1065,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1051,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "2444:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1058,
														"nodeType": "IfStatement",
														"src": "2440:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1056,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1050,
															"id": 1057,
															"nodeType": "Return",
															"src": "2452:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1060,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "2497:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1061,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "2501:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1063,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1050,
														"id": 1064,
														"nodeType": "Return",
														"src": "2483:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "2346:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "2357:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:6"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "2391:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "2397:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:6"
									},
									"scope": 1218,
									"src": "2330:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "2822:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1077,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "2839:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1078,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "2843:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1076,
												"id": 1080,
												"nodeType": "Return",
												"src": "2832:12:6"
											}
										]
									},
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2768:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2779:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:6"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2813:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:6"
									},
									"scope": 1218,
									"src": "2755:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "3189:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1092,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "3206:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1093,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "3210:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1091,
												"id": 1095,
												"nodeType": "Return",
												"src": "3199:12:6"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "3135:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "3146:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:6"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "3180:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:6"
									},
									"scope": 1218,
									"src": "3122:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "3532:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1107,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "3549:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1108,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "3553:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1106,
												"id": 1110,
												"nodeType": "Return",
												"src": "3542:12:6"
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "3478:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "3489:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:6"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "3523:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:6"
									},
									"scope": 1218,
									"src": "3465:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "3917:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1122,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "3934:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1123,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "3938:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1125,
												"nodeType": "Return",
												"src": "3927:12:6"
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "3863:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "3874:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:6"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "3908:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:6"
									},
									"scope": 1218,
									"src": "3850:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "4466:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1137,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "4483:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1138,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "4487:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1136,
												"id": 1140,
												"nodeType": "Return",
												"src": "4476:12:6"
											}
										]
									},
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "4412:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "4423:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:6"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "4457:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:6"
									},
									"scope": 1218,
									"src": "4399:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "5054:106:6",
										"statements": [
											{
												"id": 1165,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1155,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "5096:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1156,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "5101:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1158,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "5104:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1154,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1160,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1161,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "5138:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1162,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "5142:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1153,
														"id": 1164,
														"nodeType": "Return",
														"src": "5131:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "4972:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "4983:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "4994:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:6"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "5045:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:6"
									},
									"scope": 1218,
									"src": "4959:201:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "5739:105:6",
										"statements": [
											{
												"id": 1190,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1180,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1172,
																		"src": "5781:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1183,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1174,
																	"src": "5788:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1179,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1185,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1186,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "5822:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1187,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "5826:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1178,
														"id": 1189,
														"nodeType": "Return",
														"src": "5815:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "5657:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "5668:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "5679:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:6"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "5730:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:6"
									},
									"scope": 1218,
									"src": "5644:200:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "6585:105:6",
										"statements": [
											{
												"id": 1215,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1205,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "6627:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1208,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1199,
																	"src": "6634:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1204,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1210,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1211,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "6668:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1212,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "6672:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1203,
														"id": 1214,
														"nodeType": "Return",
														"src": "6661:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "6503:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "6514:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "6525:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:6"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "6576:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:6"
									},
									"scope": 1218,
									"src": "6490:200:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1219,
							"src": "482:6210:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:6"
				},
				"id": 6
			},
			"crowdsale/crowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/crowdsale.sol",
					"exportedSymbols": {
						"Address": [
							884
						],
						"Context": [
							906
						],
						"Crowdsale": [
							1528
						],
						"IERC20": [
							142
						],
						"IERC20Permit": [
							178
						],
						"ReentrancyGuard": [
							64
						],
						"SafeERC20": [
							554
						],
						"SafeMath": [
							1218
						]
					},
					"id": 1529,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1220,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1221,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1529,
							"sourceUnit": 907,
							"src": "60:51:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1222,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1529,
							"sourceUnit": 143,
							"src": "113:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1223,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1529,
							"sourceUnit": 65,
							"src": "171:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1224,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1529,
							"sourceUnit": 555,
							"src": "235:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1529,
							"sourceUnit": 1219,
							"src": "302:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1227,
										"name": "Context",
										"nameLocations": [
											"1102:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 906,
										"src": "1102:7:7"
									},
									"id": 1228,
									"nodeType": "InheritanceSpecifier",
									"src": "1102:7:7"
								},
								{
									"baseName": {
										"id": 1229,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1111:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "1111:15:7"
									},
									"id": 1230,
									"nodeType": "InheritanceSpecifier",
									"src": "1111:15:7"
								}
							],
							"canonicalName": "Crowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1226,
								"nodeType": "StructuredDocumentation",
								"src": "363:706:7",
								"text": " @title Crowdsale\n @dev Crowdsale is a base contract for managing a token crowdsale,\n allowing investors to purchase tokens with ether. This contract implements\n such functionality in its most fundamental form and can be extended to provide additional\n functionality and/or custom behavior.\n The external interface represents the basic interface for purchasing tokens, and conforms\n the base architecture for crowdsales. It is *not* intended to be modified / overridden.\n The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n the methods to add functionality. Consider using 'super' where appropriate to concatenate\n behavior."
							},
							"fullyImplemented": true,
							"id": 1528,
							"linearizedBaseContracts": [
								1528,
								64,
								906
							],
							"name": "Crowdsale",
							"nameLocation": "1089:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1233,
									"libraryName": {
										"id": 1231,
										"name": "SafeMath",
										"nameLocations": [
											"1140:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1218,
										"src": "1140:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "1134:27:7",
									"typeName": {
										"id": 1232,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1153:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1237,
									"libraryName": {
										"id": 1234,
										"name": "SafeERC20",
										"nameLocations": [
											"1173:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 554,
										"src": "1173:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "1167:27:7",
									"typeName": {
										"id": 1236,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1235,
											"name": "IERC20",
											"nameLocations": [
												"1187:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "1187:6:7"
										},
										"referencedDeclaration": 142,
										"src": "1187:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 1240,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "1246:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1528,
									"src": "1231:21:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$142",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1239,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1238,
											"name": "IERC20",
											"nameLocations": [
												"1231:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "1231:6:7"
										},
										"referencedDeclaration": 142,
										"src": "1231:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1242,
									"mutability": "mutable",
									"name": "_wallet",
									"nameLocation": "1327:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1528,
									"src": "1303:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1241,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1303:15:7",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1244,
									"mutability": "mutable",
									"name": "_rate",
									"nameLocation": "1647:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1528,
									"src": "1631:21:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1631:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1246,
									"mutability": "mutable",
									"name": "_weiRaised",
									"nameLocation": "1706:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1528,
									"src": "1690:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1245,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1690:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "1725:241:7",
										"text": " Event for token purchase logging\n @param purchaser who paid for the tokens\n @param beneficiary who got the tokens\n @param value weis paid for purchase\n @param amount amount of tokens purchased"
									},
									"eventSelector": "6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b",
									"id": 1257,
									"name": "TokensPurchased",
									"nameLocation": "1978:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"indexed": true,
												"mutability": "mutable",
												"name": "purchaser",
												"nameLocation": "2010:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1994:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2037:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2021:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2058:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2050:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2073:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2065:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:87:7"
									},
									"src": "1972:109:7"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "2616:318:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1269,
																"name": "inRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "2635:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2644:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2635:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20726174652069732030",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2647:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															},
															"value": "Crowdsale: rate is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															}
														],
														"id": 1268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2627:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2627:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "2627:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1276,
																"name": "inWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "2689:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2709:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2701:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1277,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2701:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2701:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2689:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2713:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															},
															"value": "Crowdsale: wallet is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															}
														],
														"id": 1275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2681:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2681:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "2681:72:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1288,
																		"name": "inToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "2780:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2772:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1286,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2772:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2772:16:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2800:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2792:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1290,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2792:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2792:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2772:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373",
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2804:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															},
															"value": "Crowdsale: token is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															}
														],
														"id": 1285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2764:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:79:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "2764:79:7"
											},
											{
												"expression": {
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1298,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "2856:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1299,
														"name": "inRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2864:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2856:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "2856:14:7"
											},
											{
												"expression": {
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1302,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "2881:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1303,
														"name": "inWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "2891:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2881:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "2881:18:7"
											},
											{
												"expression": {
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1306,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "2910:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1307,
														"name": "inToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "2919:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"src": "2910:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "2910:16:7"
											}
										]
									},
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "2089:450:7",
										"text": " @param inRate Number of token units a buyer gets per wei\n @dev The rate is the conversion between wei and the smallest and indivisible\n token unit. So, if you are using a rate of 1 with a ERC20Detailed token\n with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n @param inWallet Address where collected funds will be forwarded to\n @param inToken Address of the token being sold"
									},
									"id": 1311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "2566:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "2558:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "2590:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "2574:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2574:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "2607:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "2600:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1264,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1263,
														"name": "IERC20",
														"nameLocations": [
															"2600:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "2600:6:7"
													},
													"referencedDeclaration": 142,
													"src": "2600:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2557:58:7"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2616:0:7"
									},
									"scope": 1528,
									"src": "2545:389:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "3259:42:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1316,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "3280:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3280:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1315,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "3270:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3270:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "3270:23:7"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "2942:283:7",
										"text": " @dev fallback function ***DO NOT OVERRIDE***\n Note that other contracts will transfer funds with a base gas stipend\n of 2300, which is not enough to call buyTokens. Consider calling\n buyTokens directly when purchasing tokens from a contract."
									},
									"id": 1321,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3239:2:7"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3259:0:7"
									},
									"scope": 1528,
									"src": "3231:70:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "3340:42:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1325,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "3361:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3361:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1324,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "3351:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "3351:23:7"
											}
										]
									},
									"id": 1330,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3320:2:7"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3340:0:7"
									},
									"scope": 1528,
									"src": "3313:69:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "3492:32:7",
										"statements": [
											{
												"expression": {
													"id": 1337,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "3510:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"functionReturnParameters": 1336,
												"id": 1338,
												"nodeType": "Return",
												"src": "3503:13:7"
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "3390:50:7",
										"text": " @return the token being sold."
									},
									"functionSelector": "fc0c546a",
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "3455:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3460:2:7"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "3484:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1334,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1333,
														"name": "IERC20",
														"nameLocations": [
															"3484:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "3484:6:7"
													},
													"referencedDeclaration": 142,
													"src": "3484:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3483:8:7"
									},
									"scope": 1528,
									"src": "3446:78:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "3661:33:7",
										"statements": [
											{
												"expression": {
													"id": 1346,
													"name": "_wallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1242,
													"src": "3679:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1345,
												"id": 1347,
												"nodeType": "Return",
												"src": "3672:14:7"
											}
										]
									},
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "3532:67:7",
										"text": " @return the address where funds are collected."
									},
									"functionSelector": "521eb273",
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wallet",
									"nameLocation": "3614:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3620:2:7"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "3644:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3644:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3643:17:7"
									},
									"scope": 1528,
									"src": "3605:89:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "3838:31:7",
										"statements": [
											{
												"expression": {
													"id": 1355,
													"name": "_rate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1244,
													"src": "3856:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1354,
												"id": 1356,
												"nodeType": "Return",
												"src": "3849:12:7"
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "3702:76:7",
										"text": " @return the number of token units a buyer gets per wei."
									},
									"functionSelector": "2c4e722e",
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rate",
									"nameLocation": "3793:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3797:2:7"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "3829:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3828:9:7"
									},
									"scope": 1528,
									"src": "3784:85:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "3988:36:7",
										"statements": [
											{
												"expression": {
													"id": 1364,
													"name": "_weiRaised",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1246,
													"src": "4006:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1363,
												"id": 1365,
												"nodeType": "Return",
												"src": "3999:17:7"
											}
										]
									},
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "3877:54:7",
										"text": " @return the amount of wei raised."
									},
									"functionSelector": "4042b66f",
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "weiRaised",
									"nameLocation": "3946:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3955:2:7"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "3979:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:9:7"
									},
									"scope": 1528,
									"src": "3937:87:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "4357:554:7",
										"statements": [
											{
												"assignments": [
													1376
												],
												"declarations": [
													{
														"constant": false,
														"id": 1376,
														"mutability": "mutable",
														"name": "weiAmount",
														"nameLocation": "4376:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1424,
														"src": "4368:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1375,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4368:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1379,
												"initialValue": {
													"expression": {
														"id": 1377,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4388:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4392:5:7",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "4388:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4368:29:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1381,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "4429:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1382,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "4442:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1380,
														"name": "_preValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "4408:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4408:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "4408:44:7"
											},
											{
												"assignments": [
													1386
												],
												"declarations": [
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "4522:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1424,
														"src": "4514:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1385,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4514:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1390,
												"initialValue": {
													"arguments": [
														{
															"id": 1388,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "4547:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1387,
														"name": "_getTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "4531:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4531:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4514:43:7"
											},
											{
												"expression": {
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1391,
														"name": "_weiRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "4595:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1394,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "4623:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1392,
																"name": "_weiRaised",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "4608:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4619:3:7",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1082,
															"src": "4608:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4608:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4595:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "4595:38:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1399,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "4663:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1400,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "4676:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1398,
														"name": "_processPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "4646:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4646:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1402,
												"nodeType": "ExpressionStatement",
												"src": "4646:37:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1404,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "4715:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4715:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1406,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "4729:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1407,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "4742:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1408,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "4753:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1403,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "4699:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4699:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "EmitStatement",
												"src": "4694:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1412,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "4796:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1413,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "4809:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1411,
														"name": "_updatePurchasingState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "4773:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4773:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "4773:46:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1416,
														"name": "_forwardFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "4832:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:15:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "4832:15:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1420,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "4880:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1421,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "4893:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1419,
														"name": "_postValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "4858:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4858:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "4858:45:7"
											}
										]
									},
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "4032:251:7",
										"text": " @dev low level token purchase ***DO NOT OVERRIDE***\n This function has a non-reentrancy guard, so it shouldn't be called by\n another `nonReentrant` function.\n @param beneficiary Recipient of the token purchase"
									},
									"functionSelector": "ec8ac4d8",
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1373,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1372,
												"name": "nonReentrant",
												"nameLocations": [
													"4336:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "4336:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4336:12:7"
										}
									],
									"name": "buyTokens",
									"nameLocation": "4298:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4316:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "4308:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4308:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4307:21:7"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4357:0:7"
									},
									"scope": 1528,
									"src": "4289:622:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1452,
										"nodeType": "Block",
										"src": "5556:296:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1434,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "5575:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5598:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5590:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1435,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5590:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5590:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5575:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5602:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															},
															"value": "Crowdsale: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															}
														],
														"id": 1433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5567:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5567:80:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "5567:80:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1444,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "5666:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5679:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5666:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5682:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															},
															"value": "Crowdsale: weiAmount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															}
														],
														"id": 1443,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5658:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5658:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "5658:52:7"
											},
											{
												"expression": {
													"id": 1450,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "5721:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Crowdsale_$1528",
														"typeString": "contract Crowdsale"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "5721:4:7"
											}
										]
									},
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "4919:539:7",
										"text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n Use `super` in contracts that inherit from Crowdsale to extend their validations.\n Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     super._preValidatePurchase(beneficiary, weiAmount);\n     require(weiRaised().add(weiAmount) <= cap);\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preValidatePurchase",
									"nameLocation": "5473:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "5502:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "5494:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5494:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "5523:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "5515:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5515:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5493:40:7"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5556:0:7"
									},
									"scope": 1528,
									"src": "5464:388:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "6248:66:7",
										"statements": []
									},
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "5860:289:7",
										"text": " @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n conditions are not met.\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_postValidatePurchase",
									"nameLocation": "6164:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6194:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "6186:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "6215:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "6207:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6207:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:40:7"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6248:0:7"
									},
									"scope": 1528,
									"src": "6155:159:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "6685:64:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1473,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "6716:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1474,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "6729:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1470,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "6696:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6703:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "6696:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$142_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6696:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "6696:45:7"
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "6322:274:7",
										"text": " @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\n its tokens.\n @param beneficiary Address performing the token purchase\n @param tokenAmount Number of tokens to be emitted"
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deliverTokens",
									"nameLocation": "6611:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6634:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "6626:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6626:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6655:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "6647:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6625:42:7"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6685:0:7"
									},
									"scope": 1528,
									"src": "6602:147:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "7100:59:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1487,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "7126:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1488,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "7139:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1486,
														"name": "_deliverTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "7111:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7111:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "7111:40:7"
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "6757:260:7",
										"text": " @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\n tokens.\n @param beneficiary Address receiving the tokens\n @param tokenAmount Number of tokens to be purchased"
									},
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_processPurchase",
									"nameLocation": "7032:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7057:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "7049:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "7078:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "7070:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7070:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7048:42:7"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7100:0:7"
									},
									"scope": 1528,
									"src": "7023:136:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "7526:66:7",
										"statements": []
									},
									"documentation": {
										"id": 1493,
										"nodeType": "StructuredDocumentation",
										"src": "7167:264:7",
										"text": " @dev Override for extensions that require an internal state to check for validity (current user contributions,\n etc.)\n @param beneficiary Address receiving the tokens\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePurchasingState",
									"nameLocation": "7446:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7477:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "7469:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7469:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7498:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "7490:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7468:40:7"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7526:0:7"
									},
									"scope": 1528,
									"src": "7437:155:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "7932:46:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1511,
															"name": "_rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "7964:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1509,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "7950:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7960:3:7",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1112,
														"src": "7950:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7950:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1508,
												"id": 1513,
												"nodeType": "Return",
												"src": "7943:27:7"
											}
										]
									},
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "7600:242:7",
										"text": " @dev Override to extend the way in which ether is converted to tokens.\n @param weiAmount Value in wei to be converted into tokens\n @return Number of tokens that can be purchased with the specified _weiAmount"
									},
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAmount",
									"nameLocation": "7857:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7881:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "7873:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7873:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7872:19:7"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "7923:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7923:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7922:9:7"
									},
									"scope": 1528,
									"src": "7848:130:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "8112:46:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1522,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8140:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8144:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8140:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1519,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "8123:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8131:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8123:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8123:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "8123:27:7"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "7986:78:7",
										"text": " @dev Determines how ETH is stored/forwarded on purchases."
									},
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_forwardFunds",
									"nameLocation": "8079:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8092:2:7"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8112:0:7"
									},
									"scope": 1528,
									"src": "8070:88:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1529,
							"src": "1071:7090:7",
							"usedErrors": [],
							"usedEvents": [
								1257
							]
						}
					],
					"src": "33:8128:7"
				},
				"id": 7
			},
			"crowdsale/validation/cappedCrowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/validation/cappedCrowdsale.sol",
					"exportedSymbols": {
						"Address": [
							884
						],
						"CappedCrowdsale": [
							1620
						],
						"Context": [
							906
						],
						"Crowdsale": [
							1528
						],
						"IERC20": [
							142
						],
						"IERC20Permit": [
							178
						],
						"ReentrancyGuard": [
							64
						],
						"SafeERC20": [
							554
						],
						"SafeMath": [
							1218
						]
					},
					"id": 1621,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1530,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1531,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1621,
							"sourceUnit": 1219,
							"src": "62:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "crowdsale/crowdsale.sol",
							"file": "crowdsale/crowdsale.sol",
							"id": 1532,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1621,
							"sourceUnit": 1529,
							"src": "121:33:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1534,
										"name": "Crowdsale",
										"nameLocations": [
											"280:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1528,
										"src": "280:9:8"
									},
									"id": 1535,
									"nodeType": "InheritanceSpecifier",
									"src": "280:9:8"
								}
							],
							"canonicalName": "CappedCrowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1533,
								"nodeType": "StructuredDocumentation",
								"src": "158:92:8",
								"text": " @title CappedCrowdsale\n @dev Crowdsale with a limit for total contributions."
							},
							"fullyImplemented": true,
							"id": 1620,
							"linearizedBaseContracts": [
								1620,
								1528,
								64,
								906
							],
							"name": "CappedCrowdsale",
							"nameLocation": "261:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1538,
									"libraryName": {
										"id": 1536,
										"name": "SafeMath",
										"nameLocations": [
											"303:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1218,
										"src": "303:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "297:27:8",
									"typeName": {
										"id": 1537,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "316:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1540,
									"mutability": "mutable",
									"name": "_cap",
									"nameLocation": "348:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 1620,
									"src": "332:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1539,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "332:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "818:89:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1559,
																"name": "inCap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1543,
																"src": "837:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "845:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "837:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43617070656443726f776473616c653a206361702069732030",
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "848:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64e5a6167e9149487c39484a18ce5d080c5288b2e26eed530ccbcf3220dc9f14",
																"typeString": "literal_string \"CappedCrowdsale: cap is 0\""
															},
															"value": "CappedCrowdsale: cap is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64e5a6167e9149487c39484a18ce5d080c5288b2e26eed530ccbcf3220dc9f14",
																"typeString": "literal_string \"CappedCrowdsale: cap is 0\""
															}
														],
														"id": 1558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "829:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "829:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "829:47:8"
											},
											{
												"expression": {
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1565,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "887:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1566,
														"name": "inCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1543,
														"src": "894:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "887:12:8"
											}
										]
									},
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "361:312:8",
										"text": " @dev Constructor, takes maximum amount of wei accepted in the crowdsale.\n @param inCap Max amount of wei to be contributed\n @param inRate The rate of the crowdsale\n @param inWallet The wallet address to receive the funds\n @param inToken The token contract address"
									},
									"id": 1570,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1553,
													"name": "inRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1545,
													"src": "785:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 1554,
													"name": "inWallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1547,
													"src": "793:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												{
													"id": 1555,
													"name": "inToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1550,
													"src": "803:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												}
											],
											"id": 1556,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1552,
												"name": "Crowdsale",
												"nameLocations": [
													"775:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1528,
												"src": "775:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "775:36:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "inCap",
												"nameLocation": "700:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "692:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "715:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "707:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "739:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "723:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "723:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "756:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "749:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1549,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1548,
														"name": "IERC20",
														"nameLocations": [
															"749:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "749:6:8"
													},
													"referencedDeclaration": 142,
													"src": "749:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:73:8"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:0:8"
									},
									"scope": 1620,
									"src": "679:228:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "1022:30:8",
										"statements": [
											{
												"expression": {
													"id": 1576,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1540,
													"src": "1040:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1575,
												"id": 1577,
												"nodeType": "Return",
												"src": "1033:11:8"
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "917:54:8",
										"text": " @return the cap of the crowdsale."
									},
									"functionSelector": "355274ea",
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nameLocation": "986:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "989:2:8"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "1013:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:9:8"
									},
									"scope": 1620,
									"src": "977:75:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "1225:45:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1585,
															"name": "weiRaised",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "1243:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1243:11:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1587,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "1258:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1243:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1584,
												"id": 1589,
												"nodeType": "Return",
												"src": "1236:26:8"
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "1060:110:8",
										"text": " @dev Checks whether the cap has been reached.\n @return Whether the cap was reached"
									},
									"functionSelector": "4f935945",
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "capReached",
									"nameLocation": "1185:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1195:2:8"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "1219:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1219:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:6:8"
									},
									"scope": 1620,
									"src": "1176:94:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1453
									],
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "1566:156:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1603,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "1604:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1604,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "1617:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1600,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1577:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CappedCrowdsale_$1620_$",
																"typeString": "type(contract super CappedCrowdsale)"
															}
														},
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1583:20:8",
														"memberName": "_preValidatePurchase",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1453,
														"src": "1577:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1577:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "1577:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1611,
																		"name": "weiAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "1662:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1608,
																			"name": "weiRaised",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1367,
																			"src": "1646:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1646:11:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1658:3:8",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1082,
																	"src": "1646:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1646:26:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1613,
																"name": "_cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1540,
																"src": "1676:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1646:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43617070656443726f776473616c653a20636170206578636565646564",
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1682:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c4df665e7843abc0c81818f3beddf3ec071d2283193f32a87d6b4d1c758ed74",
																"typeString": "literal_string \"CappedCrowdsale: cap exceeded\""
															},
															"value": "CappedCrowdsale: cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c4df665e7843abc0c81818f3beddf3ec071d2283193f32a87d6b4d1c758ed74",
																"typeString": "literal_string \"CappedCrowdsale: cap exceeded\""
															}
														],
														"id": 1607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1638:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1638:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "1638:76:8"
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "1278:189:8",
										"text": " @dev Extend parent behavior requiring purchase to respect the funding cap.\n @param beneficiary Token purchaser\n @param weiAmount Amount of wei contributed"
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preValidatePurchase",
									"nameLocation": "1482:20:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1598,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1552:8:8"
									},
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "1511:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1503:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "1532:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1524:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1524:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:40:8"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1566:0:8"
									},
									"scope": 1620,
									"src": "1473:249:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1621,
							"src": "252:1473:8",
							"usedErrors": [],
							"usedEvents": [
								1257
							]
						}
					],
					"src": "33:1692:8"
				},
				"id": 8
			}
		}
	}
}