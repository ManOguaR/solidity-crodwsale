{
	"id": "cc65224d24fe5b80641d64679d9e544b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"crowdsale/validation/timedCrowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"crowdsale/crowdsale.sol\";\r\n\r\n/**\r\n * @title TimedCrowdsale\r\n * @dev Crowdsale accepting contributions only within a time frame.\r\n */\r\ncontract TimedCrowdsale is Crowdsale {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 private _openingTime;\r\n    uint256 private _closingTime;\r\n\r\n    /**\r\n     * Event for crowdsale extending\r\n     * @param newClosingTime new closing time\r\n     * @param prevClosingTime old closing time\r\n     */\r\n    event TimedCrowdsaleExtended(uint256 prevClosingTime, uint256 newClosingTime);\r\n\r\n    /**\r\n     * @dev Reverts if not in crowdsale time range.\r\n     */\r\n    modifier onlyWhileOpen {\r\n        require(isOpen(), \"TimedCrowdsale: not open\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Constructor, takes crowdsale opening and closing times.\r\n     * @param inOpeningTime Crowdsale opening time\r\n     * @param inClosingTime Crowdsale closing time\r\n     */\r\n    constructor (uint256 inOpeningTime, uint256 inClosingTime, uint256 inRate, address payable inWallet, IERC20 inToken) Crowdsale(inRate, inWallet, inToken) {\r\n        // solhint-disable-next-line not-rely-on-time\r\n        require(inOpeningTime >= block.timestamp, \"TimedCrowdsale: opening time is before current time\");\r\n        // solhint-disable-next-line max-line-length\r\n        require(inClosingTime > inOpeningTime, \"TimedCrowdsale: opening time is not before closing time\");\r\n\r\n        _openingTime = inOpeningTime;\r\n        _closingTime = inClosingTime;\r\n    }\r\n\r\n    /**\r\n     * @return the crowdsale opening time.\r\n     */\r\n    function openingTime() public view returns (uint256) {\r\n        return _openingTime;\r\n    }\r\n\r\n    /**\r\n     * @return the crowdsale closing time.\r\n     */\r\n    function closingTime() public view returns (uint256) {\r\n        return _closingTime;\r\n    }\r\n\r\n    /**\r\n     * @return true if the crowdsale is open, false otherwise.\r\n     */\r\n    function isOpen() public view returns (bool) {\r\n        // solhint-disable-next-line not-rely-on-time\r\n        return block.timestamp >= _openingTime && block.timestamp <= _closingTime;\r\n    }\r\n\r\n    /**\r\n     * @dev Checks whether the period in which the crowdsale is open has already elapsed.\r\n     * @return Whether crowdsale period has elapsed\r\n     */\r\n    function hasClosed() public view returns (bool) {\r\n        // solhint-disable-next-line not-rely-on-time\r\n        return block.timestamp > _closingTime;\r\n    }\r\n\r\n    /**\r\n     * @dev Extend parent behavior requiring to be within contributing period.\r\n     * @param beneficiary Token purchaser\r\n     * @param weiAmount Amount of wei contributed\r\n     */\r\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal override onlyWhileOpen view {\r\n        super._preValidatePurchase(beneficiary, weiAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Extend crowdsale.\r\n     * @param newClosingTime Crowdsale closing time\r\n     */\r\n    function _extendTime(uint256 newClosingTime) internal {\r\n        require(!hasClosed(), \"TimedCrowdsale: already closed\");\r\n        // solhint-disable-next-line max-line-length\r\n        require(newClosingTime > _closingTime, \"TimedCrowdsale: new closing time is before current closing time\");\r\n\r\n        emit TimedCrowdsaleExtended(_closingTime, newClosingTime);\r\n        _closingTime = newClosingTime;\r\n    }\r\n}"
			},
			"crowdsale/crowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n/**\r\n * @title Crowdsale\r\n * @dev Crowdsale is a base contract for managing a token crowdsale,\r\n * allowing investors to purchase tokens with ether. This contract implements\r\n * such functionality in its most fundamental form and can be extended to provide additional\r\n * functionality and/or custom behavior.\r\n * The external interface represents the basic interface for purchasing tokens, and conforms\r\n * the base architecture for crowdsales. It is *not* intended to be modified / overridden.\r\n * The internal interface conforms the extensible and modifiable surface of crowdsales. Override\r\n * the methods to add functionality. Consider using 'super' where appropriate to concatenate\r\n * behavior.\r\n */\r\nabstract contract Crowdsale is Context, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // The token being sold\r\n    IERC20 private _token;\r\n\r\n    // Address where funds are collected\r\n    address payable private _wallet;\r\n\r\n    // How many token units a buyer gets per wei.\r\n    // The rate is the conversion between wei and the smallest and indivisible token unit.\r\n    // So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK\r\n    // 1 wei will give you 1 unit, or 0.001 TOK.\r\n    uint256 private _rate;\r\n\r\n    // Amount of wei raised\r\n    uint256 private _weiRaised;\r\n\r\n    /**\r\n     * Event for token purchase logging\r\n     * @param purchaser who paid for the tokens\r\n     * @param beneficiary who got the tokens\r\n     * @param value weis paid for purchase\r\n     * @param amount amount of tokens purchased\r\n     */\r\n    event TokensPurchased(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\r\n    /**\r\n     * @param inRate Number of token units a buyer gets per wei\r\n     * @dev The rate is the conversion between wei and the smallest and indivisible\r\n     * token unit. So, if you are using a rate of 1 with a ERC20Detailed token\r\n     * with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\r\n     * @param inWallet Address where collected funds will be forwarded to\r\n     * @param inToken Address of the token being sold\r\n     */\r\n    constructor (uint256 inRate, address payable inWallet, IERC20 inToken) {\r\n        require(inRate > 0, \"Crowdsale: rate is 0\");\r\n        require(inWallet != address(0), \"Crowdsale: wallet is the zero address\");\r\n        require(address(inToken) != address(0), \"Crowdsale: token is the zero address\");\r\n\r\n        _rate = inRate;\r\n        _wallet = inWallet;\r\n        _token = inToken;\r\n    }\r\n\r\n    /**\r\n     * @dev fallback function ***DO NOT OVERRIDE***\r\n     * Note that other contracts will transfer funds with a base gas stipend\r\n     * of 2300, which is not enough to call buyTokens. Consider calling\r\n     * buyTokens directly when purchasing tokens from a contract.\r\n     */\r\n    fallback() external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n    \r\n    receive() external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @return the token being sold.\r\n     */\r\n    function token() public view returns (IERC20) {\r\n        return _token;\r\n    }\r\n\r\n    /**\r\n     * @return the address where funds are collected.\r\n     */\r\n    function wallet() public view returns (address payable) {\r\n        return _wallet;\r\n    }\r\n\r\n    /**\r\n     * @return the number of token units a buyer gets per wei.\r\n     */\r\n    function rate() public virtual view returns (uint256) {\r\n        return _rate;\r\n    }\r\n\r\n    /**\r\n     * @return the amount of wei raised.\r\n     */\r\n    function weiRaised() public view returns (uint256) {\r\n        return _weiRaised;\r\n    }\r\n\r\n    /**\r\n     * @dev low level token purchase ***DO NOT OVERRIDE***\r\n     * This function has a non-reentrancy guard, so it shouldn't be called by\r\n     * another `nonReentrant` function.\r\n     * @param beneficiary Recipient of the token purchase\r\n     */\r\n    function buyTokens(address beneficiary) public nonReentrant payable {\r\n        uint256 weiAmount = msg.value;\r\n        _preValidatePurchase(beneficiary, weiAmount);\r\n\r\n        // calculate token amount to be created\r\n        uint256 tokens = _getTokenAmount(weiAmount);\r\n\r\n        // update state\r\n        _weiRaised = _weiRaised.add(weiAmount);\r\n\r\n        _processPurchase(beneficiary, tokens);\r\n        emit TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens);\r\n\r\n        _updatePurchasingState(beneficiary, weiAmount);\r\n\r\n        _forwardFunds();\r\n        _postValidatePurchase(beneficiary, weiAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\r\n     * Use `super` in contracts that inherit from Crowdsale to extend their validations.\r\n     * Example from CappedCrowdsale.sol's _preValidatePurchase method:\r\n     *     super._preValidatePurchase(beneficiary, weiAmount);\r\n     *     require(weiRaised().add(weiAmount) <= cap);\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\");\r\n        require(weiAmount != 0, \"Crowdsale: weiAmount is 0\");\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\r\n     * conditions are not met.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\r\n     * its tokens.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param tokenAmount Number of tokens to be emitted\r\n     */\r\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {\r\n        _token.safeTransfer(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\r\n     * tokens.\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param tokenAmount Number of tokens to be purchased\r\n     */\r\n    function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {\r\n        _deliverTokens(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Override for extensions that require an internal state to check for validity (current user contributions,\r\n     * etc.)\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal virtual {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Override to extend the way in which ether is converted to tokens.\r\n     * @param weiAmount Value in wei to be converted into tokens\r\n     * @return Number of tokens that can be purchased with the specified _weiAmount\r\n     */\r\n    function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {\r\n        return weiAmount.mul(_rate);\r\n    }\r\n\r\n    /**\r\n     * @dev Determines how ETH is stored/forwarded on purchases.\r\n     */\r\n    function _forwardFunds() internal virtual {\r\n        _wallet.transfer(msg.value);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 17,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 118,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x27 0x24 0xB5 0x2E EXTCODECOPY CALLVALUE PUSH18 0xE7F8B6FEB5693F47018FC51716AED6B39E89 SAR LOG1 0xBF 0xDA LOG4 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "701:6234:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x27 0x24 0xB5 0x2E EXTCODECOPY CALLVALUE PUSH18 0xE7F8B6FEB5693F47018FC51716AED6B39E89 SAR LOG1 0xBF 0xDA LOG4 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "701:6234:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
									".code": [
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/timedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xCF02F35D13875A9E5D07 0x2E 0xE3 0x2A 0xC1 0xD2 INVALID CODESIZE BALANCE EXTCODEHASH 0xB4 0xBD SWAP6 SWAP13 0xA8 INVALID 0xC2 0xE0 0xEA DUP16 DELEGATECALL 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xCF02F35D13875A9E5D07 0x2E 0xE3 0x2A 0xC1 0xD2 INVALID CODESIZE BALANCE EXTCODEHASH 0xB4 0xBD SWAP6 SWAP13 0xA8 INVALID 0xC2 0xE0 0xEA DUP16 DELEGATECALL 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/timedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/timedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/crowdsale.sol": {
				"Crowdsale": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.",
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"constructor": {
								"details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
								"params": {
									"inRate": "Number of token units a buyer gets per wei",
									"inToken": "Address of the token being sold",
									"inWallet": "Address where collected funds will be forwarded to"
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "Crowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"rate()": "2c4e722e",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.\",\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"constructor\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"inRate\":\"Number of token units a buyer gets per wei\",\"inToken\":\"Address of the token being sold\",\"inWallet\":\"Address where collected funds will be forwarded to\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"Crowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/crowdsale.sol\":\"Crowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0xee463c77b303be60fe3509ff7b9aa23f2674f07b68622278a611ab7908591689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cb0baa0aace90973f81b63d0d3769d000b113f68fd089e0988f0c3468f5a1d9\",\"dweb:/ipfs/QmTi1mH6UupQvzs1AW1kr1sgMWW4wtjKWxngYd6dQ6Pdgj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 118,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1348,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)250"
							},
							{
								"astId": 1350,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 1352,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1354,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)250": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/validation/timedCrowdsale.sol": {
				"TimedCrowdsale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inOpeningTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "inClosingTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "inRate",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "inWallet",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "inToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "prevClosingTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newClosingTime",
									"type": "uint256"
								}
							],
							"name": "TimedCrowdsaleExtended",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "closingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasClosed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale accepting contributions only within a time frame.",
						"events": {
							"TimedCrowdsaleExtended(uint256,uint256)": {
								"params": {
									"newClosingTime": "new closing time",
									"prevClosingTime": "old closing time"
								}
							},
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"closingTime()": {
								"returns": {
									"_0": "the crowdsale closing time."
								}
							},
							"constructor": {
								"details": "Constructor, takes crowdsale opening and closing times.",
								"params": {
									"inClosingTime": "Crowdsale closing time",
									"inOpeningTime": "Crowdsale opening time"
								}
							},
							"hasClosed()": {
								"details": "Checks whether the period in which the crowdsale is open has already elapsed.",
								"returns": {
									"_0": "Whether crowdsale period has elapsed"
								}
							},
							"isOpen()": {
								"returns": {
									"_0": "true if the crowdsale is open, false otherwise."
								}
							},
							"openingTime()": {
								"returns": {
									"_0": "the crowdsale opening time."
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "TimedCrowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"crowdsale/validation/timedCrowdsale.sol\":320:3473  contract TimedCrowdsale is Crowdsale {... */\n  mstore(0x40, 0x80)\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1077:1643  constructor (uint256 inOpeningTime, uint256 inClosingTime, uint256 inRate, address payable inWallet, IERC20 inToken) Crowdsale(inRate, inWallet, inToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1204:1210  inRate */\n  dup3\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1212:1220  inWallet */\n  dup3\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1222:1229  inToken */\n  dup3\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2644:2645  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2635:2641  inRate */\n  dup4\n    /* \"crowdsale/crowdsale.sol\":2635:2645  inRate > 0 */\n  gt\n    /* \"crowdsale/crowdsale.sol\":2627:2670  require(inRate > 0, \"Crowdsale: rate is 0\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_9:\n    /* \"crowdsale/crowdsale.sol\":2709:2710  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2689:2711  inWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"crowdsale/crowdsale.sol\":2689:2697  inWallet */\n  dup3\n    /* \"crowdsale/crowdsale.sol\":2689:2711  inWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"crowdsale/crowdsale.sol\":2681:2753  require(inWallet != address(0), \"Crowdsale: wallet is the zero address\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"crowdsale/crowdsale.sol\":2800:2801  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2772:2802  address(inToken) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"crowdsale/crowdsale.sol\":2780:2787  inToken */\n  dup2\n    /* \"crowdsale/crowdsale.sol\":2772:2802  address(inToken) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"crowdsale/crowdsale.sol\":2764:2843  require(address(inToken) != address(0), \"Crowdsale: token is the zero address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"crowdsale/crowdsale.sol\":2864:2870  inRate */\n  dup3\n    /* \"crowdsale/crowdsale.sol\":2856:2861  _rate */\n  0x03\n    /* \"crowdsale/crowdsale.sol\":2856:2870  _rate = inRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2891:2899  inWallet */\n  dup2\n    /* \"crowdsale/crowdsale.sol\":2881:2888  _wallet */\n  0x02\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2881:2899  _wallet = inWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2919:2926  inToken */\n  dup1\n    /* \"crowdsale/crowdsale.sol\":2910:2916  _token */\n  0x01\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2910:2926  _token = inToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2545:2934  constructor (uint256 inRate, address payable inWallet, IERC20 inToken) {... */\n  pop\n  pop\n  pop\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1322:1337  block.timestamp */\n  timestamp\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1305:1318  inOpeningTime */\n  dup6\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1305:1337  inOpeningTime >= block.timestamp */\n  lt\n  iszero\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1297:1393  require(inOpeningTime >= block.timestamp, \"TimedCrowdsale: opening time is before current time\") */\n  tag_19\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_19:\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1482:1495  inOpeningTime */\n  dup5\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1466:1479  inClosingTime */\n  dup5\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1466:1495  inClosingTime > inOpeningTime */\n  gt\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1458:1555  require(inClosingTime > inOpeningTime, \"TimedCrowdsale: opening time is not before closing time\") */\n  tag_22\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_23\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_22:\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1583:1596  inOpeningTime */\n  dup5\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1568:1580  _openingTime */\n  0x05\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1568:1596  _openingTime = inOpeningTime */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1622:1635  inClosingTime */\n  dup4\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1607:1619  _closingTime */\n  0x06\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1607:1635  _closingTime = inClosingTime */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/validation/timedCrowdsale.sol\":1077:1643  constructor (uint256 inOpeningTime, uint256 inClosingTime, uint256 inRate, address payable inWallet, IERC20 inToken) Crowdsale(inRate, inWallet, inToken) {... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"crowdsale/validation/timedCrowdsale.sol\":320:3473  contract TimedCrowdsale is Crowdsale {... */\n  jump(tag_25)\n    /* \"#utility.yul\":88:205   */\ntag_27:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_29:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_30:\n    /* \"#utility.yul\":490:514   */\n  tag_57\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_29\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_58:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_31:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_60\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_30\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_32:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:930   */\ntag_33:\n    /* \"#utility.yul\":871:878   */\n  0x00\n    /* \"#utility.yul\":900:924   */\n  tag_63\n    /* \"#utility.yul\":918:923   */\n  dup3\n    /* \"#utility.yul\":900:924   */\n  tag_32\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":889:924   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:930   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":936:1074   */\ntag_34:\n    /* \"#utility.yul\":1017:1049   */\n  tag_65\n    /* \"#utility.yul\":1043:1048   */\n  dup2\n    /* \"#utility.yul\":1017:1049   */\n  tag_33\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1010:1015   */\n  dup2\n    /* \"#utility.yul\":1007:1050   */\n  eq\n    /* \"#utility.yul\":997:1068   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1064:1065   */\n  0x00\n    /* \"#utility.yul\":1061:1062   */\n  dup1\n    /* \"#utility.yul\":1054:1066   */\n  revert\n    /* \"#utility.yul\":997:1068   */\ntag_66:\n    /* \"#utility.yul\":936:1074   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1080:1239   */\ntag_35:\n    /* \"#utility.yul\":1145:1150   */\n  0x00\n    /* \"#utility.yul\":1176:1182   */\n  dup2\n    /* \"#utility.yul\":1170:1183   */\n  mload\n    /* \"#utility.yul\":1161:1183   */\n  swap1\n  pop\n    /* \"#utility.yul\":1192:1233   */\n  tag_68\n    /* \"#utility.yul\":1227:1232   */\n  dup2\n    /* \"#utility.yul\":1192:1233   */\n  tag_34\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1080:1239   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1245:1341   */\ntag_36:\n    /* \"#utility.yul\":1282:1289   */\n  0x00\n    /* \"#utility.yul\":1311:1335   */\n  tag_70\n    /* \"#utility.yul\":1329:1334   */\n  dup3\n    /* \"#utility.yul\":1311:1335   */\n  tag_32\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1300:1335   */\n  swap1\n  pop\n    /* \"#utility.yul\":1245:1341   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1347:1457   */\ntag_37:\n    /* \"#utility.yul\":1398:1405   */\n  0x00\n    /* \"#utility.yul\":1427:1451   */\n  tag_72\n    /* \"#utility.yul\":1445:1450   */\n  dup3\n    /* \"#utility.yul\":1427:1451   */\n  tag_36\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1416:1451   */\n  swap1\n  pop\n    /* \"#utility.yul\":1347:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1613   */\ntag_38:\n    /* \"#utility.yul\":1550:1588   */\n  tag_74\n    /* \"#utility.yul\":1582:1587   */\n  dup2\n    /* \"#utility.yul\":1550:1588   */\n  tag_37\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1543:1548   */\n  dup2\n    /* \"#utility.yul\":1540:1589   */\n  eq\n    /* \"#utility.yul\":1530:1607   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1603:1604   */\n  0x00\n    /* \"#utility.yul\":1600:1601   */\n  dup1\n    /* \"#utility.yul\":1593:1605   */\n  revert\n    /* \"#utility.yul\":1530:1607   */\ntag_75:\n    /* \"#utility.yul\":1463:1613   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1619:1790   */\ntag_39:\n    /* \"#utility.yul\":1690:1695   */\n  0x00\n    /* \"#utility.yul\":1721:1727   */\n  dup2\n    /* \"#utility.yul\":1715:1728   */\n  mload\n    /* \"#utility.yul\":1706:1728   */\n  swap1\n  pop\n    /* \"#utility.yul\":1737:1784   */\n  tag_77\n    /* \"#utility.yul\":1778:1783   */\n  dup2\n    /* \"#utility.yul\":1737:1784   */\n  tag_38\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1619:1790   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1796:2817   */\ntag_3:\n    /* \"#utility.yul\":1924:1930   */\n  0x00\n    /* \"#utility.yul\":1932:1938   */\n  dup1\n    /* \"#utility.yul\":1940:1946   */\n  0x00\n    /* \"#utility.yul\":1948:1954   */\n  dup1\n    /* \"#utility.yul\":1956:1962   */\n  0x00\n    /* \"#utility.yul\":2005:2008   */\n  0xa0\n    /* \"#utility.yul\":1993:2002   */\n  dup7\n    /* \"#utility.yul\":1984:1991   */\n  dup9\n    /* \"#utility.yul\":1980:2003   */\n  sub\n    /* \"#utility.yul\":1976:2009   */\n  slt\n    /* \"#utility.yul\":1973:2093   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2012:2091   */\n  tag_80\n  tag_27\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1973:2093   */\ntag_79:\n    /* \"#utility.yul\":2132:2133   */\n  0x00\n    /* \"#utility.yul\":2157:2221   */\n  tag_81\n    /* \"#utility.yul\":2213:2220   */\n  dup9\n    /* \"#utility.yul\":2204:2210   */\n  dup3\n    /* \"#utility.yul\":2193:2202   */\n  dup10\n    /* \"#utility.yul\":2189:2211   */\n  add\n    /* \"#utility.yul\":2157:2221   */\n  tag_31\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2147:2221   */\n  swap6\n  pop\n    /* \"#utility.yul\":2103:2231   */\n  pop\n    /* \"#utility.yul\":2270:2272   */\n  0x20\n    /* \"#utility.yul\":2296:2360   */\n  tag_82\n    /* \"#utility.yul\":2352:2359   */\n  dup9\n    /* \"#utility.yul\":2343:2349   */\n  dup3\n    /* \"#utility.yul\":2332:2341   */\n  dup10\n    /* \"#utility.yul\":2328:2350   */\n  add\n    /* \"#utility.yul\":2296:2360   */\n  tag_31\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2286:2360   */\n  swap5\n  pop\n    /* \"#utility.yul\":2241:2370   */\n  pop\n    /* \"#utility.yul\":2409:2411   */\n  0x40\n    /* \"#utility.yul\":2435:2499   */\n  tag_83\n    /* \"#utility.yul\":2491:2498   */\n  dup9\n    /* \"#utility.yul\":2482:2488   */\n  dup3\n    /* \"#utility.yul\":2471:2480   */\n  dup10\n    /* \"#utility.yul\":2467:2489   */\n  add\n    /* \"#utility.yul\":2435:2499   */\n  tag_31\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2425:2499   */\n  swap4\n  pop\n    /* \"#utility.yul\":2380:2509   */\n  pop\n    /* \"#utility.yul\":2548:2550   */\n  0x60\n    /* \"#utility.yul\":2574:2646   */\n  tag_84\n    /* \"#utility.yul\":2638:2645   */\n  dup9\n    /* \"#utility.yul\":2629:2635   */\n  dup3\n    /* \"#utility.yul\":2618:2627   */\n  dup10\n    /* \"#utility.yul\":2614:2636   */\n  add\n    /* \"#utility.yul\":2574:2646   */\n  tag_35\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2564:2646   */\n  swap3\n  pop\n    /* \"#utility.yul\":2519:2656   */\n  pop\n    /* \"#utility.yul\":2695:2698   */\n  0x80\n    /* \"#utility.yul\":2722:2800   */\n  tag_85\n    /* \"#utility.yul\":2792:2799   */\n  dup9\n    /* \"#utility.yul\":2783:2789   */\n  dup3\n    /* \"#utility.yul\":2772:2781   */\n  dup10\n    /* \"#utility.yul\":2768:2790   */\n  add\n    /* \"#utility.yul\":2722:2800   */\n  tag_39\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2712:2800   */\n  swap2\n  pop\n    /* \"#utility.yul\":2666:2810   */\n  pop\n    /* \"#utility.yul\":1796:2817   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2823:2992   */\ntag_40:\n    /* \"#utility.yul\":2907:2918   */\n  0x00\n    /* \"#utility.yul\":2941:2947   */\n  dup3\n    /* \"#utility.yul\":2936:2939   */\n  dup3\n    /* \"#utility.yul\":2929:2948   */\n  mstore\n    /* \"#utility.yul\":2981:2985   */\n  0x20\n    /* \"#utility.yul\":2976:2979   */\n  dup3\n    /* \"#utility.yul\":2972:2986   */\n  add\n    /* \"#utility.yul\":2957:2986   */\n  swap1\n  pop\n    /* \"#utility.yul\":2823:2992   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2998:3168   */\ntag_41:\n    /* \"#utility.yul\":3138:3160   */\n  0x43726f776473616c653a20726174652069732030000000000000000000000000\n    /* \"#utility.yul\":3134:3135   */\n  0x00\n    /* \"#utility.yul\":3126:3132   */\n  dup3\n    /* \"#utility.yul\":3122:3136   */\n  add\n    /* \"#utility.yul\":3115:3161   */\n  mstore\n    /* \"#utility.yul\":2998:3168   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3174:3540   */\ntag_42:\n    /* \"#utility.yul\":3316:3319   */\n  0x00\n    /* \"#utility.yul\":3337:3404   */\n  tag_89\n    /* \"#utility.yul\":3401:3403   */\n  0x14\n    /* \"#utility.yul\":3396:3399   */\n  dup4\n    /* \"#utility.yul\":3337:3404   */\n  tag_40\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3330:3404   */\n  swap2\n  pop\n    /* \"#utility.yul\":3413:3506   */\n  tag_90\n    /* \"#utility.yul\":3502:3505   */\n  dup3\n    /* \"#utility.yul\":3413:3506   */\n  tag_41\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3531:3533   */\n  0x20\n    /* \"#utility.yul\":3526:3529   */\n  dup3\n    /* \"#utility.yul\":3522:3534   */\n  add\n    /* \"#utility.yul\":3515:3534   */\n  swap1\n  pop\n    /* \"#utility.yul\":3174:3540   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3546:3965   */\ntag_11:\n    /* \"#utility.yul\":3712:3716   */\n  0x00\n    /* \"#utility.yul\":3750:3752   */\n  0x20\n    /* \"#utility.yul\":3739:3748   */\n  dup3\n    /* \"#utility.yul\":3735:3753   */\n  add\n    /* \"#utility.yul\":3727:3753   */\n  swap1\n  pop\n    /* \"#utility.yul\":3799:3808   */\n  dup2\n    /* \"#utility.yul\":3793:3797   */\n  dup2\n    /* \"#utility.yul\":3789:3809   */\n  sub\n    /* \"#utility.yul\":3785:3786   */\n  0x00\n    /* \"#utility.yul\":3774:3783   */\n  dup4\n    /* \"#utility.yul\":3770:3787   */\n  add\n    /* \"#utility.yul\":3763:3810   */\n  mstore\n    /* \"#utility.yul\":3827:3958   */\n  tag_92\n    /* \"#utility.yul\":3953:3957   */\n  dup2\n    /* \"#utility.yul\":3827:3958   */\n  tag_42\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3819:3958   */\n  swap1\n  pop\n    /* \"#utility.yul\":3546:3965   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3971:4195   */\ntag_43:\n    /* \"#utility.yul\":4111:4145   */\n  0x43726f776473616c653a2077616c6c657420697320746865207a65726f206164\n    /* \"#utility.yul\":4107:4108   */\n  0x00\n    /* \"#utility.yul\":4099:4105   */\n  dup3\n    /* \"#utility.yul\":4095:4109   */\n  add\n    /* \"#utility.yul\":4088:4146   */\n  mstore\n    /* \"#utility.yul\":4180:4187   */\n  0x6472657373000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4175:4177   */\n  0x20\n    /* \"#utility.yul\":4167:4173   */\n  dup3\n    /* \"#utility.yul\":4163:4178   */\n  add\n    /* \"#utility.yul\":4156:4188   */\n  mstore\n    /* \"#utility.yul\":3971:4195   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4201:4567   */\ntag_44:\n    /* \"#utility.yul\":4343:4346   */\n  0x00\n    /* \"#utility.yul\":4364:4431   */\n  tag_95\n    /* \"#utility.yul\":4428:4430   */\n  0x25\n    /* \"#utility.yul\":4423:4426   */\n  dup4\n    /* \"#utility.yul\":4364:4431   */\n  tag_40\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4357:4431   */\n  swap2\n  pop\n    /* \"#utility.yul\":4440:4533   */\n  tag_96\n    /* \"#utility.yul\":4529:4532   */\n  dup3\n    /* \"#utility.yul\":4440:4533   */\n  tag_43\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4558:4560   */\n  0x40\n    /* \"#utility.yul\":4553:4556   */\n  dup3\n    /* \"#utility.yul\":4549:4561   */\n  add\n    /* \"#utility.yul\":4542:4561   */\n  swap1\n  pop\n    /* \"#utility.yul\":4201:4567   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4573:4992   */\ntag_14:\n    /* \"#utility.yul\":4739:4743   */\n  0x00\n    /* \"#utility.yul\":4777:4779   */\n  0x20\n    /* \"#utility.yul\":4766:4775   */\n  dup3\n    /* \"#utility.yul\":4762:4780   */\n  add\n    /* \"#utility.yul\":4754:4780   */\n  swap1\n  pop\n    /* \"#utility.yul\":4826:4835   */\n  dup2\n    /* \"#utility.yul\":4820:4824   */\n  dup2\n    /* \"#utility.yul\":4816:4836   */\n  sub\n    /* \"#utility.yul\":4812:4813   */\n  0x00\n    /* \"#utility.yul\":4801:4810   */\n  dup4\n    /* \"#utility.yul\":4797:4814   */\n  add\n    /* \"#utility.yul\":4790:4837   */\n  mstore\n    /* \"#utility.yul\":4854:4985   */\n  tag_98\n    /* \"#utility.yul\":4980:4984   */\n  dup2\n    /* \"#utility.yul\":4854:4985   */\n  tag_44\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4846:4985   */\n  swap1\n  pop\n    /* \"#utility.yul\":4573:4992   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4998:5221   */\ntag_45:\n    /* \"#utility.yul\":5138:5172   */\n  0x43726f776473616c653a20746f6b656e20697320746865207a65726f20616464\n    /* \"#utility.yul\":5134:5135   */\n  0x00\n    /* \"#utility.yul\":5126:5132   */\n  dup3\n    /* \"#utility.yul\":5122:5136   */\n  add\n    /* \"#utility.yul\":5115:5173   */\n  mstore\n    /* \"#utility.yul\":5207:5213   */\n  0x7265737300000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5202:5204   */\n  0x20\n    /* \"#utility.yul\":5194:5200   */\n  dup3\n    /* \"#utility.yul\":5190:5205   */\n  add\n    /* \"#utility.yul\":5183:5214   */\n  mstore\n    /* \"#utility.yul\":4998:5221   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5227:5593   */\ntag_46:\n    /* \"#utility.yul\":5369:5372   */\n  0x00\n    /* \"#utility.yul\":5390:5457   */\n  tag_101\n    /* \"#utility.yul\":5454:5456   */\n  0x24\n    /* \"#utility.yul\":5449:5452   */\n  dup4\n    /* \"#utility.yul\":5390:5457   */\n  tag_40\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5383:5457   */\n  swap2\n  pop\n    /* \"#utility.yul\":5466:5559   */\n  tag_102\n    /* \"#utility.yul\":5555:5558   */\n  dup3\n    /* \"#utility.yul\":5466:5559   */\n  tag_45\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5584:5586   */\n  0x40\n    /* \"#utility.yul\":5579:5582   */\n  dup3\n    /* \"#utility.yul\":5575:5587   */\n  add\n    /* \"#utility.yul\":5568:5587   */\n  swap1\n  pop\n    /* \"#utility.yul\":5227:5593   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5599:6018   */\ntag_17:\n    /* \"#utility.yul\":5765:5769   */\n  0x00\n    /* \"#utility.yul\":5803:5805   */\n  0x20\n    /* \"#utility.yul\":5792:5801   */\n  dup3\n    /* \"#utility.yul\":5788:5806   */\n  add\n    /* \"#utility.yul\":5780:5806   */\n  swap1\n  pop\n    /* \"#utility.yul\":5852:5861   */\n  dup2\n    /* \"#utility.yul\":5846:5850   */\n  dup2\n    /* \"#utility.yul\":5842:5862   */\n  sub\n    /* \"#utility.yul\":5838:5839   */\n  0x00\n    /* \"#utility.yul\":5827:5836   */\n  dup4\n    /* \"#utility.yul\":5823:5840   */\n  add\n    /* \"#utility.yul\":5816:5863   */\n  mstore\n    /* \"#utility.yul\":5880:6011   */\n  tag_104\n    /* \"#utility.yul\":6006:6010   */\n  dup2\n    /* \"#utility.yul\":5880:6011   */\n  tag_46\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5872:6011   */\n  swap1\n  pop\n    /* \"#utility.yul\":5599:6018   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6024:6262   */\ntag_47:\n    /* \"#utility.yul\":6164:6198   */\n  0x54696d656443726f776473616c653a206f70656e696e672074696d6520697320\n    /* \"#utility.yul\":6160:6161   */\n  0x00\n    /* \"#utility.yul\":6152:6158   */\n  dup3\n    /* \"#utility.yul\":6148:6162   */\n  add\n    /* \"#utility.yul\":6141:6199   */\n  mstore\n    /* \"#utility.yul\":6233:6254   */\n  0x6265666f72652063757272656e742074696d6500000000000000000000000000\n    /* \"#utility.yul\":6228:6230   */\n  0x20\n    /* \"#utility.yul\":6220:6226   */\n  dup3\n    /* \"#utility.yul\":6216:6231   */\n  add\n    /* \"#utility.yul\":6209:6255   */\n  mstore\n    /* \"#utility.yul\":6024:6262   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6268:6634   */\ntag_48:\n    /* \"#utility.yul\":6410:6413   */\n  0x00\n    /* \"#utility.yul\":6431:6498   */\n  tag_107\n    /* \"#utility.yul\":6495:6497   */\n  0x33\n    /* \"#utility.yul\":6490:6493   */\n  dup4\n    /* \"#utility.yul\":6431:6498   */\n  tag_40\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":6424:6498   */\n  swap2\n  pop\n    /* \"#utility.yul\":6507:6600   */\n  tag_108\n    /* \"#utility.yul\":6596:6599   */\n  dup3\n    /* \"#utility.yul\":6507:6600   */\n  tag_47\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":6625:6627   */\n  0x40\n    /* \"#utility.yul\":6620:6623   */\n  dup3\n    /* \"#utility.yul\":6616:6628   */\n  add\n    /* \"#utility.yul\":6609:6628   */\n  swap1\n  pop\n    /* \"#utility.yul\":6268:6634   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6640:7059   */\ntag_21:\n    /* \"#utility.yul\":6806:6810   */\n  0x00\n    /* \"#utility.yul\":6844:6846   */\n  0x20\n    /* \"#utility.yul\":6833:6842   */\n  dup3\n    /* \"#utility.yul\":6829:6847   */\n  add\n    /* \"#utility.yul\":6821:6847   */\n  swap1\n  pop\n    /* \"#utility.yul\":6893:6902   */\n  dup2\n    /* \"#utility.yul\":6887:6891   */\n  dup2\n    /* \"#utility.yul\":6883:6903   */\n  sub\n    /* \"#utility.yul\":6879:6880   */\n  0x00\n    /* \"#utility.yul\":6868:6877   */\n  dup4\n    /* \"#utility.yul\":6864:6881   */\n  add\n    /* \"#utility.yul\":6857:6904   */\n  mstore\n    /* \"#utility.yul\":6921:7052   */\n  tag_110\n    /* \"#utility.yul\":7047:7051   */\n  dup2\n    /* \"#utility.yul\":6921:7052   */\n  tag_48\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":6913:7052   */\n  swap1\n  pop\n    /* \"#utility.yul\":6640:7059   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7065:7307   */\ntag_49:\n    /* \"#utility.yul\":7205:7239   */\n  0x54696d656443726f776473616c653a206f70656e696e672074696d6520697320\n    /* \"#utility.yul\":7201:7202   */\n  0x00\n    /* \"#utility.yul\":7193:7199   */\n  dup3\n    /* \"#utility.yul\":7189:7203   */\n  add\n    /* \"#utility.yul\":7182:7240   */\n  mstore\n    /* \"#utility.yul\":7274:7299   */\n  0x6e6f74206265666f726520636c6f73696e672074696d65000000000000000000\n    /* \"#utility.yul\":7269:7271   */\n  0x20\n    /* \"#utility.yul\":7261:7267   */\n  dup3\n    /* \"#utility.yul\":7257:7272   */\n  add\n    /* \"#utility.yul\":7250:7300   */\n  mstore\n    /* \"#utility.yul\":7065:7307   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7313:7679   */\ntag_50:\n    /* \"#utility.yul\":7455:7458   */\n  0x00\n    /* \"#utility.yul\":7476:7543   */\n  tag_113\n    /* \"#utility.yul\":7540:7542   */\n  0x37\n    /* \"#utility.yul\":7535:7538   */\n  dup4\n    /* \"#utility.yul\":7476:7543   */\n  tag_40\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":7469:7543   */\n  swap2\n  pop\n    /* \"#utility.yul\":7552:7645   */\n  tag_114\n    /* \"#utility.yul\":7641:7644   */\n  dup3\n    /* \"#utility.yul\":7552:7645   */\n  tag_49\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":7670:7672   */\n  0x40\n    /* \"#utility.yul\":7665:7668   */\n  dup3\n    /* \"#utility.yul\":7661:7673   */\n  add\n    /* \"#utility.yul\":7654:7673   */\n  swap1\n  pop\n    /* \"#utility.yul\":7313:7679   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7685:8104   */\ntag_24:\n    /* \"#utility.yul\":7851:7855   */\n  0x00\n    /* \"#utility.yul\":7889:7891   */\n  0x20\n    /* \"#utility.yul\":7878:7887   */\n  dup3\n    /* \"#utility.yul\":7874:7892   */\n  add\n    /* \"#utility.yul\":7866:7892   */\n  swap1\n  pop\n    /* \"#utility.yul\":7938:7947   */\n  dup2\n    /* \"#utility.yul\":7932:7936   */\n  dup2\n    /* \"#utility.yul\":7928:7948   */\n  sub\n    /* \"#utility.yul\":7924:7925   */\n  0x00\n    /* \"#utility.yul\":7913:7922   */\n  dup4\n    /* \"#utility.yul\":7909:7926   */\n  add\n    /* \"#utility.yul\":7902:7949   */\n  mstore\n    /* \"#utility.yul\":7966:8097   */\n  tag_116\n    /* \"#utility.yul\":8092:8096   */\n  dup2\n    /* \"#utility.yul\":7966:8097   */\n  tag_50\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":7958:8097   */\n  swap1\n  pop\n    /* \"#utility.yul\":7685:8104   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"crowdsale/validation/timedCrowdsale.sol\":320:3473  contract TimedCrowdsale is Crowdsale {... */\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"crowdsale/validation/timedCrowdsale.sol\":320:3473  contract TimedCrowdsale is Crowdsale {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4b6753bc\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x4b6753bc\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x521eb273\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb7a8807c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xec8ac4d8\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x1515bc2b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2c4e722e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4042b66f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x47535d7b\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"crowdsale/crowdsale.sol\":3351:3374  buyTokens(_msgSender()) */\n      tag_15\n        /* \"crowdsale/crowdsale.sol\":3361:3373  _msgSender() */\n      tag_16\n        /* \"crowdsale/crowdsale.sol\":3361:3371  _msgSender */\n      tag_17\n        /* \"crowdsale/crowdsale.sol\":3361:3373  _msgSender() */\n      jump\t// in\n    tag_16:\n        /* \"crowdsale/crowdsale.sol\":3351:3360  buyTokens */\n      tag_18\n        /* \"crowdsale/crowdsale.sol\":3351:3374  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_15:\n        /* \"crowdsale/validation/timedCrowdsale.sol\":320:3473  contract TimedCrowdsale is Crowdsale {... */\n      stop\n    tag_2:\n        /* \"crowdsale/crowdsale.sol\":3270:3293  buyTokens(_msgSender()) */\n      tag_21\n        /* \"crowdsale/crowdsale.sol\":3280:3292  _msgSender() */\n      tag_22\n        /* \"crowdsale/crowdsale.sol\":3280:3290  _msgSender */\n      tag_17\n        /* \"crowdsale/crowdsale.sol\":3280:3292  _msgSender() */\n      jump\t// in\n    tag_22:\n        /* \"crowdsale/crowdsale.sol\":3270:3279  buyTokens */\n      tag_18\n        /* \"crowdsale/crowdsale.sol\":3270:3293  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_21:\n        /* \"crowdsale/validation/timedCrowdsale.sol\":320:3473  contract TimedCrowdsale is Crowdsale {... */\n      stop\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2417:2576  function hasClosed() public view returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2055:2247  function isOpen() public view returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/validation/timedCrowdsale.sol\":1874:1965  function closingTime() public view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/validation/timedCrowdsale.sol\":1713:1804  function openingTime() public view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_18\n      jump\t// in\n    tag_54:\n      stop\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_64\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_65\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_64:\n        /* \"crowdsale/crowdsale.sol\":4368:4385  uint256 weiAmount */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4388:4397  msg.value */\n      callvalue\n        /* \"crowdsale/crowdsale.sol\":4368:4397  uint256 weiAmount = msg.value */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":4408:4452  _preValidatePurchase(beneficiary, weiAmount) */\n      tag_67\n        /* \"crowdsale/crowdsale.sol\":4429:4440  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4442:4451  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4408:4428  _preValidatePurchase */\n      tag_68\n        /* \"crowdsale/crowdsale.sol\":4408:4452  _preValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_67:\n        /* \"crowdsale/crowdsale.sol\":4514:4528  uint256 tokens */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4531:4557  _getTokenAmount(weiAmount) */\n      tag_69\n        /* \"crowdsale/crowdsale.sol\":4547:4556  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4531:4546  _getTokenAmount */\n      tag_70\n        /* \"crowdsale/crowdsale.sol\":4531:4557  _getTokenAmount(weiAmount) */\n      jump\t// in\n    tag_69:\n        /* \"crowdsale/crowdsale.sol\":4514:4557  uint256 tokens = _getTokenAmount(weiAmount) */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":4608:4633  _weiRaised.add(weiAmount) */\n      tag_71\n        /* \"crowdsale/crowdsale.sol\":4623:4632  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4608:4618  _weiRaised */\n      sload(0x04)\n        /* \"crowdsale/crowdsale.sol\":4608:4622  _weiRaised.add */\n      tag_72\n      swap1\n        /* \"crowdsale/crowdsale.sol\":4608:4633  _weiRaised.add(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"crowdsale/crowdsale.sol\":4595:4605  _weiRaised */\n      0x04\n        /* \"crowdsale/crowdsale.sol\":4595:4633  _weiRaised = _weiRaised.add(weiAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"crowdsale/crowdsale.sol\":4646:4683  _processPurchase(beneficiary, tokens) */\n      tag_73\n        /* \"crowdsale/crowdsale.sol\":4663:4674  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4676:4682  tokens */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4646:4662  _processPurchase */\n      tag_74\n        /* \"crowdsale/crowdsale.sol\":4646:4683  _processPurchase(beneficiary, tokens) */\n      jump\t// in\n    tag_73:\n        /* \"crowdsale/crowdsale.sol\":4729:4740  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":4715:4727  _msgSender() */\n      tag_75\n        /* \"crowdsale/crowdsale.sol\":4715:4725  _msgSender */\n      tag_17\n        /* \"crowdsale/crowdsale.sol\":4715:4727  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b\n        /* \"crowdsale/crowdsale.sol\":4742:4751  weiAmount */\n      dup5\n        /* \"crowdsale/crowdsale.sol\":4753:4759  tokens */\n      dup5\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      mload(0x40)\n      tag_76\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"crowdsale/crowdsale.sol\":4773:4819  _updatePurchasingState(beneficiary, weiAmount) */\n      tag_78\n        /* \"crowdsale/crowdsale.sol\":4796:4807  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4809:4818  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4773:4795  _updatePurchasingState */\n      tag_79\n        /* \"crowdsale/crowdsale.sol\":4773:4819  _updatePurchasingState(beneficiary, weiAmount) */\n      jump\t// in\n    tag_78:\n        /* \"crowdsale/crowdsale.sol\":4832:4847  _forwardFunds() */\n      tag_80\n        /* \"crowdsale/crowdsale.sol\":4832:4845  _forwardFunds */\n      tag_81\n        /* \"crowdsale/crowdsale.sol\":4832:4847  _forwardFunds() */\n      jump\t// in\n    tag_80:\n        /* \"crowdsale/crowdsale.sol\":4858:4903  _postValidatePurchase(beneficiary, weiAmount) */\n      tag_82\n        /* \"crowdsale/crowdsale.sol\":4880:4891  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4893:4902  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4858:4879  _postValidatePurchase */\n      tag_83\n        /* \"crowdsale/crowdsale.sol\":4858:4903  _postValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_82:\n        /* \"crowdsale/crowdsale.sol\":4357:4911  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_84\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_85\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_84:\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n      pop\n      jump\t// out\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2417:2576  function hasClosed() public view returns (bool) {... */\n    tag_25:\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2459:2463  bool */\n      0x00\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2556:2568  _closingTime */\n      sload(0x06)\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2538:2553  block.timestamp */\n      timestamp\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2538:2568  block.timestamp > _closingTime */\n      gt\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2531:2568  return block.timestamp > _closingTime */\n      swap1\n      pop\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2417:2576  function hasClosed() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n    tag_30:\n        /* \"crowdsale/crowdsale.sol\":3829:3836  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3856:3861  _rate */\n      sload(0x03)\n        /* \"crowdsale/crowdsale.sol\":3849:3861  return _rate */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n    tag_35:\n        /* \"crowdsale/crowdsale.sol\":3979:3986  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4006:4016  _weiRaised */\n      sload(0x04)\n        /* \"crowdsale/crowdsale.sol\":3999:4016  return _weiRaised */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2055:2247  function isOpen() public view returns (bool) {... */\n    tag_39:\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2094:2098  bool */\n      0x00\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2192:2204  _openingTime */\n      sload(0x05)\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2173:2188  block.timestamp */\n      timestamp\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2173:2204  block.timestamp >= _openingTime */\n      lt\n      iszero\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2173:2239  block.timestamp >= _openingTime && block.timestamp <= _closingTime */\n      dup1\n      iszero\n      tag_90\n      jumpi\n      pop\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2227:2239  _closingTime */\n      sload(0x06)\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2208:2223  block.timestamp */\n      timestamp\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2208:2239  block.timestamp <= _closingTime */\n      gt\n      iszero\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2173:2239  block.timestamp >= _openingTime && block.timestamp <= _closingTime */\n    tag_90:\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2166:2239  return block.timestamp >= _openingTime && block.timestamp <= _closingTime */\n      swap1\n      pop\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2055:2247  function isOpen() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/validation/timedCrowdsale.sol\":1874:1965  function closingTime() public view returns (uint256) {... */\n    tag_43:\n        /* \"crowdsale/validation/timedCrowdsale.sol\":1918:1925  uint256 */\n      0x00\n        /* \"crowdsale/validation/timedCrowdsale.sol\":1945:1957  _closingTime */\n      sload(0x06)\n        /* \"crowdsale/validation/timedCrowdsale.sol\":1938:1957  return _closingTime */\n      swap1\n      pop\n        /* \"crowdsale/validation/timedCrowdsale.sol\":1874:1965  function closingTime() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n    tag_47:\n        /* \"crowdsale/crowdsale.sol\":3644:3659  address payable */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3679:3686  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":3672:3686  return _wallet */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/validation/timedCrowdsale.sol\":1713:1804  function openingTime() public view returns (uint256) {... */\n    tag_52:\n        /* \"crowdsale/validation/timedCrowdsale.sol\":1757:1764  uint256 */\n      0x00\n        /* \"crowdsale/validation/timedCrowdsale.sol\":1784:1796  _openingTime */\n      sload(0x05)\n        /* \"crowdsale/validation/timedCrowdsale.sol\":1777:1796  return _openingTime */\n      swap1\n      pop\n        /* \"crowdsale/validation/timedCrowdsale.sol\":1713:1804  function openingTime() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n    tag_59:\n        /* \"crowdsale/crowdsale.sol\":3484:3490  IERC20 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3510:3516  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":3503:3516  return _token */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2776:2952  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal override onlyWhileOpen view {... */\n    tag_68:\n        /* \"crowdsale/validation/timedCrowdsale.sol\":821:829  isOpen() */\n      tag_100\n        /* \"crowdsale/validation/timedCrowdsale.sol\":821:827  isOpen */\n      tag_39\n        /* \"crowdsale/validation/timedCrowdsale.sol\":821:829  isOpen() */\n      jump\t// in\n    tag_100:\n        /* \"crowdsale/validation/timedCrowdsale.sol\":813:858  require(isOpen(), \"TimedCrowdsale: not open\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2894:2944  super._preValidatePurchase(beneficiary, weiAmount) */\n      tag_105\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2921:2932  beneficiary */\n      dup3\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2934:2943  weiAmount */\n      dup3\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2894:2920  super._preValidatePurchase */\n      tag_106\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2894:2944  super._preValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_105:\n        /* \"crowdsale/validation/timedCrowdsale.sol\":2776:2952  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal override onlyWhileOpen view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7856:7986  function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {... */\n    tag_70:\n        /* \"crowdsale/crowdsale.sol\":7931:7938  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":7958:7978  weiAmount.mul(_rate) */\n      tag_108\n        /* \"crowdsale/crowdsale.sol\":7972:7977  _rate */\n      sload(0x03)\n        /* \"crowdsale/crowdsale.sol\":7958:7967  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":7958:7971  weiAmount.mul */\n      tag_109\n      swap1\n        /* \"crowdsale/crowdsale.sol\":7958:7978  weiAmount.mul(_rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"crowdsale/crowdsale.sol\":7951:7978  return weiAmount.mul(_rate) */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":7856:7986  function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7023:7167  function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {... */\n    tag_74:\n        /* \"crowdsale/crowdsale.sol\":7119:7159  _deliverTokens(beneficiary, tokenAmount) */\n      tag_114\n        /* \"crowdsale/crowdsale.sol\":7134:7145  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":7147:7158  tokenAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":7119:7133  _deliverTokens */\n      tag_115\n        /* \"crowdsale/crowdsale.sol\":7119:7159  _deliverTokens(beneficiary, tokenAmount) */\n      jump\t// in\n    tag_114:\n        /* \"crowdsale/crowdsale.sol\":7023:7167  function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7445:7600  function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal virtual {... */\n    tag_79:\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":8078:8166  function _forwardFunds() internal virtual {... */\n    tag_81:\n        /* \"crowdsale/crowdsale.sol\":8131:8138  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":8131:8147  _wallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":8131:8158  _wallet.transfer(msg.value) */\n      0x08fc\n        /* \"crowdsale/crowdsale.sol\":8148:8157  msg.value */\n      callvalue\n        /* \"crowdsale/crowdsale.sol\":8131:8158  _wallet.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n        /* \"crowdsale/crowdsale.sol\":8078:8166  function _forwardFunds() internal virtual {... */\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":6155:6314  function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n    tag_83:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":5464:5852  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n    tag_106:\n        /* \"crowdsale/crowdsale.sol\":5598:5599  0 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":5575:5600  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":5575:5586  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":5575:5600  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"crowdsale/crowdsale.sol\":5567:5647  require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"crowdsale/crowdsale.sol\":5679:5680  0 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":5666:5675  weiAmount */\n      dup2\n        /* \"crowdsale/crowdsale.sol\":5666:5680  weiAmount != 0 */\n      sub\n        /* \"crowdsale/crowdsale.sol\":5658:5710  require(weiAmount != 0, \"Crowdsale: weiAmount is 0\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"crowdsale/crowdsale.sol\":5464:5852  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":6602:6749  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {... */\n    tag_115:\n        /* \"crowdsale/crowdsale.sol\":6696:6741  _token.safeTransfer(beneficiary, tokenAmount) */\n      tag_133\n        /* \"crowdsale/crowdsale.sol\":6716:6727  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":6729:6740  tokenAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":6696:6702  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":6696:6715  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_134\n      swap1\n        /* \"crowdsale/crowdsale.sol\":6696:6741  _token.safeTransfer(beneficiary, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"crowdsale/crowdsale.sol\":6602:6749  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1043:1048  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1073:1096  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1098:1100  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1102:1107  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1108  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_137\n      swap3\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1042  _callOptionalReturn */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5638  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5673  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5649:5654  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5668  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_142\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5710  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5749:5750  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5738  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5745  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5750  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_143\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5765:5775  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5754:5784  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5720:5831  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5266:5838  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4241:4253  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_150\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4294:4300  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4302:4306  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4308:4309  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4311:4323  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4293  functionCallWithValue */\n      tag_151\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4265:4324  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n    tag_151:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5342  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5387:5392  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5383  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5392  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5446:5458  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5460:5483  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5493  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5498  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5506:5511  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5513:5517  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5518  target.call{value: value}(data) */\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_160\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_159)\n    tag_160:\n      0x60\n      swap2\n      pop\n    tag_159:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5445:5518  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_161\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5562:5568  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5570:5577  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5579:5589  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5591:5603  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5561  verifyCallResultFromTarget */\n      tag_162\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5528:5604  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7916  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      tag_166\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8132:8138  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8131  isContract */\n      tag_167\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8208:8218  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8201:8218  return returndata */\n      swap1\n      pop\n      jump(tag_163)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_172\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8256  _revert */\n      tag_173\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_163:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9000:9001  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8990  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8997  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:97   */\n    tag_180:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_181:\n        /* \"#utility.yul\":184:205   */\n      tag_227\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_180\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_27:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_229\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_181\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:511   */\n    tag_182:\n        /* \"#utility.yul\":471:478   */\n      0x00\n        /* \"#utility.yul\":500:505   */\n      dup2\n        /* \"#utility.yul\":489:505   */\n      swap1\n      pop\n        /* \"#utility.yul\":434:511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":517:635   */\n    tag_183:\n        /* \"#utility.yul\":604:628   */\n      tag_232\n        /* \"#utility.yul\":622:627   */\n      dup2\n        /* \"#utility.yul\":604:628   */\n      tag_182\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":599:602   */\n      dup3\n        /* \"#utility.yul\":592:629   */\n      mstore\n        /* \"#utility.yul\":517:635   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":641:863   */\n    tag_32:\n        /* \"#utility.yul\":734:738   */\n      0x00\n        /* \"#utility.yul\":772:774   */\n      0x20\n        /* \"#utility.yul\":761:770   */\n      dup3\n        /* \"#utility.yul\":757:775   */\n      add\n        /* \"#utility.yul\":749:775   */\n      swap1\n      pop\n        /* \"#utility.yul\":785:856   */\n      tag_234\n        /* \"#utility.yul\":853:854   */\n      0x00\n        /* \"#utility.yul\":842:851   */\n      dup4\n        /* \"#utility.yul\":838:855   */\n      add\n        /* \"#utility.yul\":829:835   */\n      dup5\n        /* \"#utility.yul\":785:856   */\n      tag_183\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":641:863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":869:995   */\n    tag_184:\n        /* \"#utility.yul\":906:913   */\n      0x00\n        /* \"#utility.yul\":946:988   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":939:944   */\n      dup3\n        /* \"#utility.yul\":935:989   */\n      and\n        /* \"#utility.yul\":924:989   */\n      swap1\n      pop\n        /* \"#utility.yul\":869:995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1001:1105   */\n    tag_185:\n        /* \"#utility.yul\":1046:1053   */\n      0x00\n        /* \"#utility.yul\":1075:1099   */\n      tag_237\n        /* \"#utility.yul\":1093:1098   */\n      dup3\n        /* \"#utility.yul\":1075:1099   */\n      tag_184\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1064:1099   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1111:1253   */\n    tag_186:\n        /* \"#utility.yul\":1214:1246   */\n      tag_239\n        /* \"#utility.yul\":1240:1245   */\n      dup2\n        /* \"#utility.yul\":1214:1246   */\n      tag_185\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1209:1212   */\n      dup3\n        /* \"#utility.yul\":1202:1247   */\n      mstore\n        /* \"#utility.yul\":1111:1253   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1513   */\n    tag_49:\n        /* \"#utility.yul\":1368:1372   */\n      0x00\n        /* \"#utility.yul\":1406:1408   */\n      0x20\n        /* \"#utility.yul\":1395:1404   */\n      dup3\n        /* \"#utility.yul\":1391:1409   */\n      add\n        /* \"#utility.yul\":1383:1409   */\n      swap1\n      pop\n        /* \"#utility.yul\":1419:1506   */\n      tag_241\n        /* \"#utility.yul\":1503:1504   */\n      0x00\n        /* \"#utility.yul\":1492:1501   */\n      dup4\n        /* \"#utility.yul\":1488:1505   */\n      add\n        /* \"#utility.yul\":1479:1485   */\n      dup5\n        /* \"#utility.yul\":1419:1506   */\n      tag_186\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1259:1513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1600:1717   */\n    tag_188:\n        /* \"#utility.yul\":1709:1710   */\n      0x00\n        /* \"#utility.yul\":1706:1707   */\n      dup1\n        /* \"#utility.yul\":1699:1711   */\n      revert\n        /* \"#utility.yul\":1846:1942   */\n    tag_190:\n        /* \"#utility.yul\":1883:1890   */\n      0x00\n        /* \"#utility.yul\":1912:1936   */\n      tag_246\n        /* \"#utility.yul\":1930:1935   */\n      dup3\n        /* \"#utility.yul\":1912:1936   */\n      tag_184\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1901:1936   */\n      swap1\n      pop\n        /* \"#utility.yul\":1846:1942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1948:2070   */\n    tag_191:\n        /* \"#utility.yul\":2021:2045   */\n      tag_248\n        /* \"#utility.yul\":2039:2044   */\n      dup2\n        /* \"#utility.yul\":2021:2045   */\n      tag_190\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2014:2019   */\n      dup2\n        /* \"#utility.yul\":2011:2046   */\n      eq\n        /* \"#utility.yul\":2001:2064   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":2060:2061   */\n      0x00\n        /* \"#utility.yul\":2057:2058   */\n      dup1\n        /* \"#utility.yul\":2050:2062   */\n      revert\n        /* \"#utility.yul\":2001:2064   */\n    tag_249:\n        /* \"#utility.yul\":1948:2070   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2215   */\n    tag_192:\n        /* \"#utility.yul\":2122:2127   */\n      0x00\n        /* \"#utility.yul\":2160:2166   */\n      dup2\n        /* \"#utility.yul\":2147:2167   */\n      calldataload\n        /* \"#utility.yul\":2138:2167   */\n      swap1\n      pop\n        /* \"#utility.yul\":2176:2209   */\n      tag_251\n        /* \"#utility.yul\":2203:2208   */\n      dup2\n        /* \"#utility.yul\":2176:2209   */\n      tag_191\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2076:2215   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2221:2550   */\n    tag_56:\n        /* \"#utility.yul\":2280:2286   */\n      0x00\n        /* \"#utility.yul\":2329:2331   */\n      0x20\n        /* \"#utility.yul\":2317:2326   */\n      dup3\n        /* \"#utility.yul\":2308:2315   */\n      dup5\n        /* \"#utility.yul\":2304:2327   */\n      sub\n        /* \"#utility.yul\":2300:2332   */\n      slt\n        /* \"#utility.yul\":2297:2416   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2335:2414   */\n      tag_254\n      tag_188\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2297:2416   */\n    tag_253:\n        /* \"#utility.yul\":2455:2456   */\n      0x00\n        /* \"#utility.yul\":2480:2533   */\n      tag_255\n        /* \"#utility.yul\":2525:2532   */\n      dup5\n        /* \"#utility.yul\":2516:2522   */\n      dup3\n        /* \"#utility.yul\":2505:2514   */\n      dup6\n        /* \"#utility.yul\":2501:2523   */\n      add\n        /* \"#utility.yul\":2480:2533   */\n      tag_192\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2470:2533   */\n      swap2\n      pop\n        /* \"#utility.yul\":2426:2543   */\n      pop\n        /* \"#utility.yul\":2221:2550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2556:2616   */\n    tag_193:\n        /* \"#utility.yul\":2584:2587   */\n      0x00\n        /* \"#utility.yul\":2605:2610   */\n      dup2\n        /* \"#utility.yul\":2598:2610   */\n      swap1\n      pop\n        /* \"#utility.yul\":2556:2616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2622:2764   */\n    tag_194:\n        /* \"#utility.yul\":2672:2681   */\n      0x00\n        /* \"#utility.yul\":2705:2758   */\n      tag_258\n        /* \"#utility.yul\":2723:2757   */\n      tag_259\n        /* \"#utility.yul\":2732:2756   */\n      tag_260\n        /* \"#utility.yul\":2750:2755   */\n      dup5\n        /* \"#utility.yul\":2732:2756   */\n      tag_184\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2723:2757   */\n      tag_193\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2705:2758   */\n      tag_184\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2692:2758   */\n      swap1\n      pop\n        /* \"#utility.yul\":2622:2764   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2770:2896   */\n    tag_195:\n        /* \"#utility.yul\":2820:2829   */\n      0x00\n        /* \"#utility.yul\":2853:2890   */\n      tag_262\n        /* \"#utility.yul\":2884:2889   */\n      dup3\n        /* \"#utility.yul\":2853:2890   */\n      tag_194\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2840:2890   */\n      swap1\n      pop\n        /* \"#utility.yul\":2770:2896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2902:3042   */\n    tag_196:\n        /* \"#utility.yul\":2966:2975   */\n      0x00\n        /* \"#utility.yul\":2999:3036   */\n      tag_264\n        /* \"#utility.yul\":3030:3035   */\n      dup3\n        /* \"#utility.yul\":2999:3036   */\n      tag_195\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2986:3036   */\n      swap1\n      pop\n        /* \"#utility.yul\":2902:3042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3048:3207   */\n    tag_197:\n        /* \"#utility.yul\":3149:3200   */\n      tag_266\n        /* \"#utility.yul\":3194:3199   */\n      dup2\n        /* \"#utility.yul\":3149:3200   */\n      tag_196\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3144:3147   */\n      dup3\n        /* \"#utility.yul\":3137:3201   */\n      mstore\n        /* \"#utility.yul\":3048:3207   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3463   */\n    tag_61:\n        /* \"#utility.yul\":3320:3324   */\n      0x00\n        /* \"#utility.yul\":3358:3360   */\n      0x20\n        /* \"#utility.yul\":3347:3356   */\n      dup3\n        /* \"#utility.yul\":3343:3361   */\n      add\n        /* \"#utility.yul\":3335:3361   */\n      swap1\n      pop\n        /* \"#utility.yul\":3371:3456   */\n      tag_268\n        /* \"#utility.yul\":3453:3454   */\n      0x00\n        /* \"#utility.yul\":3442:3451   */\n      dup4\n        /* \"#utility.yul\":3438:3455   */\n      add\n        /* \"#utility.yul\":3429:3435   */\n      dup5\n        /* \"#utility.yul\":3371:3456   */\n      tag_197\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3213:3463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3469:3801   */\n    tag_77:\n        /* \"#utility.yul\":3590:3594   */\n      0x00\n        /* \"#utility.yul\":3628:3630   */\n      0x40\n        /* \"#utility.yul\":3617:3626   */\n      dup3\n        /* \"#utility.yul\":3613:3631   */\n      add\n        /* \"#utility.yul\":3605:3631   */\n      swap1\n      pop\n        /* \"#utility.yul\":3641:3712   */\n      tag_270\n        /* \"#utility.yul\":3709:3710   */\n      0x00\n        /* \"#utility.yul\":3698:3707   */\n      dup4\n        /* \"#utility.yul\":3694:3711   */\n      add\n        /* \"#utility.yul\":3685:3691   */\n      dup6\n        /* \"#utility.yul\":3641:3712   */\n      tag_183\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3722:3794   */\n      tag_271\n        /* \"#utility.yul\":3790:3792   */\n      0x20\n        /* \"#utility.yul\":3779:3788   */\n      dup4\n        /* \"#utility.yul\":3775:3793   */\n      add\n        /* \"#utility.yul\":3766:3772   */\n      dup5\n        /* \"#utility.yul\":3722:3794   */\n      tag_183\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3469:3801   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3807:3976   */\n    tag_198:\n        /* \"#utility.yul\":3891:3902   */\n      0x00\n        /* \"#utility.yul\":3925:3931   */\n      dup3\n        /* \"#utility.yul\":3920:3923   */\n      dup3\n        /* \"#utility.yul\":3913:3932   */\n      mstore\n        /* \"#utility.yul\":3965:3969   */\n      0x20\n        /* \"#utility.yul\":3960:3963   */\n      dup3\n        /* \"#utility.yul\":3956:3970   */\n      add\n        /* \"#utility.yul\":3941:3970   */\n      swap1\n      pop\n        /* \"#utility.yul\":3807:3976   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3982:4163   */\n    tag_199:\n        /* \"#utility.yul\":4122:4155   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4118:4119   */\n      0x00\n        /* \"#utility.yul\":4110:4116   */\n      dup3\n        /* \"#utility.yul\":4106:4120   */\n      add\n        /* \"#utility.yul\":4099:4156   */\n      mstore\n        /* \"#utility.yul\":3982:4163   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4169:4535   */\n    tag_200:\n        /* \"#utility.yul\":4311:4314   */\n      0x00\n        /* \"#utility.yul\":4332:4399   */\n      tag_275\n        /* \"#utility.yul\":4396:4398   */\n      0x1f\n        /* \"#utility.yul\":4391:4394   */\n      dup4\n        /* \"#utility.yul\":4332:4399   */\n      tag_198\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4325:4399   */\n      swap2\n      pop\n        /* \"#utility.yul\":4408:4501   */\n      tag_276\n        /* \"#utility.yul\":4497:4500   */\n      dup3\n        /* \"#utility.yul\":4408:4501   */\n      tag_199\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4526:4528   */\n      0x20\n        /* \"#utility.yul\":4521:4524   */\n      dup3\n        /* \"#utility.yul\":4517:4529   */\n      add\n        /* \"#utility.yul\":4510:4529   */\n      swap1\n      pop\n        /* \"#utility.yul\":4169:4535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4541:4960   */\n    tag_98:\n        /* \"#utility.yul\":4707:4711   */\n      0x00\n        /* \"#utility.yul\":4745:4747   */\n      0x20\n        /* \"#utility.yul\":4734:4743   */\n      dup3\n        /* \"#utility.yul\":4730:4748   */\n      add\n        /* \"#utility.yul\":4722:4748   */\n      swap1\n      pop\n        /* \"#utility.yul\":4794:4803   */\n      dup2\n        /* \"#utility.yul\":4788:4792   */\n      dup2\n        /* \"#utility.yul\":4784:4804   */\n      sub\n        /* \"#utility.yul\":4780:4781   */\n      0x00\n        /* \"#utility.yul\":4769:4778   */\n      dup4\n        /* \"#utility.yul\":4765:4782   */\n      add\n        /* \"#utility.yul\":4758:4805   */\n      mstore\n        /* \"#utility.yul\":4822:4953   */\n      tag_278\n        /* \"#utility.yul\":4948:4952   */\n      dup2\n        /* \"#utility.yul\":4822:4953   */\n      tag_200\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4814:4953   */\n      swap1\n      pop\n        /* \"#utility.yul\":4541:4960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4966:5140   */\n    tag_201:\n        /* \"#utility.yul\":5106:5132   */\n      0x54696d656443726f776473616c653a206e6f74206f70656e0000000000000000\n        /* \"#utility.yul\":5102:5103   */\n      0x00\n        /* \"#utility.yul\":5094:5100   */\n      dup3\n        /* \"#utility.yul\":5090:5104   */\n      add\n        /* \"#utility.yul\":5083:5133   */\n      mstore\n        /* \"#utility.yul\":4966:5140   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5146:5512   */\n    tag_202:\n        /* \"#utility.yul\":5288:5291   */\n      0x00\n        /* \"#utility.yul\":5309:5376   */\n      tag_281\n        /* \"#utility.yul\":5373:5375   */\n      0x18\n        /* \"#utility.yul\":5368:5371   */\n      dup4\n        /* \"#utility.yul\":5309:5376   */\n      tag_198\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":5302:5376   */\n      swap2\n      pop\n        /* \"#utility.yul\":5385:5478   */\n      tag_282\n        /* \"#utility.yul\":5474:5477   */\n      dup3\n        /* \"#utility.yul\":5385:5478   */\n      tag_201\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5503:5505   */\n      0x20\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5494:5506   */\n      add\n        /* \"#utility.yul\":5487:5506   */\n      swap1\n      pop\n        /* \"#utility.yul\":5146:5512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5518:5937   */\n    tag_103:\n        /* \"#utility.yul\":5684:5688   */\n      0x00\n        /* \"#utility.yul\":5722:5724   */\n      0x20\n        /* \"#utility.yul\":5711:5720   */\n      dup3\n        /* \"#utility.yul\":5707:5725   */\n      add\n        /* \"#utility.yul\":5699:5725   */\n      swap1\n      pop\n        /* \"#utility.yul\":5771:5780   */\n      dup2\n        /* \"#utility.yul\":5765:5769   */\n      dup2\n        /* \"#utility.yul\":5761:5781   */\n      sub\n        /* \"#utility.yul\":5757:5758   */\n      0x00\n        /* \"#utility.yul\":5746:5755   */\n      dup4\n        /* \"#utility.yul\":5742:5759   */\n      add\n        /* \"#utility.yul\":5735:5782   */\n      mstore\n        /* \"#utility.yul\":5799:5930   */\n      tag_284\n        /* \"#utility.yul\":5925:5929   */\n      dup2\n        /* \"#utility.yul\":5799:5930   */\n      tag_202\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5791:5930   */\n      swap1\n      pop\n        /* \"#utility.yul\":5518:5937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5943:6123   */\n    tag_203:\n        /* \"#utility.yul\":5991:6068   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5988:5989   */\n      0x00\n        /* \"#utility.yul\":5981:6069   */\n      mstore\n        /* \"#utility.yul\":6088:6092   */\n      0x11\n        /* \"#utility.yul\":6085:6086   */\n      0x04\n        /* \"#utility.yul\":6078:6093   */\n      mstore\n        /* \"#utility.yul\":6112:6116   */\n      0x24\n        /* \"#utility.yul\":6109:6110   */\n      0x00\n        /* \"#utility.yul\":6102:6117   */\n      revert\n        /* \"#utility.yul\":6129:6320   */\n    tag_112:\n        /* \"#utility.yul\":6169:6172   */\n      0x00\n        /* \"#utility.yul\":6188:6208   */\n      tag_287\n        /* \"#utility.yul\":6206:6207   */\n      dup3\n        /* \"#utility.yul\":6188:6208   */\n      tag_182\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6183:6208   */\n      swap2\n      pop\n        /* \"#utility.yul\":6222:6242   */\n      tag_288\n        /* \"#utility.yul\":6240:6241   */\n      dup4\n        /* \"#utility.yul\":6222:6242   */\n      tag_182\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":6217:6242   */\n      swap3\n      pop\n        /* \"#utility.yul\":6265:6266   */\n      dup3\n        /* \"#utility.yul\":6262:6263   */\n      dup3\n        /* \"#utility.yul\":6258:6267   */\n      add\n        /* \"#utility.yul\":6251:6267   */\n      swap1\n      pop\n        /* \"#utility.yul\":6286:6289   */\n      dup1\n        /* \"#utility.yul\":6283:6284   */\n      dup3\n        /* \"#utility.yul\":6280:6290   */\n      gt\n        /* \"#utility.yul\":6277:6313   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":6293:6311   */\n      tag_290\n      tag_203\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":6277:6313   */\n    tag_289:\n        /* \"#utility.yul\":6129:6320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6326:6555   */\n    tag_204:\n        /* \"#utility.yul\":6466:6500   */\n      0x43726f776473616c653a2062656e656669636961727920697320746865207a65\n        /* \"#utility.yul\":6462:6463   */\n      0x00\n        /* \"#utility.yul\":6454:6460   */\n      dup3\n        /* \"#utility.yul\":6450:6464   */\n      add\n        /* \"#utility.yul\":6443:6501   */\n      mstore\n        /* \"#utility.yul\":6535:6547   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6530:6532   */\n      0x20\n        /* \"#utility.yul\":6522:6528   */\n      dup3\n        /* \"#utility.yul\":6518:6533   */\n      add\n        /* \"#utility.yul\":6511:6548   */\n      mstore\n        /* \"#utility.yul\":6326:6555   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6561:6927   */\n    tag_205:\n        /* \"#utility.yul\":6703:6706   */\n      0x00\n        /* \"#utility.yul\":6724:6791   */\n      tag_293\n        /* \"#utility.yul\":6788:6790   */\n      0x2a\n        /* \"#utility.yul\":6783:6786   */\n      dup4\n        /* \"#utility.yul\":6724:6791   */\n      tag_198\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6717:6791   */\n      swap2\n      pop\n        /* \"#utility.yul\":6800:6893   */\n      tag_294\n        /* \"#utility.yul\":6889:6892   */\n      dup3\n        /* \"#utility.yul\":6800:6893   */\n      tag_204\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":6918:6920   */\n      0x40\n        /* \"#utility.yul\":6913:6916   */\n      dup3\n        /* \"#utility.yul\":6909:6921   */\n      add\n        /* \"#utility.yul\":6902:6921   */\n      swap1\n      pop\n        /* \"#utility.yul\":6561:6927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6933:7352   */\n    tag_125:\n        /* \"#utility.yul\":7099:7103   */\n      0x00\n        /* \"#utility.yul\":7137:7139   */\n      0x20\n        /* \"#utility.yul\":7126:7135   */\n      dup3\n        /* \"#utility.yul\":7122:7140   */\n      add\n        /* \"#utility.yul\":7114:7140   */\n      swap1\n      pop\n        /* \"#utility.yul\":7186:7195   */\n      dup2\n        /* \"#utility.yul\":7180:7184   */\n      dup2\n        /* \"#utility.yul\":7176:7196   */\n      sub\n        /* \"#utility.yul\":7172:7173   */\n      0x00\n        /* \"#utility.yul\":7161:7170   */\n      dup4\n        /* \"#utility.yul\":7157:7174   */\n      add\n        /* \"#utility.yul\":7150:7197   */\n      mstore\n        /* \"#utility.yul\":7214:7345   */\n      tag_296\n        /* \"#utility.yul\":7340:7344   */\n      dup2\n        /* \"#utility.yul\":7214:7345   */\n      tag_205\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":7206:7345   */\n      swap1\n      pop\n        /* \"#utility.yul\":6933:7352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7358:7533   */\n    tag_206:\n        /* \"#utility.yul\":7498:7525   */\n      0x43726f776473616c653a20776569416d6f756e74206973203000000000000000\n        /* \"#utility.yul\":7494:7495   */\n      0x00\n        /* \"#utility.yul\":7486:7492   */\n      dup3\n        /* \"#utility.yul\":7482:7496   */\n      add\n        /* \"#utility.yul\":7475:7526   */\n      mstore\n        /* \"#utility.yul\":7358:7533   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7539:7905   */\n    tag_207:\n        /* \"#utility.yul\":7681:7684   */\n      0x00\n        /* \"#utility.yul\":7702:7769   */\n      tag_299\n        /* \"#utility.yul\":7766:7768   */\n      0x19\n        /* \"#utility.yul\":7761:7764   */\n      dup4\n        /* \"#utility.yul\":7702:7769   */\n      tag_198\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":7695:7769   */\n      swap2\n      pop\n        /* \"#utility.yul\":7778:7871   */\n      tag_300\n        /* \"#utility.yul\":7867:7870   */\n      dup3\n        /* \"#utility.yul\":7778:7871   */\n      tag_206\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":7896:7898   */\n      0x20\n        /* \"#utility.yul\":7891:7894   */\n      dup3\n        /* \"#utility.yul\":7887:7899   */\n      add\n        /* \"#utility.yul\":7880:7899   */\n      swap1\n      pop\n        /* \"#utility.yul\":7539:7905   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7911:8330   */\n    tag_128:\n        /* \"#utility.yul\":8077:8081   */\n      0x00\n        /* \"#utility.yul\":8115:8117   */\n      0x20\n        /* \"#utility.yul\":8104:8113   */\n      dup3\n        /* \"#utility.yul\":8100:8118   */\n      add\n        /* \"#utility.yul\":8092:8118   */\n      swap1\n      pop\n        /* \"#utility.yul\":8164:8173   */\n      dup2\n        /* \"#utility.yul\":8158:8162   */\n      dup2\n        /* \"#utility.yul\":8154:8174   */\n      sub\n        /* \"#utility.yul\":8150:8151   */\n      0x00\n        /* \"#utility.yul\":8139:8148   */\n      dup4\n        /* \"#utility.yul\":8135:8152   */\n      add\n        /* \"#utility.yul\":8128:8175   */\n      mstore\n        /* \"#utility.yul\":8192:8323   */\n      tag_302\n        /* \"#utility.yul\":8318:8322   */\n      dup2\n        /* \"#utility.yul\":8192:8323   */\n      tag_207\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":8184:8323   */\n      swap1\n      pop\n        /* \"#utility.yul\":7911:8330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8336:8746   */\n    tag_131:\n        /* \"#utility.yul\":8376:8383   */\n      0x00\n        /* \"#utility.yul\":8399:8419   */\n      tag_304\n        /* \"#utility.yul\":8417:8418   */\n      dup3\n        /* \"#utility.yul\":8399:8419   */\n      tag_182\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":8394:8419   */\n      swap2\n      pop\n        /* \"#utility.yul\":8433:8453   */\n      tag_305\n        /* \"#utility.yul\":8451:8452   */\n      dup4\n        /* \"#utility.yul\":8433:8453   */\n      tag_182\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":8428:8453   */\n      swap3\n      pop\n        /* \"#utility.yul\":8488:8489   */\n      dup3\n        /* \"#utility.yul\":8485:8486   */\n      dup3\n        /* \"#utility.yul\":8481:8490   */\n      mul\n        /* \"#utility.yul\":8510:8540   */\n      tag_306\n        /* \"#utility.yul\":8528:8539   */\n      dup2\n        /* \"#utility.yul\":8510:8540   */\n      tag_182\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":8499:8540   */\n      swap2\n      pop\n        /* \"#utility.yul\":8689:8690   */\n      dup3\n        /* \"#utility.yul\":8680:8687   */\n      dup3\n        /* \"#utility.yul\":8676:8691   */\n      div\n        /* \"#utility.yul\":8673:8674   */\n      dup5\n        /* \"#utility.yul\":8670:8692   */\n      eq\n        /* \"#utility.yul\":8650:8651   */\n      dup4\n        /* \"#utility.yul\":8643:8652   */\n      iszero\n        /* \"#utility.yul\":8623:8706   */\n      or\n        /* \"#utility.yul\":8600:8739   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":8719:8737   */\n      tag_308\n      tag_203\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":8600:8739   */\n    tag_307:\n        /* \"#utility.yul\":8384:8746   */\n      pop\n        /* \"#utility.yul\":8336:8746   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8752:8870   */\n    tag_208:\n        /* \"#utility.yul\":8839:8863   */\n      tag_310\n        /* \"#utility.yul\":8857:8862   */\n      dup2\n        /* \"#utility.yul\":8839:8863   */\n      tag_190\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8834:8837   */\n      dup3\n        /* \"#utility.yul\":8827:8864   */\n      mstore\n        /* \"#utility.yul\":8752:8870   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8876:9208   */\n    tag_138:\n        /* \"#utility.yul\":8997:9001   */\n      0x00\n        /* \"#utility.yul\":9035:9037   */\n      0x40\n        /* \"#utility.yul\":9024:9033   */\n      dup3\n        /* \"#utility.yul\":9020:9038   */\n      add\n        /* \"#utility.yul\":9012:9038   */\n      swap1\n      pop\n        /* \"#utility.yul\":9048:9119   */\n      tag_312\n        /* \"#utility.yul\":9116:9117   */\n      0x00\n        /* \"#utility.yul\":9105:9114   */\n      dup4\n        /* \"#utility.yul\":9101:9118   */\n      add\n        /* \"#utility.yul\":9092:9098   */\n      dup6\n        /* \"#utility.yul\":9048:9119   */\n      tag_208\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":9129:9201   */\n      tag_313\n        /* \"#utility.yul\":9197:9199   */\n      0x20\n        /* \"#utility.yul\":9186:9195   */\n      dup4\n        /* \"#utility.yul\":9182:9200   */\n      add\n        /* \"#utility.yul\":9173:9179   */\n      dup5\n        /* \"#utility.yul\":9129:9201   */\n      tag_183\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":8876:9208   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9214:9330   */\n    tag_209:\n        /* \"#utility.yul\":9284:9305   */\n      tag_315\n        /* \"#utility.yul\":9299:9304   */\n      dup2\n        /* \"#utility.yul\":9284:9305   */\n      tag_180\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":9277:9282   */\n      dup2\n        /* \"#utility.yul\":9274:9306   */\n      eq\n        /* \"#utility.yul\":9264:9324   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":9320:9321   */\n      0x00\n        /* \"#utility.yul\":9317:9318   */\n      dup1\n        /* \"#utility.yul\":9310:9322   */\n      revert\n        /* \"#utility.yul\":9264:9324   */\n    tag_316:\n        /* \"#utility.yul\":9214:9330   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9336:9473   */\n    tag_210:\n        /* \"#utility.yul\":9390:9395   */\n      0x00\n        /* \"#utility.yul\":9421:9427   */\n      dup2\n        /* \"#utility.yul\":9415:9428   */\n      mload\n        /* \"#utility.yul\":9406:9428   */\n      swap1\n      pop\n        /* \"#utility.yul\":9437:9467   */\n      tag_318\n        /* \"#utility.yul\":9461:9466   */\n      dup2\n        /* \"#utility.yul\":9437:9467   */\n      tag_209\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":9336:9473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9479:9824   */\n    tag_145:\n        /* \"#utility.yul\":9546:9552   */\n      0x00\n        /* \"#utility.yul\":9595:9597   */\n      0x20\n        /* \"#utility.yul\":9583:9592   */\n      dup3\n        /* \"#utility.yul\":9574:9581   */\n      dup5\n        /* \"#utility.yul\":9570:9593   */\n      sub\n        /* \"#utility.yul\":9566:9598   */\n      slt\n        /* \"#utility.yul\":9563:9682   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":9601:9680   */\n      tag_321\n      tag_188\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":9563:9682   */\n    tag_320:\n        /* \"#utility.yul\":9721:9722   */\n      0x00\n        /* \"#utility.yul\":9746:9807   */\n      tag_322\n        /* \"#utility.yul\":9799:9806   */\n      dup5\n        /* \"#utility.yul\":9790:9796   */\n      dup3\n        /* \"#utility.yul\":9779:9788   */\n      dup6\n        /* \"#utility.yul\":9775:9797   */\n      add\n        /* \"#utility.yul\":9746:9807   */\n      tag_210\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":9736:9807   */\n      swap2\n      pop\n        /* \"#utility.yul\":9692:9817   */\n      pop\n        /* \"#utility.yul\":9479:9824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9830:10059   */\n    tag_211:\n        /* \"#utility.yul\":9970:10004   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":9966:9967   */\n      0x00\n        /* \"#utility.yul\":9958:9964   */\n      dup3\n        /* \"#utility.yul\":9954:9968   */\n      add\n        /* \"#utility.yul\":9947:10005   */\n      mstore\n        /* \"#utility.yul\":10039:10051   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10034:10036   */\n      0x20\n        /* \"#utility.yul\":10026:10032   */\n      dup3\n        /* \"#utility.yul\":10022:10037   */\n      add\n        /* \"#utility.yul\":10015:10052   */\n      mstore\n        /* \"#utility.yul\":9830:10059   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10065:10431   */\n    tag_212:\n        /* \"#utility.yul\":10207:10210   */\n      0x00\n        /* \"#utility.yul\":10228:10295   */\n      tag_325\n        /* \"#utility.yul\":10292:10294   */\n      0x2a\n        /* \"#utility.yul\":10287:10290   */\n      dup4\n        /* \"#utility.yul\":10228:10295   */\n      tag_198\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":10221:10295   */\n      swap2\n      pop\n        /* \"#utility.yul\":10304:10397   */\n      tag_326\n        /* \"#utility.yul\":10393:10396   */\n      dup3\n        /* \"#utility.yul\":10304:10397   */\n      tag_211\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":10422:10424   */\n      0x40\n        /* \"#utility.yul\":10417:10420   */\n      dup3\n        /* \"#utility.yul\":10413:10425   */\n      add\n        /* \"#utility.yul\":10406:10425   */\n      swap1\n      pop\n        /* \"#utility.yul\":10065:10431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10437:10856   */\n    tag_148:\n        /* \"#utility.yul\":10603:10607   */\n      0x00\n        /* \"#utility.yul\":10641:10643   */\n      0x20\n        /* \"#utility.yul\":10630:10639   */\n      dup3\n        /* \"#utility.yul\":10626:10644   */\n      add\n        /* \"#utility.yul\":10618:10644   */\n      swap1\n      pop\n        /* \"#utility.yul\":10690:10699   */\n      dup2\n        /* \"#utility.yul\":10684:10688   */\n      dup2\n        /* \"#utility.yul\":10680:10700   */\n      sub\n        /* \"#utility.yul\":10676:10677   */\n      0x00\n        /* \"#utility.yul\":10665:10674   */\n      dup4\n        /* \"#utility.yul\":10661:10678   */\n      add\n        /* \"#utility.yul\":10654:10701   */\n      mstore\n        /* \"#utility.yul\":10718:10849   */\n      tag_328\n        /* \"#utility.yul\":10844:10848   */\n      dup2\n        /* \"#utility.yul\":10718:10849   */\n      tag_212\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":10710:10849   */\n      swap1\n      pop\n        /* \"#utility.yul\":10437:10856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10862:11087   */\n    tag_213:\n        /* \"#utility.yul\":11002:11036   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":10998:10999   */\n      0x00\n        /* \"#utility.yul\":10990:10996   */\n      dup3\n        /* \"#utility.yul\":10986:11000   */\n      add\n        /* \"#utility.yul\":10979:11037   */\n      mstore\n        /* \"#utility.yul\":11071:11079   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11066:11068   */\n      0x20\n        /* \"#utility.yul\":11058:11064   */\n      dup3\n        /* \"#utility.yul\":11054:11069   */\n      add\n        /* \"#utility.yul\":11047:11080   */\n      mstore\n        /* \"#utility.yul\":10862:11087   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11093:11459   */\n    tag_214:\n        /* \"#utility.yul\":11235:11238   */\n      0x00\n        /* \"#utility.yul\":11256:11323   */\n      tag_331\n        /* \"#utility.yul\":11320:11322   */\n      0x26\n        /* \"#utility.yul\":11315:11318   */\n      dup4\n        /* \"#utility.yul\":11256:11323   */\n      tag_198\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":11249:11323   */\n      swap2\n      pop\n        /* \"#utility.yul\":11332:11425   */\n      tag_332\n        /* \"#utility.yul\":11421:11424   */\n      dup3\n        /* \"#utility.yul\":11332:11425   */\n      tag_213\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":11450:11452   */\n      0x40\n        /* \"#utility.yul\":11445:11448   */\n      dup3\n        /* \"#utility.yul\":11441:11453   */\n      add\n        /* \"#utility.yul\":11434:11453   */\n      swap1\n      pop\n        /* \"#utility.yul\":11093:11459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11465:11884   */\n    tag_155:\n        /* \"#utility.yul\":11631:11635   */\n      0x00\n        /* \"#utility.yul\":11669:11671   */\n      0x20\n        /* \"#utility.yul\":11658:11667   */\n      dup3\n        /* \"#utility.yul\":11654:11672   */\n      add\n        /* \"#utility.yul\":11646:11672   */\n      swap1\n      pop\n        /* \"#utility.yul\":11718:11727   */\n      dup2\n        /* \"#utility.yul\":11712:11716   */\n      dup2\n        /* \"#utility.yul\":11708:11728   */\n      sub\n        /* \"#utility.yul\":11704:11705   */\n      0x00\n        /* \"#utility.yul\":11693:11702   */\n      dup4\n        /* \"#utility.yul\":11689:11706   */\n      add\n        /* \"#utility.yul\":11682:11729   */\n      mstore\n        /* \"#utility.yul\":11746:11877   */\n      tag_334\n        /* \"#utility.yul\":11872:11876   */\n      dup2\n        /* \"#utility.yul\":11746:11877   */\n      tag_214\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":11738:11877   */\n      swap1\n      pop\n        /* \"#utility.yul\":11465:11884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11890:11988   */\n    tag_215:\n        /* \"#utility.yul\":11941:11947   */\n      0x00\n        /* \"#utility.yul\":11975:11980   */\n      dup2\n        /* \"#utility.yul\":11969:11981   */\n      mload\n        /* \"#utility.yul\":11959:11981   */\n      swap1\n      pop\n        /* \"#utility.yul\":11890:11988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11994:12141   */\n    tag_216:\n        /* \"#utility.yul\":12095:12106   */\n      0x00\n        /* \"#utility.yul\":12132:12135   */\n      dup2\n        /* \"#utility.yul\":12117:12135   */\n      swap1\n      pop\n        /* \"#utility.yul\":11994:12141   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12147:12393   */\n    tag_217:\n        /* \"#utility.yul\":12228:12229   */\n      0x00\n        /* \"#utility.yul\":12238:12351   */\n    tag_338:\n        /* \"#utility.yul\":12252:12258   */\n      dup4\n        /* \"#utility.yul\":12249:12250   */\n      dup2\n        /* \"#utility.yul\":12246:12259   */\n      lt\n        /* \"#utility.yul\":12238:12351   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":12337:12338   */\n      dup1\n        /* \"#utility.yul\":12332:12335   */\n      dup3\n        /* \"#utility.yul\":12328:12339   */\n      add\n        /* \"#utility.yul\":12322:12340   */\n      mload\n        /* \"#utility.yul\":12318:12319   */\n      dup2\n        /* \"#utility.yul\":12313:12316   */\n      dup5\n        /* \"#utility.yul\":12309:12320   */\n      add\n        /* \"#utility.yul\":12302:12341   */\n      mstore\n        /* \"#utility.yul\":12274:12276   */\n      0x20\n        /* \"#utility.yul\":12271:12272   */\n      dup2\n        /* \"#utility.yul\":12267:12277   */\n      add\n        /* \"#utility.yul\":12262:12277   */\n      swap1\n      pop\n        /* \"#utility.yul\":12238:12351   */\n      jump(tag_338)\n    tag_340:\n        /* \"#utility.yul\":12385:12386   */\n      0x00\n        /* \"#utility.yul\":12376:12382   */\n      dup5\n        /* \"#utility.yul\":12371:12374   */\n      dup5\n        /* \"#utility.yul\":12367:12383   */\n      add\n        /* \"#utility.yul\":12360:12387   */\n      mstore\n        /* \"#utility.yul\":12209:12393   */\n      pop\n        /* \"#utility.yul\":12147:12393   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12399:12785   */\n    tag_218:\n        /* \"#utility.yul\":12503:12506   */\n      0x00\n        /* \"#utility.yul\":12531:12569   */\n      tag_342\n        /* \"#utility.yul\":12563:12568   */\n      dup3\n        /* \"#utility.yul\":12531:12569   */\n      tag_215\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":12585:12673   */\n      tag_343\n        /* \"#utility.yul\":12666:12672   */\n      dup2\n        /* \"#utility.yul\":12661:12664   */\n      dup6\n        /* \"#utility.yul\":12585:12673   */\n      tag_216\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":12578:12673   */\n      swap4\n      pop\n        /* \"#utility.yul\":12682:12747   */\n      tag_344\n        /* \"#utility.yul\":12740:12746   */\n      dup2\n        /* \"#utility.yul\":12735:12738   */\n      dup6\n        /* \"#utility.yul\":12728:12732   */\n      0x20\n        /* \"#utility.yul\":12721:12726   */\n      dup7\n        /* \"#utility.yul\":12717:12733   */\n      add\n        /* \"#utility.yul\":12682:12747   */\n      tag_217\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":12772:12778   */\n      dup1\n        /* \"#utility.yul\":12767:12770   */\n      dup5\n        /* \"#utility.yul\":12763:12779   */\n      add\n        /* \"#utility.yul\":12756:12779   */\n      swap2\n      pop\n        /* \"#utility.yul\":12507:12785   */\n      pop\n        /* \"#utility.yul\":12399:12785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12791:13062   */\n    tag_157:\n        /* \"#utility.yul\":12921:12924   */\n      0x00\n        /* \"#utility.yul\":12943:13036   */\n      tag_346\n        /* \"#utility.yul\":13032:13035   */\n      dup3\n        /* \"#utility.yul\":13023:13029   */\n      dup5\n        /* \"#utility.yul\":12943:13036   */\n      tag_218\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":12936:13036   */\n      swap2\n      pop\n        /* \"#utility.yul\":13053:13056   */\n      dup2\n        /* \"#utility.yul\":13046:13056   */\n      swap1\n      pop\n        /* \"#utility.yul\":12791:13062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13068:13247   */\n    tag_219:\n        /* \"#utility.yul\":13208:13239   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":13204:13205   */\n      0x00\n        /* \"#utility.yul\":13196:13202   */\n      dup3\n        /* \"#utility.yul\":13192:13206   */\n      add\n        /* \"#utility.yul\":13185:13240   */\n      mstore\n        /* \"#utility.yul\":13068:13247   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13253:13619   */\n    tag_220:\n        /* \"#utility.yul\":13395:13398   */\n      0x00\n        /* \"#utility.yul\":13416:13483   */\n      tag_349\n        /* \"#utility.yul\":13480:13482   */\n      0x1d\n        /* \"#utility.yul\":13475:13478   */\n      dup4\n        /* \"#utility.yul\":13416:13483   */\n      tag_198\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":13409:13483   */\n      swap2\n      pop\n        /* \"#utility.yul\":13492:13585   */\n      tag_350\n        /* \"#utility.yul\":13581:13584   */\n      dup3\n        /* \"#utility.yul\":13492:13585   */\n      tag_219\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":13610:13612   */\n      0x20\n        /* \"#utility.yul\":13605:13608   */\n      dup3\n        /* \"#utility.yul\":13601:13613   */\n      add\n        /* \"#utility.yul\":13594:13613   */\n      swap1\n      pop\n        /* \"#utility.yul\":13253:13619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13625:14044   */\n    tag_170:\n        /* \"#utility.yul\":13791:13795   */\n      0x00\n        /* \"#utility.yul\":13829:13831   */\n      0x20\n        /* \"#utility.yul\":13818:13827   */\n      dup3\n        /* \"#utility.yul\":13814:13832   */\n      add\n        /* \"#utility.yul\":13806:13832   */\n      swap1\n      pop\n        /* \"#utility.yul\":13878:13887   */\n      dup2\n        /* \"#utility.yul\":13872:13876   */\n      dup2\n        /* \"#utility.yul\":13868:13888   */\n      sub\n        /* \"#utility.yul\":13864:13865   */\n      0x00\n        /* \"#utility.yul\":13853:13862   */\n      dup4\n        /* \"#utility.yul\":13849:13866   */\n      add\n        /* \"#utility.yul\":13842:13889   */\n      mstore\n        /* \"#utility.yul\":13906:14037   */\n      tag_352\n        /* \"#utility.yul\":14032:14036   */\n      dup2\n        /* \"#utility.yul\":13906:14037   */\n      tag_220\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":13898:14037   */\n      swap1\n      pop\n        /* \"#utility.yul\":13625:14044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14050:14149   */\n    tag_221:\n        /* \"#utility.yul\":14102:14108   */\n      0x00\n        /* \"#utility.yul\":14136:14141   */\n      dup2\n        /* \"#utility.yul\":14130:14142   */\n      mload\n        /* \"#utility.yul\":14120:14142   */\n      swap1\n      pop\n        /* \"#utility.yul\":14050:14149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14155:14257   */\n    tag_222:\n        /* \"#utility.yul\":14196:14202   */\n      0x00\n        /* \"#utility.yul\":14247:14249   */\n      0x1f\n        /* \"#utility.yul\":14243:14250   */\n      not\n        /* \"#utility.yul\":14238:14240   */\n      0x1f\n        /* \"#utility.yul\":14231:14236   */\n      dup4\n        /* \"#utility.yul\":14227:14241   */\n      add\n        /* \"#utility.yul\":14223:14251   */\n      and\n        /* \"#utility.yul\":14213:14251   */\n      swap1\n      pop\n        /* \"#utility.yul\":14155:14257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14263:14640   */\n    tag_223:\n        /* \"#utility.yul\":14351:14354   */\n      0x00\n        /* \"#utility.yul\":14379:14418   */\n      tag_356\n        /* \"#utility.yul\":14412:14417   */\n      dup3\n        /* \"#utility.yul\":14379:14418   */\n      tag_221\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":14434:14505   */\n      tag_357\n        /* \"#utility.yul\":14498:14504   */\n      dup2\n        /* \"#utility.yul\":14493:14496   */\n      dup6\n        /* \"#utility.yul\":14434:14505   */\n      tag_198\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":14427:14505   */\n      swap4\n      pop\n        /* \"#utility.yul\":14514:14579   */\n      tag_358\n        /* \"#utility.yul\":14572:14578   */\n      dup2\n        /* \"#utility.yul\":14567:14570   */\n      dup6\n        /* \"#utility.yul\":14560:14564   */\n      0x20\n        /* \"#utility.yul\":14553:14558   */\n      dup7\n        /* \"#utility.yul\":14549:14565   */\n      add\n        /* \"#utility.yul\":14514:14579   */\n      tag_217\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":14604:14633   */\n      tag_359\n        /* \"#utility.yul\":14626:14632   */\n      dup2\n        /* \"#utility.yul\":14604:14633   */\n      tag_222\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":14599:14602   */\n      dup5\n        /* \"#utility.yul\":14595:14634   */\n      add\n        /* \"#utility.yul\":14588:14634   */\n      swap2\n      pop\n        /* \"#utility.yul\":14355:14640   */\n      pop\n        /* \"#utility.yul\":14263:14640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14646:14959   */\n    tag_179:\n        /* \"#utility.yul\":14759:14763   */\n      0x00\n        /* \"#utility.yul\":14797:14799   */\n      0x20\n        /* \"#utility.yul\":14786:14795   */\n      dup3\n        /* \"#utility.yul\":14782:14800   */\n      add\n        /* \"#utility.yul\":14774:14800   */\n      swap1\n      pop\n        /* \"#utility.yul\":14846:14855   */\n      dup2\n        /* \"#utility.yul\":14840:14844   */\n      dup2\n        /* \"#utility.yul\":14836:14856   */\n      sub\n        /* \"#utility.yul\":14832:14833   */\n      0x00\n        /* \"#utility.yul\":14821:14830   */\n      dup4\n        /* \"#utility.yul\":14817:14834   */\n      add\n        /* \"#utility.yul\":14810:14857   */\n      mstore\n        /* \"#utility.yul\":14874:14952   */\n      tag_361\n        /* \"#utility.yul\":14947:14951   */\n      dup2\n        /* \"#utility.yul\":14938:14944   */\n      dup5\n        /* \"#utility.yul\":14874:14952   */\n      tag_223\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":14866:14952   */\n      swap1\n      pop\n        /* \"#utility.yul\":14646:14959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122040d24c468bd4cd432052781ecc08630dedb5beb320c8eb657eed8ab2ccaa5c2464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_126": {
									"entryPoint": null,
									"id": 126,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1419": {
									"entryPoint": null,
									"id": 1419,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_1713": {
									"entryPoint": null,
									"id": 1713,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$250_fromMemory": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_address_payablet_contract$_IERC20_$250_fromMemory": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_stringliteral_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$250": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd": {
									"entryPoint": 1457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b": {
									"entryPoint": 1605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82": {
									"entryPoint": 1309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$250": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8107:10",
										"nodeType": "YulBlock",
										"src": "0:8107:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:32:10",
													"nodeType": "YulBlock",
													"src": "379:32:10",
													"statements": [
														{
															"nativeSrc": "389:16:10",
															"nodeType": "YulAssignment",
															"src": "389:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:10",
																"nodeType": "YulIdentifier",
																"src": "400:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:77:10"
											},
											{
												"body": {
													"nativeSrc": "460:79:10",
													"nodeType": "YulBlock",
													"src": "460:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:10",
																"nodeType": "YulBlock",
																"src": "517:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:10",
																					"nodeType": "YulLiteral",
																					"src": "526:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:10",
																					"nodeType": "YulLiteral",
																					"src": "529:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:10"
																			},
																			"nativeSrc": "519:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:10"
																		},
																		"nativeSrc": "519:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:10"
																				},
																				"nativeSrc": "490:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:10"
																		},
																		"nativeSrc": "480:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:10"
																},
																"nativeSrc": "473:43:10",
																"nodeType": "YulFunctionCall",
																"src": "473:43:10"
															},
															"nativeSrc": "470:63:10",
															"nodeType": "YulIf",
															"src": "470:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:10",
														"nodeType": "YulTypedName",
														"src": "453:5:10",
														"type": ""
													}
												],
												"src": "417:122:10"
											},
											{
												"body": {
													"nativeSrc": "608:80:10",
													"nodeType": "YulBlock",
													"src": "608:80:10",
													"statements": [
														{
															"nativeSrc": "618:22:10",
															"nodeType": "YulAssignment",
															"src": "618:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:10"
																},
																"nativeSrc": "627:13:10",
																"nodeType": "YulFunctionCall",
																"src": "627:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:10"
																},
																"nativeSrc": "649:33:10",
																"nodeType": "YulFunctionCall",
																"src": "649:33:10"
															},
															"nativeSrc": "649:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:10",
														"nodeType": "YulTypedName",
														"src": "586:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:10",
														"nodeType": "YulTypedName",
														"src": "594:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:10",
														"nodeType": "YulTypedName",
														"src": "602:5:10",
														"type": ""
													}
												],
												"src": "545:143:10"
											},
											{
												"body": {
													"nativeSrc": "739:81:10",
													"nodeType": "YulBlock",
													"src": "739:81:10",
													"statements": [
														{
															"nativeSrc": "749:65:10",
															"nodeType": "YulAssignment",
															"src": "749:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:10",
																		"nodeType": "YulLiteral",
																		"src": "771:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:10"
																},
																"nativeSrc": "760:54:10",
																"nodeType": "YulFunctionCall",
																"src": "760:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:10",
														"nodeType": "YulTypedName",
														"src": "721:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:10",
														"nodeType": "YulTypedName",
														"src": "731:7:10",
														"type": ""
													}
												],
												"src": "694:126:10"
											},
											{
												"body": {
													"nativeSrc": "879:51:10",
													"nodeType": "YulBlock",
													"src": "879:51:10",
													"statements": [
														{
															"nativeSrc": "889:35:10",
															"nodeType": "YulAssignment",
															"src": "889:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "918:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "918:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "900:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "900:17:10"
																},
																"nativeSrc": "900:24:10",
																"nodeType": "YulFunctionCall",
																"src": "900:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "889:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "889:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "826:104:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "861:5:10",
														"nodeType": "YulTypedName",
														"src": "861:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "871:7:10",
														"nodeType": "YulTypedName",
														"src": "871:7:10",
														"type": ""
													}
												],
												"src": "826:104:10"
											},
											{
												"body": {
													"nativeSrc": "987:87:10",
													"nodeType": "YulBlock",
													"src": "987:87:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1052:16:10",
																"nodeType": "YulBlock",
																"src": "1052:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1061:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1061:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1064:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1064:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1054:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1054:6:10"
																			},
																			"nativeSrc": "1054:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1054:12:10"
																		},
																		"nativeSrc": "1054:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1054:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1010:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1010:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1043:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1043:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "1017:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "1017:25:10"
																				},
																				"nativeSrc": "1017:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1017:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1007:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1007:2:10"
																		},
																		"nativeSrc": "1007:43:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1007:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1000:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:10"
																},
																"nativeSrc": "1000:51:10",
																"nodeType": "YulFunctionCall",
																"src": "1000:51:10"
															},
															"nativeSrc": "997:71:10",
															"nodeType": "YulIf",
															"src": "997:71:10"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "936:138:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "980:5:10",
														"nodeType": "YulTypedName",
														"src": "980:5:10",
														"type": ""
													}
												],
												"src": "936:138:10"
											},
											{
												"body": {
													"nativeSrc": "1151:88:10",
													"nodeType": "YulBlock",
													"src": "1151:88:10",
													"statements": [
														{
															"nativeSrc": "1161:22:10",
															"nodeType": "YulAssignment",
															"src": "1161:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1176:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1176:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1170:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1170:5:10"
																},
																"nativeSrc": "1170:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1170:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1161:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1161:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1227:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1227:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "1192:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "1192:34:10"
																},
																"nativeSrc": "1192:41:10",
																"nodeType": "YulFunctionCall",
																"src": "1192:41:10"
															},
															"nativeSrc": "1192:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "1192:41:10"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nativeSrc": "1080:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1129:6:10",
														"nodeType": "YulTypedName",
														"src": "1129:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1137:3:10",
														"nodeType": "YulTypedName",
														"src": "1137:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1145:5:10",
														"nodeType": "YulTypedName",
														"src": "1145:5:10",
														"type": ""
													}
												],
												"src": "1080:159:10"
											},
											{
												"body": {
													"nativeSrc": "1290:51:10",
													"nodeType": "YulBlock",
													"src": "1290:51:10",
													"statements": [
														{
															"nativeSrc": "1300:35:10",
															"nodeType": "YulAssignment",
															"src": "1300:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1329:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1329:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1311:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1311:17:10"
																},
																"nativeSrc": "1311:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1311:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1300:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1300:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1245:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1272:5:10",
														"nodeType": "YulTypedName",
														"src": "1272:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1282:7:10",
														"nodeType": "YulTypedName",
														"src": "1282:7:10",
														"type": ""
													}
												],
												"src": "1245:96:10"
											},
											{
												"body": {
													"nativeSrc": "1406:51:10",
													"nodeType": "YulBlock",
													"src": "1406:51:10",
													"statements": [
														{
															"nativeSrc": "1416:35:10",
															"nodeType": "YulAssignment",
															"src": "1416:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1445:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1445:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1427:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1427:17:10"
																},
																"nativeSrc": "1427:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1427:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1416:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1416:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$250",
												"nativeSrc": "1347:110:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1388:5:10",
														"nodeType": "YulTypedName",
														"src": "1388:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1398:7:10",
														"nodeType": "YulTypedName",
														"src": "1398:7:10",
														"type": ""
													}
												],
												"src": "1347:110:10"
											},
											{
												"body": {
													"nativeSrc": "1520:93:10",
													"nodeType": "YulBlock",
													"src": "1520:93:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1591:16:10",
																"nodeType": "YulBlock",
																"src": "1591:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1600:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1600:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1603:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1603:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1593:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:10"
																			},
																			"nativeSrc": "1593:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1593:12:10"
																		},
																		"nativeSrc": "1593:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1593:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1543:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1543:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1582:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1582:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$250",
																					"nativeSrc": "1550:31:10",
																					"nodeType": "YulIdentifier",
																					"src": "1550:31:10"
																				},
																				"nativeSrc": "1550:38:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1550:38:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1540:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1540:2:10"
																		},
																		"nativeSrc": "1540:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1540:49:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1533:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:10"
																},
																"nativeSrc": "1533:57:10",
																"nodeType": "YulFunctionCall",
																"src": "1533:57:10"
															},
															"nativeSrc": "1530:77:10",
															"nodeType": "YulIf",
															"src": "1530:77:10"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$250",
												"nativeSrc": "1463:150:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1513:5:10",
														"nodeType": "YulTypedName",
														"src": "1513:5:10",
														"type": ""
													}
												],
												"src": "1463:150:10"
											},
											{
												"body": {
													"nativeSrc": "1696:94:10",
													"nodeType": "YulBlock",
													"src": "1696:94:10",
													"statements": [
														{
															"nativeSrc": "1706:22:10",
															"nodeType": "YulAssignment",
															"src": "1706:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1721:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1721:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1715:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1715:5:10"
																},
																"nativeSrc": "1715:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1715:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1706:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1706:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1778:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1778:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$250",
																	"nativeSrc": "1737:40:10",
																	"nodeType": "YulIdentifier",
																	"src": "1737:40:10"
																},
																"nativeSrc": "1737:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1737:47:10"
															},
															"nativeSrc": "1737:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1737:47:10"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$250_fromMemory",
												"nativeSrc": "1619:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1674:6:10",
														"nodeType": "YulTypedName",
														"src": "1674:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1682:3:10",
														"nodeType": "YulTypedName",
														"src": "1682:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1690:5:10",
														"nodeType": "YulTypedName",
														"src": "1690:5:10",
														"type": ""
													}
												],
												"src": "1619:171:10"
											},
											{
												"body": {
													"nativeSrc": "1963:854:10",
													"nodeType": "YulBlock",
													"src": "1963:854:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:83:10",
																"nodeType": "YulBlock",
																"src": "2010:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2012:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2012:77:10"
																			},
																			"nativeSrc": "2012:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:79:10"
																		},
																		"nativeSrc": "2012:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1984:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1984:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1993:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1993:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1980:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1980:3:10"
																		},
																		"nativeSrc": "1980:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1980:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2005:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2005:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1976:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1976:3:10"
																},
																"nativeSrc": "1976:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1976:33:10"
															},
															"nativeSrc": "1973:120:10",
															"nodeType": "YulIf",
															"src": "1973:120:10"
														},
														{
															"nativeSrc": "2103:128:10",
															"nodeType": "YulBlock",
															"src": "2103:128:10",
															"statements": [
																{
																	"nativeSrc": "2118:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2118:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2132:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2132:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2122:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2122:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2147:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2147:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2193:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2193:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2204:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2204:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2189:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2189:3:10"
																				},
																				"nativeSrc": "2189:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2189:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2213:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2213:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2157:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2157:31:10"
																		},
																		"nativeSrc": "2157:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2147:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2147:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2241:129:10",
															"nodeType": "YulBlock",
															"src": "2241:129:10",
															"statements": [
																{
																	"nativeSrc": "2256:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2256:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2270:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2270:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2260:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2260:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2286:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2286:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2332:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2332:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2343:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2343:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2328:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2328:3:10"
																				},
																				"nativeSrc": "2328:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2328:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2352:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2352:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2296:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2296:31:10"
																		},
																		"nativeSrc": "2296:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2296:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2286:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2286:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2380:129:10",
															"nodeType": "YulBlock",
															"src": "2380:129:10",
															"statements": [
																{
																	"nativeSrc": "2395:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2395:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2409:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2409:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2399:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2399:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2425:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2425:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2471:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2471:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2482:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2482:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2467:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2467:3:10"
																				},
																				"nativeSrc": "2467:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2467:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2491:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2491:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2435:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2435:31:10"
																		},
																		"nativeSrc": "2435:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2435:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2425:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2425:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2519:137:10",
															"nodeType": "YulBlock",
															"src": "2519:137:10",
															"statements": [
																{
																	"nativeSrc": "2534:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2534:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2548:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2548:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2538:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2538:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2564:82:10",
																	"nodeType": "YulAssignment",
																	"src": "2564:82:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2618:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2618:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2629:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2629:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2614:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2614:3:10"
																				},
																				"nativeSrc": "2614:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2614:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2638:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2638:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nativeSrc": "2574:39:10",
																			"nodeType": "YulIdentifier",
																			"src": "2574:39:10"
																		},
																		"nativeSrc": "2574:72:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:72:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2564:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2564:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2666:144:10",
															"nodeType": "YulBlock",
															"src": "2666:144:10",
															"statements": [
																{
																	"nativeSrc": "2681:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2681:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2695:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2695:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2685:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2685:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2712:88:10",
																	"nodeType": "YulAssignment",
																	"src": "2712:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2772:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2772:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2783:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2783:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2768:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2768:3:10"
																				},
																				"nativeSrc": "2768:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2768:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2792:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2792:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$250_fromMemory",
																			"nativeSrc": "2722:45:10",
																			"nodeType": "YulIdentifier",
																			"src": "2722:45:10"
																		},
																		"nativeSrc": "2722:78:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2722:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2712:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2712:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_address_payablet_contract$_IERC20_$250_fromMemory",
												"nativeSrc": "1796:1021:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1901:9:10",
														"nodeType": "YulTypedName",
														"src": "1901:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1912:7:10",
														"nodeType": "YulTypedName",
														"src": "1912:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1924:6:10",
														"nodeType": "YulTypedName",
														"src": "1924:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1932:6:10",
														"nodeType": "YulTypedName",
														"src": "1932:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1940:6:10",
														"nodeType": "YulTypedName",
														"src": "1940:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1948:6:10",
														"nodeType": "YulTypedName",
														"src": "1948:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1956:6:10",
														"nodeType": "YulTypedName",
														"src": "1956:6:10",
														"type": ""
													}
												],
												"src": "1796:1021:10"
											},
											{
												"body": {
													"nativeSrc": "2919:73:10",
													"nodeType": "YulBlock",
													"src": "2919:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2936:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2936:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2941:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2941:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2929:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2929:6:10"
																},
																"nativeSrc": "2929:19:10",
																"nodeType": "YulFunctionCall",
																"src": "2929:19:10"
															},
															"nativeSrc": "2929:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "2929:19:10"
														},
														{
															"nativeSrc": "2957:29:10",
															"nodeType": "YulAssignment",
															"src": "2957:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2976:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2976:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2981:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2981:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2972:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2972:3:10"
																},
																"nativeSrc": "2972:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2972:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2957:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "2957:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2823:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2891:3:10",
														"nodeType": "YulTypedName",
														"src": "2891:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2896:6:10",
														"nodeType": "YulTypedName",
														"src": "2896:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2907:11:10",
														"nodeType": "YulTypedName",
														"src": "2907:11:10",
														"type": ""
													}
												],
												"src": "2823:169:10"
											},
											{
												"body": {
													"nativeSrc": "3104:64:10",
													"nodeType": "YulBlock",
													"src": "3104:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3126:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3126:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3134:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3134:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3122:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3122:3:10"
																		},
																		"nativeSrc": "3122:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3122:14:10"
																	},
																	{
																		"hexValue": "43726f776473616c653a20726174652069732030",
																		"kind": "string",
																		"nativeSrc": "3138:22:10",
																		"nodeType": "YulLiteral",
																		"src": "3138:22:10",
																		"type": "",
																		"value": "Crowdsale: rate is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3115:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3115:6:10"
																},
																"nativeSrc": "3115:46:10",
																"nodeType": "YulFunctionCall",
																"src": "3115:46:10"
															},
															"nativeSrc": "3115:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "3115:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
												"nativeSrc": "2998:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3096:6:10",
														"nodeType": "YulTypedName",
														"src": "3096:6:10",
														"type": ""
													}
												],
												"src": "2998:170:10"
											},
											{
												"body": {
													"nativeSrc": "3320:220:10",
													"nodeType": "YulBlock",
													"src": "3320:220:10",
													"statements": [
														{
															"nativeSrc": "3330:74:10",
															"nodeType": "YulAssignment",
															"src": "3330:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3396:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3396:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3401:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3401:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3337:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "3337:58:10"
																},
																"nativeSrc": "3337:67:10",
																"nodeType": "YulFunctionCall",
																"src": "3337:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3502:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3502:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																	"nativeSrc": "3413:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "3413:88:10"
																},
																"nativeSrc": "3413:93:10",
																"nodeType": "YulFunctionCall",
																"src": "3413:93:10"
															},
															"nativeSrc": "3413:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "3413:93:10"
														},
														{
															"nativeSrc": "3515:19:10",
															"nodeType": "YulAssignment",
															"src": "3515:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3526:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3526:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3531:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3531:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3522:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3522:3:10"
																},
																"nativeSrc": "3522:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3522:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3515:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3515:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3174:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3308:3:10",
														"nodeType": "YulTypedName",
														"src": "3308:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3316:3:10",
														"nodeType": "YulTypedName",
														"src": "3316:3:10",
														"type": ""
													}
												],
												"src": "3174:366:10"
											},
											{
												"body": {
													"nativeSrc": "3717:248:10",
													"nodeType": "YulBlock",
													"src": "3717:248:10",
													"statements": [
														{
															"nativeSrc": "3727:26:10",
															"nodeType": "YulAssignment",
															"src": "3727:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3739:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3739:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3750:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3750:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3735:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3735:3:10"
																},
																"nativeSrc": "3735:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3735:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3727:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3727:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3774:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3774:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3785:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3785:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3770:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3770:3:10"
																		},
																		"nativeSrc": "3770:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3770:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3793:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3793:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3799:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3799:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3789:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3789:3:10"
																		},
																		"nativeSrc": "3789:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3789:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3763:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3763:6:10"
																},
																"nativeSrc": "3763:47:10",
																"nodeType": "YulFunctionCall",
																"src": "3763:47:10"
															},
															"nativeSrc": "3763:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "3763:47:10"
														},
														{
															"nativeSrc": "3819:139:10",
															"nodeType": "YulAssignment",
															"src": "3819:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3953:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3953:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3827:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "3827:124:10"
																},
																"nativeSrc": "3827:131:10",
																"nodeType": "YulFunctionCall",
																"src": "3827:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3819:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3819:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3546:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3697:9:10",
														"nodeType": "YulTypedName",
														"src": "3697:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3712:4:10",
														"nodeType": "YulTypedName",
														"src": "3712:4:10",
														"type": ""
													}
												],
												"src": "3546:419:10"
											},
											{
												"body": {
													"nativeSrc": "4077:118:10",
													"nodeType": "YulBlock",
													"src": "4077:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4099:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4099:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4107:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4107:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4095:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4095:3:10"
																		},
																		"nativeSrc": "4095:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4095:14:10"
																	},
																	{
																		"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4111:34:10",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:10",
																		"type": "",
																		"value": "Crowdsale: wallet is the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4088:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4088:6:10"
																},
																"nativeSrc": "4088:58:10",
																"nodeType": "YulFunctionCall",
																"src": "4088:58:10"
															},
															"nativeSrc": "4088:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "4088:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4167:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4167:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4175:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4175:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4163:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4163:3:10"
																		},
																		"nativeSrc": "4163:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4163:15:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4180:7:10",
																		"nodeType": "YulLiteral",
																		"src": "4180:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4156:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4156:6:10"
																},
																"nativeSrc": "4156:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4156:32:10"
															},
															"nativeSrc": "4156:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "4156:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
												"nativeSrc": "3971:224:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4069:6:10",
														"nodeType": "YulTypedName",
														"src": "4069:6:10",
														"type": ""
													}
												],
												"src": "3971:224:10"
											},
											{
												"body": {
													"nativeSrc": "4347:220:10",
													"nodeType": "YulBlock",
													"src": "4347:220:10",
													"statements": [
														{
															"nativeSrc": "4357:74:10",
															"nodeType": "YulAssignment",
															"src": "4357:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4423:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4423:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4364:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "4364:58:10"
																},
																"nativeSrc": "4364:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4364:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4357:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4357:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4529:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4529:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																	"nativeSrc": "4440:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "4440:88:10"
																},
																"nativeSrc": "4440:93:10",
																"nodeType": "YulFunctionCall",
																"src": "4440:93:10"
															},
															"nativeSrc": "4440:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "4440:93:10"
														},
														{
															"nativeSrc": "4542:19:10",
															"nodeType": "YulAssignment",
															"src": "4542:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4553:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4553:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4558:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4558:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4549:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4549:3:10"
																},
																"nativeSrc": "4549:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4549:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4542:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4542:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4201:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4335:3:10",
														"nodeType": "YulTypedName",
														"src": "4335:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4343:3:10",
														"nodeType": "YulTypedName",
														"src": "4343:3:10",
														"type": ""
													}
												],
												"src": "4201:366:10"
											},
											{
												"body": {
													"nativeSrc": "4744:248:10",
													"nodeType": "YulBlock",
													"src": "4744:248:10",
													"statements": [
														{
															"nativeSrc": "4754:26:10",
															"nodeType": "YulAssignment",
															"src": "4754:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4766:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4766:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4777:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4777:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4762:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4762:3:10"
																},
																"nativeSrc": "4762:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4762:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4754:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4754:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4801:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4801:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4812:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4812:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4797:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4797:3:10"
																		},
																		"nativeSrc": "4797:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4797:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4820:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4820:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4816:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4816:3:10"
																		},
																		"nativeSrc": "4816:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4816:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4790:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4790:6:10"
																},
																"nativeSrc": "4790:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4790:47:10"
															},
															"nativeSrc": "4790:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4790:47:10"
														},
														{
															"nativeSrc": "4846:139:10",
															"nodeType": "YulAssignment",
															"src": "4846:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4980:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4980:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4854:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "4854:124:10"
																},
																"nativeSrc": "4854:131:10",
																"nodeType": "YulFunctionCall",
																"src": "4854:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4846:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4846:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4573:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4724:9:10",
														"nodeType": "YulTypedName",
														"src": "4724:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4739:4:10",
														"nodeType": "YulTypedName",
														"src": "4739:4:10",
														"type": ""
													}
												],
												"src": "4573:419:10"
											},
											{
												"body": {
													"nativeSrc": "5104:117:10",
													"nodeType": "YulBlock",
													"src": "5104:117:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5126:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5126:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5134:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5134:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5122:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5122:3:10"
																		},
																		"nativeSrc": "5122:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5122:14:10"
																	},
																	{
																		"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "5138:34:10",
																		"nodeType": "YulLiteral",
																		"src": "5138:34:10",
																		"type": "",
																		"value": "Crowdsale: token is the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5115:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5115:6:10"
																},
																"nativeSrc": "5115:58:10",
																"nodeType": "YulFunctionCall",
																"src": "5115:58:10"
															},
															"nativeSrc": "5115:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "5115:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5194:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5194:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5202:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5202:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5190:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5190:3:10"
																		},
																		"nativeSrc": "5190:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5190:15:10"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "5207:6:10",
																		"nodeType": "YulLiteral",
																		"src": "5207:6:10",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5183:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5183:6:10"
																},
																"nativeSrc": "5183:31:10",
																"nodeType": "YulFunctionCall",
																"src": "5183:31:10"
															},
															"nativeSrc": "5183:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "5183:31:10"
														}
													]
												},
												"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
												"nativeSrc": "4998:223:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5096:6:10",
														"nodeType": "YulTypedName",
														"src": "5096:6:10",
														"type": ""
													}
												],
												"src": "4998:223:10"
											},
											{
												"body": {
													"nativeSrc": "5373:220:10",
													"nodeType": "YulBlock",
													"src": "5373:220:10",
													"statements": [
														{
															"nativeSrc": "5383:74:10",
															"nodeType": "YulAssignment",
															"src": "5383:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5449:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5449:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5454:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5454:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5390:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5390:58:10"
																},
																"nativeSrc": "5390:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5390:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5383:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5383:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5555:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5555:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																	"nativeSrc": "5466:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5466:88:10"
																},
																"nativeSrc": "5466:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5466:93:10"
															},
															"nativeSrc": "5466:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5466:93:10"
														},
														{
															"nativeSrc": "5568:19:10",
															"nodeType": "YulAssignment",
															"src": "5568:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5579:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5579:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5584:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5584:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5575:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5575:3:10"
																},
																"nativeSrc": "5575:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5575:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5568:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5568:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5227:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5361:3:10",
														"nodeType": "YulTypedName",
														"src": "5361:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5369:3:10",
														"nodeType": "YulTypedName",
														"src": "5369:3:10",
														"type": ""
													}
												],
												"src": "5227:366:10"
											},
											{
												"body": {
													"nativeSrc": "5770:248:10",
													"nodeType": "YulBlock",
													"src": "5770:248:10",
													"statements": [
														{
															"nativeSrc": "5780:26:10",
															"nodeType": "YulAssignment",
															"src": "5780:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5792:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5792:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5803:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5803:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5788:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5788:3:10"
																},
																"nativeSrc": "5788:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5788:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5780:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5780:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5827:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5827:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5838:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5838:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5823:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5823:3:10"
																		},
																		"nativeSrc": "5823:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5823:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5846:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5846:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5852:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5852:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5842:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5842:3:10"
																		},
																		"nativeSrc": "5842:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5842:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5816:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5816:6:10"
																},
																"nativeSrc": "5816:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5816:47:10"
															},
															"nativeSrc": "5816:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5816:47:10"
														},
														{
															"nativeSrc": "5872:139:10",
															"nodeType": "YulAssignment",
															"src": "5872:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6006:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6006:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5880:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "5880:124:10"
																},
																"nativeSrc": "5880:131:10",
																"nodeType": "YulFunctionCall",
																"src": "5880:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5872:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5872:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5599:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5750:9:10",
														"nodeType": "YulTypedName",
														"src": "5750:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5765:4:10",
														"nodeType": "YulTypedName",
														"src": "5765:4:10",
														"type": ""
													}
												],
												"src": "5599:419:10"
											},
											{
												"body": {
													"nativeSrc": "6130:132:10",
													"nodeType": "YulBlock",
													"src": "6130:132:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6152:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6152:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6160:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6160:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6148:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6148:3:10"
																		},
																		"nativeSrc": "6148:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6148:14:10"
																	},
																	{
																		"hexValue": "54696d656443726f776473616c653a206f70656e696e672074696d6520697320",
																		"kind": "string",
																		"nativeSrc": "6164:34:10",
																		"nodeType": "YulLiteral",
																		"src": "6164:34:10",
																		"type": "",
																		"value": "TimedCrowdsale: opening time is "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6141:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6141:6:10"
																},
																"nativeSrc": "6141:58:10",
																"nodeType": "YulFunctionCall",
																"src": "6141:58:10"
															},
															"nativeSrc": "6141:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "6141:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6220:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6220:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6228:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6228:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6216:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6216:3:10"
																		},
																		"nativeSrc": "6216:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6216:15:10"
																	},
																	{
																		"hexValue": "6265666f72652063757272656e742074696d65",
																		"kind": "string",
																		"nativeSrc": "6233:21:10",
																		"nodeType": "YulLiteral",
																		"src": "6233:21:10",
																		"type": "",
																		"value": "before current time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6209:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6209:6:10"
																},
																"nativeSrc": "6209:46:10",
																"nodeType": "YulFunctionCall",
																"src": "6209:46:10"
															},
															"nativeSrc": "6209:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "6209:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd",
												"nativeSrc": "6024:238:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6122:6:10",
														"nodeType": "YulTypedName",
														"src": "6122:6:10",
														"type": ""
													}
												],
												"src": "6024:238:10"
											},
											{
												"body": {
													"nativeSrc": "6414:220:10",
													"nodeType": "YulBlock",
													"src": "6414:220:10",
													"statements": [
														{
															"nativeSrc": "6424:74:10",
															"nodeType": "YulAssignment",
															"src": "6424:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6490:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6490:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6495:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6495:2:10",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6431:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "6431:58:10"
																},
																"nativeSrc": "6431:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6431:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6424:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6424:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6596:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6596:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd",
																	"nativeSrc": "6507:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "6507:88:10"
																},
																"nativeSrc": "6507:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6507:93:10"
															},
															"nativeSrc": "6507:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "6507:93:10"
														},
														{
															"nativeSrc": "6609:19:10",
															"nodeType": "YulAssignment",
															"src": "6609:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6620:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6620:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6625:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6625:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6616:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6616:3:10"
																},
																"nativeSrc": "6616:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6616:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6609:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6609:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6268:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6402:3:10",
														"nodeType": "YulTypedName",
														"src": "6402:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6410:3:10",
														"nodeType": "YulTypedName",
														"src": "6410:3:10",
														"type": ""
													}
												],
												"src": "6268:366:10"
											},
											{
												"body": {
													"nativeSrc": "6811:248:10",
													"nodeType": "YulBlock",
													"src": "6811:248:10",
													"statements": [
														{
															"nativeSrc": "6821:26:10",
															"nodeType": "YulAssignment",
															"src": "6821:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6833:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6833:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6844:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6844:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6829:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6829:3:10"
																},
																"nativeSrc": "6829:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6829:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6821:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6821:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6868:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6868:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6879:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6879:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6864:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6864:3:10"
																		},
																		"nativeSrc": "6864:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6864:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6887:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6887:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6893:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6893:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6883:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6883:3:10"
																		},
																		"nativeSrc": "6883:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6883:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6857:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6857:6:10"
																},
																"nativeSrc": "6857:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6857:47:10"
															},
															"nativeSrc": "6857:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6857:47:10"
														},
														{
															"nativeSrc": "6913:139:10",
															"nodeType": "YulAssignment",
															"src": "6913:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7047:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7047:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6921:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6921:124:10"
																},
																"nativeSrc": "6921:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6921:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6913:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6913:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6640:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6791:9:10",
														"nodeType": "YulTypedName",
														"src": "6791:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6806:4:10",
														"nodeType": "YulTypedName",
														"src": "6806:4:10",
														"type": ""
													}
												],
												"src": "6640:419:10"
											},
											{
												"body": {
													"nativeSrc": "7171:136:10",
													"nodeType": "YulBlock",
													"src": "7171:136:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7193:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7193:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7201:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7201:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7189:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7189:3:10"
																		},
																		"nativeSrc": "7189:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7189:14:10"
																	},
																	{
																		"hexValue": "54696d656443726f776473616c653a206f70656e696e672074696d6520697320",
																		"kind": "string",
																		"nativeSrc": "7205:34:10",
																		"nodeType": "YulLiteral",
																		"src": "7205:34:10",
																		"type": "",
																		"value": "TimedCrowdsale: opening time is "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7182:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7182:6:10"
																},
																"nativeSrc": "7182:58:10",
																"nodeType": "YulFunctionCall",
																"src": "7182:58:10"
															},
															"nativeSrc": "7182:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "7182:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7261:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7261:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7269:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7269:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7257:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7257:3:10"
																		},
																		"nativeSrc": "7257:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7257:15:10"
																	},
																	{
																		"hexValue": "6e6f74206265666f726520636c6f73696e672074696d65",
																		"kind": "string",
																		"nativeSrc": "7274:25:10",
																		"nodeType": "YulLiteral",
																		"src": "7274:25:10",
																		"type": "",
																		"value": "not before closing time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7250:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7250:6:10"
																},
																"nativeSrc": "7250:50:10",
																"nodeType": "YulFunctionCall",
																"src": "7250:50:10"
															},
															"nativeSrc": "7250:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "7250:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b",
												"nativeSrc": "7065:242:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7163:6:10",
														"nodeType": "YulTypedName",
														"src": "7163:6:10",
														"type": ""
													}
												],
												"src": "7065:242:10"
											},
											{
												"body": {
													"nativeSrc": "7459:220:10",
													"nodeType": "YulBlock",
													"src": "7459:220:10",
													"statements": [
														{
															"nativeSrc": "7469:74:10",
															"nodeType": "YulAssignment",
															"src": "7469:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7535:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7535:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7540:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7540:2:10",
																		"type": "",
																		"value": "55"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7476:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7476:58:10"
																},
																"nativeSrc": "7476:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7476:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7469:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7469:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7641:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7641:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b",
																	"nativeSrc": "7552:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7552:88:10"
																},
																"nativeSrc": "7552:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7552:93:10"
															},
															"nativeSrc": "7552:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7552:93:10"
														},
														{
															"nativeSrc": "7654:19:10",
															"nodeType": "YulAssignment",
															"src": "7654:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7665:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7665:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7670:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7670:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7661:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7661:3:10"
																},
																"nativeSrc": "7661:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7661:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7654:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7654:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7313:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7447:3:10",
														"nodeType": "YulTypedName",
														"src": "7447:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7455:3:10",
														"nodeType": "YulTypedName",
														"src": "7455:3:10",
														"type": ""
													}
												],
												"src": "7313:366:10"
											},
											{
												"body": {
													"nativeSrc": "7856:248:10",
													"nodeType": "YulBlock",
													"src": "7856:248:10",
													"statements": [
														{
															"nativeSrc": "7866:26:10",
															"nodeType": "YulAssignment",
															"src": "7866:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7878:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7878:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7889:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7874:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7874:3:10"
																},
																"nativeSrc": "7874:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7874:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7866:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7866:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7913:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7913:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7924:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7924:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7909:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7909:3:10"
																		},
																		"nativeSrc": "7909:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7909:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7932:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7932:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7938:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7938:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7928:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7928:3:10"
																		},
																		"nativeSrc": "7928:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7928:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7902:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7902:6:10"
																},
																"nativeSrc": "7902:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7902:47:10"
															},
															"nativeSrc": "7902:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7902:47:10"
														},
														{
															"nativeSrc": "7958:139:10",
															"nodeType": "YulAssignment",
															"src": "7958:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8092:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8092:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7966:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7966:124:10"
																},
																"nativeSrc": "7966:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7966:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7958:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7958:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7685:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7836:9:10",
														"nodeType": "YulTypedName",
														"src": "7836:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7851:4:10",
														"nodeType": "YulTypedName",
														"src": "7851:4:10",
														"type": ""
													}
												],
												"src": "7685:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$250(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$250(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$250(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$250_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$250(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_address_payablet_contract$_IERC20_$250_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_contract$_IERC20_$250_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: rate is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: wallet is the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: token is the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"TimedCrowdsale: opening time is \")\n\n        mstore(add(memPtr, 32), \"before current time\")\n\n    }\n\n    function abi_encode_t_stringliteral_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"TimedCrowdsale: opening time is \")\n\n        mstore(add(memPtr, 32), \"not before closing time\")\n\n    }\n\n    function abi_encode_t_stringliteral_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200177838038062001778833981810160405281019062000036919062000387565b82828260015f819055505f831162000085576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007c9062000469565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000f6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ed90620004fd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000167576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200015e9062000591565b60405180910390fd5b826003819055508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050504285101562000237576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200022e9062000625565b60405180910390fd5b8484116200027c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200027390620006b9565b60405180910390fd5b84600581905550836006819055505050505050620006d9565b5f80fd5b5f819050919050565b620002ad8162000299565b8114620002b8575f80fd5b50565b5f81519050620002cb81620002a2565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002fc82620002d1565b9050919050565b6200030e81620002f0565b811462000319575f80fd5b50565b5f815190506200032c8162000303565b92915050565b5f6200033e82620002d1565b9050919050565b5f620003518262000332565b9050919050565b620003638162000345565b81146200036e575f80fd5b50565b5f81519050620003818162000358565b92915050565b5f805f805f60a08688031215620003a357620003a262000295565b5b5f620003b288828901620002bb565b9550506020620003c588828901620002bb565b9450506040620003d888828901620002bb565b9350506060620003eb888289016200031c565b9250506080620003fe8882890162000371565b9150509295509295909350565b5f82825260208201905092915050565b7f43726f776473616c653a207261746520697320300000000000000000000000005f82015250565b5f620004516014836200040b565b91506200045e826200041b565b602082019050919050565b5f6020820190508181035f830152620004828162000443565b9050919050565b7f43726f776473616c653a2077616c6c657420697320746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f620004e56025836200040b565b9150620004f28262000489565b604082019050919050565b5f6020820190508181035f8301526200051681620004d7565b9050919050565b7f43726f776473616c653a20746f6b656e20697320746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f620005796024836200040b565b915062000586826200051d565b604082019050919050565b5f6020820190508181035f830152620005aa816200056b565b9050919050565b7f54696d656443726f776473616c653a206f70656e696e672074696d65206973205f8201527f6265666f72652063757272656e742074696d6500000000000000000000000000602082015250565b5f6200060d6033836200040b565b91506200061a82620005b1565b604082019050919050565b5f6020820190508181035f8301526200063e81620005ff565b9050919050565b7f54696d656443726f776473616c653a206f70656e696e672074696d65206973205f8201527f6e6f74206265666f726520636c6f73696e672074696d65000000000000000000602082015250565b5f620006a16037836200040b565b9150620006ae8262000645565b604082019050919050565b5f6020820190508181035f830152620006d28162000693565b9050919050565b61109180620006e75f395ff3fe608060405260043610610089575f3560e01c80634b6753bc116100585780634b6753bc1461015a578063521eb27314610184578063b7a8807c146101ae578063ec8ac4d8146101d8578063fc0c546a146101f4576100a0565b80631515bc2b146100b25780632c4e722e146100dc5780634042b66f1461010657806347535d7b14610130576100a0565b366100a05761009e61009961021e565b610225565b005b6100b06100ab61021e565b610225565b005b3480156100bd575f80fd5b506100c6610303565b6040516100d3919061093a565b60405180910390f35b3480156100e7575f80fd5b506100f061030e565b6040516100fd919061096b565b60405180910390f35b348015610111575f80fd5b5061011a610317565b604051610127919061096b565b60405180910390f35b34801561013b575f80fd5b50610144610320565b604051610151919061093a565b60405180910390f35b348015610165575f80fd5b5061016e61033a565b60405161017b919061096b565b60405180910390f35b34801561018f575f80fd5b50610198610343565b6040516101a591906109c3565b60405180910390f35b3480156101b9575f80fd5b506101c261036b565b6040516101cf919061096b565b60405180910390f35b6101f260048036038101906101ed9190610a1b565b610225565b005b3480156101ff575f80fd5b50610208610374565b6040516102159190610aa1565b60405180910390f35b5f33905090565b61022d61039c565b5f34905061023b82826103e9565b5f6102458261043e565b905061025c8260045461045b90919063ffffffff16565b60048190555061026c8382610470565b8273ffffffffffffffffffffffffffffffffffffffff1661028b61021e565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b84846040516102d2929190610aba565b60405180910390a36102e4838361047e565b6102ec610482565b6102f683836104e9565b50506103006104ed565b50565b5f6006544211905090565b5f600354905090565b5f600454905090565b5f600554421015801561033557506006544211155b905090565b5f600654905090565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f600554905090565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025f54036103e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d790610b3b565b60405180910390fd5b60025f81905550565b6103f1610320565b610430576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042790610ba3565b60405180910390fd5b61043a82826104f6565b5050565b5f610454600354836105aa90919063ffffffff16565b9050919050565b5f81836104689190610bee565b905092915050565b61047a82826105bf565b5050565b5050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f193505050501580156104e6573d5f803e3d5ffd5b50565b5050565b60015f81905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610564576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055b90610c91565b60405180910390fd5b5f81036105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059d90610cf9565b60405180910390fd5b5050565b5f81836105b79190610d17565b905092915050565b61060b828260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661060f9092919063ffffffff16565b5050565b6106908363a9059cbb60e01b848460405160240161062e929190610d67565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610695565b505050565b5f6106f6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661075b9092919063ffffffff16565b90505f815114806107175750808060200190518101906107169190610db8565b5b610756576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074d90610e53565b60405180910390fd5b505050565b606061076984845f85610772565b90509392505050565b6060824710156107b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ae90610ee1565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff1685876040516107df9190610f6b565b5f6040518083038185875af1925050503d805f8114610819576040519150601f19603f3d011682016040523d82523d5f602084013e61081e565b606091505b509150915061082f8783838761083b565b92505050949350505050565b6060831561089c575f83510361089457610854856108af565b610893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088a90610fcb565b60405180910390fd5b5b8290506108a7565b6108a683836108d1565b5b949350505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f825111156108e35781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610917919061103b565b60405180910390fd5b5f8115159050919050565b61093481610920565b82525050565b5f60208201905061094d5f83018461092b565b92915050565b5f819050919050565b61096581610953565b82525050565b5f60208201905061097e5f83018461095c565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109ad82610984565b9050919050565b6109bd816109a3565b82525050565b5f6020820190506109d65f8301846109b4565b92915050565b5f80fd5b5f6109ea82610984565b9050919050565b6109fa816109e0565b8114610a04575f80fd5b50565b5f81359050610a15816109f1565b92915050565b5f60208284031215610a3057610a2f6109dc565b5b5f610a3d84828501610a07565b91505092915050565b5f819050919050565b5f610a69610a64610a5f84610984565b610a46565b610984565b9050919050565b5f610a7a82610a4f565b9050919050565b5f610a8b82610a70565b9050919050565b610a9b81610a81565b82525050565b5f602082019050610ab45f830184610a92565b92915050565b5f604082019050610acd5f83018561095c565b610ada602083018461095c565b9392505050565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610b25601f83610ae1565b9150610b3082610af1565b602082019050919050565b5f6020820190508181035f830152610b5281610b19565b9050919050565b7f54696d656443726f776473616c653a206e6f74206f70656e00000000000000005f82015250565b5f610b8d601883610ae1565b9150610b9882610b59565b602082019050919050565b5f6020820190508181035f830152610bba81610b81565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610bf882610953565b9150610c0383610953565b9250828201905080821115610c1b57610c1a610bc1565b5b92915050565b7f43726f776473616c653a2062656e656669636961727920697320746865207a655f8201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b5f610c7b602a83610ae1565b9150610c8682610c21565b604082019050919050565b5f6020820190508181035f830152610ca881610c6f565b9050919050565b7f43726f776473616c653a20776569416d6f756e742069732030000000000000005f82015250565b5f610ce3601983610ae1565b9150610cee82610caf565b602082019050919050565b5f6020820190508181035f830152610d1081610cd7565b9050919050565b5f610d2182610953565b9150610d2c83610953565b9250828202610d3a81610953565b91508282048414831517610d5157610d50610bc1565b5b5092915050565b610d61816109e0565b82525050565b5f604082019050610d7a5f830185610d58565b610d87602083018461095c565b9392505050565b610d9781610920565b8114610da1575f80fd5b50565b5f81519050610db281610d8e565b92915050565b5f60208284031215610dcd57610dcc6109dc565b5b5f610dda84828501610da4565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f610e3d602a83610ae1565b9150610e4882610de3565b604082019050919050565b5f6020820190508181035f830152610e6a81610e31565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f610ecb602683610ae1565b9150610ed682610e71565b604082019050919050565b5f6020820190508181035f830152610ef881610ebf565b9050919050565b5f81519050919050565b5f81905092915050565b5f5b83811015610f30578082015181840152602081019050610f15565b5f8484015250505050565b5f610f4582610eff565b610f4f8185610f09565b9350610f5f818560208601610f13565b80840191505092915050565b5f610f768284610f3b565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f610fb5601d83610ae1565b9150610fc082610f81565b602082019050919050565b5f6020820190508181035f830152610fe281610fa9565b9050919050565b5f81519050919050565b5f601f19601f8301169050919050565b5f61100d82610fe9565b6110178185610ae1565b9350611027818560208601610f13565b61103081610ff3565b840191505092915050565b5f6020820190508181035f8301526110538184611003565b90509291505056fea264697066735822122040d24c468bd4cd432052781ecc08630dedb5beb320c8eb657eed8ab2ccaa5c2464736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1778 CODESIZE SUB DUP1 PUSH3 0x1778 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x387 JUMP JUMPDEST DUP3 DUP3 DUP3 PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 DUP4 GT PUSH3 0x85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7C SWAP1 PUSH3 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xED SWAP1 PUSH3 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x167 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x15E SWAP1 PUSH3 0x591 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP TIMESTAMP DUP6 LT ISZERO PUSH3 0x237 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x22E SWAP1 PUSH3 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP5 GT PUSH3 0x27C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x273 SWAP1 PUSH3 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0x6D9 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2AD DUP2 PUSH3 0x299 JUMP JUMPDEST DUP2 EQ PUSH3 0x2B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2CB DUP2 PUSH3 0x2A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2FC DUP3 PUSH3 0x2D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x30E DUP2 PUSH3 0x2F0 JUMP JUMPDEST DUP2 EQ PUSH3 0x319 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x32C DUP2 PUSH3 0x303 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x33E DUP3 PUSH3 0x2D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x351 DUP3 PUSH3 0x332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x363 DUP2 PUSH3 0x345 JUMP JUMPDEST DUP2 EQ PUSH3 0x36E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x381 DUP2 PUSH3 0x358 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x3A3 JUMPI PUSH3 0x3A2 PUSH3 0x295 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x3B2 DUP9 DUP3 DUP10 ADD PUSH3 0x2BB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x3C5 DUP9 DUP3 DUP10 ADD PUSH3 0x2BB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x3D8 DUP9 DUP3 DUP10 ADD PUSH3 0x2BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x3EB DUP9 DUP3 DUP10 ADD PUSH3 0x31C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x3FE DUP9 DUP3 DUP10 ADD PUSH3 0x371 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20726174652069732030000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x451 PUSH1 0x14 DUP4 PUSH3 0x40B JUMP JUMPDEST SWAP2 POP PUSH3 0x45E DUP3 PUSH3 0x41B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x482 DUP2 PUSH3 0x443 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2077616C6C657420697320746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x4E5 PUSH1 0x25 DUP4 PUSH3 0x40B JUMP JUMPDEST SWAP2 POP PUSH3 0x4F2 DUP3 PUSH3 0x489 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x516 DUP2 PUSH3 0x4D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20746F6B656E20697320746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x579 PUSH1 0x24 DUP4 PUSH3 0x40B JUMP JUMPDEST SWAP2 POP PUSH3 0x586 DUP3 PUSH3 0x51D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x5AA DUP2 PUSH3 0x56B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696D656443726F776473616C653A206F70656E696E672074696D6520697320 PUSH0 DUP3 ADD MSTORE PUSH32 0x6265666F72652063757272656E742074696D6500000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x60D PUSH1 0x33 DUP4 PUSH3 0x40B JUMP JUMPDEST SWAP2 POP PUSH3 0x61A DUP3 PUSH3 0x5B1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x63E DUP2 PUSH3 0x5FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696D656443726F776473616C653A206F70656E696E672074696D6520697320 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E6F74206265666F726520636C6F73696E672074696D65000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x6A1 PUSH1 0x37 DUP4 PUSH3 0x40B JUMP JUMPDEST SWAP2 POP PUSH3 0x6AE DUP3 PUSH3 0x645 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x6D2 DUP2 PUSH3 0x693 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1091 DUP1 PUSH3 0x6E7 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x89 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B6753BC GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x4B6753BC EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xB7A8807C EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1F4 JUMPI PUSH2 0xA0 JUMP JUMPDEST DUP1 PUSH4 0x1515BC2B EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x47535D7B EQ PUSH2 0x130 JUMPI PUSH2 0xA0 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA0 JUMPI PUSH2 0x9E PUSH2 0x99 PUSH2 0x21E JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH2 0xAB PUSH2 0x21E JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC6 PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x111 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11A PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xA1B JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x39C JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH2 0x23B DUP3 DUP3 PUSH2 0x3E9 JUMP JUMPDEST PUSH0 PUSH2 0x245 DUP3 PUSH2 0x43E JUMP JUMPDEST SWAP1 POP PUSH2 0x25C DUP3 PUSH1 0x4 SLOAD PUSH2 0x45B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x26C DUP4 DUP3 PUSH2 0x470 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28B PUSH2 0x21E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP3 SWAP2 SWAP1 PUSH2 0xABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2E4 DUP4 DUP4 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x482 JUMP JUMPDEST PUSH2 0x2F6 DUP4 DUP4 PUSH2 0x4E9 JUMP JUMPDEST POP POP PUSH2 0x300 PUSH2 0x4ED JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD TIMESTAMP GT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x335 JUMPI POP PUSH1 0x6 SLOAD TIMESTAMP GT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x3E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x3F1 PUSH2 0x320 JUMP JUMPDEST PUSH2 0x430 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x427 SWAP1 PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x43A DUP3 DUP3 PUSH2 0x4F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x454 PUSH1 0x3 SLOAD DUP4 PUSH2 0x5AA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x468 SWAP2 SWAP1 PUSH2 0xBEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47A DUP3 DUP3 PUSH2 0x5BF JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55B SWAP1 PUSH2 0xC91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59D SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0xD17 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x60B DUP3 DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x60F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x690 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x62E SWAP3 SWAP2 SWAP1 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x695 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6F6 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x75B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x717 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x716 SWAP2 SWAP1 PUSH2 0xDB8 JUMP JUMPDEST JUMPDEST PUSH2 0x756 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74D SWAP1 PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x769 DUP5 DUP5 PUSH0 DUP6 PUSH2 0x772 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x81E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x82F DUP8 DUP4 DUP4 DUP8 PUSH2 0x83B JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x89C JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x894 JUMPI PUSH2 0x854 DUP6 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88A SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x8A6 DUP4 DUP4 PUSH2 0x8D1 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x8E3 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x917 SWAP2 SWAP1 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x934 DUP2 PUSH2 0x920 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x94D PUSH0 DUP4 ADD DUP5 PUSH2 0x92B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x965 DUP2 PUSH2 0x953 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x97E PUSH0 DUP4 ADD DUP5 PUSH2 0x95C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9AD DUP3 PUSH2 0x984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BD DUP2 PUSH2 0x9A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x9B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x9EA DUP3 PUSH2 0x984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FA DUP2 PUSH2 0x9E0 JUMP JUMPDEST DUP2 EQ PUSH2 0xA04 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA15 DUP2 PUSH2 0x9F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA30 JUMPI PUSH2 0xA2F PUSH2 0x9DC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA3D DUP5 DUP3 DUP6 ADD PUSH2 0xA07 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA69 PUSH2 0xA64 PUSH2 0xA5F DUP5 PUSH2 0x984 JUMP JUMPDEST PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA7A DUP3 PUSH2 0xA4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA8B DUP3 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9B DUP2 PUSH2 0xA81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB4 PUSH0 DUP4 ADD DUP5 PUSH2 0xA92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xACD PUSH0 DUP4 ADD DUP6 PUSH2 0x95C JUMP JUMPDEST PUSH2 0xADA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x95C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB25 PUSH1 0x1F DUP4 PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xB30 DUP3 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB52 DUP2 PUSH2 0xB19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696D656443726F776473616C653A206E6F74206F70656E0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB8D PUSH1 0x18 DUP4 PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xB98 DUP3 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBBA DUP2 PUSH2 0xB81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBF8 DUP3 PUSH2 0x953 JUMP JUMPDEST SWAP2 POP PUSH2 0xC03 DUP4 PUSH2 0x953 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC1B JUMPI PUSH2 0xC1A PUSH2 0xBC1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC7B PUSH1 0x2A DUP4 PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xC86 DUP3 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCA8 DUP2 PUSH2 0xC6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCE3 PUSH1 0x19 DUP4 PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xCEE DUP3 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD10 DUP2 PUSH2 0xCD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD21 DUP3 PUSH2 0x953 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2C DUP4 PUSH2 0x953 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xD3A DUP2 PUSH2 0x953 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xD51 JUMPI PUSH2 0xD50 PUSH2 0xBC1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD61 DUP2 PUSH2 0x9E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD7A PUSH0 DUP4 ADD DUP6 PUSH2 0xD58 JUMP JUMPDEST PUSH2 0xD87 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x95C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD97 DUP2 PUSH2 0x920 JUMP JUMPDEST DUP2 EQ PUSH2 0xDA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDB2 DUP2 PUSH2 0xD8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCC PUSH2 0x9DC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDDA DUP5 DUP3 DUP6 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE3D PUSH1 0x2A DUP4 PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xE48 DUP3 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE6A DUP2 PUSH2 0xE31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xECB PUSH1 0x26 DUP4 PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xED6 DUP3 PUSH2 0xE71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEF8 DUP2 PUSH2 0xEBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF30 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF15 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF45 DUP3 PUSH2 0xEFF JUMP JUMPDEST PUSH2 0xF4F DUP2 DUP6 PUSH2 0xF09 JUMP JUMPDEST SWAP4 POP PUSH2 0xF5F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF13 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF76 DUP3 DUP5 PUSH2 0xF3B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFB5 PUSH1 0x1D DUP4 PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xFC0 DUP3 PUSH2 0xF81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFE2 DUP2 PUSH2 0xFA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x100D DUP3 PUSH2 0xFE9 JUMP JUMPDEST PUSH2 0x1017 DUP2 DUP6 PUSH2 0xAE1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1027 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF13 JUMP JUMPDEST PUSH2 0x1030 DUP2 PUSH2 0xFF3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1053 DUP2 DUP5 PUSH2 0x1003 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xD2 0x4C CHAINID DUP12 0xD4 0xCD NUMBER KECCAK256 MSTORE PUSH25 0x1ECC08630DEDB5BEB320C8EB657EED8AB2CCAA5C2464736F6C PUSH4 0x43000815 STOP CALLER ",
							"sourceMap": "320:3153:9:-:0;;;1077:566;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1204:6;1212:8;1222:7;1716:1:1;1821:7;:22;;;;2644:1:8;2635:6;:10;2627:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;2709:1;2689:22;;:8;:22;;;2681:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2800:1;2772:30;;2780:7;2772:30;;;2764:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2864:6;2856:5;:14;;;;2891:8;2881:7;;:18;;;;;;;;;;;;;;;;;;2919:7;2910:6;;:16;;;;;;;;;;;;;;;;;;2545:389;;;1322:15:9::1;1305:13;:32;;1297:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;1482:13;1466;:29;1458:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1583:13;1568:12;:28;;;;1622:13;1607:12;:28;;;;1077:566:::0;;;;;320:3153;;88:117:10;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:104::-;871:7;900:24;918:5;900:24;:::i;:::-;889:35;;826:104;;;:::o;936:138::-;1017:32;1043:5;1017:32;:::i;:::-;1010:5;1007:43;997:71;;1064:1;1061;1054:12;997:71;936:138;:::o;1080:159::-;1145:5;1176:6;1170:13;1161:22;;1192:41;1227:5;1192:41;:::i;:::-;1080:159;;;;:::o;1245:96::-;1282:7;1311:24;1329:5;1311:24;:::i;:::-;1300:35;;1245:96;;;:::o;1347:110::-;1398:7;1427:24;1445:5;1427:24;:::i;:::-;1416:35;;1347:110;;;:::o;1463:150::-;1550:38;1582:5;1550:38;:::i;:::-;1543:5;1540:49;1530:77;;1603:1;1600;1593:12;1530:77;1463:150;:::o;1619:171::-;1690:5;1721:6;1715:13;1706:22;;1737:47;1778:5;1737:47;:::i;:::-;1619:171;;;;:::o;1796:1021::-;1924:6;1932;1940;1948;1956;2005:3;1993:9;1984:7;1980:23;1976:33;1973:120;;;2012:79;;:::i;:::-;1973:120;2132:1;2157:64;2213:7;2204:6;2193:9;2189:22;2157:64;:::i;:::-;2147:74;;2103:128;2270:2;2296:64;2352:7;2343:6;2332:9;2328:22;2296:64;:::i;:::-;2286:74;;2241:129;2409:2;2435:64;2491:7;2482:6;2471:9;2467:22;2435:64;:::i;:::-;2425:74;;2380:129;2548:2;2574:72;2638:7;2629:6;2618:9;2614:22;2574:72;:::i;:::-;2564:82;;2519:137;2695:3;2722:78;2792:7;2783:6;2772:9;2768:22;2722:78;:::i;:::-;2712:88;;2666:144;1796:1021;;;;;;;;:::o;2823:169::-;2907:11;2941:6;2936:3;2929:19;2981:4;2976:3;2972:14;2957:29;;2823:169;;;;:::o;2998:170::-;3138:22;3134:1;3126:6;3122:14;3115:46;2998:170;:::o;3174:366::-;3316:3;3337:67;3401:2;3396:3;3337:67;:::i;:::-;3330:74;;3413:93;3502:3;3413:93;:::i;:::-;3531:2;3526:3;3522:12;3515:19;;3174:366;;;:::o;3546:419::-;3712:4;3750:2;3739:9;3735:18;3727:26;;3799:9;3793:4;3789:20;3785:1;3774:9;3770:17;3763:47;3827:131;3953:4;3827:131;:::i;:::-;3819:139;;3546:419;;;:::o;3971:224::-;4111:34;4107:1;4099:6;4095:14;4088:58;4180:7;4175:2;4167:6;4163:15;4156:32;3971:224;:::o;4201:366::-;4343:3;4364:67;4428:2;4423:3;4364:67;:::i;:::-;4357:74;;4440:93;4529:3;4440:93;:::i;:::-;4558:2;4553:3;4549:12;4542:19;;4201:366;;;:::o;4573:419::-;4739:4;4777:2;4766:9;4762:18;4754:26;;4826:9;4820:4;4816:20;4812:1;4801:9;4797:17;4790:47;4854:131;4980:4;4854:131;:::i;:::-;4846:139;;4573:419;;;:::o;4998:223::-;5138:34;5134:1;5126:6;5122:14;5115:58;5207:6;5202:2;5194:6;5190:15;5183:31;4998:223;:::o;5227:366::-;5369:3;5390:67;5454:2;5449:3;5390:67;:::i;:::-;5383:74;;5466:93;5555:3;5466:93;:::i;:::-;5584:2;5579:3;5575:12;5568:19;;5227:366;;;:::o;5599:419::-;5765:4;5803:2;5792:9;5788:18;5780:26;;5852:9;5846:4;5842:20;5838:1;5827:9;5823:17;5816:47;5880:131;6006:4;5880:131;:::i;:::-;5872:139;;5599:419;;;:::o;6024:238::-;6164:34;6160:1;6152:6;6148:14;6141:58;6233:21;6228:2;6220:6;6216:15;6209:46;6024:238;:::o;6268:366::-;6410:3;6431:67;6495:2;6490:3;6431:67;:::i;:::-;6424:74;;6507:93;6596:3;6507:93;:::i;:::-;6625:2;6620:3;6616:12;6609:19;;6268:366;;;:::o;6640:419::-;6806:4;6844:2;6833:9;6829:18;6821:26;;6893:9;6887:4;6883:20;6879:1;6868:9;6864:17;6857:47;6921:131;7047:4;6921:131;:::i;:::-;6913:139;;6640:419;;;:::o;7065:242::-;7205:34;7201:1;7193:6;7189:14;7182:58;7274:25;7269:2;7261:6;7257:15;7250:50;7065:242;:::o;7313:366::-;7455:3;7476:67;7540:2;7535:3;7476:67;:::i;:::-;7469:74;;7552:93;7641:3;7552:93;:::i;:::-;7670:2;7665:3;7661:12;7654:19;;7313:366;;;:::o;7685:419::-;7851:4;7889:2;7878:9;7874:18;7866:26;;7938:9;7932:4;7928:20;7924:1;7913:9;7909:17;7902:47;7966:131;8092:4;7966:131;:::i;:::-;7958:139;;7685:419;;;:::o;320:3153:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1429": {
									"entryPoint": null,
									"id": 1429,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1438": {
									"entryPoint": null,
									"id": 1438,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_613": {
									"entryPoint": 1685,
									"id": 613,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_deliverTokens_1586": {
									"entryPoint": 1471,
									"id": 1586,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_forwardFunds_1635": {
									"entryPoint": 1154,
									"id": 1635,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTokenAmount_1623": {
									"entryPoint": 1086,
									"id": 1623,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_1004": {
									"entryPoint": 542,
									"id": 1004,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_160": {
									"entryPoint": 1261,
									"id": 160,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_152": {
									"entryPoint": 924,
									"id": 152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_postValidatePurchase_1570": {
									"entryPoint": 1257,
									"id": 1570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_1561": {
									"entryPoint": 1270,
									"id": 1561,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_1779": {
									"entryPoint": 1001,
									"id": 1779,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_processPurchase_1600": {
									"entryPoint": 1136,
									"id": 1600,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_991": {
									"entryPoint": 2257,
									"id": 991,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_updatePurchasingState_1609": {
									"entryPoint": 1150,
									"id": 1609,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_1190": {
									"entryPoint": 1115,
									"id": 1190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@buyTokens_1533": {
									"entryPoint": 549,
									"id": 1533,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@closingTime_1731": {
									"entryPoint": 826,
									"id": 1731,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionCallWithValue_816": {
									"entryPoint": 1906,
									"id": 816,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_752": {
									"entryPoint": 1883,
									"id": 752,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@hasClosed_1760": {
									"entryPoint": 771,
									"id": 1760,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_680": {
									"entryPoint": 2223,
									"id": 680,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isOpen_1748": {
									"entryPoint": 800,
									"id": 1748,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mul_1220": {
									"entryPoint": 1450,
									"id": 1220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@openingTime_1722": {
									"entryPoint": 875,
									"id": 1722,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rate_1466": {
									"entryPoint": 782,
									"id": 1466,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransfer_319": {
									"entryPoint": 1551,
									"id": 319,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@token_1448": {
									"entryPoint": 884,
									"id": 1448,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_947": {
									"entryPoint": 2107,
									"id": 947,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@wallet_1457": {
									"entryPoint": 835,
									"id": 1457,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@weiRaised_1475": {
									"entryPoint": 791,
									"id": 1475,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 2484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$250_to_t_address_fromStack": {
									"entryPoint": 2706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 2499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3431,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$250__to_t_address__fromStack_reversed": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2746,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 2467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$250_to_t_address": {
									"entryPoint": 2689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3859,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3009,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739": {
									"entryPoint": 2905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e": {
									"entryPoint": 3105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 3969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 3555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 2801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c": {
									"entryPoint": 3247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14962:10",
										"nodeType": "YulBlock",
										"src": "0:14962:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "49:48:10",
													"nodeType": "YulBlock",
													"src": "49:48:10",
													"statements": [
														{
															"nativeSrc": "59:32:10",
															"nodeType": "YulAssignment",
															"src": "59:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "84:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "77:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:10"
																		},
																		"nativeSrc": "77:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "70:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:10"
																},
																"nativeSrc": "70:21:10",
																"nodeType": "YulFunctionCall",
																"src": "70:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "59:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31:5:10",
														"nodeType": "YulTypedName",
														"src": "31:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "41:7:10",
														"nodeType": "YulTypedName",
														"src": "41:7:10",
														"type": ""
													}
												],
												"src": "7:90:10"
											},
											{
												"body": {
													"nativeSrc": "162:50:10",
													"nodeType": "YulBlock",
													"src": "162:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "179:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "199:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "184:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:10"
																		},
																		"nativeSrc": "184:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "172:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:10"
																},
																"nativeSrc": "172:34:10",
																"nodeType": "YulFunctionCall",
																"src": "172:34:10"
															},
															"nativeSrc": "172:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "172:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "103:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "150:5:10",
														"nodeType": "YulTypedName",
														"src": "150:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "157:3:10",
														"nodeType": "YulTypedName",
														"src": "157:3:10",
														"type": ""
													}
												],
												"src": "103:109:10"
											},
											{
												"body": {
													"nativeSrc": "310:118:10",
													"nodeType": "YulBlock",
													"src": "310:118:10",
													"statements": [
														{
															"nativeSrc": "320:26:10",
															"nodeType": "YulAssignment",
															"src": "320:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "332:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "343:2:10",
																		"nodeType": "YulLiteral",
																		"src": "343:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "328:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:10"
																},
																"nativeSrc": "328:18:10",
																"nodeType": "YulFunctionCall",
																"src": "328:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "320:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "394:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "418:1:10",
																				"nodeType": "YulLiteral",
																				"src": "418:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "403:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:10"
																		},
																		"nativeSrc": "403:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "356:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:10"
																},
																"nativeSrc": "356:65:10",
																"nodeType": "YulFunctionCall",
																"src": "356:65:10"
															},
															"nativeSrc": "356:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "356:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "218:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:10",
														"nodeType": "YulTypedName",
														"src": "282:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "294:6:10",
														"nodeType": "YulTypedName",
														"src": "294:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "305:4:10",
														"nodeType": "YulTypedName",
														"src": "305:4:10",
														"type": ""
													}
												],
												"src": "218:210:10"
											},
											{
												"body": {
													"nativeSrc": "479:32:10",
													"nodeType": "YulBlock",
													"src": "479:32:10",
													"statements": [
														{
															"nativeSrc": "489:16:10",
															"nodeType": "YulAssignment",
															"src": "489:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "500:5:10",
																"nodeType": "YulIdentifier",
																"src": "500:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "489:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "489:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "434:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "461:5:10",
														"nodeType": "YulTypedName",
														"src": "461:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "471:7:10",
														"nodeType": "YulTypedName",
														"src": "471:7:10",
														"type": ""
													}
												],
												"src": "434:77:10"
											},
											{
												"body": {
													"nativeSrc": "582:53:10",
													"nodeType": "YulBlock",
													"src": "582:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "599:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "599:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "622:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "622:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "604:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "604:17:10"
																		},
																		"nativeSrc": "604:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "604:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "592:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "592:6:10"
																},
																"nativeSrc": "592:37:10",
																"nodeType": "YulFunctionCall",
																"src": "592:37:10"
															},
															"nativeSrc": "592:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "592:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "517:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:10",
														"nodeType": "YulTypedName",
														"src": "570:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "577:3:10",
														"nodeType": "YulTypedName",
														"src": "577:3:10",
														"type": ""
													}
												],
												"src": "517:118:10"
											},
											{
												"body": {
													"nativeSrc": "739:124:10",
													"nodeType": "YulBlock",
													"src": "739:124:10",
													"statements": [
														{
															"nativeSrc": "749:26:10",
															"nodeType": "YulAssignment",
															"src": "749:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "761:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "761:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "772:2:10",
																		"nodeType": "YulLiteral",
																		"src": "772:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "757:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "757:3:10"
																},
																"nativeSrc": "757:18:10",
																"nodeType": "YulFunctionCall",
																"src": "757:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "749:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "749:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "829:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "829:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "842:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "842:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "853:1:10",
																				"nodeType": "YulLiteral",
																				"src": "853:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "838:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "838:3:10"
																		},
																		"nativeSrc": "838:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "838:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "785:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "785:43:10"
																},
																"nativeSrc": "785:71:10",
																"nodeType": "YulFunctionCall",
																"src": "785:71:10"
															},
															"nativeSrc": "785:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "785:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "641:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "711:9:10",
														"nodeType": "YulTypedName",
														"src": "711:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "723:6:10",
														"nodeType": "YulTypedName",
														"src": "723:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "734:4:10",
														"nodeType": "YulTypedName",
														"src": "734:4:10",
														"type": ""
													}
												],
												"src": "641:222:10"
											},
											{
												"body": {
													"nativeSrc": "914:81:10",
													"nodeType": "YulBlock",
													"src": "914:81:10",
													"statements": [
														{
															"nativeSrc": "924:65:10",
															"nodeType": "YulAssignment",
															"src": "924:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "939:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "939:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "946:42:10",
																		"nodeType": "YulLiteral",
																		"src": "946:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:10"
																},
																"nativeSrc": "935:54:10",
																"nodeType": "YulFunctionCall",
																"src": "935:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "924:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "924:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "869:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "896:5:10",
														"nodeType": "YulTypedName",
														"src": "896:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "906:7:10",
														"nodeType": "YulTypedName",
														"src": "906:7:10",
														"type": ""
													}
												],
												"src": "869:126:10"
											},
											{
												"body": {
													"nativeSrc": "1054:51:10",
													"nodeType": "YulBlock",
													"src": "1054:51:10",
													"statements": [
														{
															"nativeSrc": "1064:35:10",
															"nodeType": "YulAssignment",
															"src": "1064:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1093:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1093:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1075:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1075:17:10"
																},
																"nativeSrc": "1075:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1075:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1064:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1064:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "1001:104:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1036:5:10",
														"nodeType": "YulTypedName",
														"src": "1036:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1046:7:10",
														"nodeType": "YulTypedName",
														"src": "1046:7:10",
														"type": ""
													}
												],
												"src": "1001:104:10"
											},
											{
												"body": {
													"nativeSrc": "1192:61:10",
													"nodeType": "YulBlock",
													"src": "1192:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1209:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1209:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1240:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1240:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "1214:25:10",
																			"nodeType": "YulIdentifier",
																			"src": "1214:25:10"
																		},
																		"nativeSrc": "1214:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1214:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1202:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1202:6:10"
																},
																"nativeSrc": "1202:45:10",
																"nodeType": "YulFunctionCall",
																"src": "1202:45:10"
															},
															"nativeSrc": "1202:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "1202:45:10"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nativeSrc": "1111:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1180:5:10",
														"nodeType": "YulTypedName",
														"src": "1180:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1187:3:10",
														"nodeType": "YulTypedName",
														"src": "1187:3:10",
														"type": ""
													}
												],
												"src": "1111:142:10"
											},
											{
												"body": {
													"nativeSrc": "1373:140:10",
													"nodeType": "YulBlock",
													"src": "1373:140:10",
													"statements": [
														{
															"nativeSrc": "1383:26:10",
															"nodeType": "YulAssignment",
															"src": "1383:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1395:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1395:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1406:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1406:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1391:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1391:3:10"
																},
																"nativeSrc": "1391:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1391:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1383:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1383:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1479:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1479:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1492:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1492:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1503:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1503:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1488:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1488:3:10"
																		},
																		"nativeSrc": "1488:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1488:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nativeSrc": "1419:59:10",
																	"nodeType": "YulIdentifier",
																	"src": "1419:59:10"
																},
																"nativeSrc": "1419:87:10",
																"nodeType": "YulFunctionCall",
																"src": "1419:87:10"
															},
															"nativeSrc": "1419:87:10",
															"nodeType": "YulExpressionStatement",
															"src": "1419:87:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nativeSrc": "1259:254:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1345:9:10",
														"nodeType": "YulTypedName",
														"src": "1345:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1357:6:10",
														"nodeType": "YulTypedName",
														"src": "1357:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1368:4:10",
														"nodeType": "YulTypedName",
														"src": "1368:4:10",
														"type": ""
													}
												],
												"src": "1259:254:10"
											},
											{
												"body": {
													"nativeSrc": "1559:35:10",
													"nodeType": "YulBlock",
													"src": "1559:35:10",
													"statements": [
														{
															"nativeSrc": "1569:19:10",
															"nodeType": "YulAssignment",
															"src": "1569:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1585:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1585:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1579:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1579:5:10"
																},
																"nativeSrc": "1579:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1579:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1569:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1569:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1519:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1552:6:10",
														"nodeType": "YulTypedName",
														"src": "1552:6:10",
														"type": ""
													}
												],
												"src": "1519:75:10"
											},
											{
												"body": {
													"nativeSrc": "1689:28:10",
													"nodeType": "YulBlock",
													"src": "1689:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1706:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1706:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1709:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1709:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1699:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1699:6:10"
																},
																"nativeSrc": "1699:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1699:12:10"
															},
															"nativeSrc": "1699:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1699:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1600:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1600:117:10"
											},
											{
												"body": {
													"nativeSrc": "1812:28:10",
													"nodeType": "YulBlock",
													"src": "1812:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1829:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1829:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1832:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1832:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1822:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1822:6:10"
																},
																"nativeSrc": "1822:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1822:12:10"
															},
															"nativeSrc": "1822:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1822:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1723:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1723:117:10"
											},
											{
												"body": {
													"nativeSrc": "1891:51:10",
													"nodeType": "YulBlock",
													"src": "1891:51:10",
													"statements": [
														{
															"nativeSrc": "1901:35:10",
															"nodeType": "YulAssignment",
															"src": "1901:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1930:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1930:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1912:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1912:17:10"
																},
																"nativeSrc": "1912:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1912:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1901:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1901:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1846:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1873:5:10",
														"nodeType": "YulTypedName",
														"src": "1873:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1883:7:10",
														"nodeType": "YulTypedName",
														"src": "1883:7:10",
														"type": ""
													}
												],
												"src": "1846:96:10"
											},
											{
												"body": {
													"nativeSrc": "1991:79:10",
													"nodeType": "YulBlock",
													"src": "1991:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2048:16:10",
																"nodeType": "YulBlock",
																"src": "2048:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2057:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2057:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2060:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2060:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2050:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2050:6:10"
																			},
																			"nativeSrc": "2050:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2050:12:10"
																		},
																		"nativeSrc": "2050:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2050:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2014:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2014:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2039:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2039:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2021:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2021:17:10"
																				},
																				"nativeSrc": "2021:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2021:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2011:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2011:2:10"
																		},
																		"nativeSrc": "2011:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2011:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2004:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:10"
																},
																"nativeSrc": "2004:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2004:43:10"
															},
															"nativeSrc": "2001:63:10",
															"nodeType": "YulIf",
															"src": "2001:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1948:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1984:5:10",
														"nodeType": "YulTypedName",
														"src": "1984:5:10",
														"type": ""
													}
												],
												"src": "1948:122:10"
											},
											{
												"body": {
													"nativeSrc": "2128:87:10",
													"nodeType": "YulBlock",
													"src": "2128:87:10",
													"statements": [
														{
															"nativeSrc": "2138:29:10",
															"nodeType": "YulAssignment",
															"src": "2138:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2160:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2160:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2147:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2147:12:10"
																},
																"nativeSrc": "2147:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2147:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2138:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2138:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2203:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2203:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2176:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2176:26:10"
																},
																"nativeSrc": "2176:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2176:33:10"
															},
															"nativeSrc": "2176:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2176:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2076:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2106:6:10",
														"nodeType": "YulTypedName",
														"src": "2106:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2114:3:10",
														"nodeType": "YulTypedName",
														"src": "2114:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2122:5:10",
														"nodeType": "YulTypedName",
														"src": "2122:5:10",
														"type": ""
													}
												],
												"src": "2076:139:10"
											},
											{
												"body": {
													"nativeSrc": "2287:263:10",
													"nodeType": "YulBlock",
													"src": "2287:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2333:83:10",
																"nodeType": "YulBlock",
																"src": "2333:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2335:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2335:77:10"
																			},
																			"nativeSrc": "2335:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2335:79:10"
																		},
																		"nativeSrc": "2335:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2335:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2308:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2308:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2317:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2317:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2304:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2304:3:10"
																		},
																		"nativeSrc": "2304:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2304:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2329:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2329:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2300:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2300:3:10"
																},
																"nativeSrc": "2300:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2300:32:10"
															},
															"nativeSrc": "2297:119:10",
															"nodeType": "YulIf",
															"src": "2297:119:10"
														},
														{
															"nativeSrc": "2426:117:10",
															"nodeType": "YulBlock",
															"src": "2426:117:10",
															"statements": [
																{
																	"nativeSrc": "2441:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2441:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2455:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2455:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2445:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2445:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2470:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2470:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2505:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2505:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2516:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2516:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2501:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2501:3:10"
																				},
																				"nativeSrc": "2501:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2501:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2525:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2525:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2480:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2480:20:10"
																		},
																		"nativeSrc": "2480:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2480:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2470:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2470:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2221:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2257:9:10",
														"nodeType": "YulTypedName",
														"src": "2257:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2268:7:10",
														"nodeType": "YulTypedName",
														"src": "2268:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2280:6:10",
														"nodeType": "YulTypedName",
														"src": "2280:6:10",
														"type": ""
													}
												],
												"src": "2221:329:10"
											},
											{
												"body": {
													"nativeSrc": "2588:28:10",
													"nodeType": "YulBlock",
													"src": "2588:28:10",
													"statements": [
														{
															"nativeSrc": "2598:12:10",
															"nodeType": "YulAssignment",
															"src": "2598:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "2605:5:10",
																"nodeType": "YulIdentifier",
																"src": "2605:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2598:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2598:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2556:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2574:5:10",
														"nodeType": "YulTypedName",
														"src": "2574:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2584:3:10",
														"nodeType": "YulTypedName",
														"src": "2584:3:10",
														"type": ""
													}
												],
												"src": "2556:60:10"
											},
											{
												"body": {
													"nativeSrc": "2682:82:10",
													"nodeType": "YulBlock",
													"src": "2682:82:10",
													"statements": [
														{
															"nativeSrc": "2692:66:10",
															"nodeType": "YulAssignment",
															"src": "2692:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2750:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2750:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2732:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2732:17:10"
																				},
																				"nativeSrc": "2732:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2732:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2723:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "2723:8:10"
																		},
																		"nativeSrc": "2723:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2705:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2705:17:10"
																},
																"nativeSrc": "2705:53:10",
																"nodeType": "YulFunctionCall",
																"src": "2705:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2692:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2692:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2622:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2662:5:10",
														"nodeType": "YulTypedName",
														"src": "2662:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2672:9:10",
														"nodeType": "YulTypedName",
														"src": "2672:9:10",
														"type": ""
													}
												],
												"src": "2622:142:10"
											},
											{
												"body": {
													"nativeSrc": "2830:66:10",
													"nodeType": "YulBlock",
													"src": "2830:66:10",
													"statements": [
														{
															"nativeSrc": "2840:50:10",
															"nodeType": "YulAssignment",
															"src": "2840:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2884:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2884:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2853:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2853:30:10"
																},
																"nativeSrc": "2853:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2853:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2840:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2840:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2770:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:10",
														"nodeType": "YulTypedName",
														"src": "2810:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2820:9:10",
														"nodeType": "YulTypedName",
														"src": "2820:9:10",
														"type": ""
													}
												],
												"src": "2770:126:10"
											},
											{
												"body": {
													"nativeSrc": "2976:66:10",
													"nodeType": "YulBlock",
													"src": "2976:66:10",
													"statements": [
														{
															"nativeSrc": "2986:50:10",
															"nodeType": "YulAssignment",
															"src": "2986:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3030:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3030:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2999:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2999:30:10"
																},
																"nativeSrc": "2999:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2999:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2986:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2986:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$250_to_t_address",
												"nativeSrc": "2902:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2956:5:10",
														"nodeType": "YulTypedName",
														"src": "2956:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2966:9:10",
														"nodeType": "YulTypedName",
														"src": "2966:9:10",
														"type": ""
													}
												],
												"src": "2902:140:10"
											},
											{
												"body": {
													"nativeSrc": "3127:80:10",
													"nodeType": "YulBlock",
													"src": "3127:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3144:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3144:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3194:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3194:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$250_to_t_address",
																			"nativeSrc": "3149:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "3149:44:10"
																		},
																		"nativeSrc": "3149:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3137:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3137:6:10"
																},
																"nativeSrc": "3137:64:10",
																"nodeType": "YulFunctionCall",
																"src": "3137:64:10"
															},
															"nativeSrc": "3137:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "3137:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$250_to_t_address_fromStack",
												"nativeSrc": "3048:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3115:5:10",
														"nodeType": "YulTypedName",
														"src": "3115:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3122:3:10",
														"nodeType": "YulTypedName",
														"src": "3122:3:10",
														"type": ""
													}
												],
												"src": "3048:159:10"
											},
											{
												"body": {
													"nativeSrc": "3325:138:10",
													"nodeType": "YulBlock",
													"src": "3325:138:10",
													"statements": [
														{
															"nativeSrc": "3335:26:10",
															"nodeType": "YulAssignment",
															"src": "3335:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3347:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3347:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3358:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3358:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3343:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3343:3:10"
																},
																"nativeSrc": "3343:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3343:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3335:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3335:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3429:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3442:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3442:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3453:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3453:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3438:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3438:3:10"
																		},
																		"nativeSrc": "3438:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3438:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$250_to_t_address_fromStack",
																	"nativeSrc": "3371:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "3371:57:10"
																},
																"nativeSrc": "3371:85:10",
																"nodeType": "YulFunctionCall",
																"src": "3371:85:10"
															},
															"nativeSrc": "3371:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "3371:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$250__to_t_address__fromStack_reversed",
												"nativeSrc": "3213:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3297:9:10",
														"nodeType": "YulTypedName",
														"src": "3297:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3309:6:10",
														"nodeType": "YulTypedName",
														"src": "3309:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3320:4:10",
														"nodeType": "YulTypedName",
														"src": "3320:4:10",
														"type": ""
													}
												],
												"src": "3213:250:10"
											},
											{
												"body": {
													"nativeSrc": "3595:206:10",
													"nodeType": "YulBlock",
													"src": "3595:206:10",
													"statements": [
														{
															"nativeSrc": "3605:26:10",
															"nodeType": "YulAssignment",
															"src": "3605:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3617:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3613:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3613:3:10"
																},
																"nativeSrc": "3613:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3613:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3605:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3605:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3685:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3685:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3698:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3698:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3709:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3709:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3694:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3694:3:10"
																		},
																		"nativeSrc": "3694:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3694:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3641:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3641:43:10"
																},
																"nativeSrc": "3641:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3641:71:10"
															},
															"nativeSrc": "3641:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3641:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3766:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3766:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3779:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3779:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3790:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3790:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3775:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3775:3:10"
																		},
																		"nativeSrc": "3775:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3775:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3722:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3722:43:10"
																},
																"nativeSrc": "3722:72:10",
																"nodeType": "YulFunctionCall",
																"src": "3722:72:10"
															},
															"nativeSrc": "3722:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "3722:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3469:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3559:9:10",
														"nodeType": "YulTypedName",
														"src": "3559:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3571:6:10",
														"nodeType": "YulTypedName",
														"src": "3571:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3579:6:10",
														"nodeType": "YulTypedName",
														"src": "3579:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3590:4:10",
														"nodeType": "YulTypedName",
														"src": "3590:4:10",
														"type": ""
													}
												],
												"src": "3469:332:10"
											},
											{
												"body": {
													"nativeSrc": "3903:73:10",
													"nodeType": "YulBlock",
													"src": "3903:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3920:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3920:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3925:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3925:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3913:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3913:6:10"
																},
																"nativeSrc": "3913:19:10",
																"nodeType": "YulFunctionCall",
																"src": "3913:19:10"
															},
															"nativeSrc": "3913:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "3913:19:10"
														},
														{
															"nativeSrc": "3941:29:10",
															"nodeType": "YulAssignment",
															"src": "3941:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3960:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3960:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3965:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3965:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3956:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3956:3:10"
																},
																"nativeSrc": "3956:14:10",
																"nodeType": "YulFunctionCall",
																"src": "3956:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3941:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "3941:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3807:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3875:3:10",
														"nodeType": "YulTypedName",
														"src": "3875:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3880:6:10",
														"nodeType": "YulTypedName",
														"src": "3880:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3891:11:10",
														"nodeType": "YulTypedName",
														"src": "3891:11:10",
														"type": ""
													}
												],
												"src": "3807:169:10"
											},
											{
												"body": {
													"nativeSrc": "4088:75:10",
													"nodeType": "YulBlock",
													"src": "4088:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4110:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4110:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4118:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4118:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:10"
																		},
																		"nativeSrc": "4106:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "4122:33:10",
																		"nodeType": "YulLiteral",
																		"src": "4122:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4099:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4099:6:10"
																},
																"nativeSrc": "4099:57:10",
																"nodeType": "YulFunctionCall",
																"src": "4099:57:10"
															},
															"nativeSrc": "4099:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "4099:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "3982:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4080:6:10",
														"nodeType": "YulTypedName",
														"src": "4080:6:10",
														"type": ""
													}
												],
												"src": "3982:181:10"
											},
											{
												"body": {
													"nativeSrc": "4315:220:10",
													"nodeType": "YulBlock",
													"src": "4315:220:10",
													"statements": [
														{
															"nativeSrc": "4325:74:10",
															"nodeType": "YulAssignment",
															"src": "4325:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4391:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4391:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4396:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4396:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4332:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "4332:58:10"
																},
																"nativeSrc": "4332:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4332:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4325:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4325:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4497:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4497:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "4408:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "4408:88:10"
																},
																"nativeSrc": "4408:93:10",
																"nodeType": "YulFunctionCall",
																"src": "4408:93:10"
															},
															"nativeSrc": "4408:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "4408:93:10"
														},
														{
															"nativeSrc": "4510:19:10",
															"nodeType": "YulAssignment",
															"src": "4510:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4521:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4521:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4526:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4517:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4517:3:10"
																},
																"nativeSrc": "4517:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4517:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4510:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4510:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4169:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4303:3:10",
														"nodeType": "YulTypedName",
														"src": "4303:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4311:3:10",
														"nodeType": "YulTypedName",
														"src": "4311:3:10",
														"type": ""
													}
												],
												"src": "4169:366:10"
											},
											{
												"body": {
													"nativeSrc": "4712:248:10",
													"nodeType": "YulBlock",
													"src": "4712:248:10",
													"statements": [
														{
															"nativeSrc": "4722:26:10",
															"nodeType": "YulAssignment",
															"src": "4722:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4734:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4734:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4745:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4745:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4730:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4730:3:10"
																},
																"nativeSrc": "4730:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4730:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4722:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4722:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4769:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4769:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4780:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4780:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4765:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4765:3:10"
																		},
																		"nativeSrc": "4765:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4765:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4788:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4788:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4794:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4794:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4784:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4784:3:10"
																		},
																		"nativeSrc": "4784:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4784:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4758:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4758:6:10"
																},
																"nativeSrc": "4758:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4758:47:10"
															},
															"nativeSrc": "4758:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4758:47:10"
														},
														{
															"nativeSrc": "4814:139:10",
															"nodeType": "YulAssignment",
															"src": "4814:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4948:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4948:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4822:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "4822:124:10"
																},
																"nativeSrc": "4822:131:10",
																"nodeType": "YulFunctionCall",
																"src": "4822:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4814:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4814:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4541:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4692:9:10",
														"nodeType": "YulTypedName",
														"src": "4692:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4707:4:10",
														"nodeType": "YulTypedName",
														"src": "4707:4:10",
														"type": ""
													}
												],
												"src": "4541:419:10"
											},
											{
												"body": {
													"nativeSrc": "5072:68:10",
													"nodeType": "YulBlock",
													"src": "5072:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5094:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5094:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5102:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5102:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5090:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5090:3:10"
																		},
																		"nativeSrc": "5090:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5090:14:10"
																	},
																	{
																		"hexValue": "54696d656443726f776473616c653a206e6f74206f70656e",
																		"kind": "string",
																		"nativeSrc": "5106:26:10",
																		"nodeType": "YulLiteral",
																		"src": "5106:26:10",
																		"type": "",
																		"value": "TimedCrowdsale: not open"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5083:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5083:6:10"
																},
																"nativeSrc": "5083:50:10",
																"nodeType": "YulFunctionCall",
																"src": "5083:50:10"
															},
															"nativeSrc": "5083:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "5083:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739",
												"nativeSrc": "4966:174:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5064:6:10",
														"nodeType": "YulTypedName",
														"src": "5064:6:10",
														"type": ""
													}
												],
												"src": "4966:174:10"
											},
											{
												"body": {
													"nativeSrc": "5292:220:10",
													"nodeType": "YulBlock",
													"src": "5292:220:10",
													"statements": [
														{
															"nativeSrc": "5302:74:10",
															"nodeType": "YulAssignment",
															"src": "5302:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5368:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5368:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5373:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5373:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5309:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5309:58:10"
																},
																"nativeSrc": "5309:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5309:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5302:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5302:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5474:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5474:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739",
																	"nativeSrc": "5385:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5385:88:10"
																},
																"nativeSrc": "5385:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5385:93:10"
															},
															"nativeSrc": "5385:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5385:93:10"
														},
														{
															"nativeSrc": "5487:19:10",
															"nodeType": "YulAssignment",
															"src": "5487:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5503:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5503:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5494:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5494:3:10"
																},
																"nativeSrc": "5494:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5494:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5487:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5146:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5280:3:10",
														"nodeType": "YulTypedName",
														"src": "5280:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5288:3:10",
														"nodeType": "YulTypedName",
														"src": "5288:3:10",
														"type": ""
													}
												],
												"src": "5146:366:10"
											},
											{
												"body": {
													"nativeSrc": "5689:248:10",
													"nodeType": "YulBlock",
													"src": "5689:248:10",
													"statements": [
														{
															"nativeSrc": "5699:26:10",
															"nodeType": "YulAssignment",
															"src": "5699:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5711:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5711:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5722:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5722:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5707:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5707:3:10"
																},
																"nativeSrc": "5707:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5707:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5699:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5699:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5746:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5746:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5757:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5757:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5742:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5742:3:10"
																		},
																		"nativeSrc": "5742:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5742:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5765:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5765:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5771:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5771:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5761:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5761:3:10"
																		},
																		"nativeSrc": "5761:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5761:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5735:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5735:6:10"
																},
																"nativeSrc": "5735:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5735:47:10"
															},
															"nativeSrc": "5735:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5735:47:10"
														},
														{
															"nativeSrc": "5791:139:10",
															"nodeType": "YulAssignment",
															"src": "5791:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5925:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5925:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5799:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "5799:124:10"
																},
																"nativeSrc": "5799:131:10",
																"nodeType": "YulFunctionCall",
																"src": "5799:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5791:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5791:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5518:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5669:9:10",
														"nodeType": "YulTypedName",
														"src": "5669:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5684:4:10",
														"nodeType": "YulTypedName",
														"src": "5684:4:10",
														"type": ""
													}
												],
												"src": "5518:419:10"
											},
											{
												"body": {
													"nativeSrc": "5971:152:10",
													"nodeType": "YulBlock",
													"src": "5971:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5988:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5988:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5991:77:10",
																		"nodeType": "YulLiteral",
																		"src": "5991:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5981:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5981:6:10"
																},
																"nativeSrc": "5981:88:10",
																"nodeType": "YulFunctionCall",
																"src": "5981:88:10"
															},
															"nativeSrc": "5981:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "5981:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6085:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6085:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6088:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6088:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6078:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6078:6:10"
																},
																"nativeSrc": "6078:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6078:15:10"
															},
															"nativeSrc": "6078:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6078:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6109:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6109:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6112:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6112:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6102:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6102:6:10"
																},
																"nativeSrc": "6102:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6102:15:10"
															},
															"nativeSrc": "6102:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6102:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5943:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5943:180:10"
											},
											{
												"body": {
													"nativeSrc": "6173:147:10",
													"nodeType": "YulBlock",
													"src": "6173:147:10",
													"statements": [
														{
															"nativeSrc": "6183:25:10",
															"nodeType": "YulAssignment",
															"src": "6183:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6206:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6206:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6188:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6188:17:10"
																},
																"nativeSrc": "6188:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6188:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6183:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6183:1:10"
																}
															]
														},
														{
															"nativeSrc": "6217:25:10",
															"nodeType": "YulAssignment",
															"src": "6217:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6240:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6240:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6222:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6222:17:10"
																},
																"nativeSrc": "6222:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6222:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6217:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6217:1:10"
																}
															]
														},
														{
															"nativeSrc": "6251:16:10",
															"nodeType": "YulAssignment",
															"src": "6251:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6262:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6262:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6265:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6265:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6258:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6258:3:10"
																},
																"nativeSrc": "6258:9:10",
																"nodeType": "YulFunctionCall",
																"src": "6258:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6251:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6251:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6291:22:10",
																"nodeType": "YulBlock",
																"src": "6291:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6293:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6293:16:10"
																			},
																			"nativeSrc": "6293:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6293:18:10"
																		},
																		"nativeSrc": "6293:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6293:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6283:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6283:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6286:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6286:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6280:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6280:2:10"
																},
																"nativeSrc": "6280:10:10",
																"nodeType": "YulFunctionCall",
																"src": "6280:10:10"
															},
															"nativeSrc": "6277:36:10",
															"nodeType": "YulIf",
															"src": "6277:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6129:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6160:1:10",
														"nodeType": "YulTypedName",
														"src": "6160:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6163:1:10",
														"nodeType": "YulTypedName",
														"src": "6163:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6169:3:10",
														"nodeType": "YulTypedName",
														"src": "6169:3:10",
														"type": ""
													}
												],
												"src": "6129:191:10"
											},
											{
												"body": {
													"nativeSrc": "6432:123:10",
													"nodeType": "YulBlock",
													"src": "6432:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6454:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6454:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6462:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6462:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6450:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6450:3:10"
																		},
																		"nativeSrc": "6450:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6450:14:10"
																	},
																	{
																		"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65",
																		"kind": "string",
																		"nativeSrc": "6466:34:10",
																		"nodeType": "YulLiteral",
																		"src": "6466:34:10",
																		"type": "",
																		"value": "Crowdsale: beneficiary is the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6443:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6443:6:10"
																},
																"nativeSrc": "6443:58:10",
																"nodeType": "YulFunctionCall",
																"src": "6443:58:10"
															},
															"nativeSrc": "6443:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "6443:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6522:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6522:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6530:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6530:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6518:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6518:3:10"
																		},
																		"nativeSrc": "6518:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6518:15:10"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "6535:12:10",
																		"nodeType": "YulLiteral",
																		"src": "6535:12:10",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6511:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6511:6:10"
																},
																"nativeSrc": "6511:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6511:37:10"
															},
															"nativeSrc": "6511:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6511:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
												"nativeSrc": "6326:229:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6424:6:10",
														"nodeType": "YulTypedName",
														"src": "6424:6:10",
														"type": ""
													}
												],
												"src": "6326:229:10"
											},
											{
												"body": {
													"nativeSrc": "6707:220:10",
													"nodeType": "YulBlock",
													"src": "6707:220:10",
													"statements": [
														{
															"nativeSrc": "6717:74:10",
															"nodeType": "YulAssignment",
															"src": "6717:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6783:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6783:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6788:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6788:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6724:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "6724:58:10"
																},
																"nativeSrc": "6724:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6724:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6717:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6717:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6889:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6889:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																	"nativeSrc": "6800:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "6800:88:10"
																},
																"nativeSrc": "6800:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6800:93:10"
															},
															"nativeSrc": "6800:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "6800:93:10"
														},
														{
															"nativeSrc": "6902:19:10",
															"nodeType": "YulAssignment",
															"src": "6902:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6913:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6913:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6918:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6918:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6909:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6909:3:10"
																},
																"nativeSrc": "6909:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6909:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6902:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6902:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6561:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6695:3:10",
														"nodeType": "YulTypedName",
														"src": "6695:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6703:3:10",
														"nodeType": "YulTypedName",
														"src": "6703:3:10",
														"type": ""
													}
												],
												"src": "6561:366:10"
											},
											{
												"body": {
													"nativeSrc": "7104:248:10",
													"nodeType": "YulBlock",
													"src": "7104:248:10",
													"statements": [
														{
															"nativeSrc": "7114:26:10",
															"nodeType": "YulAssignment",
															"src": "7114:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7126:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7126:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7137:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7137:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7122:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7122:3:10"
																},
																"nativeSrc": "7122:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7122:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7114:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7114:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7161:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7161:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7172:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7172:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7157:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7157:3:10"
																		},
																		"nativeSrc": "7157:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7157:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7180:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7180:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7186:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7186:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7176:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7176:3:10"
																		},
																		"nativeSrc": "7176:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7176:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7150:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7150:6:10"
																},
																"nativeSrc": "7150:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7150:47:10"
															},
															"nativeSrc": "7150:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7150:47:10"
														},
														{
															"nativeSrc": "7206:139:10",
															"nodeType": "YulAssignment",
															"src": "7206:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7340:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7340:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7214:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7214:124:10"
																},
																"nativeSrc": "7214:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7214:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7206:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7206:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6933:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7084:9:10",
														"nodeType": "YulTypedName",
														"src": "7084:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7099:4:10",
														"nodeType": "YulTypedName",
														"src": "7099:4:10",
														"type": ""
													}
												],
												"src": "6933:419:10"
											},
											{
												"body": {
													"nativeSrc": "7464:69:10",
													"nodeType": "YulBlock",
													"src": "7464:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7486:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7486:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7494:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7494:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7482:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7482:3:10"
																		},
																		"nativeSrc": "7482:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7482:14:10"
																	},
																	{
																		"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
																		"kind": "string",
																		"nativeSrc": "7498:27:10",
																		"nodeType": "YulLiteral",
																		"src": "7498:27:10",
																		"type": "",
																		"value": "Crowdsale: weiAmount is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7475:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7475:6:10"
																},
																"nativeSrc": "7475:51:10",
																"nodeType": "YulFunctionCall",
																"src": "7475:51:10"
															},
															"nativeSrc": "7475:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "7475:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
												"nativeSrc": "7358:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7456:6:10",
														"nodeType": "YulTypedName",
														"src": "7456:6:10",
														"type": ""
													}
												],
												"src": "7358:175:10"
											},
											{
												"body": {
													"nativeSrc": "7685:220:10",
													"nodeType": "YulBlock",
													"src": "7685:220:10",
													"statements": [
														{
															"nativeSrc": "7695:74:10",
															"nodeType": "YulAssignment",
															"src": "7695:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7761:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7761:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7766:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7766:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7702:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7702:58:10"
																},
																"nativeSrc": "7702:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7702:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7695:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7695:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7867:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7867:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																	"nativeSrc": "7778:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7778:88:10"
																},
																"nativeSrc": "7778:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7778:93:10"
															},
															"nativeSrc": "7778:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7778:93:10"
														},
														{
															"nativeSrc": "7880:19:10",
															"nodeType": "YulAssignment",
															"src": "7880:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7891:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7891:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7896:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7887:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7887:3:10"
																},
																"nativeSrc": "7887:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7887:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7880:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7880:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7539:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7673:3:10",
														"nodeType": "YulTypedName",
														"src": "7673:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7681:3:10",
														"nodeType": "YulTypedName",
														"src": "7681:3:10",
														"type": ""
													}
												],
												"src": "7539:366:10"
											},
											{
												"body": {
													"nativeSrc": "8082:248:10",
													"nodeType": "YulBlock",
													"src": "8082:248:10",
													"statements": [
														{
															"nativeSrc": "8092:26:10",
															"nodeType": "YulAssignment",
															"src": "8092:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8104:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8104:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8115:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8115:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8100:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8100:3:10"
																},
																"nativeSrc": "8100:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8100:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8092:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8092:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8139:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8139:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8150:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8150:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8135:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8135:3:10"
																		},
																		"nativeSrc": "8135:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8135:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8158:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8158:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8164:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8164:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8154:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8154:3:10"
																		},
																		"nativeSrc": "8154:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8154:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8128:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8128:6:10"
																},
																"nativeSrc": "8128:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8128:47:10"
															},
															"nativeSrc": "8128:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8128:47:10"
														},
														{
															"nativeSrc": "8184:139:10",
															"nodeType": "YulAssignment",
															"src": "8184:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8318:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8318:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8192:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8192:124:10"
																},
																"nativeSrc": "8192:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8192:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8184:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8184:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7911:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8062:9:10",
														"nodeType": "YulTypedName",
														"src": "8062:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8077:4:10",
														"nodeType": "YulTypedName",
														"src": "8077:4:10",
														"type": ""
													}
												],
												"src": "7911:419:10"
											},
											{
												"body": {
													"nativeSrc": "8384:362:10",
													"nodeType": "YulBlock",
													"src": "8384:362:10",
													"statements": [
														{
															"nativeSrc": "8394:25:10",
															"nodeType": "YulAssignment",
															"src": "8394:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8417:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8417:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8399:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8399:17:10"
																},
																"nativeSrc": "8399:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8399:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8394:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8394:1:10"
																}
															]
														},
														{
															"nativeSrc": "8428:25:10",
															"nodeType": "YulAssignment",
															"src": "8428:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8451:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8451:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8433:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8433:17:10"
																},
																"nativeSrc": "8433:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8433:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8428:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8428:1:10"
																}
															]
														},
														{
															"nativeSrc": "8462:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8462:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8485:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8485:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8488:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8488:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8481:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8481:3:10"
																},
																"nativeSrc": "8481:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8481:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8466:11:10",
																	"nodeType": "YulTypedName",
																	"src": "8466:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8499:41:10",
															"nodeType": "YulAssignment",
															"src": "8499:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8528:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "8528:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8510:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8510:17:10"
																},
																"nativeSrc": "8510:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8510:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8499:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8499:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8717:22:10",
																"nodeType": "YulBlock",
																"src": "8717:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8719:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8719:16:10"
																			},
																			"nativeSrc": "8719:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8719:18:10"
																		},
																		"nativeSrc": "8719:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8719:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8650:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8650:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8643:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8643:6:10"
																				},
																				"nativeSrc": "8643:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8643:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8673:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8673:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8680:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "8680:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8689:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "8689:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8676:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8676:3:10"
																						},
																						"nativeSrc": "8676:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8676:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8670:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "8670:2:10"
																				},
																				"nativeSrc": "8670:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8670:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8623:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8623:2:10"
																		},
																		"nativeSrc": "8623:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8623:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8603:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8603:6:10"
																},
																"nativeSrc": "8603:113:10",
																"nodeType": "YulFunctionCall",
																"src": "8603:113:10"
															},
															"nativeSrc": "8600:139:10",
															"nodeType": "YulIf",
															"src": "8600:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8336:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8367:1:10",
														"nodeType": "YulTypedName",
														"src": "8367:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8370:1:10",
														"nodeType": "YulTypedName",
														"src": "8370:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8376:7:10",
														"nodeType": "YulTypedName",
														"src": "8376:7:10",
														"type": ""
													}
												],
												"src": "8336:410:10"
											},
											{
												"body": {
													"nativeSrc": "8817:53:10",
													"nodeType": "YulBlock",
													"src": "8817:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8834:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8834:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8857:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8857:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8839:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "8839:17:10"
																		},
																		"nativeSrc": "8839:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8839:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8827:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8827:6:10"
																},
																"nativeSrc": "8827:37:10",
																"nodeType": "YulFunctionCall",
																"src": "8827:37:10"
															},
															"nativeSrc": "8827:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "8827:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8752:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8805:5:10",
														"nodeType": "YulTypedName",
														"src": "8805:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8812:3:10",
														"nodeType": "YulTypedName",
														"src": "8812:3:10",
														"type": ""
													}
												],
												"src": "8752:118:10"
											},
											{
												"body": {
													"nativeSrc": "9002:206:10",
													"nodeType": "YulBlock",
													"src": "9002:206:10",
													"statements": [
														{
															"nativeSrc": "9012:26:10",
															"nodeType": "YulAssignment",
															"src": "9012:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9024:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9024:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9035:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9035:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9020:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9020:3:10"
																},
																"nativeSrc": "9020:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9020:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9012:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9012:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9092:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9092:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9105:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9105:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9116:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9116:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9101:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9101:3:10"
																		},
																		"nativeSrc": "9101:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9101:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9048:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9048:43:10"
																},
																"nativeSrc": "9048:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9048:71:10"
															},
															"nativeSrc": "9048:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9048:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9173:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9173:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9186:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9186:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9197:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9197:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9182:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9182:3:10"
																		},
																		"nativeSrc": "9182:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9182:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9129:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9129:43:10"
																},
																"nativeSrc": "9129:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9129:72:10"
															},
															"nativeSrc": "9129:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9129:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8876:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8966:9:10",
														"nodeType": "YulTypedName",
														"src": "8966:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8978:6:10",
														"nodeType": "YulTypedName",
														"src": "8978:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8986:6:10",
														"nodeType": "YulTypedName",
														"src": "8986:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8997:4:10",
														"nodeType": "YulTypedName",
														"src": "8997:4:10",
														"type": ""
													}
												],
												"src": "8876:332:10"
											},
											{
												"body": {
													"nativeSrc": "9254:76:10",
													"nodeType": "YulBlock",
													"src": "9254:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9308:16:10",
																"nodeType": "YulBlock",
																"src": "9308:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9317:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9317:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9320:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9320:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9310:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9310:6:10"
																			},
																			"nativeSrc": "9310:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9310:12:10"
																		},
																		"nativeSrc": "9310:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9310:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9277:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9277:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9299:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "9299:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9284:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "9284:14:10"
																				},
																				"nativeSrc": "9284:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9284:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9274:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9274:2:10"
																		},
																		"nativeSrc": "9274:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9274:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9267:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9267:6:10"
																},
																"nativeSrc": "9267:40:10",
																"nodeType": "YulFunctionCall",
																"src": "9267:40:10"
															},
															"nativeSrc": "9264:60:10",
															"nodeType": "YulIf",
															"src": "9264:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9214:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9247:5:10",
														"nodeType": "YulTypedName",
														"src": "9247:5:10",
														"type": ""
													}
												],
												"src": "9214:116:10"
											},
											{
												"body": {
													"nativeSrc": "9396:77:10",
													"nodeType": "YulBlock",
													"src": "9396:77:10",
													"statements": [
														{
															"nativeSrc": "9406:22:10",
															"nodeType": "YulAssignment",
															"src": "9406:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9421:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9421:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9415:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9415:5:10"
																},
																"nativeSrc": "9415:13:10",
																"nodeType": "YulFunctionCall",
																"src": "9415:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9406:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9406:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9461:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9461:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9437:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "9437:23:10"
																},
																"nativeSrc": "9437:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9437:30:10"
															},
															"nativeSrc": "9437:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9437:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9336:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9374:6:10",
														"nodeType": "YulTypedName",
														"src": "9374:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9382:3:10",
														"nodeType": "YulTypedName",
														"src": "9382:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9390:5:10",
														"nodeType": "YulTypedName",
														"src": "9390:5:10",
														"type": ""
													}
												],
												"src": "9336:137:10"
											},
											{
												"body": {
													"nativeSrc": "9553:271:10",
													"nodeType": "YulBlock",
													"src": "9553:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9599:83:10",
																"nodeType": "YulBlock",
																"src": "9599:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9601:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9601:77:10"
																			},
																			"nativeSrc": "9601:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9601:79:10"
																		},
																		"nativeSrc": "9601:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9601:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9574:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9574:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9583:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9583:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9570:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9570:3:10"
																		},
																		"nativeSrc": "9570:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9570:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9595:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9595:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9566:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9566:3:10"
																},
																"nativeSrc": "9566:32:10",
																"nodeType": "YulFunctionCall",
																"src": "9566:32:10"
															},
															"nativeSrc": "9563:119:10",
															"nodeType": "YulIf",
															"src": "9563:119:10"
														},
														{
															"nativeSrc": "9692:125:10",
															"nodeType": "YulBlock",
															"src": "9692:125:10",
															"statements": [
																{
																	"nativeSrc": "9707:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9707:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9721:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9721:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9711:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9711:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9736:71:10",
																	"nodeType": "YulAssignment",
																	"src": "9736:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9779:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9779:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9790:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9790:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9775:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9775:3:10"
																				},
																				"nativeSrc": "9775:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9775:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9799:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9799:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9746:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "9746:28:10"
																		},
																		"nativeSrc": "9746:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9746:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9736:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9736:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9479:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9523:9:10",
														"nodeType": "YulTypedName",
														"src": "9523:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9534:7:10",
														"nodeType": "YulTypedName",
														"src": "9534:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9546:6:10",
														"nodeType": "YulTypedName",
														"src": "9546:6:10",
														"type": ""
													}
												],
												"src": "9479:345:10"
											},
											{
												"body": {
													"nativeSrc": "9936:123:10",
													"nodeType": "YulBlock",
													"src": "9936:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9958:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9958:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9966:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9966:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9954:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9954:3:10"
																		},
																		"nativeSrc": "9954:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9954:14:10"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nativeSrc": "9970:34:10",
																		"nodeType": "YulLiteral",
																		"src": "9970:34:10",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9947:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9947:6:10"
																},
																"nativeSrc": "9947:58:10",
																"nodeType": "YulFunctionCall",
																"src": "9947:58:10"
															},
															"nativeSrc": "9947:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "9947:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10026:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10026:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10034:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10034:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10022:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10022:3:10"
																		},
																		"nativeSrc": "10022:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10022:15:10"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nativeSrc": "10039:12:10",
																		"nodeType": "YulLiteral",
																		"src": "10039:12:10",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10015:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10015:6:10"
																},
																"nativeSrc": "10015:37:10",
																"nodeType": "YulFunctionCall",
																"src": "10015:37:10"
															},
															"nativeSrc": "10015:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "10015:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nativeSrc": "9830:229:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9928:6:10",
														"nodeType": "YulTypedName",
														"src": "9928:6:10",
														"type": ""
													}
												],
												"src": "9830:229:10"
											},
											{
												"body": {
													"nativeSrc": "10211:220:10",
													"nodeType": "YulBlock",
													"src": "10211:220:10",
													"statements": [
														{
															"nativeSrc": "10221:74:10",
															"nodeType": "YulAssignment",
															"src": "10221:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10287:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10287:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10292:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10292:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10228:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10228:58:10"
																},
																"nativeSrc": "10228:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10228:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10221:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10221:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10393:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10393:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nativeSrc": "10304:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10304:88:10"
																},
																"nativeSrc": "10304:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10304:93:10"
															},
															"nativeSrc": "10304:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10304:93:10"
														},
														{
															"nativeSrc": "10406:19:10",
															"nodeType": "YulAssignment",
															"src": "10406:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10417:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10417:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10422:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10422:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10413:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10413:3:10"
																},
																"nativeSrc": "10413:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10413:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10406:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10406:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10065:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10199:3:10",
														"nodeType": "YulTypedName",
														"src": "10199:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10207:3:10",
														"nodeType": "YulTypedName",
														"src": "10207:3:10",
														"type": ""
													}
												],
												"src": "10065:366:10"
											},
											{
												"body": {
													"nativeSrc": "10608:248:10",
													"nodeType": "YulBlock",
													"src": "10608:248:10",
													"statements": [
														{
															"nativeSrc": "10618:26:10",
															"nodeType": "YulAssignment",
															"src": "10618:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10630:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10630:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10641:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10641:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10626:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10626:3:10"
																},
																"nativeSrc": "10626:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10626:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10618:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10618:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10665:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10665:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10676:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10676:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10661:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10661:3:10"
																		},
																		"nativeSrc": "10661:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10661:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10684:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10684:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10690:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10690:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10680:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10680:3:10"
																		},
																		"nativeSrc": "10680:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10680:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10654:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10654:6:10"
																},
																"nativeSrc": "10654:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10654:47:10"
															},
															"nativeSrc": "10654:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10654:47:10"
														},
														{
															"nativeSrc": "10710:139:10",
															"nodeType": "YulAssignment",
															"src": "10710:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10844:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10844:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10718:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10718:124:10"
																},
																"nativeSrc": "10718:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10718:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10710:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10710:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10437:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10588:9:10",
														"nodeType": "YulTypedName",
														"src": "10588:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10603:4:10",
														"nodeType": "YulTypedName",
														"src": "10603:4:10",
														"type": ""
													}
												],
												"src": "10437:419:10"
											},
											{
												"body": {
													"nativeSrc": "10968:119:10",
													"nodeType": "YulBlock",
													"src": "10968:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10990:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10990:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10998:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10998:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10986:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10986:3:10"
																		},
																		"nativeSrc": "10986:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10986:14:10"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nativeSrc": "11002:34:10",
																		"nodeType": "YulLiteral",
																		"src": "11002:34:10",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10979:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10979:6:10"
																},
																"nativeSrc": "10979:58:10",
																"nodeType": "YulFunctionCall",
																"src": "10979:58:10"
															},
															"nativeSrc": "10979:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "10979:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11058:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11058:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11066:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11066:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11054:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11054:3:10"
																		},
																		"nativeSrc": "11054:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11054:15:10"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nativeSrc": "11071:8:10",
																		"nodeType": "YulLiteral",
																		"src": "11071:8:10",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11047:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11047:6:10"
																},
																"nativeSrc": "11047:33:10",
																"nodeType": "YulFunctionCall",
																"src": "11047:33:10"
															},
															"nativeSrc": "11047:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "11047:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nativeSrc": "10862:225:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10960:6:10",
														"nodeType": "YulTypedName",
														"src": "10960:6:10",
														"type": ""
													}
												],
												"src": "10862:225:10"
											},
											{
												"body": {
													"nativeSrc": "11239:220:10",
													"nodeType": "YulBlock",
													"src": "11239:220:10",
													"statements": [
														{
															"nativeSrc": "11249:74:10",
															"nodeType": "YulAssignment",
															"src": "11249:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11315:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11315:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11320:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11320:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11256:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11256:58:10"
																},
																"nativeSrc": "11256:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11256:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11249:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11249:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11421:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11421:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nativeSrc": "11332:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11332:88:10"
																},
																"nativeSrc": "11332:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11332:93:10"
															},
															"nativeSrc": "11332:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11332:93:10"
														},
														{
															"nativeSrc": "11434:19:10",
															"nodeType": "YulAssignment",
															"src": "11434:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11445:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11445:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11450:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11450:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11441:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11441:3:10"
																},
																"nativeSrc": "11441:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11441:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11434:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11434:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11093:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11227:3:10",
														"nodeType": "YulTypedName",
														"src": "11227:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11235:3:10",
														"nodeType": "YulTypedName",
														"src": "11235:3:10",
														"type": ""
													}
												],
												"src": "11093:366:10"
											},
											{
												"body": {
													"nativeSrc": "11636:248:10",
													"nodeType": "YulBlock",
													"src": "11636:248:10",
													"statements": [
														{
															"nativeSrc": "11646:26:10",
															"nodeType": "YulAssignment",
															"src": "11646:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11658:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11658:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11669:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11669:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11654:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11654:3:10"
																},
																"nativeSrc": "11654:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11654:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11646:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11646:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11693:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11693:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11704:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11704:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11689:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11689:3:10"
																		},
																		"nativeSrc": "11689:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11689:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11712:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11712:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11718:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11718:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11708:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11708:3:10"
																		},
																		"nativeSrc": "11708:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11708:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11682:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11682:6:10"
																},
																"nativeSrc": "11682:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11682:47:10"
															},
															"nativeSrc": "11682:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11682:47:10"
														},
														{
															"nativeSrc": "11738:139:10",
															"nodeType": "YulAssignment",
															"src": "11738:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11872:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11872:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11746:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11746:124:10"
																},
																"nativeSrc": "11746:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11746:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11738:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11738:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11465:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11616:9:10",
														"nodeType": "YulTypedName",
														"src": "11616:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11631:4:10",
														"nodeType": "YulTypedName",
														"src": "11631:4:10",
														"type": ""
													}
												],
												"src": "11465:419:10"
											},
											{
												"body": {
													"nativeSrc": "11948:40:10",
													"nodeType": "YulBlock",
													"src": "11948:40:10",
													"statements": [
														{
															"nativeSrc": "11959:22:10",
															"nodeType": "YulAssignment",
															"src": "11959:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11975:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11975:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11969:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11969:5:10"
																},
																"nativeSrc": "11969:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11969:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11959:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11959:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "11890:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11931:5:10",
														"nodeType": "YulTypedName",
														"src": "11931:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11941:6:10",
														"nodeType": "YulTypedName",
														"src": "11941:6:10",
														"type": ""
													}
												],
												"src": "11890:98:10"
											},
											{
												"body": {
													"nativeSrc": "12107:34:10",
													"nodeType": "YulBlock",
													"src": "12107:34:10",
													"statements": [
														{
															"nativeSrc": "12117:18:10",
															"nodeType": "YulAssignment",
															"src": "12117:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "12132:3:10",
																"nodeType": "YulIdentifier",
																"src": "12132:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12117:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "12117:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11994:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12079:3:10",
														"nodeType": "YulTypedName",
														"src": "12079:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12084:6:10",
														"nodeType": "YulTypedName",
														"src": "12084:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12095:11:10",
														"nodeType": "YulTypedName",
														"src": "12095:11:10",
														"type": ""
													}
												],
												"src": "11994:147:10"
											},
											{
												"body": {
													"nativeSrc": "12209:184:10",
													"nodeType": "YulBlock",
													"src": "12209:184:10",
													"statements": [
														{
															"nativeSrc": "12219:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12219:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "12228:1:10",
																"nodeType": "YulLiteral",
																"src": "12228:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "12223:1:10",
																	"nodeType": "YulTypedName",
																	"src": "12223:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12288:63:10",
																"nodeType": "YulBlock",
																"src": "12288:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "12313:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "12313:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "12318:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "12318:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "12309:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "12309:3:10"
																					},
																					"nativeSrc": "12309:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12309:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "12332:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "12332:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "12337:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "12337:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12328:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "12328:3:10"
																							},
																							"nativeSrc": "12328:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "12328:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "12322:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "12322:5:10"
																					},
																					"nativeSrc": "12322:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12322:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12302:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12302:6:10"
																			},
																			"nativeSrc": "12302:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12302:39:10"
																		},
																		"nativeSrc": "12302:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12302:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "12249:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12249:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12252:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12252:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12246:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12246:2:10"
																},
																"nativeSrc": "12246:13:10",
																"nodeType": "YulFunctionCall",
																"src": "12246:13:10"
															},
															"nativeSrc": "12238:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12260:19:10",
																"nodeType": "YulBlock",
																"src": "12260:19:10",
																"statements": [
																	{
																		"nativeSrc": "12262:15:10",
																		"nodeType": "YulAssignment",
																		"src": "12262:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "12271:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "12271:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12274:2:10",
																					"nodeType": "YulLiteral",
																					"src": "12274:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12267:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "12267:3:10"
																			},
																			"nativeSrc": "12267:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12267:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "12262:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "12262:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12242:3:10",
																"nodeType": "YulBlock",
																"src": "12242:3:10",
																"statements": []
															},
															"src": "12238:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "12371:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "12371:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12376:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12376:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12367:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12367:3:10"
																		},
																		"nativeSrc": "12367:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12367:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12385:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12385:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12360:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12360:6:10"
																},
																"nativeSrc": "12360:27:10",
																"nodeType": "YulFunctionCall",
																"src": "12360:27:10"
															},
															"nativeSrc": "12360:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "12360:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "12147:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12191:3:10",
														"nodeType": "YulTypedName",
														"src": "12191:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "12196:3:10",
														"nodeType": "YulTypedName",
														"src": "12196:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12201:6:10",
														"nodeType": "YulTypedName",
														"src": "12201:6:10",
														"type": ""
													}
												],
												"src": "12147:246:10"
											},
											{
												"body": {
													"nativeSrc": "12507:278:10",
													"nodeType": "YulBlock",
													"src": "12507:278:10",
													"statements": [
														{
															"nativeSrc": "12517:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12517:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12563:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "12563:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "12531:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "12531:31:10"
																},
																"nativeSrc": "12531:38:10",
																"nodeType": "YulFunctionCall",
																"src": "12531:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12521:6:10",
																	"nodeType": "YulTypedName",
																	"src": "12521:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12578:95:10",
															"nodeType": "YulAssignment",
															"src": "12578:95:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12661:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12661:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12666:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12666:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12585:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "12585:75:10"
																},
																"nativeSrc": "12585:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12585:88:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12578:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12578:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12721:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "12721:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12728:4:10",
																				"nodeType": "YulLiteral",
																				"src": "12728:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12717:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12717:3:10"
																		},
																		"nativeSrc": "12717:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12717:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12735:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12735:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12740:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12740:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12682:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "12682:34:10"
																},
																"nativeSrc": "12682:65:10",
																"nodeType": "YulFunctionCall",
																"src": "12682:65:10"
															},
															"nativeSrc": "12682:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "12682:65:10"
														},
														{
															"nativeSrc": "12756:23:10",
															"nodeType": "YulAssignment",
															"src": "12756:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12767:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12767:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12772:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12772:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12763:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12763:3:10"
																},
																"nativeSrc": "12763:16:10",
																"nodeType": "YulFunctionCall",
																"src": "12763:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12756:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12756:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12399:386:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12488:5:10",
														"nodeType": "YulTypedName",
														"src": "12488:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12495:3:10",
														"nodeType": "YulTypedName",
														"src": "12495:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12503:3:10",
														"nodeType": "YulTypedName",
														"src": "12503:3:10",
														"type": ""
													}
												],
												"src": "12399:386:10"
											},
											{
												"body": {
													"nativeSrc": "12925:137:10",
													"nodeType": "YulBlock",
													"src": "12925:137:10",
													"statements": [
														{
															"nativeSrc": "12936:100:10",
															"nodeType": "YulAssignment",
															"src": "12936:100:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13023:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13023:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13032:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13032:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12943:79:10",
																	"nodeType": "YulIdentifier",
																	"src": "12943:79:10"
																},
																"nativeSrc": "12943:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12943:93:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12936:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12936:3:10"
																}
															]
														},
														{
															"nativeSrc": "13046:10:10",
															"nodeType": "YulAssignment",
															"src": "13046:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "13053:3:10",
																"nodeType": "YulIdentifier",
																"src": "13053:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13046:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13046:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12791:271:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12904:3:10",
														"nodeType": "YulTypedName",
														"src": "12904:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12910:6:10",
														"nodeType": "YulTypedName",
														"src": "12910:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12921:3:10",
														"nodeType": "YulTypedName",
														"src": "12921:3:10",
														"type": ""
													}
												],
												"src": "12791:271:10"
											},
											{
												"body": {
													"nativeSrc": "13174:73:10",
													"nodeType": "YulBlock",
													"src": "13174:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13196:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13196:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13204:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13204:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13192:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13192:3:10"
																		},
																		"nativeSrc": "13192:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13192:14:10"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "13208:31:10",
																		"nodeType": "YulLiteral",
																		"src": "13208:31:10",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13185:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13185:6:10"
																},
																"nativeSrc": "13185:55:10",
																"nodeType": "YulFunctionCall",
																"src": "13185:55:10"
															},
															"nativeSrc": "13185:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "13185:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nativeSrc": "13068:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13166:6:10",
														"nodeType": "YulTypedName",
														"src": "13166:6:10",
														"type": ""
													}
												],
												"src": "13068:179:10"
											},
											{
												"body": {
													"nativeSrc": "13399:220:10",
													"nodeType": "YulBlock",
													"src": "13399:220:10",
													"statements": [
														{
															"nativeSrc": "13409:74:10",
															"nodeType": "YulAssignment",
															"src": "13409:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13475:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13475:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13480:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13480:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13416:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13416:58:10"
																},
																"nativeSrc": "13416:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13416:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13409:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13409:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13581:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13581:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nativeSrc": "13492:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13492:88:10"
																},
																"nativeSrc": "13492:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13492:93:10"
															},
															"nativeSrc": "13492:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13492:93:10"
														},
														{
															"nativeSrc": "13594:19:10",
															"nodeType": "YulAssignment",
															"src": "13594:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13605:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13605:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13610:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13610:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13601:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13601:3:10"
																},
																"nativeSrc": "13601:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13601:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13594:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13594:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13253:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13387:3:10",
														"nodeType": "YulTypedName",
														"src": "13387:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13395:3:10",
														"nodeType": "YulTypedName",
														"src": "13395:3:10",
														"type": ""
													}
												],
												"src": "13253:366:10"
											},
											{
												"body": {
													"nativeSrc": "13796:248:10",
													"nodeType": "YulBlock",
													"src": "13796:248:10",
													"statements": [
														{
															"nativeSrc": "13806:26:10",
															"nodeType": "YulAssignment",
															"src": "13806:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13818:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13818:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13829:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13829:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13814:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13814:3:10"
																},
																"nativeSrc": "13814:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13814:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13806:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13806:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13853:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13853:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13864:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13864:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13849:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13849:3:10"
																		},
																		"nativeSrc": "13849:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13849:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13872:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13872:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13878:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13878:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13868:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13868:3:10"
																		},
																		"nativeSrc": "13868:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13868:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13842:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13842:6:10"
																},
																"nativeSrc": "13842:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13842:47:10"
															},
															"nativeSrc": "13842:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13842:47:10"
														},
														{
															"nativeSrc": "13898:139:10",
															"nodeType": "YulAssignment",
															"src": "13898:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14032:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14032:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13906:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13906:124:10"
																},
																"nativeSrc": "13906:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13906:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13898:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13898:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13625:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13776:9:10",
														"nodeType": "YulTypedName",
														"src": "13776:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13791:4:10",
														"nodeType": "YulTypedName",
														"src": "13791:4:10",
														"type": ""
													}
												],
												"src": "13625:419:10"
											},
											{
												"body": {
													"nativeSrc": "14109:40:10",
													"nodeType": "YulBlock",
													"src": "14109:40:10",
													"statements": [
														{
															"nativeSrc": "14120:22:10",
															"nodeType": "YulAssignment",
															"src": "14120:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14136:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "14136:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14130:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "14130:5:10"
																},
																"nativeSrc": "14130:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14130:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14120:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14120:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "14050:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14092:5:10",
														"nodeType": "YulTypedName",
														"src": "14092:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14102:6:10",
														"nodeType": "YulTypedName",
														"src": "14102:6:10",
														"type": ""
													}
												],
												"src": "14050:99:10"
											},
											{
												"body": {
													"nativeSrc": "14203:54:10",
													"nodeType": "YulBlock",
													"src": "14203:54:10",
													"statements": [
														{
															"nativeSrc": "14213:38:10",
															"nodeType": "YulAssignment",
															"src": "14213:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14231:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "14231:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14238:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14238:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14227:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14227:3:10"
																		},
																		"nativeSrc": "14227:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14227:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14247:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14247:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14243:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14243:3:10"
																		},
																		"nativeSrc": "14243:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14243:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14223:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14223:3:10"
																},
																"nativeSrc": "14223:28:10",
																"nodeType": "YulFunctionCall",
																"src": "14223:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14213:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14213:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "14155:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14186:5:10",
														"nodeType": "YulTypedName",
														"src": "14186:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14196:6:10",
														"nodeType": "YulTypedName",
														"src": "14196:6:10",
														"type": ""
													}
												],
												"src": "14155:102:10"
											},
											{
												"body": {
													"nativeSrc": "14355:285:10",
													"nodeType": "YulBlock",
													"src": "14355:285:10",
													"statements": [
														{
															"nativeSrc": "14365:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "14365:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14412:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "14412:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "14379:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "14379:32:10"
																},
																"nativeSrc": "14379:39:10",
																"nodeType": "YulFunctionCall",
																"src": "14379:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14369:6:10",
																	"nodeType": "YulTypedName",
																	"src": "14369:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14427:78:10",
															"nodeType": "YulAssignment",
															"src": "14427:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14493:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14493:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14498:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14498:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14434:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14434:58:10"
																},
																"nativeSrc": "14434:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14434:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14427:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14427:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14553:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "14553:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14560:4:10",
																				"nodeType": "YulLiteral",
																				"src": "14560:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14549:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14549:3:10"
																		},
																		"nativeSrc": "14549:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14549:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14567:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14567:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14572:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14572:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14514:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "14514:34:10"
																},
																"nativeSrc": "14514:65:10",
																"nodeType": "YulFunctionCall",
																"src": "14514:65:10"
															},
															"nativeSrc": "14514:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "14514:65:10"
														},
														{
															"nativeSrc": "14588:46:10",
															"nodeType": "YulAssignment",
															"src": "14588:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14599:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14599:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14626:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14626:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "14604:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "14604:21:10"
																		},
																		"nativeSrc": "14604:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14604:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14595:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14595:3:10"
																},
																"nativeSrc": "14595:39:10",
																"nodeType": "YulFunctionCall",
																"src": "14595:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14588:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14588:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14263:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14336:5:10",
														"nodeType": "YulTypedName",
														"src": "14336:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14343:3:10",
														"nodeType": "YulTypedName",
														"src": "14343:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14351:3:10",
														"nodeType": "YulTypedName",
														"src": "14351:3:10",
														"type": ""
													}
												],
												"src": "14263:377:10"
											},
											{
												"body": {
													"nativeSrc": "14764:195:10",
													"nodeType": "YulBlock",
													"src": "14764:195:10",
													"statements": [
														{
															"nativeSrc": "14774:26:10",
															"nodeType": "YulAssignment",
															"src": "14774:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14786:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14786:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14797:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14797:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14782:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14782:3:10"
																},
																"nativeSrc": "14782:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14782:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14774:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14774:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14821:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14821:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14832:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14832:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14817:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14817:3:10"
																		},
																		"nativeSrc": "14817:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14817:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14840:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14840:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14846:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14846:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14836:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14836:3:10"
																		},
																		"nativeSrc": "14836:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14836:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14810:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14810:6:10"
																},
																"nativeSrc": "14810:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14810:47:10"
															},
															"nativeSrc": "14810:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14810:47:10"
														},
														{
															"nativeSrc": "14866:86:10",
															"nodeType": "YulAssignment",
															"src": "14866:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14938:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14938:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14947:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14947:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14874:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "14874:63:10"
																},
																"nativeSrc": "14874:78:10",
																"nodeType": "YulFunctionCall",
																"src": "14874:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14866:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14866:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14646:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14736:9:10",
														"nodeType": "YulTypedName",
														"src": "14736:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14748:6:10",
														"nodeType": "YulTypedName",
														"src": "14748:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14759:4:10",
														"nodeType": "YulTypedName",
														"src": "14759:4:10",
														"type": ""
													}
												],
												"src": "14646:313:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$250_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$250_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$250_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$250__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$250_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739(memPtr) {\n\n        mstore(add(memPtr, 0), \"TimedCrowdsale: not open\")\n\n    }\n\n    function abi_encode_t_stringliteral_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: beneficiary is the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: weiAmount is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x89 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B6753BC GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x4B6753BC EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xB7A8807C EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1F4 JUMPI PUSH2 0xA0 JUMP JUMPDEST DUP1 PUSH4 0x1515BC2B EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x47535D7B EQ PUSH2 0x130 JUMPI PUSH2 0xA0 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA0 JUMPI PUSH2 0x9E PUSH2 0x99 PUSH2 0x21E JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH2 0xAB PUSH2 0x21E JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC6 PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x111 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11A PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xA1B JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x39C JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH2 0x23B DUP3 DUP3 PUSH2 0x3E9 JUMP JUMPDEST PUSH0 PUSH2 0x245 DUP3 PUSH2 0x43E JUMP JUMPDEST SWAP1 POP PUSH2 0x25C DUP3 PUSH1 0x4 SLOAD PUSH2 0x45B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x26C DUP4 DUP3 PUSH2 0x470 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28B PUSH2 0x21E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP3 SWAP2 SWAP1 PUSH2 0xABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2E4 DUP4 DUP4 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x482 JUMP JUMPDEST PUSH2 0x2F6 DUP4 DUP4 PUSH2 0x4E9 JUMP JUMPDEST POP POP PUSH2 0x300 PUSH2 0x4ED JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD TIMESTAMP GT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x335 JUMPI POP PUSH1 0x6 SLOAD TIMESTAMP GT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x3E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x3F1 PUSH2 0x320 JUMP JUMPDEST PUSH2 0x430 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x427 SWAP1 PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x43A DUP3 DUP3 PUSH2 0x4F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x454 PUSH1 0x3 SLOAD DUP4 PUSH2 0x5AA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x468 SWAP2 SWAP1 PUSH2 0xBEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47A DUP3 DUP3 PUSH2 0x5BF JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55B SWAP1 PUSH2 0xC91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59D SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0xD17 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x60B DUP3 DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x60F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x690 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x62E SWAP3 SWAP2 SWAP1 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x695 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6F6 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x75B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x717 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x716 SWAP2 SWAP1 PUSH2 0xDB8 JUMP JUMPDEST JUMPDEST PUSH2 0x756 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74D SWAP1 PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x769 DUP5 DUP5 PUSH0 DUP6 PUSH2 0x772 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x81E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x82F DUP8 DUP4 DUP4 DUP8 PUSH2 0x83B JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x89C JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x894 JUMPI PUSH2 0x854 DUP6 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88A SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x8A6 DUP4 DUP4 PUSH2 0x8D1 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x8E3 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x917 SWAP2 SWAP1 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x934 DUP2 PUSH2 0x920 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x94D PUSH0 DUP4 ADD DUP5 PUSH2 0x92B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x965 DUP2 PUSH2 0x953 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x97E PUSH0 DUP4 ADD DUP5 PUSH2 0x95C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9AD DUP3 PUSH2 0x984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BD DUP2 PUSH2 0x9A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x9B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x9EA DUP3 PUSH2 0x984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FA DUP2 PUSH2 0x9E0 JUMP JUMPDEST DUP2 EQ PUSH2 0xA04 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA15 DUP2 PUSH2 0x9F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA30 JUMPI PUSH2 0xA2F PUSH2 0x9DC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA3D DUP5 DUP3 DUP6 ADD PUSH2 0xA07 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA69 PUSH2 0xA64 PUSH2 0xA5F DUP5 PUSH2 0x984 JUMP JUMPDEST PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA7A DUP3 PUSH2 0xA4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA8B DUP3 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9B DUP2 PUSH2 0xA81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB4 PUSH0 DUP4 ADD DUP5 PUSH2 0xA92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xACD PUSH0 DUP4 ADD DUP6 PUSH2 0x95C JUMP JUMPDEST PUSH2 0xADA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x95C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB25 PUSH1 0x1F DUP4 PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xB30 DUP3 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB52 DUP2 PUSH2 0xB19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54696D656443726F776473616C653A206E6F74206F70656E0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB8D PUSH1 0x18 DUP4 PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xB98 DUP3 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBBA DUP2 PUSH2 0xB81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBF8 DUP3 PUSH2 0x953 JUMP JUMPDEST SWAP2 POP PUSH2 0xC03 DUP4 PUSH2 0x953 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC1B JUMPI PUSH2 0xC1A PUSH2 0xBC1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC7B PUSH1 0x2A DUP4 PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xC86 DUP3 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCA8 DUP2 PUSH2 0xC6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCE3 PUSH1 0x19 DUP4 PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xCEE DUP3 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD10 DUP2 PUSH2 0xCD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD21 DUP3 PUSH2 0x953 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2C DUP4 PUSH2 0x953 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xD3A DUP2 PUSH2 0x953 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xD51 JUMPI PUSH2 0xD50 PUSH2 0xBC1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD61 DUP2 PUSH2 0x9E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD7A PUSH0 DUP4 ADD DUP6 PUSH2 0xD58 JUMP JUMPDEST PUSH2 0xD87 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x95C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD97 DUP2 PUSH2 0x920 JUMP JUMPDEST DUP2 EQ PUSH2 0xDA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDB2 DUP2 PUSH2 0xD8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCC PUSH2 0x9DC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDDA DUP5 DUP3 DUP6 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE3D PUSH1 0x2A DUP4 PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xE48 DUP3 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE6A DUP2 PUSH2 0xE31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xECB PUSH1 0x26 DUP4 PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xED6 DUP3 PUSH2 0xE71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEF8 DUP2 PUSH2 0xEBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF30 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF15 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF45 DUP3 PUSH2 0xEFF JUMP JUMPDEST PUSH2 0xF4F DUP2 DUP6 PUSH2 0xF09 JUMP JUMPDEST SWAP4 POP PUSH2 0xF5F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF13 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF76 DUP3 DUP5 PUSH2 0xF3B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFB5 PUSH1 0x1D DUP4 PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP PUSH2 0xFC0 DUP3 PUSH2 0xF81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFE2 DUP2 PUSH2 0xFA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x100D DUP3 PUSH2 0xFE9 JUMP JUMPDEST PUSH2 0x1017 DUP2 DUP6 PUSH2 0xAE1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1027 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF13 JUMP JUMPDEST PUSH2 0x1030 DUP2 PUSH2 0xFF3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1053 DUP2 DUP5 PUSH2 0x1003 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xD2 0x4C CHAINID DUP12 0xD4 0xCD NUMBER KECCAK256 MSTORE PUSH25 0x1ECC08630DEDB5BEB320C8EB657EED8AB2CCAA5C2464736F6C PUSH4 0x43000815 STOP CALLER ",
							"sourceMap": "320:3153:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3351:23:8;3361:12;:10;:12::i;:::-;3351:9;:23::i;:::-;320:3153:9;;3270:23:8;3280:12;:10;:12::i;:::-;3270:9;:23::i;:::-;320:3153:9;2417:159;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3784:85:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3937:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2055:192:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1874:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3605:89:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1713:91:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4289:622:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3446:78;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;656:96:6;709:7;735:10;728:17;;656:96;:::o;4289:622:8:-;2261:21:1;:19;:21::i;:::-;4368:17:8::1;4388:9;4368:29;;4408:44;4429:11;4442:9;4408:20;:44::i;:::-;4514:14;4531:26;4547:9;4531:15;:26::i;:::-;4514:43;;4608:25;4623:9;4608:10;;:14;;:25;;;;:::i;:::-;4595:10;:38;;;;4646:37;4663:11;4676:6;4646:16;:37::i;:::-;4729:11;4699:61;;4715:12;:10;:12::i;:::-;4699:61;;;4742:9;4753:6;4699:61;;;;;;;:::i;:::-;;;;;;;;4773:46;4796:11;4809:9;4773:22;:46::i;:::-;4832:15;:13;:15::i;:::-;4858:45;4880:11;4893:9;4858:21;:45::i;:::-;4357:554;;2303:20:1::0;:18;:20::i;:::-;4289:622:8;:::o;2417:159:9:-;2459:4;2556:12;;2538:15;:30;2531:37;;2417:159;:::o;3784:85:8:-;3829:7;3856:5;;3849:12;;3784:85;:::o;3937:87::-;3979:7;4006:10;;3999:17;;3937:87;:::o;2055:192:9:-;2094:4;2192:12;;2173:15;:31;;:66;;;;;2227:12;;2208:15;:31;;2173:66;2166:73;;2055:192;:::o;1874:91::-;1918:7;1945:12;;1938:19;;1874:91;:::o;3605:89:8:-;3644:15;3679:7;;;;;;;;;;;3672:14;;3605:89;:::o;1713:91:9:-;1757:7;1784:12;;1777:19;;1713:91;:::o;3446:78:8:-;3484:6;3510;;;;;;;;;;;3503:13;;3446:78;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2776:176:9:-;821:8;:6;:8::i;:::-;813:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;2894:50:::1;2921:11;2934:9;2894:26;:50::i;:::-;2776:176:::0;;:::o;7856:130:8:-;7931:7;7958:20;7972:5;;7958:9;:13;;:20;;;;:::i;:::-;7951:27;;7856:130;;;:::o;2755:96:7:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7023:144:8:-;7119:40;7134:11;7147;7119:14;:40::i;:::-;7023:144;;:::o;7445:155::-;;;:::o;8078:88::-;8131:7;;;;;;;;;;;:16;;:27;8148:9;8131:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8078:88::o;6155:159::-;;;:::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;5464:388:8:-;5598:1;5575:25;;:11;:25;;;5567:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;5679:1;5666:9;:14;5658:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5464:388;;:::o;3465:96:7:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;6602:147:8:-;6696:45;6716:11;6729;6696:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6602:147;;:::o;941:175:4:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;5196:642::-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5749:1;5728:10;:17;:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5728:56;5720:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5266:572;5196:642;;:::o;4108:223:5:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:90:10;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:77::-;471:7;500:5;489:16;;434:77;;;:::o;517:118::-;604:24;622:5;604:24;:::i;:::-;599:3;592:37;517:118;;:::o;641:222::-;734:4;772:2;761:9;757:18;749:26;;785:71;853:1;842:9;838:17;829:6;785:71;:::i;:::-;641:222;;;;:::o;869:126::-;906:7;946:42;939:5;935:54;924:65;;869:126;;;:::o;1001:104::-;1046:7;1075:24;1093:5;1075:24;:::i;:::-;1064:35;;1001:104;;;:::o;1111:142::-;1214:32;1240:5;1214:32;:::i;:::-;1209:3;1202:45;1111:142;;:::o;1259:254::-;1368:4;1406:2;1395:9;1391:18;1383:26;;1419:87;1503:1;1492:9;1488:17;1479:6;1419:87;:::i;:::-;1259:254;;;;:::o;1600:117::-;1709:1;1706;1699:12;1846:96;1883:7;1912:24;1930:5;1912:24;:::i;:::-;1901:35;;1846:96;;;:::o;1948:122::-;2021:24;2039:5;2021:24;:::i;:::-;2014:5;2011:35;2001:63;;2060:1;2057;2050:12;2001:63;1948:122;:::o;2076:139::-;2122:5;2160:6;2147:20;2138:29;;2176:33;2203:5;2176:33;:::i;:::-;2076:139;;;;:::o;2221:329::-;2280:6;2329:2;2317:9;2308:7;2304:23;2300:32;2297:119;;;2335:79;;:::i;:::-;2297:119;2455:1;2480:53;2525:7;2516:6;2505:9;2501:22;2480:53;:::i;:::-;2470:63;;2426:117;2221:329;;;;:::o;2556:60::-;2584:3;2605:5;2598:12;;2556:60;;;:::o;2622:142::-;2672:9;2705:53;2723:34;2732:24;2750:5;2732:24;:::i;:::-;2723:34;:::i;:::-;2705:53;:::i;:::-;2692:66;;2622:142;;;:::o;2770:126::-;2820:9;2853:37;2884:5;2853:37;:::i;:::-;2840:50;;2770:126;;;:::o;2902:140::-;2966:9;2999:37;3030:5;2999:37;:::i;:::-;2986:50;;2902:140;;;:::o;3048:159::-;3149:51;3194:5;3149:51;:::i;:::-;3144:3;3137:64;3048:159;;:::o;3213:250::-;3320:4;3358:2;3347:9;3343:18;3335:26;;3371:85;3453:1;3442:9;3438:17;3429:6;3371:85;:::i;:::-;3213:250;;;;:::o;3469:332::-;3590:4;3628:2;3617:9;3613:18;3605:26;;3641:71;3709:1;3698:9;3694:17;3685:6;3641:71;:::i;:::-;3722:72;3790:2;3779:9;3775:18;3766:6;3722:72;:::i;:::-;3469:332;;;;;:::o;3807:169::-;3891:11;3925:6;3920:3;3913:19;3965:4;3960:3;3956:14;3941:29;;3807:169;;;;:::o;3982:181::-;4122:33;4118:1;4110:6;4106:14;4099:57;3982:181;:::o;4169:366::-;4311:3;4332:67;4396:2;4391:3;4332:67;:::i;:::-;4325:74;;4408:93;4497:3;4408:93;:::i;:::-;4526:2;4521:3;4517:12;4510:19;;4169:366;;;:::o;4541:419::-;4707:4;4745:2;4734:9;4730:18;4722:26;;4794:9;4788:4;4784:20;4780:1;4769:9;4765:17;4758:47;4822:131;4948:4;4822:131;:::i;:::-;4814:139;;4541:419;;;:::o;4966:174::-;5106:26;5102:1;5094:6;5090:14;5083:50;4966:174;:::o;5146:366::-;5288:3;5309:67;5373:2;5368:3;5309:67;:::i;:::-;5302:74;;5385:93;5474:3;5385:93;:::i;:::-;5503:2;5498:3;5494:12;5487:19;;5146:366;;;:::o;5518:419::-;5684:4;5722:2;5711:9;5707:18;5699:26;;5771:9;5765:4;5761:20;5757:1;5746:9;5742:17;5735:47;5799:131;5925:4;5799:131;:::i;:::-;5791:139;;5518:419;;;:::o;5943:180::-;5991:77;5988:1;5981:88;6088:4;6085:1;6078:15;6112:4;6109:1;6102:15;6129:191;6169:3;6188:20;6206:1;6188:20;:::i;:::-;6183:25;;6222:20;6240:1;6222:20;:::i;:::-;6217:25;;6265:1;6262;6258:9;6251:16;;6286:3;6283:1;6280:10;6277:36;;;6293:18;;:::i;:::-;6277:36;6129:191;;;;:::o;6326:229::-;6466:34;6462:1;6454:6;6450:14;6443:58;6535:12;6530:2;6522:6;6518:15;6511:37;6326:229;:::o;6561:366::-;6703:3;6724:67;6788:2;6783:3;6724:67;:::i;:::-;6717:74;;6800:93;6889:3;6800:93;:::i;:::-;6918:2;6913:3;6909:12;6902:19;;6561:366;;;:::o;6933:419::-;7099:4;7137:2;7126:9;7122:18;7114:26;;7186:9;7180:4;7176:20;7172:1;7161:9;7157:17;7150:47;7214:131;7340:4;7214:131;:::i;:::-;7206:139;;6933:419;;;:::o;7358:175::-;7498:27;7494:1;7486:6;7482:14;7475:51;7358:175;:::o;7539:366::-;7681:3;7702:67;7766:2;7761:3;7702:67;:::i;:::-;7695:74;;7778:93;7867:3;7778:93;:::i;:::-;7896:2;7891:3;7887:12;7880:19;;7539:366;;;:::o;7911:419::-;8077:4;8115:2;8104:9;8100:18;8092:26;;8164:9;8158:4;8154:20;8150:1;8139:9;8135:17;8128:47;8192:131;8318:4;8192:131;:::i;:::-;8184:139;;7911:419;;;:::o;8336:410::-;8376:7;8399:20;8417:1;8399:20;:::i;:::-;8394:25;;8433:20;8451:1;8433:20;:::i;:::-;8428:25;;8488:1;8485;8481:9;8510:30;8528:11;8510:30;:::i;:::-;8499:41;;8689:1;8680:7;8676:15;8673:1;8670:22;8650:1;8643:9;8623:83;8600:139;;8719:18;;:::i;:::-;8600:139;8384:362;8336:410;;;;:::o;8752:118::-;8839:24;8857:5;8839:24;:::i;:::-;8834:3;8827:37;8752:118;;:::o;8876:332::-;8997:4;9035:2;9024:9;9020:18;9012:26;;9048:71;9116:1;9105:9;9101:17;9092:6;9048:71;:::i;:::-;9129:72;9197:2;9186:9;9182:18;9173:6;9129:72;:::i;:::-;8876:332;;;;;:::o;9214:116::-;9284:21;9299:5;9284:21;:::i;:::-;9277:5;9274:32;9264:60;;9320:1;9317;9310:12;9264:60;9214:116;:::o;9336:137::-;9390:5;9421:6;9415:13;9406:22;;9437:30;9461:5;9437:30;:::i;:::-;9336:137;;;;:::o;9479:345::-;9546:6;9595:2;9583:9;9574:7;9570:23;9566:32;9563:119;;;9601:79;;:::i;:::-;9563:119;9721:1;9746:61;9799:7;9790:6;9779:9;9775:22;9746:61;:::i;:::-;9736:71;;9692:125;9479:345;;;;:::o;9830:229::-;9970:34;9966:1;9958:6;9954:14;9947:58;10039:12;10034:2;10026:6;10022:15;10015:37;9830:229;:::o;10065:366::-;10207:3;10228:67;10292:2;10287:3;10228:67;:::i;:::-;10221:74;;10304:93;10393:3;10304:93;:::i;:::-;10422:2;10417:3;10413:12;10406:19;;10065:366;;;:::o;10437:419::-;10603:4;10641:2;10630:9;10626:18;10618:26;;10690:9;10684:4;10680:20;10676:1;10665:9;10661:17;10654:47;10718:131;10844:4;10718:131;:::i;:::-;10710:139;;10437:419;;;:::o;10862:225::-;11002:34;10998:1;10990:6;10986:14;10979:58;11071:8;11066:2;11058:6;11054:15;11047:33;10862:225;:::o;11093:366::-;11235:3;11256:67;11320:2;11315:3;11256:67;:::i;:::-;11249:74;;11332:93;11421:3;11332:93;:::i;:::-;11450:2;11445:3;11441:12;11434:19;;11093:366;;;:::o;11465:419::-;11631:4;11669:2;11658:9;11654:18;11646:26;;11718:9;11712:4;11708:20;11704:1;11693:9;11689:17;11682:47;11746:131;11872:4;11746:131;:::i;:::-;11738:139;;11465:419;;;:::o;11890:98::-;11941:6;11975:5;11969:12;11959:22;;11890:98;;;:::o;11994:147::-;12095:11;12132:3;12117:18;;11994:147;;;;:::o;12147:246::-;12228:1;12238:113;12252:6;12249:1;12246:13;12238:113;;;12337:1;12332:3;12328:11;12322:18;12318:1;12313:3;12309:11;12302:39;12274:2;12271:1;12267:10;12262:15;;12238:113;;;12385:1;12376:6;12371:3;12367:16;12360:27;12209:184;12147:246;;;:::o;12399:386::-;12503:3;12531:38;12563:5;12531:38;:::i;:::-;12585:88;12666:6;12661:3;12585:88;:::i;:::-;12578:95;;12682:65;12740:6;12735:3;12728:4;12721:5;12717:16;12682:65;:::i;:::-;12772:6;12767:3;12763:16;12756:23;;12507:278;12399:386;;;;:::o;12791:271::-;12921:3;12943:93;13032:3;13023:6;12943:93;:::i;:::-;12936:100;;13053:3;13046:10;;12791:271;;;;:::o;13068:179::-;13208:31;13204:1;13196:6;13192:14;13185:55;13068:179;:::o;13253:366::-;13395:3;13416:67;13480:2;13475:3;13416:67;:::i;:::-;13409:74;;13492:93;13581:3;13492:93;:::i;:::-;13610:2;13605:3;13601:12;13594:19;;13253:366;;;:::o;13625:419::-;13791:4;13829:2;13818:9;13814:18;13806:26;;13878:9;13872:4;13868:20;13864:1;13853:9;13849:17;13842:47;13906:131;14032:4;13906:131;:::i;:::-;13898:139;;13625:419;;;:::o;14050:99::-;14102:6;14136:5;14130:12;14120:22;;14050:99;;;:::o;14155:102::-;14196:6;14247:2;14243:7;14238:2;14231:5;14227:14;14223:28;14213:38;;14155:102;;;:::o;14263:377::-;14351:3;14379:39;14412:5;14379:39;:::i;:::-;14434:71;14498:6;14493:3;14434:71;:::i;:::-;14427:78;;14514:65;14572:6;14567:3;14560:4;14553:5;14549:16;14514:65;:::i;:::-;14604:29;14626:6;14604:29;:::i;:::-;14599:3;14595:39;14588:46;;14355:285;14263:377;;;;:::o;14646:313::-;14759:4;14797:2;14786:9;14782:18;14774:26;;14846:9;14840:4;14836:20;14832:1;14821:9;14817:17;14810:47;14874:78;14947:4;14938:6;14874:78;:::i;:::-;14866:86;;14646:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "848200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"buyTokens(address)": "infinite",
								"closingTime()": "2432",
								"hasClosed()": "2444",
								"isOpen()": "4646",
								"openingTime()": "2476",
								"rate()": "2455",
								"token()": "infinite",
								"wallet()": "2537",
								"weiRaised()": "2477"
							},
							"internal": {
								"_extendTime(uint256)": "infinite",
								"_preValidatePurchase(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 320,
									"end": 3473,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 320,
									"end": 3473,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 320,
									"end": 3473,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1077,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1210,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1220,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1222,
									"end": 1229,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2644,
									"end": 2645,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2635,
									"end": 2641,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2635,
									"end": 2645,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 2627,
									"end": 2670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2689,
									"end": 2697,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2681,
									"end": 2753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2800,
									"end": 2801,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2780,
									"end": 2787,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 2764,
									"end": 2843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2864,
									"end": 2870,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2856,
									"end": 2861,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2888,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2881,
									"end": 2888,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2919,
									"end": 2926,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2916,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2910,
									"end": 2916,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1322,
									"end": 1337,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1318,
									"modifierDepth": 1,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1337,
									"modifierDepth": 1,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1337,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1297,
									"end": 1393,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1297,
									"end": 1393,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1495,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1466,
									"end": 1479,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1466,
									"end": 1495,
									"modifierDepth": 1,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1458,
									"end": 1555,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1458,
									"end": 1555,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1583,
									"end": 1596,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1580,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1568,
									"end": 1596,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1596,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1596,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1596,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1622,
									"end": 1635,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1607,
									"end": 1619,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1607,
									"end": 1635,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1607,
									"end": 1635,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1607,
									"end": 1635,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1607,
									"end": 1635,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1643,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 320,
									"end": 3473,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 320,
									"end": 3473,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 826,
									"end": 930,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 826,
									"end": 930,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 871,
									"end": 878,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 918,
									"end": 923,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 900,
									"end": 924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 900,
									"end": 924,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 889,
									"end": 924,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 889,
									"end": 924,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 826,
									"end": 930,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 826,
									"end": 930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 1043,
									"end": 1048,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1017,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1010,
									"end": 1015,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1007,
									"end": 1050,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1064,
									"end": 1065,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1061,
									"end": 1062,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1054,
									"end": 1066,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 936,
									"end": 1074,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1145,
									"end": 1150,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1176,
									"end": 1182,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1170,
									"end": 1183,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1227,
									"end": 1232,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1192,
									"end": 1233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1080,
									"end": 1239,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1282,
									"end": 1289,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1329,
									"end": 1334,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1311,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1341,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 1405,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1445,
									"end": 1450,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1427,
									"end": 1451,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1347,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1582,
									"end": 1587,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1550,
									"end": 1588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1543,
									"end": 1548,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1589,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1601,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1463,
									"end": 1613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1690,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1721,
									"end": 1727,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1728,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1778,
									"end": 1783,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1737,
									"end": 1784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1619,
									"end": 1790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2817,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1796,
									"end": 2817,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1924,
									"end": 1930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1932,
									"end": 1938,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1948,
									"end": 1954,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1956,
									"end": 1962,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2005,
									"end": 2008,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 1993,
									"end": 2002,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1984,
									"end": 1991,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 1980,
									"end": 2003,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 2009,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1973,
									"end": 2093,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1973,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1973,
									"end": 2093,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2012,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2012,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 2012,
									"end": 2091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2012,
									"end": 2091,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2012,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1973,
									"end": 2093,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1973,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2132,
									"end": 2133,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2157,
									"end": 2221,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 2213,
									"end": 2220,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2204,
									"end": 2210,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2193,
									"end": 2202,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 2189,
									"end": 2211,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2157,
									"end": 2221,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2157,
									"end": 2221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2157,
									"end": 2221,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 2157,
									"end": 2221,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2147,
									"end": 2221,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 2147,
									"end": 2221,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2103,
									"end": 2231,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2270,
									"end": 2272,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2296,
									"end": 2360,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2352,
									"end": 2359,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2343,
									"end": 2349,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2332,
									"end": 2341,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 2328,
									"end": 2350,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2296,
									"end": 2360,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2296,
									"end": 2360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2296,
									"end": 2360,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2296,
									"end": 2360,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2286,
									"end": 2360,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2286,
									"end": 2360,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2241,
									"end": 2370,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2411,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2435,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 2491,
									"end": 2498,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2482,
									"end": 2488,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2471,
									"end": 2480,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 2467,
									"end": 2489,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2435,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2435,
									"end": 2499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2435,
									"end": 2499,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 2435,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2425,
									"end": 2499,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2425,
									"end": 2499,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2380,
									"end": 2509,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2548,
									"end": 2550,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2574,
									"end": 2646,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 2638,
									"end": 2645,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2629,
									"end": 2635,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2618,
									"end": 2627,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 2614,
									"end": 2636,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2574,
									"end": 2646,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 2574,
									"end": 2646,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2574,
									"end": 2646,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 2574,
									"end": 2646,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2564,
									"end": 2646,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2564,
									"end": 2646,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2519,
									"end": 2656,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2695,
									"end": 2698,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2722,
									"end": 2800,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 2792,
									"end": 2799,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2783,
									"end": 2789,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2772,
									"end": 2781,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 2768,
									"end": 2790,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2722,
									"end": 2800,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 2722,
									"end": 2800,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2722,
									"end": 2800,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 2722,
									"end": 2800,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2712,
									"end": 2800,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2712,
									"end": 2800,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2666,
									"end": 2810,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2817,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2817,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2817,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2817,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2817,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2817,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2817,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2817,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 2817,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2823,
									"end": 2992,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2823,
									"end": 2992,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2907,
									"end": 2918,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2941,
									"end": 2947,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2936,
									"end": 2939,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2929,
									"end": 2948,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2976,
									"end": 2979,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2972,
									"end": 2986,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2957,
									"end": 2986,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2957,
									"end": 2986,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2823,
									"end": 2992,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2823,
									"end": 2992,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2823,
									"end": 2992,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2823,
									"end": 2992,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2823,
									"end": 2992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2998,
									"end": 3168,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 2998,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3138,
									"end": 3160,
									"name": "PUSH",
									"source": 10,
									"value": "43726F776473616C653A20726174652069732030000000000000000000000000"
								},
								{
									"begin": 3134,
									"end": 3135,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3126,
									"end": 3132,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3122,
									"end": 3136,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3115,
									"end": 3161,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2998,
									"end": 3168,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2998,
									"end": 3168,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3174,
									"end": 3540,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 3174,
									"end": 3540,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3316,
									"end": 3319,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3337,
									"end": 3404,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 3401,
									"end": 3403,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 3396,
									"end": 3399,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3337,
									"end": 3404,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3337,
									"end": 3404,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3337,
									"end": 3404,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 3337,
									"end": 3404,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3330,
									"end": 3404,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3330,
									"end": 3404,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3413,
									"end": 3506,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 3502,
									"end": 3505,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3413,
									"end": 3506,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 3413,
									"end": 3506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3413,
									"end": 3506,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 3413,
									"end": 3506,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3531,
									"end": 3533,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3526,
									"end": 3529,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3522,
									"end": 3534,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3515,
									"end": 3534,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3515,
									"end": 3534,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3174,
									"end": 3540,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3174,
									"end": 3540,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3174,
									"end": 3540,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3174,
									"end": 3540,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3546,
									"end": 3965,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 3546,
									"end": 3965,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3712,
									"end": 3716,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3750,
									"end": 3752,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3739,
									"end": 3748,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3735,
									"end": 3753,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3727,
									"end": 3753,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3727,
									"end": 3753,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3799,
									"end": 3808,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3797,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3789,
									"end": 3809,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3785,
									"end": 3786,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3774,
									"end": 3783,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3770,
									"end": 3787,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3763,
									"end": 3810,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 3958,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 3953,
									"end": 3957,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 3958,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 3827,
									"end": 3958,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 3958,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 3827,
									"end": 3958,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3819,
									"end": 3958,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3819,
									"end": 3958,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3546,
									"end": 3965,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3546,
									"end": 3965,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3546,
									"end": 3965,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3546,
									"end": 3965,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3971,
									"end": 4195,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 3971,
									"end": 4195,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4111,
									"end": 4145,
									"name": "PUSH",
									"source": 10,
									"value": "43726F776473616C653A2077616C6C657420697320746865207A65726F206164"
								},
								{
									"begin": 4107,
									"end": 4108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4099,
									"end": 4105,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4095,
									"end": 4109,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4088,
									"end": 4146,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4180,
									"end": 4187,
									"name": "PUSH",
									"source": 10,
									"value": "6472657373000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4175,
									"end": 4177,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4167,
									"end": 4173,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4163,
									"end": 4178,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4156,
									"end": 4188,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3971,
									"end": 4195,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3971,
									"end": 4195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4201,
									"end": 4567,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 4201,
									"end": 4567,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4343,
									"end": 4346,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4364,
									"end": 4431,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 4428,
									"end": 4430,
									"name": "PUSH",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 4423,
									"end": 4426,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4364,
									"end": 4431,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4364,
									"end": 4431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4364,
									"end": 4431,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 4364,
									"end": 4431,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4357,
									"end": 4431,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4357,
									"end": 4431,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4440,
									"end": 4533,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4529,
									"end": 4532,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4440,
									"end": 4533,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 4440,
									"end": 4533,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4440,
									"end": 4533,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4440,
									"end": 4533,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4558,
									"end": 4560,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4553,
									"end": 4556,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4561,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4542,
									"end": 4561,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4542,
									"end": 4561,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4201,
									"end": 4567,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4201,
									"end": 4567,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4201,
									"end": 4567,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4201,
									"end": 4567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4573,
									"end": 4992,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 4573,
									"end": 4992,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4739,
									"end": 4743,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4777,
									"end": 4779,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4766,
									"end": 4775,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4762,
									"end": 4780,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4754,
									"end": 4780,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4754,
									"end": 4780,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4826,
									"end": 4835,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4820,
									"end": 4824,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4816,
									"end": 4836,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4812,
									"end": 4813,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4801,
									"end": 4810,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4797,
									"end": 4814,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4790,
									"end": 4837,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4854,
									"end": 4985,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4980,
									"end": 4984,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4854,
									"end": 4985,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 4854,
									"end": 4985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4854,
									"end": 4985,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4854,
									"end": 4985,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4846,
									"end": 4985,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4846,
									"end": 4985,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4573,
									"end": 4992,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4573,
									"end": 4992,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4573,
									"end": 4992,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4573,
									"end": 4992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4998,
									"end": 5221,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 4998,
									"end": 5221,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5138,
									"end": 5172,
									"name": "PUSH",
									"source": 10,
									"value": "43726F776473616C653A20746F6B656E20697320746865207A65726F20616464"
								},
								{
									"begin": 5134,
									"end": 5135,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5126,
									"end": 5132,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5122,
									"end": 5136,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5173,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5207,
									"end": 5213,
									"name": "PUSH",
									"source": 10,
									"value": "7265737300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5202,
									"end": 5204,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5194,
									"end": 5200,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5190,
									"end": 5205,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5183,
									"end": 5214,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4998,
									"end": 5221,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4998,
									"end": 5221,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5227,
									"end": 5593,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 5227,
									"end": 5593,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5369,
									"end": 5372,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5390,
									"end": 5457,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 5454,
									"end": 5456,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5449,
									"end": 5452,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5390,
									"end": 5457,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5390,
									"end": 5457,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5390,
									"end": 5457,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 5390,
									"end": 5457,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5383,
									"end": 5457,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5383,
									"end": 5457,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5466,
									"end": 5559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 5555,
									"end": 5558,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5466,
									"end": 5559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 5466,
									"end": 5559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5466,
									"end": 5559,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 5466,
									"end": 5559,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5584,
									"end": 5586,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5579,
									"end": 5582,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5575,
									"end": 5587,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5568,
									"end": 5587,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5568,
									"end": 5587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5227,
									"end": 5593,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5227,
									"end": 5593,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5227,
									"end": 5593,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5227,
									"end": 5593,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5599,
									"end": 6018,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 5599,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5765,
									"end": 5769,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5803,
									"end": 5805,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5792,
									"end": 5801,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5788,
									"end": 5806,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5780,
									"end": 5806,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5780,
									"end": 5806,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5852,
									"end": 5861,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5846,
									"end": 5850,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5842,
									"end": 5862,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5838,
									"end": 5839,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5827,
									"end": 5836,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5823,
									"end": 5840,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5816,
									"end": 5863,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5880,
									"end": 6011,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 6006,
									"end": 6010,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5880,
									"end": 6011,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 5880,
									"end": 6011,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5880,
									"end": 6011,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5880,
									"end": 6011,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5872,
									"end": 6011,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5872,
									"end": 6011,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5599,
									"end": 6018,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5599,
									"end": 6018,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5599,
									"end": 6018,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5599,
									"end": 6018,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6024,
									"end": 6262,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 6024,
									"end": 6262,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6164,
									"end": 6198,
									"name": "PUSH",
									"source": 10,
									"value": "54696D656443726F776473616C653A206F70656E696E672074696D6520697320"
								},
								{
									"begin": 6160,
									"end": 6161,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6152,
									"end": 6158,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6148,
									"end": 6162,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6141,
									"end": 6199,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH",
									"source": 10,
									"value": "6265666F72652063757272656E742074696D6500000000000000000000000000"
								},
								{
									"begin": 6228,
									"end": 6230,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6220,
									"end": 6226,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6216,
									"end": 6231,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6209,
									"end": 6255,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6024,
									"end": 6262,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6024,
									"end": 6262,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6268,
									"end": 6634,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 6268,
									"end": 6634,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6410,
									"end": 6413,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6431,
									"end": 6498,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 6495,
									"end": 6497,
									"name": "PUSH",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 6490,
									"end": 6493,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6431,
									"end": 6498,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 6431,
									"end": 6498,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6431,
									"end": 6498,
									"name": "tag",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 6431,
									"end": 6498,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6424,
									"end": 6498,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6424,
									"end": 6498,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6507,
									"end": 6600,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 6596,
									"end": 6599,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6507,
									"end": 6600,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 6507,
									"end": 6600,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6507,
									"end": 6600,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 6507,
									"end": 6600,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6625,
									"end": 6627,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 6620,
									"end": 6623,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6616,
									"end": 6628,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6609,
									"end": 6628,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6609,
									"end": 6628,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6268,
									"end": 6634,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6268,
									"end": 6634,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6268,
									"end": 6634,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6268,
									"end": 6634,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6640,
									"end": 7059,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 6640,
									"end": 7059,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6806,
									"end": 6810,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6844,
									"end": 6846,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6833,
									"end": 6842,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6829,
									"end": 6847,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6821,
									"end": 6847,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6821,
									"end": 6847,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6893,
									"end": 6902,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6887,
									"end": 6891,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6883,
									"end": 6903,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 6879,
									"end": 6880,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6868,
									"end": 6877,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6864,
									"end": 6881,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6857,
									"end": 6904,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6921,
									"end": 7052,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 7047,
									"end": 7051,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6921,
									"end": 7052,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 6921,
									"end": 7052,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6921,
									"end": 7052,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 6921,
									"end": 7052,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6913,
									"end": 7052,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6913,
									"end": 7052,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6640,
									"end": 7059,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6640,
									"end": 7059,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6640,
									"end": 7059,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6640,
									"end": 7059,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7065,
									"end": 7307,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 7065,
									"end": 7307,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7205,
									"end": 7239,
									"name": "PUSH",
									"source": 10,
									"value": "54696D656443726F776473616C653A206F70656E696E672074696D6520697320"
								},
								{
									"begin": 7201,
									"end": 7202,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7193,
									"end": 7199,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7189,
									"end": 7203,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7182,
									"end": 7240,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7274,
									"end": 7299,
									"name": "PUSH",
									"source": 10,
									"value": "6E6F74206265666F726520636C6F73696E672074696D65000000000000000000"
								},
								{
									"begin": 7269,
									"end": 7271,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7261,
									"end": 7267,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7257,
									"end": 7272,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7250,
									"end": 7300,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7065,
									"end": 7307,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7065,
									"end": 7307,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7313,
									"end": 7679,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 7313,
									"end": 7679,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7455,
									"end": 7458,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7476,
									"end": 7543,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 7540,
									"end": 7542,
									"name": "PUSH",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 7535,
									"end": 7538,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7476,
									"end": 7543,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7476,
									"end": 7543,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 7476,
									"end": 7543,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7469,
									"end": 7543,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7469,
									"end": 7543,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7552,
									"end": 7645,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 7641,
									"end": 7644,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7552,
									"end": 7645,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 7552,
									"end": 7645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7552,
									"end": 7645,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 7552,
									"end": 7645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7670,
									"end": 7672,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 7665,
									"end": 7668,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7661,
									"end": 7673,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7654,
									"end": 7673,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7654,
									"end": 7673,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7313,
									"end": 7679,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7313,
									"end": 7679,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7313,
									"end": 7679,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7313,
									"end": 7679,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7685,
									"end": 8104,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 7685,
									"end": 8104,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7851,
									"end": 7855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7889,
									"end": 7891,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7878,
									"end": 7887,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7874,
									"end": 7892,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7866,
									"end": 7892,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7866,
									"end": 7892,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7938,
									"end": 7947,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7932,
									"end": 7936,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7928,
									"end": 7948,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 7924,
									"end": 7925,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7913,
									"end": 7922,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7909,
									"end": 7926,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7902,
									"end": 7949,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7966,
									"end": 8097,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 8092,
									"end": 8096,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7966,
									"end": 8097,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 7966,
									"end": 8097,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7966,
									"end": 8097,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 7966,
									"end": 8097,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7958,
									"end": 8097,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7958,
									"end": 8097,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7685,
									"end": 8104,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7685,
									"end": 8104,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7685,
									"end": 8104,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7685,
									"end": 8104,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 320,
									"end": 3473,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 320,
									"end": 3473,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 3473,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 320,
									"end": 3473,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 320,
									"end": 3473,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 320,
									"end": 3473,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 320,
									"end": 3473,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 320,
									"end": 3473,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 320,
									"end": 3473,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122040d24c468bd4cd432052781ecc08630dedb5beb320c8eb657eed8ab2ccaa5c2464736f6c63430008150033",
									".code": [
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "4B6753BC"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "4B6753BC"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "521EB273"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "B7A8807C"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "EC8AC4D8"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "FC0C546A"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "1515BC2B"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "2C4E722E"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "4042B66F"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "47535D7B"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3361,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3361,
											"end": 3373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3351,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3280,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3280,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3270,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3270,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 320,
											"end": 3473,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2417,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2417,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2055,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2055,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1874,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1874,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1713,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1713,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4397,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4397,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4397,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4429,
											"end": 4440,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4442,
											"end": 4451,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4408,
											"end": 4452,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 4547,
											"end": 4556,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4531,
											"end": 4546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 4531,
											"end": 4557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 4623,
											"end": 4632,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4608,
											"end": 4618,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 4608,
											"end": 4622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 4663,
											"end": 4674,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4676,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 4646,
											"end": 4683,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4729,
											"end": 4740,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 4715,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 4715,
											"end": 4727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B"
										},
										{
											"begin": 4742,
											"end": 4751,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4753,
											"end": 4759,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 4699,
											"end": 4760,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 4796,
											"end": 4807,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4809,
											"end": 4818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 4773,
											"end": 4819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4832,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 4832,
											"end": 4847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 4880,
											"end": 4891,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 4902,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 4858,
											"end": 4903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4357,
											"end": 4911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4357,
											"end": 4911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2463,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2568,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2556,
											"end": 2568,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2553,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2568,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3829,
											"end": 3836,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3856,
											"end": 3861,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3856,
											"end": 3861,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 3986,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4016,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4006,
											"end": 4016,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2204,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2204,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2239,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2173,
											"end": 2239,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2239,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2227,
											"end": 2239,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2239,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2239,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2239,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2173,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1957,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1945,
											"end": 1957,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3644,
											"end": 3659,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1757,
											"end": 1764,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1796,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1784,
											"end": 1796,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 1796,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3484,
											"end": 3490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3516,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2952,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2776,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 821,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 821,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 821,
											"end": 829,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 821,
											"end": 829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 813,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 813,
											"end": 858,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 813,
											"end": 858,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 858,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 813,
											"end": 858,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 813,
											"end": 858,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 813,
											"end": 858,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 813,
											"end": 858,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 813,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 813,
											"end": 858,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 813,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 813,
											"end": 858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 813,
											"end": 858,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 813,
											"end": 858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 813,
											"end": 858,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 858,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 813,
											"end": 858,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 813,
											"end": 858,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 813,
											"end": 858,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 813,
											"end": 858,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 813,
											"end": 858,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 813,
											"end": 858,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 813,
											"end": 858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2894,
											"end": 2944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2921,
											"end": 2932,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2934,
											"end": 2943,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2894,
											"end": 2920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 2894,
											"end": 2944,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2894,
											"end": 2944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2894,
											"end": 2944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7931,
											"end": 7938,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 7972,
											"end": 7977,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7972,
											"end": 7977,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7967,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 7958,
											"end": 7971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7978,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 7134,
											"end": 7145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7147,
											"end": 7158,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 7119,
											"end": 7159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7159,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 7119,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8078,
											"end": 8166,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 8078,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8147,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8147,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "8FC"
										},
										{
											"begin": 8148,
											"end": 8157,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8078,
											"end": 8166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5575,
											"end": 5586,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 5567,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5679,
											"end": 5680,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5675,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5680,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 5658,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 6716,
											"end": 6727,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6740,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1050,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1023,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5738,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5745,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5750,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5754,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5720,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5266,
											"end": 5838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4241,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4323,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4272,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5387,
											"end": 5392,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5354,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5446,
											"end": 5458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5511,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5487,
											"end": 5518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 5562,
											"end": 5568,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5579,
											"end": 5589,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 5535,
											"end": 5604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 8121,
											"end": 8139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 8113,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 8249,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 9324,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 434,
											"end": 511,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 434,
											"end": 511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 471,
											"end": 478,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 489,
											"end": 505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 489,
											"end": 505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 434,
											"end": 511,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 434,
											"end": 511,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 434,
											"end": 511,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 434,
											"end": 511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 517,
											"end": 635,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 517,
											"end": 635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 622,
											"end": 627,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 604,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 604,
											"end": 628,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 599,
											"end": 602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 592,
											"end": 629,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 517,
											"end": 635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 517,
											"end": 635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 517,
											"end": 635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 863,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 641,
											"end": 863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 734,
											"end": 738,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 774,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 770,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 757,
											"end": 775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 749,
											"end": 775,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 749,
											"end": 775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 785,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 851,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 838,
											"end": 855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 829,
											"end": 835,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 785,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 785,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 785,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 785,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 863,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 641,
											"end": 863,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 869,
											"end": 995,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 869,
											"end": 995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 906,
											"end": 913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 988,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 935,
											"end": 989,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 924,
											"end": 989,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 924,
											"end": 989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 869,
											"end": 995,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 869,
											"end": 995,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 869,
											"end": 995,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 869,
											"end": 995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1105,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 1001,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1046,
											"end": 1053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 1093,
											"end": 1098,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1075,
											"end": 1099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1099,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 1075,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1099,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1099,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1105,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1105,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1105,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1111,
											"end": 1253,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 1111,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 1240,
											"end": 1245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 1214,
											"end": 1246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1246,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 1214,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1209,
											"end": 1212,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1202,
											"end": 1247,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1111,
											"end": 1253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1111,
											"end": 1253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1111,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1513,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1259,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1368,
											"end": 1372,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1395,
											"end": 1404,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1409,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1419,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 1503,
											"end": 1504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1501,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1479,
											"end": 1485,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1419,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 1419,
											"end": 1506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1419,
											"end": 1506,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 1419,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1513,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1513,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 1717,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 1600,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1707,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1699,
											"end": 1711,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1942,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1846,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1883,
											"end": 1890,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1930,
											"end": 1935,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1912,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1936,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1912,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1936,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1942,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1942,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 2070,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 1948,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2039,
											"end": 2044,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 2021,
											"end": 2045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2045,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2021,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2046,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2058,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2127,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2166,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2147,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2203,
											"end": 2208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 2176,
											"end": 2209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2331,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2326,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2308,
											"end": 2315,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2327,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2332,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2297,
											"end": 2416,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2297,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2297,
											"end": 2416,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 2335,
											"end": 2414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2297,
											"end": 2416,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2297,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2505,
											"end": 2514,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2501,
											"end": 2523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2480,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2480,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2480,
											"end": 2533,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2480,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2533,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2426,
											"end": 2543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2616,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 2556,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2584,
											"end": 2587,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2610,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2764,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 2622,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2723,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2732,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2732,
											"end": 2756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2756,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2732,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 2723,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2757,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2723,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2705,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2692,
											"end": 2758,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2692,
											"end": 2758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2764,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2764,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2896,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 2770,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2884,
											"end": 2889,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 2853,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2853,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2896,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2896,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3042,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 2902,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2966,
											"end": 2975,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 2999,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2986,
											"end": 3036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2986,
											"end": 3036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3042,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3207,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3048,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3194,
											"end": 3199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 3149,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3200,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3149,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3144,
											"end": 3147,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3137,
											"end": 3201,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3320,
											"end": 3324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3360,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3343,
											"end": 3361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3335,
											"end": 3361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3335,
											"end": 3361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3453,
											"end": 3454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3438,
											"end": 3455,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3429,
											"end": 3435,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3371,
											"end": 3456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3456,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3371,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3590,
											"end": 3594,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3613,
											"end": 3631,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3631,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3641,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3709,
											"end": 3710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3707,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3685,
											"end": 3691,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3641,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3641,
											"end": 3712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3641,
											"end": 3712,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3641,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3790,
											"end": 3792,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3788,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3775,
											"end": 3793,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3766,
											"end": 3772,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3722,
											"end": 3794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3794,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3722,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3891,
											"end": 3902,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3923,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3913,
											"end": 3932,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 3969,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 3970,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 3970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 3970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3982,
											"end": 4163,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3982,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4122,
											"end": 4155,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4118,
											"end": 4119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4116,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4120,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3982,
											"end": 4163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3982,
											"end": 4163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4535,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 4169,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4311,
											"end": 4314,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4332,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4396,
											"end": 4398,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4391,
											"end": 4394,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4332,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 4332,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4332,
											"end": 4399,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4332,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4325,
											"end": 4399,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4325,
											"end": 4399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4497,
											"end": 4500,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 4408,
											"end": 4501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4501,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4408,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4528,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4521,
											"end": 4524,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4535,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4535,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4960,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 4541,
											"end": 4960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4707,
											"end": 4711,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 4747,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4734,
											"end": 4743,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4748,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4748,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 4803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 4792,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4804,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4781,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4769,
											"end": 4778,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4765,
											"end": 4782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4805,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4948,
											"end": 4952,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 4822,
											"end": 4953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4953,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4822,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4953,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4960,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4966,
											"end": 5140,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 4966,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5132,
											"name": "PUSH",
											"source": 10,
											"value": "54696D656443726F776473616C653A206E6F74206F70656E0000000000000000"
										},
										{
											"begin": 5102,
											"end": 5103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5094,
											"end": 5100,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5104,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5083,
											"end": 5133,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4966,
											"end": 5140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4966,
											"end": 5140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5512,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 5146,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5288,
											"end": 5291,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5309,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 5373,
											"end": 5375,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 5368,
											"end": 5371,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 5309,
											"end": 5376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5376,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 5309,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5302,
											"end": 5376,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5302,
											"end": 5376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5474,
											"end": 5477,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 5385,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5478,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5385,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5505,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5487,
											"end": 5506,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5487,
											"end": 5506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5512,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5937,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 5518,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5684,
											"end": 5688,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5724,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5707,
											"end": 5725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5699,
											"end": 5725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5699,
											"end": 5725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5771,
											"end": 5780,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5761,
											"end": 5781,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5755,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5742,
											"end": 5759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5782,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5799,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5925,
											"end": 5929,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5799,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 5799,
											"end": 5930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5799,
											"end": 5930,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5799,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5930,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5937,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 6123,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 5943,
											"end": 6123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6068,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5988,
											"end": 5989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 6069,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6088,
											"end": 6092,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 6085,
											"end": 6086,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6078,
											"end": 6093,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6112,
											"end": 6116,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6109,
											"end": 6110,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6117,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6129,
											"end": 6320,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 6129,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6169,
											"end": 6172,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 6206,
											"end": 6207,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 6188,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6183,
											"end": 6208,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6183,
											"end": 6208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 6240,
											"end": 6241,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 6222,
											"end": 6242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6217,
											"end": 6242,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6217,
											"end": 6242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6262,
											"end": 6263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6258,
											"end": 6267,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6251,
											"end": 6267,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6251,
											"end": 6267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6286,
											"end": 6289,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6283,
											"end": 6284,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6280,
											"end": 6290,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6277,
											"end": 6313,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6277,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 6277,
											"end": 6313,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 6293,
											"end": 6311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6277,
											"end": 6313,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 6277,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6129,
											"end": 6320,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6129,
											"end": 6320,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6129,
											"end": 6320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6129,
											"end": 6320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6129,
											"end": 6320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6326,
											"end": 6555,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 6326,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6500,
											"name": "PUSH",
											"source": 10,
											"value": "43726F776473616C653A2062656E656669636961727920697320746865207A65"
										},
										{
											"begin": 6462,
											"end": 6463,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6450,
											"end": 6464,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6443,
											"end": 6501,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6535,
											"end": 6547,
											"name": "PUSH",
											"source": 10,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 6530,
											"end": 6532,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6518,
											"end": 6533,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6511,
											"end": 6548,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6326,
											"end": 6555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6326,
											"end": 6555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6927,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 6561,
											"end": 6927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6703,
											"end": 6706,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6724,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 6788,
											"end": 6790,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 6783,
											"end": 6786,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6724,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 6724,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6724,
											"end": 6791,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 6724,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6717,
											"end": 6791,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6717,
											"end": 6791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 6889,
											"end": 6892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 6800,
											"end": 6893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 6893,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 6800,
											"end": 6893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6918,
											"end": 6920,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6913,
											"end": 6916,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6909,
											"end": 6921,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6902,
											"end": 6921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6902,
											"end": 6921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6927,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6927,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7099,
											"end": 7103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7137,
											"end": 7139,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7126,
											"end": 7135,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7186,
											"end": 7195,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7176,
											"end": 7196,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7172,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7161,
											"end": 7170,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7157,
											"end": 7174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7150,
											"end": 7197,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 7340,
											"end": 7344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 7214,
											"end": 7345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7345,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 7352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7533,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 7358,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7498,
											"end": 7525,
											"name": "PUSH",
											"source": 10,
											"value": "43726F776473616C653A20776569416D6F756E74206973203000000000000000"
										},
										{
											"begin": 7494,
											"end": 7495,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7492,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7496,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7475,
											"end": 7526,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7905,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 7539,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7681,
											"end": 7684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7702,
											"end": 7769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 7766,
											"end": 7768,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 7761,
											"end": 7764,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7702,
											"end": 7769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 7702,
											"end": 7769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7702,
											"end": 7769,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 7702,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7695,
											"end": 7769,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7695,
											"end": 7769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7778,
											"end": 7871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 7867,
											"end": 7870,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7778,
											"end": 7871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 7778,
											"end": 7871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7778,
											"end": 7871,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 7778,
											"end": 7871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7896,
											"end": 7898,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7891,
											"end": 7894,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7887,
											"end": 7899,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7880,
											"end": 7899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7880,
											"end": 7899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7905,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7905,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7905,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7911,
											"end": 8330,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 7911,
											"end": 8330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8077,
											"end": 8081,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8115,
											"end": 8117,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8104,
											"end": 8113,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8092,
											"end": 8118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8092,
											"end": 8118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8158,
											"end": 8162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8174,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8148,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8135,
											"end": 8152,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8128,
											"end": 8175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8192,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 8318,
											"end": 8322,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8192,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 8192,
											"end": 8323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8192,
											"end": 8323,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 8192,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7911,
											"end": 8330,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7911,
											"end": 8330,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7911,
											"end": 8330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7911,
											"end": 8330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8336,
											"end": 8746,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 8336,
											"end": 8746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8376,
											"end": 8383,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 8417,
											"end": 8418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 8399,
											"end": 8419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8394,
											"end": 8419,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8394,
											"end": 8419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8433,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 8451,
											"end": 8452,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8433,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 8433,
											"end": 8453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8433,
											"end": 8453,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 8433,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8428,
											"end": 8453,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8428,
											"end": 8453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8488,
											"end": 8489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8485,
											"end": 8486,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8481,
											"end": 8490,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8510,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 8528,
											"end": 8539,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8510,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 8510,
											"end": 8540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8510,
											"end": 8540,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 8510,
											"end": 8540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8499,
											"end": 8540,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8499,
											"end": 8540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8689,
											"end": 8690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8680,
											"end": 8687,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8676,
											"end": 8691,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8673,
											"end": 8674,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8670,
											"end": 8692,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8650,
											"end": 8651,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8643,
											"end": 8652,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8623,
											"end": 8706,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8600,
											"end": 8739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 8600,
											"end": 8739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 8719,
											"end": 8737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8600,
											"end": 8739,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 8600,
											"end": 8739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8384,
											"end": 8746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8336,
											"end": 8746,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8336,
											"end": 8746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8336,
											"end": 8746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8336,
											"end": 8746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8336,
											"end": 8746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8870,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 8752,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8839,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 8857,
											"end": 8862,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8839,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 8839,
											"end": 8863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8839,
											"end": 8863,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 8839,
											"end": 8863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8834,
											"end": 8837,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8827,
											"end": 8864,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8876,
											"end": 9208,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 8876,
											"end": 9208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8997,
											"end": 9001,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9037,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9024,
											"end": 9033,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9012,
											"end": 9038,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9012,
											"end": 9038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 9116,
											"end": 9117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9105,
											"end": 9114,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9118,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9092,
											"end": 9098,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 9048,
											"end": 9119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9119,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 9048,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9129,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 9197,
											"end": 9199,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9186,
											"end": 9195,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9182,
											"end": 9200,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9173,
											"end": 9179,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9129,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 9129,
											"end": 9201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9129,
											"end": 9201,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 9129,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8876,
											"end": 9208,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8876,
											"end": 9208,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8876,
											"end": 9208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8876,
											"end": 9208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8876,
											"end": 9208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8876,
											"end": 9208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9214,
											"end": 9330,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 9214,
											"end": 9330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 9299,
											"end": 9304,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 9284,
											"end": 9305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9305,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 9284,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9277,
											"end": 9282,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9274,
											"end": 9306,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 9264,
											"end": 9324,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9317,
											"end": 9318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9310,
											"end": 9322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9324,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 9264,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9214,
											"end": 9330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9214,
											"end": 9330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9336,
											"end": 9473,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 9336,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9390,
											"end": 9395,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9415,
											"end": 9428,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9406,
											"end": 9428,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9406,
											"end": 9428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9437,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 9461,
											"end": 9466,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9437,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 9437,
											"end": 9467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9437,
											"end": 9467,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 9437,
											"end": 9467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9336,
											"end": 9473,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9336,
											"end": 9473,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9336,
											"end": 9473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9336,
											"end": 9473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9336,
											"end": 9473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9479,
											"end": 9824,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 9479,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9546,
											"end": 9552,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9595,
											"end": 9597,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9583,
											"end": 9592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9574,
											"end": 9581,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9570,
											"end": 9593,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9566,
											"end": 9598,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9563,
											"end": 9682,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9563,
											"end": 9682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 9563,
											"end": 9682,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9601,
											"end": 9680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 9601,
											"end": 9680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 9601,
											"end": 9680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9601,
											"end": 9680,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 9601,
											"end": 9680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9563,
											"end": 9682,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 9563,
											"end": 9682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9721,
											"end": 9722,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 9799,
											"end": 9806,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9790,
											"end": 9796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9779,
											"end": 9788,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9775,
											"end": 9797,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9746,
											"end": 9807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 9746,
											"end": 9807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9746,
											"end": 9807,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 9746,
											"end": 9807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9736,
											"end": 9807,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9736,
											"end": 9807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9692,
											"end": 9817,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9479,
											"end": 9824,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9479,
											"end": 9824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9479,
											"end": 9824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9479,
											"end": 9824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9479,
											"end": 9824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9830,
											"end": 10059,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 9830,
											"end": 10059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9970,
											"end": 10004,
											"name": "PUSH",
											"source": 10,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 9966,
											"end": 9967,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9947,
											"end": 10005,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10039,
											"end": 10051,
											"name": "PUSH",
											"source": 10,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 10034,
											"end": 10036,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10026,
											"end": 10032,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10022,
											"end": 10037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10015,
											"end": 10052,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9830,
											"end": 10059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9830,
											"end": 10059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10431,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 10065,
											"end": 10431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10207,
											"end": 10210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 10292,
											"end": 10294,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 10287,
											"end": 10290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 10228,
											"end": 10295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10295,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 10228,
											"end": 10295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10221,
											"end": 10295,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10221,
											"end": 10295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 10393,
											"end": 10396,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 10304,
											"end": 10397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10397,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 10304,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10422,
											"end": 10424,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10417,
											"end": 10420,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10413,
											"end": 10425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10406,
											"end": 10425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10406,
											"end": 10425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10431,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10437,
											"end": 10856,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 10437,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10603,
											"end": 10607,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10641,
											"end": 10643,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10630,
											"end": 10639,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10626,
											"end": 10644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10618,
											"end": 10644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10618,
											"end": 10644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10690,
											"end": 10699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10684,
											"end": 10688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10680,
											"end": 10700,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10676,
											"end": 10677,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10665,
											"end": 10674,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10661,
											"end": 10678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10654,
											"end": 10701,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 10844,
											"end": 10848,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 10718,
											"end": 10849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10849,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 10718,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10710,
											"end": 10849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10710,
											"end": 10849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10437,
											"end": 10856,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10437,
											"end": 10856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10437,
											"end": 10856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10437,
											"end": 10856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10862,
											"end": 11087,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 10862,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11036,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 10998,
											"end": 10999,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10990,
											"end": 10996,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10986,
											"end": 11000,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10979,
											"end": 11037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11071,
											"end": 11079,
											"name": "PUSH",
											"source": 10,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11066,
											"end": 11068,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11058,
											"end": 11064,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11054,
											"end": 11069,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11047,
											"end": 11080,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10862,
											"end": 11087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10862,
											"end": 11087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11093,
											"end": 11459,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 11093,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11235,
											"end": 11238,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11256,
											"end": 11323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 11320,
											"end": 11322,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 11315,
											"end": 11318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11256,
											"end": 11323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 11256,
											"end": 11323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11256,
											"end": 11323,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 11256,
											"end": 11323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11249,
											"end": 11323,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11249,
											"end": 11323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11332,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 11421,
											"end": 11424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11332,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 11332,
											"end": 11425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11332,
											"end": 11425,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 11332,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11450,
											"end": 11452,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11445,
											"end": 11448,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11441,
											"end": 11453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11434,
											"end": 11453,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11434,
											"end": 11453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11093,
											"end": 11459,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11093,
											"end": 11459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11093,
											"end": 11459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11093,
											"end": 11459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11465,
											"end": 11884,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 11465,
											"end": 11884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11631,
											"end": 11635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11669,
											"end": 11671,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11658,
											"end": 11667,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11654,
											"end": 11672,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11646,
											"end": 11672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11646,
											"end": 11672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11718,
											"end": 11727,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11712,
											"end": 11716,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11728,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11704,
											"end": 11705,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11693,
											"end": 11702,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11689,
											"end": 11706,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11682,
											"end": 11729,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11746,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 11872,
											"end": 11876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11746,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 11746,
											"end": 11877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11746,
											"end": 11877,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 11746,
											"end": 11877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11465,
											"end": 11884,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11465,
											"end": 11884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11465,
											"end": 11884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11465,
											"end": 11884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11890,
											"end": 11988,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 11890,
											"end": 11988,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11941,
											"end": 11947,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11975,
											"end": 11980,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11969,
											"end": 11981,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11959,
											"end": 11981,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11959,
											"end": 11981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11890,
											"end": 11988,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11890,
											"end": 11988,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11890,
											"end": 11988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11890,
											"end": 11988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11994,
											"end": 12141,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 11994,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12095,
											"end": 12106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12132,
											"end": 12135,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12117,
											"end": 12135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12117,
											"end": 12135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11994,
											"end": 12141,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11994,
											"end": 12141,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11994,
											"end": 12141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11994,
											"end": 12141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11994,
											"end": 12141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12147,
											"end": 12393,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 12147,
											"end": 12393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12228,
											"end": 12229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12238,
											"end": 12351,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 12238,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12252,
											"end": 12258,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12249,
											"end": 12250,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12246,
											"end": 12259,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12238,
											"end": 12351,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12238,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 12238,
											"end": 12351,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12337,
											"end": 12338,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12332,
											"end": 12335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12328,
											"end": 12339,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12322,
											"end": 12340,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12319,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12313,
											"end": 12316,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12309,
											"end": 12320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12302,
											"end": 12341,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12274,
											"end": 12276,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12271,
											"end": 12272,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12267,
											"end": 12277,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12262,
											"end": 12277,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12262,
											"end": 12277,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12238,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 12238,
											"end": 12351,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12238,
											"end": 12351,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 12238,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12385,
											"end": 12386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12376,
											"end": 12382,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12371,
											"end": 12374,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12367,
											"end": 12383,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12360,
											"end": 12387,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12209,
											"end": 12393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12147,
											"end": 12393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12147,
											"end": 12393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12147,
											"end": 12393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12147,
											"end": 12393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12785,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 12399,
											"end": 12785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12503,
											"end": 12506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12531,
											"end": 12569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 12563,
											"end": 12568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12531,
											"end": 12569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 12531,
											"end": 12569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12531,
											"end": 12569,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 12531,
											"end": 12569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12585,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 12666,
											"end": 12672,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12661,
											"end": 12664,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12585,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 12585,
											"end": 12673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12585,
											"end": 12673,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 12585,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12578,
											"end": 12673,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12578,
											"end": 12673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12682,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 12740,
											"end": 12746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12735,
											"end": 12738,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12728,
											"end": 12732,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12721,
											"end": 12726,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12717,
											"end": 12733,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12682,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 12682,
											"end": 12747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12682,
											"end": 12747,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 12682,
											"end": 12747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12772,
											"end": 12778,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12767,
											"end": 12770,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12763,
											"end": 12779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 12779,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 12779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12507,
											"end": 12785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12785,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12785,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12791,
											"end": 13062,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 12791,
											"end": 13062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12921,
											"end": 12924,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12943,
											"end": 13036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 13032,
											"end": 13035,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13023,
											"end": 13029,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 13036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 12943,
											"end": 13036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 13036,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 12943,
											"end": 13036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12936,
											"end": 13036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12936,
											"end": 13036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13053,
											"end": 13056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13046,
											"end": 13056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13046,
											"end": 13056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12791,
											"end": 13062,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12791,
											"end": 13062,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12791,
											"end": 13062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12791,
											"end": 13062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12791,
											"end": 13062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13068,
											"end": 13247,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 13068,
											"end": 13247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13208,
											"end": 13239,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 13204,
											"end": 13205,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13196,
											"end": 13202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13192,
											"end": 13206,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13185,
											"end": 13240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13068,
											"end": 13247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13068,
											"end": 13247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13253,
											"end": 13619,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 13253,
											"end": 13619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13395,
											"end": 13398,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13416,
											"end": 13483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 13480,
											"end": 13482,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 13475,
											"end": 13478,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13416,
											"end": 13483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 13416,
											"end": 13483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13416,
											"end": 13483,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 13416,
											"end": 13483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13409,
											"end": 13483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13409,
											"end": 13483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13492,
											"end": 13585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 13581,
											"end": 13584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13492,
											"end": 13585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 13492,
											"end": 13585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13492,
											"end": 13585,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 13492,
											"end": 13585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13610,
											"end": 13612,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13605,
											"end": 13608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13601,
											"end": 13613,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13594,
											"end": 13613,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13594,
											"end": 13613,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13253,
											"end": 13619,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13253,
											"end": 13619,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13253,
											"end": 13619,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13253,
											"end": 13619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13625,
											"end": 14044,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 13625,
											"end": 14044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13791,
											"end": 13795,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13829,
											"end": 13831,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13818,
											"end": 13827,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13814,
											"end": 13832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13806,
											"end": 13832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13806,
											"end": 13832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13878,
											"end": 13887,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13872,
											"end": 13876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13868,
											"end": 13888,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13864,
											"end": 13865,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13853,
											"end": 13862,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13849,
											"end": 13866,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13842,
											"end": 13889,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13906,
											"end": 14037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 14032,
											"end": 14036,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13906,
											"end": 14037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 13906,
											"end": 14037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13906,
											"end": 14037,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 13906,
											"end": 14037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13898,
											"end": 14037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13898,
											"end": 14037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13625,
											"end": 14044,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13625,
											"end": 14044,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13625,
											"end": 14044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13625,
											"end": 14044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14050,
											"end": 14149,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 14050,
											"end": 14149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14102,
											"end": 14108,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14136,
											"end": 14141,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14130,
											"end": 14142,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14120,
											"end": 14142,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14120,
											"end": 14142,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14050,
											"end": 14149,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14050,
											"end": 14149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14050,
											"end": 14149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14050,
											"end": 14149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14155,
											"end": 14257,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 14155,
											"end": 14257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14196,
											"end": 14202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14247,
											"end": 14249,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 14243,
											"end": 14250,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14240,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 14231,
											"end": 14236,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14227,
											"end": 14241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14223,
											"end": 14251,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14213,
											"end": 14251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14213,
											"end": 14251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14155,
											"end": 14257,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14155,
											"end": 14257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14155,
											"end": 14257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14155,
											"end": 14257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14263,
											"end": 14640,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 14263,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14351,
											"end": 14354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14379,
											"end": 14418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 14412,
											"end": 14417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14379,
											"end": 14418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 14379,
											"end": 14418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14379,
											"end": 14418,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 14379,
											"end": 14418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14434,
											"end": 14505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 14498,
											"end": 14504,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14493,
											"end": 14496,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14434,
											"end": 14505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 14434,
											"end": 14505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14434,
											"end": 14505,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 14434,
											"end": 14505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14427,
											"end": 14505,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14427,
											"end": 14505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14514,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 14572,
											"end": 14578,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14567,
											"end": 14570,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14560,
											"end": 14564,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14553,
											"end": 14558,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14549,
											"end": 14565,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14514,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 14514,
											"end": 14579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14514,
											"end": 14579,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 14514,
											"end": 14579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14604,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 14626,
											"end": 14632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14604,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 14604,
											"end": 14633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14604,
											"end": 14633,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 14604,
											"end": 14633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14599,
											"end": 14602,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14595,
											"end": 14634,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14588,
											"end": 14634,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14588,
											"end": 14634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14355,
											"end": 14640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14263,
											"end": 14640,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14263,
											"end": 14640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14263,
											"end": 14640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14263,
											"end": 14640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14263,
											"end": 14640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14646,
											"end": 14959,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 14646,
											"end": 14959,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14797,
											"end": 14799,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14786,
											"end": 14795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14782,
											"end": 14800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14774,
											"end": 14800,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14774,
											"end": 14800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14846,
											"end": 14855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14840,
											"end": 14844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14836,
											"end": 14856,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14832,
											"end": 14833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14821,
											"end": 14830,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14817,
											"end": 14834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14810,
											"end": 14857,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14874,
											"end": 14952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 14947,
											"end": 14951,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 14944,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14874,
											"end": 14952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 14874,
											"end": 14952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14874,
											"end": 14952,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 14874,
											"end": 14952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14866,
											"end": 14952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14866,
											"end": 14952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14646,
											"end": 14959,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14646,
											"end": 14959,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14646,
											"end": 14959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14646,
											"end": 14959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14646,
											"end": 14959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/timedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"closingTime()": "4b6753bc",
							"hasClosed()": "1515bc2b",
							"isOpen()": "47535d7b",
							"openingTime()": "b7a8807c",
							"rate()": "2c4e722e",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inOpeningTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inClosingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inRate\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"inWallet\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"inToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevClosingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClosingTime\",\"type\":\"uint256\"}],\"name\":\"TimedCrowdsaleExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale accepting contributions only within a time frame.\",\"events\":{\"TimedCrowdsaleExtended(uint256,uint256)\":{\"params\":{\"newClosingTime\":\"new closing time\",\"prevClosingTime\":\"old closing time\"}},\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"closingTime()\":{\"returns\":{\"_0\":\"the crowdsale closing time.\"}},\"constructor\":{\"details\":\"Constructor, takes crowdsale opening and closing times.\",\"params\":{\"inClosingTime\":\"Crowdsale closing time\",\"inOpeningTime\":\"Crowdsale opening time\"}},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"returns\":{\"_0\":\"Whether crowdsale period has elapsed\"}},\"isOpen()\":{\"returns\":{\"_0\":\"true if the crowdsale is open, false otherwise.\"}},\"openingTime()\":{\"returns\":{\"_0\":\"the crowdsale opening time.\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"TimedCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TimedCrowdsaleExtended(uint256,uint256)\":{\"notice\":\"Event for crowdsale extending\"},\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/validation/timedCrowdsale.sol\":\"TimedCrowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0xee463c77b303be60fe3509ff7b9aa23f2674f07b68622278a611ab7908591689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cb0baa0aace90973f81b63d0d3769d000b113f68fd089e0988f0c3468f5a1d9\",\"dweb:/ipfs/QmTi1mH6UupQvzs1AW1kr1sgMWW4wtjKWxngYd6dQ6Pdgj\"]},\"crowdsale/validation/timedCrowdsale.sol\":{\"keccak256\":\"0x82574104af0173f820a2ab81c4e5202e5868a0d80f98c6f999c3ce9e3fecfa7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9966d917f5319a2663fbf998f6acc83be0b0445dd37bcf2b0f6f4c582c59a5fd\",\"dweb:/ipfs/Qmc1zEZN3kRQF7EFwCUWAhg8bkGN1m9gPsEpUpvQZnU4bq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 118,
								"contract": "crowdsale/validation/timedCrowdsale.sol:TimedCrowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1348,
								"contract": "crowdsale/validation/timedCrowdsale.sol:TimedCrowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)250"
							},
							{
								"astId": 1350,
								"contract": "crowdsale/validation/timedCrowdsale.sol:TimedCrowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 1352,
								"contract": "crowdsale/validation/timedCrowdsale.sol:TimedCrowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1354,
								"contract": "crowdsale/validation/timedCrowdsale.sol:TimedCrowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1649,
								"contract": "crowdsale/validation/timedCrowdsale.sol:TimedCrowdsale",
								"label": "_openingTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1651,
								"contract": "crowdsale/validation/timedCrowdsale.sol:TimedCrowdsale",
								"label": "_closingTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)250": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TimedCrowdsaleExtended(uint256,uint256)": {
								"notice": "Event for crowdsale extending"
							},
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1014
						],
						"Pausable": [
							107
						]
					},
					"id": 108,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 108,
							"sourceUnit": 1015,
							"src": "130:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"632:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1014,
										"src": "632:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 107,
							"linearizedBaseContracts": [
								107,
								1014
							],
							"name": "Pausable",
							"nameLocation": "620:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 10,
									"name": "Paused",
									"nameLocation": "730:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "737:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:0"
									},
									"src": "724:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 15,
									"name": "Unpaused",
									"nameLocation": "841:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "850:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:0"
									},
									"src": "835:32:0"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "873:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 16,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "986:32:0",
										"statements": [
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 21,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "996:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "996:15:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:0"
									},
									"scope": 107,
									"src": "972:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "1229:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 29,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1239:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:0"
											}
										]
									},
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 34,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:0"
									},
									"src": "1204:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "1476:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 37,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1486:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:0"
											},
											{
												"id": 40,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:0"
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 42,
									"name": "whenPaused",
									"nameLocation": "1463:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:0"
									},
									"src": "1454:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1668:31:0",
										"statements": [
											{
												"expression": {
													"id": 48,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 17,
													"src": "1685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 47,
												"id": 49,
												"nodeType": "Return",
												"src": "1678:14:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1662:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:0"
									},
									"scope": 107,
									"src": "1615:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "1818:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 56,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "1837:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:0"
									},
									"scope": 107,
									"src": "1767:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1993:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 68,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "2011:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 67,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:0"
									},
									"scope": 107,
									"src": "1945:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "2235:66:0",
										"statements": [
											{
												"expression": {
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 80,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "2245:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 85,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "2281:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 84,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2274:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "EmitStatement",
												"src": "2269:25:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 78,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 77,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 34,
												"src": "2221:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:0"
									},
									"scope": 107,
									"src": "2186:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "2481:69:0",
										"statements": [
											{
												"expression": {
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 96,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "2491:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 101,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "2530:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 100,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "2521:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "EmitStatement",
												"src": "2516:27:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 94,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 93,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "2470:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:0"
									},
									"scope": 107,
									"src": "2433:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 108,
							"src": "602:1950:0",
							"usedErrors": [],
							"usedEvents": [
								10,
								15
							]
						}
					],
					"src": "105:2448:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							172
						]
					},
					"id": 173,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 109,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 110,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 172,
							"linearizedBaseContracts": [
								172
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 113,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 172,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 116,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 172,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 115,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 118,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 172,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 117,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 122,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 126,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 172,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 129,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 132,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 133,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 137,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 141,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 142,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 147,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 148,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 172,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 155,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 156,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 172,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 166,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 167,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 165,
												"id": 169,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 172,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 173,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							250
						]
					},
					"id": 251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 174,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 175,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 184,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 193,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 250,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 250,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 250,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 250,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 250,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2668:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2682:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2694:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2728:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:2"
									},
									"scope": 250,
									"src": "2646:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 251,
							"src": "202:2534:2",
							"usedErrors": [],
							"usedEvents": [
								184,
								193
							]
						}
					],
					"src": "106:2631:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							286
						]
					},
					"id": 287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3022:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3045:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3070:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3093:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3119:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 263,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3136:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 265,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3155:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 267,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:3"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:3"
									},
									"scope": 286,
									"src": "2997:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "3501:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:3"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "3539:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:3"
									},
									"scope": 286,
									"src": "3485:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:3"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3791:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 282,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:3"
									},
									"scope": 286,
									"src": "3740:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 287,
							"src": "2113:1689:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							992
						],
						"IERC20": [
							250
						],
						"IERC20Permit": [
							286
						],
						"SafeERC20": [
							662
						]
					},
					"id": 663,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 663,
							"sourceUnit": 251,
							"src": "140:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 663,
							"sourceUnit": 287,
							"src": "164:40:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 291,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 663,
							"sourceUnit": 993,
							"src": "205:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 292,
								"nodeType": "StructuredDocumentation",
								"src": "243:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 295,
									"libraryName": {
										"id": 293,
										"name": "Address",
										"nameLocations": [
											"731:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 992,
										"src": "731:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "725:26:4",
									"typeName": {
										"id": 294,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1013:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "1043:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 310,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 299,
																			"src": "1073:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$250",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1079:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "1073:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1088:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1073:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 313,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "1098:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 314,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "1102:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 308,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1050:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1054:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1050:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 306,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "1023:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "1023:86:4"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "757:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "950:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "970:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "963:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 298,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 297,
														"name": "IERC20",
														"nameLocations": [
															"963:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "963:6:4"
													},
													"referencedDeclaration": 250,
													"src": "963:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "985:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "977:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "997:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "989:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:4"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:4"
									},
									"scope": 662,
									"src": "941:175:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "1445:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 333,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "1475:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 336,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 323,
																			"src": "1505:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$250",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1511:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 249,
																		"src": "1505:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1524:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1505:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 339,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "1534:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 340,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "1540:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 341,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "1544:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1482:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1486:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1482:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1482:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 332,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "1455:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "1455:96:4"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1122:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1364:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1388:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1381:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 322,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 321,
														"name": "IERC20",
														"nameLocations": [
															"1381:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "1381:6:4"
													},
													"referencedDeclaration": 250,
													"src": "1381:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1403:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1395:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1417:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1409:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1429:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1421:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:55:4"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:4"
									},
									"scope": 662,
									"src": "1355:203:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "1894:497:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 358,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "2143:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2152:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2143:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 361,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2142:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 366,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2183:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$662",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$662",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 365,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2175:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 364,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2175:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2175:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 368,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 352,
																					"src": "2190:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 362,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 350,
																					"src": "2159:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$250",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2165:9:4",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 227,
																				"src": "2159:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2159:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2202:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2159:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 372,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2158:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2142:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "2121:163:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 378,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "2314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 381,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 350,
																			"src": "2344:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$250",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2350:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 237,
																		"src": "2344:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2358:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2344:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 384,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "2368:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 385,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "2377:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 379,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2321:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2325:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2321:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 377,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "2294:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "2294:90:4"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1564:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1827:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1846:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1839:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 348,
														"name": "IERC20",
														"nameLocations": [
															"1839:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "1839:6:4"
													},
													"referencedDeclaration": 250,
													"src": "1839:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1861:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1853:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1878:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1870:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:46:4"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:4"
									},
									"scope": 662,
									"src": "1818:573:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "2668:194:4",
										"statements": [
											{
												"assignments": [
													402
												],
												"declarations": [
													{
														"constant": false,
														"id": 402,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2686:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 426,
														"src": "2678:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 401,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2678:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 407,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2725:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$662",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$662",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2717:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 405,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2717:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "2732:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 403,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "2701:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2707:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 227,
														"src": "2701:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2678:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "2770:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 416,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "2800:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$250",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2806:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 237,
																		"src": "2800:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2814:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2800:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 419,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "2824:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 420,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "2833:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 421,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "2848:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2833:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2777:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2781:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2777:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2777:77:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "2750:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:105:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "2750:105:4"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "2397:180:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2591:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2620:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2613:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 392,
														"name": "IERC20",
														"nameLocations": [
															"2613:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "2613:6:4"
													},
													"referencedDeclaration": 250,
													"src": "2613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2635:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2627:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2644:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:46:4"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:4"
									},
									"scope": 662,
									"src": "2582:280:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "3139:321:4",
										"statements": [
											{
												"id": 470,
												"nodeType": "UncheckedBlock",
												"src": "3149:305:4",
												"statements": [
													{
														"assignments": [
															439
														],
														"declarations": [
															{
																"constant": false,
																"id": 439,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3181:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 470,
																"src": "3173:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 438,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3173:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 448,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 444,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3220:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$662",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$662",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3212:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 442,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3212:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3212:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 446,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "3227:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "3196:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3202:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 227,
																"src": "3196:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3173:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 450,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "3257:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 451,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "3273:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3280:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 449,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3249:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 455,
														"nodeType": "ExpressionStatement",
														"src": "3249:75:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 457,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "3358:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 460,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 431,
																					"src": "3388:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$250",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3394:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 237,
																				"src": "3388:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3402:8:4",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3388:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 463,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "3412:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 464,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 439,
																				"src": "3421:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 465,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 435,
																				"src": "3436:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3421:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 458,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3365:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3369:18:4",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3365:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3365:77:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 456,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "3338:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:105:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 469,
														"nodeType": "ExpressionStatement",
														"src": "3338:105:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2868:180:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3062:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3091:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3084:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 429,
														"name": "IERC20",
														"nameLocations": [
															"3084:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "3084:6:4"
													},
													"referencedDeclaration": 250,
													"src": "3084:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3106:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3098:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3123:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3115:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:46:4"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:4"
									},
									"scope": 662,
									"src": "3053:407:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "3856:333:4",
										"statements": [
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3879:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "3866:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 483,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3866:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 493,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 487,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "3917:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3923:7:4",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 237,
																"src": "3917:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3931:8:4",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3917:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 490,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "3941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 485,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3894:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3898:18:4",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3894:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3894:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3866:90:4"
											},
											{
												"condition": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3971:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 495,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "3996:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$250",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 496,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "4003:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$250",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 494,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "3972:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3972:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 517,
												"nodeType": "IfStatement",
												"src": "3967:216:4",
												"trueBody": {
													"id": 516,
													"nodeType": "Block",
													"src": "4018:165:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 500,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "4052:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 503,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 476,
																						"src": "4082:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$250",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 504,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4088:7:4",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 237,
																					"src": "4082:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4096:8:4",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4082:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 506,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 478,
																				"src": "4106:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4115:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 501,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4059:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4063:18:4",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4059:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4059:58:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 499,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "4032:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4032:86:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 510,
															"nodeType": "ExpressionStatement",
															"src": "4032:86:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 512,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "4152:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 513,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "4159:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 511,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "4132:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4132:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 515,
															"nodeType": "ExpressionStatement",
															"src": "4132:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "3466:308:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3788:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3808:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3801:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 475,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 474,
														"name": "IERC20",
														"nameLocations": [
															"3801:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "3801:6:4"
													},
													"referencedDeclaration": 250,
													"src": "3801:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3823:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3815:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3840:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3832:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:46:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3856:0:4"
									},
									"scope": 662,
									"src": "3779:410:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "4556:257:4",
										"statements": [
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4574:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "4566:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 540,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4566:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 546,
												"initialValue": {
													"arguments": [
														{
															"id": 544,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4601:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 542,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4588:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$286",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4594:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "4588:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4588:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4566:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4630:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "4637:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "4646:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 553,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "4653:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 554,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "4663:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 555,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "4666:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 556,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4669:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 547,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4617:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$286",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4623:6:4",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 271,
														"src": "4617:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "4617:54:4"
											},
											{
												"assignments": [
													560
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4689:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "4681:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 559,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4681:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 565,
												"initialValue": {
													"arguments": [
														{
															"id": 563,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4715:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 561,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4702:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$286",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4708:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "4702:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4702:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4681:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 567,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "4739:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 568,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "4753:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4767:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4753:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4739:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4770:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4731:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4731:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "4731:75:4"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "4195:141:4",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4350:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4383:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4370:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$286",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 522,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 521,
														"name": "IERC20Permit",
														"nameLocations": [
															"4370:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "4370:12:4"
													},
													"referencedDeclaration": 286,
													"src": "4370:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$286",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4406:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4398:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4429:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4421:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4421:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4477:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4469:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4501:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4495:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 532,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4520:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4512:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4539:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4531:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 536,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:186:4"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4556:0:4"
									},
									"scope": 662,
									"src": "4341:472:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "5266:572:4",
										"statements": [
											{
												"assignments": [
													586
												],
												"declarations": [
													{
														"constant": false,
														"id": 586,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5628:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 612,
														"src": "5615:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 585,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5615:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 595,
												"initialValue": {
													"arguments": [
														{
															"id": 592,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "5669:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5675:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 589,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "5649:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5641:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 587,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5641:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5641:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5656:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 752,
														"src": "5641:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5641:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5615:95:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 597,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "5728:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5739:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5728:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5749:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5728:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 603,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "5765:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5778:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 604,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5778:4:4",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 606,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5777:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 601,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5754:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5758:6:4",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5754:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5754:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5728:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5786:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 596,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5720:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5720:111:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "5720:111:4"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "4819:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5205:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5232:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5225:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 579,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 578,
														"name": "IERC20",
														"nameLocations": [
															"5225:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "5225:6:4"
													},
													"referencedDeclaration": 250,
													"src": "5225:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5252:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5239:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5239:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:33:4"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5266:0:4"
									},
									"scope": 662,
									"src": "5196:642:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "6428:505:4",
										"statements": [
											{
												"assignments": [
													625,
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6729:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "6724:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 624,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6724:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6751:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "6738:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 626,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6738:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"arguments": [
														{
															"id": 633,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "6785:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 630,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "6773:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6765:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 628,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6765:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6765:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6780:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6765:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6723:67:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 636,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "6819:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 637,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "6831:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6842:6:4",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6831:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6852:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6831:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 643,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "6868:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 645,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6881:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 644,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6881:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 646,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6880:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 641,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6857:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6861:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6857:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6857:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6831:56:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 649,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6830:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6819:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 655,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "6919:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6911:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 653,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6911:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6911:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 651,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "6892:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$992_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6900:10:4",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 680,
															"src": "6892:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6892:34:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6819:107:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 623,
												"id": 659,
												"nodeType": "Return",
												"src": "6800:126:4"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "5844:490:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6348:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6379:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6372:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 615,
														"name": "IERC20",
														"nameLocations": [
															"6372:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "6372:6:4"
													},
													"referencedDeclaration": 250,
													"src": "6372:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6399:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6386:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6371:33:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6422:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 621,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6422:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6421:6:4"
									},
									"scope": 662,
									"src": "6339:594:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 663,
							"src": "701:6234:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:6821:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							992
						]
					},
					"id": 993,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 665,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 992,
							"linearizedBaseContracts": [
								992
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "1478:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 673,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "1702:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 672,
												"id": 678,
												"nodeType": "Return",
												"src": "1695:30:5"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1432:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:5"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1472:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:5"
									},
									"scope": 992,
									"src": "1412:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "2718:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 691,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$992",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$992",
																				"typeString": "library Address"
																			}
																		],
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 689,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 694,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "2761:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:5"
											},
											{
												"assignments": [
													700,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 700,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "2813:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 699,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 707,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 701,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "2831:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 703,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "2853:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 709,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "2882:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 708,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:5"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2666:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2693:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:5"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:5"
									},
									"scope": 992,
									"src": "2647:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "3790:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 725,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "3829:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "3837:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 724,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															772,
															816
														],
														"referencedDeclaration": 816,
														"src": "3807:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 723,
												"id": 730,
												"nodeType": "Return",
												"src": "3800:79:5"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3723:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3739:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:5"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3776:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:5"
									},
									"scope": 992,
									"src": "3701:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "4255:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 745,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "4294:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 746,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "4302:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 748,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "4311:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 744,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															772,
															816
														],
														"referencedDeclaration": 816,
														"src": "4272:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 743,
												"id": 750,
												"nodeType": "Return",
												"src": "4265:59:5"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "4139:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "4163:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 736,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "4190:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 738,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:5"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "4241:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:5"
									},
									"scope": 992,
									"src": "4108:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "4806:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 765,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "4845:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "4853:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 767,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "4859:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 764,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															772,
															816
														],
														"referencedDeclaration": 816,
														"src": "4823:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 763,
												"id": 770,
												"nodeType": "Return",
												"src": "4816:94:5"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "4724:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "4740:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "4759:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:5"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "4792:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 761,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:5"
									},
									"scope": 992,
									"src": "4693:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "5344:267:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 789,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$992",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$992",
																				"typeString": "library Address"
																			}
																		],
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 787,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 792,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "5387:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:5"
											},
											{
												"assignments": [
													798,
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 815,
														"src": "5446:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 797,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 815,
														"src": "5460:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 799,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 807,
												"initialValue": {
													"arguments": [
														{
															"id": 805,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "5513:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 801,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "5487:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 803,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "5506:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 809,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "5562:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 810,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "5570:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 811,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "5579:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 812,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "5591:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 808,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "5535:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 785,
												"id": 814,
												"nodeType": "Return",
												"src": "5528:76:5"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5205:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5229:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 776,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5256:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5279:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 780,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:5"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5330:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 783,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:5"
									},
									"scope": 992,
									"src": "5165:446:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "5888:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 827,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "5924:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 828,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "5932:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 826,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															833,
															862
														],
														"referencedDeclaration": 862,
														"src": "5905:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 825,
												"id": 831,
												"nodeType": "Return",
												"src": "5898:80:5"
											}
										]
									},
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "5816:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "5832:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 820,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:5"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "5874:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 823,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:5"
									},
									"scope": 992,
									"src": "5788:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "6327:168:5",
										"statements": [
											{
												"assignments": [
													846,
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 846,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "6338:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 845,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "6352:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 847,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 853,
												"initialValue": {
													"arguments": [
														{
															"id": 851,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "6397:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 849,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "6379:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 855,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "6446:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "6454:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 857,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "6463:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 858,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "6475:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 854,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "6419:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 844,
												"id": 860,
												"nodeType": "Return",
												"src": "6412:76:5"
											}
										]
									},
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "6206:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "6230:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 837,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "6257:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 839,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:5"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "6313:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 842,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:5"
									},
									"scope": 992,
									"src": "6169:326:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "6771:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 873,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "6809:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "6817:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 872,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															879,
															908
														],
														"referencedDeclaration": 908,
														"src": "6788:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 871,
												"id": 877,
												"nodeType": "Return",
												"src": "6781:84:5"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "6704:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "6720:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 866,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:5"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "6757:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 869,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:5"
									},
									"scope": 992,
									"src": "6674:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "7213:170:5",
										"statements": [
											{
												"assignments": [
													892,
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 892,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 907,
														"src": "7224:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 891,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 907,
														"src": "7238:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 893,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 899,
												"initialValue": {
													"arguments": [
														{
															"id": 897,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "7285:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 895,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "7265:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 901,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "7334:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 902,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "7342:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 903,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "7351:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 904,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "7363:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 900,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "7307:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 890,
												"id": 906,
												"nodeType": "Return",
												"src": "7300:76:5"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "7097:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "7121:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 883,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "7148:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 885,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:5"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "7199:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 888,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:5"
									},
									"scope": 992,
									"src": "7058:325:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "7865:434:5",
										"statements": [
											{
												"condition": {
													"id": 922,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 913,
													"src": "7879:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 944,
													"nodeType": "Block",
													"src": "8235:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 940,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "8257:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 941,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "8269:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 939,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 991,
																	"src": "8249:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 943,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:5"
														}
													]
												},
												"id": 945,
												"nodeType": "IfStatement",
												"src": "7875:418:5",
												"trueBody": {
													"id": 938,
													"nodeType": "Block",
													"src": "7888:341:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 923,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "7906:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 935,
															"nodeType": "IfStatement",
															"src": "7902:286:5",
															"trueBody": {
																"id": 934,
																"nodeType": "Block",
																"src": "7930:258:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 929,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 911,
																							"src": "8132:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 928,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 680,
																						"src": "8121:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 930,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 931,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 927,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 933,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 936,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "8208:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 921,
															"id": 937,
															"nodeType": "Return",
															"src": "8201:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "7716:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "7740:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 912,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "7762:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "7795:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 916,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:5"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "7851:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:5"
									},
									"scope": 992,
									"src": "7671:628:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "8680:135:5",
										"statements": [
											{
												"condition": {
													"id": 959,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 950,
													"src": "8694:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "8751:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 964,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "8773:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 965,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "8785:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 963,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 991,
																	"src": "8765:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 967,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:5"
														}
													]
												},
												"id": 969,
												"nodeType": "IfStatement",
												"src": "8690:119:5",
												"trueBody": {
													"id": 962,
													"nodeType": "Block",
													"src": "8703:42:5",
													"statements": [
														{
															"expression": {
																"id": 960,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "8724:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 958,
															"id": 961,
															"nodeType": "Return",
															"src": "8717:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:5",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "8555:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "8577:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "8610:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 953,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:5"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "8666:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 956,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:5"
									},
									"scope": 992,
									"src": "8520:295:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "8904:457:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 978,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "8980:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 988,
													"nodeType": "Block",
													"src": "9310:45:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 985,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "9331:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 984,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 987,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:5"
														}
													]
												},
												"id": 989,
												"nodeType": "IfStatement",
												"src": "8976:379:5",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "9003:301:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9161:133:5",
																"nodeType": "YulBlock",
																"src": "9161:133:5",
																"statements": [
																	{
																		"nativeSrc": "9179:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9208:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9202:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:5"
																			},
																			"nativeSrc": "9202:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9183:15:5",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9247:2:5",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9251:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9243:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:5"
																					},
																					"nativeSrc": "9243:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9264:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9236:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:5"
																			},
																			"nativeSrc": "9236:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:5"
																		},
																		"nativeSrc": "9236:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 973,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 973,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:5",
																	"valueSize": 1
																}
															],
															"id": 982,
															"nodeType": "InlineAssembly",
															"src": "9152:142:5"
														}
													]
												}
											}
										]
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "8838:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "8863:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 974,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:5"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:5"
									},
									"scope": 992,
									"src": "8821:540:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 993,
							"src": "194:9169:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9263:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1014
						]
					},
					"id": 1015,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 994,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 995,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1014,
							"linearizedBaseContracts": [
								1014
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1000,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 999,
												"id": 1002,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1014,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1009,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1008,
												"id": 1011,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1006,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1014,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1015,
							"src": "624:235:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1326
						]
					},
					"id": 1327,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1016,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1017,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1326,
							"linearizedBaseContracts": [
								1326
							],
							"name": "SafeMath",
							"nameLocation": "490:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "717:140:7",
										"statements": [
											{
												"id": 1047,
												"nodeType": "UncheckedBlock",
												"src": "727:124:7",
												"statements": [
													{
														"assignments": [
															1030
														],
														"declarations": [
															{
																"constant": false,
																"id": 1030,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1047,
																"src": "751:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1029,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1034,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1031,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "763:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1032,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "767:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1035,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "786:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1036,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "790:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1042,
														"nodeType": "IfStatement",
														"src": "782:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1040,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1028,
															"id": 1041,
															"nodeType": "Return",
															"src": "793:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1044,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "838:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1045,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1028,
														"id": 1046,
														"nodeType": "Return",
														"src": "824:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:7"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "702:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "708:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:7"
									},
									"scope": 1326,
									"src": "641:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "1078:113:7",
										"statements": [
											{
												"id": 1075,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1061,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "1116:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1062,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "1120:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1068,
														"nodeType": "IfStatement",
														"src": "1112:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1066,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1060,
															"id": 1067,
															"nodeType": "Return",
															"src": "1123:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1070,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "1168:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1071,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "1172:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1073,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1060,
														"id": 1074,
														"nodeType": "Return",
														"src": "1154:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1018:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1029:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:7"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1063:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1056,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:7"
									},
									"scope": 1326,
									"src": "1002:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "1415:417:7",
										"statements": [
											{
												"id": 1117,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1089,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "1683:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1096,
														"nodeType": "IfStatement",
														"src": "1679:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1094,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1088,
															"id": 1095,
															"nodeType": "Return",
															"src": "1691:16:7"
														}
													},
													{
														"assignments": [
															1098
														],
														"declarations": [
															{
																"constant": false,
																"id": 1098,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1117,
																"src": "1721:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1097,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1102,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1099,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1100,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "1737:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1103,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "1756:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1104,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "1760:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1106,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "1765:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1112,
														"nodeType": "IfStatement",
														"src": "1752:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1110,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1088,
															"id": 1111,
															"nodeType": "Return",
															"src": "1768:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1114,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "1813:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1115,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1088,
														"id": 1116,
														"nodeType": "Return",
														"src": "1799:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1355:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:7"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1400:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1084,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1406:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:7"
									},
									"scope": 1326,
									"src": "1339:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "2057:114:7",
										"statements": [
											{
												"id": 1145,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1131,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "2095:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1138,
														"nodeType": "IfStatement",
														"src": "2091:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1136,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1130,
															"id": 1137,
															"nodeType": "Return",
															"src": "2103:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1140,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1122,
																		"src": "2148:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1141,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "2152:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1143,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1130,
														"id": 1144,
														"nodeType": "Return",
														"src": "2134:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:7"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2042:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2048:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:7"
									},
									"scope": 1326,
									"src": "1981:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "2406:114:7",
										"statements": [
											{
												"id": 1173,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1159,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "2444:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1166,
														"nodeType": "IfStatement",
														"src": "2440:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1164,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1158,
															"id": 1165,
															"nodeType": "Return",
															"src": "2452:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1168,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1150,
																		"src": "2497:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1169,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "2501:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1171,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1158,
														"id": 1172,
														"nodeType": "Return",
														"src": "2483:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2346:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2357:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:7"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2391:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:7"
									},
									"scope": 1326,
									"src": "2330:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "2822:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "2839:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "2843:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1184,
												"id": 1188,
												"nodeType": "Return",
												"src": "2832:12:7"
											}
										]
									},
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2779:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:7"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2813:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:7"
									},
									"scope": 1326,
									"src": "2755:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "3189:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "3206:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "3210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1199,
												"id": 1203,
												"nodeType": "Return",
												"src": "3199:12:7"
											}
										]
									},
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "3135:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "3146:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:7"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "3180:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:7"
									},
									"scope": 1326,
									"src": "3122:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "3532:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "3549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "3553:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1214,
												"id": 1218,
												"nodeType": "Return",
												"src": "3542:12:7"
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3478:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3489:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:7"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3523:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:7"
									},
									"scope": 1326,
									"src": "3465:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "3917:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "3934:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "3938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1229,
												"id": 1233,
												"nodeType": "Return",
												"src": "3927:12:7"
											}
										]
									},
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3863:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3874:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:7"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3908:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:7"
									},
									"scope": 1326,
									"src": "3850:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "4466:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "4483:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1246,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "4487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1244,
												"id": 1248,
												"nodeType": "Return",
												"src": "4476:12:7"
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "4412:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "4423:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:7"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "4457:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:7"
									},
									"scope": 1326,
									"src": "4399:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "5054:106:7",
										"statements": [
											{
												"id": 1273,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1263,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1255,
																		"src": "5096:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1264,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "5101:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1266,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "5104:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1262,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1268,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1269,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "5138:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1270,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "5142:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1261,
														"id": 1272,
														"nodeType": "Return",
														"src": "5131:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4972:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4983:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4994:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:7"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "5045:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:7"
									},
									"scope": 1326,
									"src": "4959:201:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "5739:105:7",
										"statements": [
											{
												"id": 1298,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1288,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "5781:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1291,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "5788:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1287,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1293,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1294,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "5822:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1295,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "5826:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1286,
														"id": 1297,
														"nodeType": "Return",
														"src": "5815:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "5657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "5668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "5679:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:7"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "5730:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:7"
									},
									"scope": 1326,
									"src": "5644:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "6585:105:7",
										"statements": [
											{
												"id": 1323,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1313,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1305,
																		"src": "6627:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1316,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1307,
																	"src": "6634:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1312,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1318,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1319,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "6668:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1320,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1305,
																"src": "6672:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1311,
														"id": 1322,
														"nodeType": "Return",
														"src": "6661:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6503:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6514:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6525:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1306,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:7"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6576:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:7"
									},
									"scope": 1326,
									"src": "6490:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1327,
							"src": "482:6210:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:7"
				},
				"id": 7
			},
			"crowdsale/crowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/crowdsale.sol",
					"exportedSymbols": {
						"Address": [
							992
						],
						"Context": [
							1014
						],
						"Crowdsale": [
							1636
						],
						"IERC20": [
							250
						],
						"IERC20Permit": [
							286
						],
						"ReentrancyGuard": [
							172
						],
						"SafeERC20": [
							662
						],
						"SafeMath": [
							1326
						]
					},
					"id": 1637,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1328,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 1015,
							"src": "60:51:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1330,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 251,
							"src": "113:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 173,
							"src": "171:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 663,
							"src": "235:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 1327,
							"src": "302:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1335,
										"name": "Context",
										"nameLocations": [
											"1102:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1014,
										"src": "1102:7:8"
									},
									"id": 1336,
									"nodeType": "InheritanceSpecifier",
									"src": "1102:7:8"
								},
								{
									"baseName": {
										"id": 1337,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1111:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 172,
										"src": "1111:15:8"
									},
									"id": 1338,
									"nodeType": "InheritanceSpecifier",
									"src": "1111:15:8"
								}
							],
							"canonicalName": "Crowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1334,
								"nodeType": "StructuredDocumentation",
								"src": "363:706:8",
								"text": " @title Crowdsale\n @dev Crowdsale is a base contract for managing a token crowdsale,\n allowing investors to purchase tokens with ether. This contract implements\n such functionality in its most fundamental form and can be extended to provide additional\n functionality and/or custom behavior.\n The external interface represents the basic interface for purchasing tokens, and conforms\n the base architecture for crowdsales. It is *not* intended to be modified / overridden.\n The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n the methods to add functionality. Consider using 'super' where appropriate to concatenate\n behavior."
							},
							"fullyImplemented": true,
							"id": 1636,
							"linearizedBaseContracts": [
								1636,
								172,
								1014
							],
							"name": "Crowdsale",
							"nameLocation": "1089:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1341,
									"libraryName": {
										"id": 1339,
										"name": "SafeMath",
										"nameLocations": [
											"1140:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1326,
										"src": "1140:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1134:27:8",
									"typeName": {
										"id": 1340,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1153:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1345,
									"libraryName": {
										"id": 1342,
										"name": "SafeERC20",
										"nameLocations": [
											"1173:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 662,
										"src": "1173:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1167:27:8",
									"typeName": {
										"id": 1344,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1343,
											"name": "IERC20",
											"nameLocations": [
												"1187:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 250,
											"src": "1187:6:8"
										},
										"referencedDeclaration": 250,
										"src": "1187:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$250",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 1348,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "1246:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "1231:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$250",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1347,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1346,
											"name": "IERC20",
											"nameLocations": [
												"1231:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 250,
											"src": "1231:6:8"
										},
										"referencedDeclaration": 250,
										"src": "1231:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$250",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1350,
									"mutability": "mutable",
									"name": "_wallet",
									"nameLocation": "1327:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "1303:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1349,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1303:15:8",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1352,
									"mutability": "mutable",
									"name": "_rate",
									"nameLocation": "1647:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "1631:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1351,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1631:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1354,
									"mutability": "mutable",
									"name": "_weiRaised",
									"nameLocation": "1706:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "1690:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1353,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1690:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "1725:241:8",
										"text": " Event for token purchase logging\n @param purchaser who paid for the tokens\n @param beneficiary who got the tokens\n @param value weis paid for purchase\n @param amount amount of tokens purchased"
									},
									"eventSelector": "6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b",
									"id": 1365,
									"name": "TokensPurchased",
									"nameLocation": "1978:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"indexed": true,
												"mutability": "mutable",
												"name": "purchaser",
												"nameLocation": "2010:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "1994:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2037:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2021:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2058:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2050:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2073:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2065:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:87:8"
									},
									"src": "1972:109:8"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "2616:318:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1377,
																"name": "inRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "2635:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2644:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2635:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20726174652069732030",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2647:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															},
															"value": "Crowdsale: rate is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															}
														],
														"id": 1376,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2627:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2627:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "2627:43:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1384,
																"name": "inWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1370,
																"src": "2689:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2709:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2701:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1385,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2701:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2701:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2689:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373",
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2713:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															},
															"value": "Crowdsale: wallet is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															}
														],
														"id": 1383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2681:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2681:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "2681:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1396,
																		"name": "inToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1373,
																		"src": "2780:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2772:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1394,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2772:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2772:16:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2800:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2792:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1398,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2792:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2792:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2772:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373",
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2804:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															},
															"value": "Crowdsale: token is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															}
														],
														"id": 1393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2764:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:79:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "2764:79:8"
											},
											{
												"expression": {
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1406,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "2856:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1407,
														"name": "inRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "2864:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2856:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "2856:14:8"
											},
											{
												"expression": {
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1410,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "2881:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1411,
														"name": "inWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "2891:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2881:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "2881:18:8"
											},
											{
												"expression": {
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1414,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1348,
														"src": "2910:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$250",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1415,
														"name": "inToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "2919:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$250",
															"typeString": "contract IERC20"
														}
													},
													"src": "2910:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "2910:16:8"
											}
										]
									},
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "2089:450:8",
										"text": " @param inRate Number of token units a buyer gets per wei\n @dev The rate is the conversion between wei and the smallest and indivisible\n token unit. So, if you are using a rate of 1 with a ERC20Detailed token\n with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n @param inWallet Address where collected funds will be forwarded to\n @param inToken Address of the token being sold"
									},
									"id": 1419,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "2566:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2558:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "2590:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2574:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2574:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "2607:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2600:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1372,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1371,
														"name": "IERC20",
														"nameLocations": [
															"2600:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "2600:6:8"
													},
													"referencedDeclaration": 250,
													"src": "2600:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2557:58:8"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2616:0:8"
									},
									"scope": 1636,
									"src": "2545:389:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "3259:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1424,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "3280:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3280:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1423,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "3270:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3270:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "3270:23:8"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "2942:283:8",
										"text": " @dev fallback function ***DO NOT OVERRIDE***\n Note that other contracts will transfer funds with a base gas stipend\n of 2300, which is not enough to call buyTokens. Consider calling\n buyTokens directly when purchasing tokens from a contract."
									},
									"id": 1429,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3239:2:8"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3259:0:8"
									},
									"scope": 1636,
									"src": "3231:70:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "3340:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1433,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "3361:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3361:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1432,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "3351:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "3351:23:8"
											}
										]
									},
									"id": 1438,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3320:2:8"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3340:0:8"
									},
									"scope": 1636,
									"src": "3313:69:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "3492:32:8",
										"statements": [
											{
												"expression": {
													"id": 1445,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1348,
													"src": "3510:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"functionReturnParameters": 1444,
												"id": 1446,
												"nodeType": "Return",
												"src": "3503:13:8"
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "3390:50:8",
										"text": " @return the token being sold."
									},
									"functionSelector": "fc0c546a",
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "3455:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3460:2:8"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "3484:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1441,
														"name": "IERC20",
														"nameLocations": [
															"3484:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "3484:6:8"
													},
													"referencedDeclaration": 250,
													"src": "3484:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3483:8:8"
									},
									"scope": 1636,
									"src": "3446:78:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "3661:33:8",
										"statements": [
											{
												"expression": {
													"id": 1454,
													"name": "_wallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1350,
													"src": "3679:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1453,
												"id": 1455,
												"nodeType": "Return",
												"src": "3672:14:8"
											}
										]
									},
									"documentation": {
										"id": 1449,
										"nodeType": "StructuredDocumentation",
										"src": "3532:67:8",
										"text": " @return the address where funds are collected."
									},
									"functionSelector": "521eb273",
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wallet",
									"nameLocation": "3614:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3620:2:8"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "3644:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3644:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3643:17:8"
									},
									"scope": 1636,
									"src": "3605:89:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "3838:31:8",
										"statements": [
											{
												"expression": {
													"id": 1463,
													"name": "_rate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1352,
													"src": "3856:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1462,
												"id": 1464,
												"nodeType": "Return",
												"src": "3849:12:8"
											}
										]
									},
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "3702:76:8",
										"text": " @return the number of token units a buyer gets per wei."
									},
									"functionSelector": "2c4e722e",
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rate",
									"nameLocation": "3793:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3797:2:8"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "3829:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3828:9:8"
									},
									"scope": 1636,
									"src": "3784:85:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "3988:36:8",
										"statements": [
											{
												"expression": {
													"id": 1472,
													"name": "_weiRaised",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1354,
													"src": "4006:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1471,
												"id": 1473,
												"nodeType": "Return",
												"src": "3999:17:8"
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "3877:54:8",
										"text": " @return the amount of wei raised."
									},
									"functionSelector": "4042b66f",
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "weiRaised",
									"nameLocation": "3946:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3955:2:8"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "3979:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:9:8"
									},
									"scope": 1636,
									"src": "3937:87:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "4357:554:8",
										"statements": [
											{
												"assignments": [
													1484
												],
												"declarations": [
													{
														"constant": false,
														"id": 1484,
														"mutability": "mutable",
														"name": "weiAmount",
														"nameLocation": "4376:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1532,
														"src": "4368:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4368:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1487,
												"initialValue": {
													"expression": {
														"id": 1485,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4388:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4392:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "4388:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4368:29:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1489,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "4429:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1490,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "4442:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1488,
														"name": "_preValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "4408:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4408:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "4408:44:8"
											},
											{
												"assignments": [
													1494
												],
												"declarations": [
													{
														"constant": false,
														"id": 1494,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "4522:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1532,
														"src": "4514:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1493,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4514:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1498,
												"initialValue": {
													"arguments": [
														{
															"id": 1496,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "4547:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1495,
														"name": "_getTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "4531:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4531:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4514:43:8"
											},
											{
												"expression": {
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1499,
														"name": "_weiRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "4595:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1502,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1484,
																"src": "4623:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1500,
																"name": "_weiRaised",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "4608:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4619:3:8",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1190,
															"src": "4608:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4608:25:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4595:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "4595:38:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1507,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "4663:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1508,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "4676:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1506,
														"name": "_processPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "4646:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4646:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "4646:37:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1512,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "4715:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4715:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1514,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "4729:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1515,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "4742:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1516,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "4753:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1511,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "4699:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4699:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1518,
												"nodeType": "EmitStatement",
												"src": "4694:66:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1520,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "4796:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1521,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "4809:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1519,
														"name": "_updatePurchasingState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "4773:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4773:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1523,
												"nodeType": "ExpressionStatement",
												"src": "4773:46:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1524,
														"name": "_forwardFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "4832:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "4832:15:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1528,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "4880:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1529,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "4893:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1527,
														"name": "_postValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "4858:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4858:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "4858:45:8"
											}
										]
									},
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "4032:251:8",
										"text": " @dev low level token purchase ***DO NOT OVERRIDE***\n This function has a non-reentrancy guard, so it shouldn't be called by\n another `nonReentrant` function.\n @param beneficiary Recipient of the token purchase"
									},
									"functionSelector": "ec8ac4d8",
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1481,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1480,
												"name": "nonReentrant",
												"nameLocations": [
													"4336:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 137,
												"src": "4336:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4336:12:8"
										}
									],
									"name": "buyTokens",
									"nameLocation": "4298:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4316:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "4308:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4308:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4307:21:8"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4357:0:8"
									},
									"scope": 1636,
									"src": "4289:622:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "5556:296:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1542,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "5575:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5598:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5590:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1543,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5590:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5590:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5575:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5602:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															},
															"value": "Crowdsale: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															}
														],
														"id": 1541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5567:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5567:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "5567:80:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1552,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "5666:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5679:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5666:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5682:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															},
															"value": "Crowdsale: weiAmount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															}
														],
														"id": 1551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5658:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5658:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "5658:52:8"
											},
											{
												"expression": {
													"id": 1558,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "5721:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Crowdsale_$1636",
														"typeString": "contract Crowdsale"
													}
												},
												"id": 1559,
												"nodeType": "ExpressionStatement",
												"src": "5721:4:8"
											}
										]
									},
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "4919:539:8",
										"text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n Use `super` in contracts that inherit from Crowdsale to extend their validations.\n Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     super._preValidatePurchase(beneficiary, weiAmount);\n     require(weiRaised().add(weiAmount) <= cap);\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preValidatePurchase",
									"nameLocation": "5473:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "5502:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "5494:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5494:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "5523:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "5515:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5515:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5493:40:8"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5556:0:8"
									},
									"scope": 1636,
									"src": "5464:388:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "6248:66:8",
										"statements": []
									},
									"documentation": {
										"id": 1562,
										"nodeType": "StructuredDocumentation",
										"src": "5860:289:8",
										"text": " @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n conditions are not met.\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_postValidatePurchase",
									"nameLocation": "6164:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6194:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "6186:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "6215:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "6207:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6207:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:40:8"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6248:0:8"
									},
									"scope": 1636,
									"src": "6155:159:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "6685:64:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1581,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "6716:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1582,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "6729:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1578,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "6696:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6703:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 319,
														"src": "6696:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$250_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6696:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "6696:45:8"
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "6322:274:8",
										"text": " @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\n its tokens.\n @param beneficiary Address performing the token purchase\n @param tokenAmount Number of tokens to be emitted"
									},
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deliverTokens",
									"nameLocation": "6611:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6634:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "6626:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6626:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6655:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "6647:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6625:42:8"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6685:0:8"
									},
									"scope": 1636,
									"src": "6602:147:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "7108:59:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1595,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "7134:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1596,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "7147:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1594,
														"name": "_deliverTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "7119:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1598,
												"nodeType": "ExpressionStatement",
												"src": "7119:40:8"
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "6757:260:8",
										"text": " @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\n tokens.\n @param beneficiary Address receiving the tokens\n @param tokenAmount Number of tokens to be purchased"
									},
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_processPurchase",
									"nameLocation": "7032:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7057:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "7049:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "7078:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "7070:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7070:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7048:42:8"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7108:0:8"
									},
									"scope": 1636,
									"src": "7023:144:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "7534:66:8",
										"statements": []
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "7175:264:8",
										"text": " @dev Override for extensions that require an internal state to check for validity (current user contributions,\n etc.)\n @param beneficiary Address receiving the tokens\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePurchasingState",
									"nameLocation": "7454:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7485:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "7477:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7477:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7506:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "7498:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7498:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7476:40:8"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:8"
									},
									"scope": 1636,
									"src": "7445:155:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "7940:46:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1619,
															"name": "_rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "7972:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1617,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "7958:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7968:3:8",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1220,
														"src": "7958:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7958:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1616,
												"id": 1621,
												"nodeType": "Return",
												"src": "7951:27:8"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "7608:242:8",
										"text": " @dev Override to extend the way in which ether is converted to tokens.\n @param weiAmount Value in wei to be converted into tokens\n @return Number of tokens that can be purchased with the specified _weiAmount"
									},
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAmount",
									"nameLocation": "7865:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7889:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "7881:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7881:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7880:19:8"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "7931:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7931:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7930:9:8"
									},
									"scope": 1636,
									"src": "7856:130:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "8120:46:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1630,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8148:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8152:5:8",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8148:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1627,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "8131:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8139:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8131:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8131:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1633,
												"nodeType": "ExpressionStatement",
												"src": "8131:27:8"
											}
										]
									},
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "7994:78:8",
										"text": " @dev Determines how ETH is stored/forwarded on purchases."
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_forwardFunds",
									"nameLocation": "8087:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8100:2:8"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8120:0:8"
									},
									"scope": 1636,
									"src": "8078:88:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1637,
							"src": "1071:7098:8",
							"usedErrors": [],
							"usedEvents": [
								1365
							]
						}
					],
					"src": "33:8136:8"
				},
				"id": 8
			},
			"crowdsale/validation/timedCrowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/validation/timedCrowdsale.sol",
					"exportedSymbols": {
						"Address": [
							992
						],
						"Context": [
							1014
						],
						"Crowdsale": [
							1636
						],
						"IERC20": [
							250
						],
						"IERC20Permit": [
							286
						],
						"Pausable": [
							107
						],
						"ReentrancyGuard": [
							172
						],
						"SafeERC20": [
							662
						],
						"SafeMath": [
							1326
						],
						"TimedCrowdsale": [
							1810
						]
					},
					"id": 1811,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1638,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1639,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1811,
							"sourceUnit": 1327,
							"src": "62:57:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1640,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1811,
							"sourceUnit": 108,
							"src": "121:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "crowdsale/crowdsale.sol",
							"file": "crowdsale/crowdsale.sol",
							"id": 1641,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1811,
							"sourceUnit": 1637,
							"src": "178:33:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1643,
										"name": "Crowdsale",
										"nameLocations": [
											"347:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1636,
										"src": "347:9:9"
									},
									"id": 1644,
									"nodeType": "InheritanceSpecifier",
									"src": "347:9:9"
								}
							],
							"canonicalName": "TimedCrowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1642,
								"nodeType": "StructuredDocumentation",
								"src": "215:103:9",
								"text": " @title TimedCrowdsale\n @dev Crowdsale accepting contributions only within a time frame."
							},
							"fullyImplemented": true,
							"id": 1810,
							"linearizedBaseContracts": [
								1810,
								1636,
								172,
								1014
							],
							"name": "TimedCrowdsale",
							"nameLocation": "329:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1647,
									"libraryName": {
										"id": 1645,
										"name": "SafeMath",
										"nameLocations": [
											"370:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1326,
										"src": "370:8:9"
									},
									"nodeType": "UsingForDirective",
									"src": "364:27:9",
									"typeName": {
										"id": 1646,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "383:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1649,
									"mutability": "mutable",
									"name": "_openingTime",
									"nameLocation": "415:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1810,
									"src": "399:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1648,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "399:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1651,
									"mutability": "mutable",
									"name": "_closingTime",
									"nameLocation": "450:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1810,
									"src": "434:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1650,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "434:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "471:145:9",
										"text": " Event for crowdsale extending\n @param newClosingTime new closing time\n @param prevClosingTime old closing time"
									},
									"eventSelector": "46711e222f558a07afd26e5e71b48ecb0a8b2cdcd40faeb1323e05e2c76a2f32",
									"id": 1658,
									"name": "TimedCrowdsaleExtended",
									"nameLocation": "628:22:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"indexed": false,
												"mutability": "mutable",
												"name": "prevClosingTime",
												"nameLocation": "659:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "651:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"indexed": false,
												"mutability": "mutable",
												"name": "newClosingTime",
												"nameLocation": "684:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "676:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:49:9"
									},
									"src": "622:78:9"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "802:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1662,
																"name": "isOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1748,
																"src": "821:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "821:8:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656443726f776473616c653a206e6f74206f70656e",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "831:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739",
																"typeString": "literal_string \"TimedCrowdsale: not open\""
															},
															"value": "TimedCrowdsale: not open"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739",
																"typeString": "literal_string \"TimedCrowdsale: not open\""
															}
														],
														"id": 1661,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "813:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "813:45:9"
											},
											{
												"id": 1667,
												"nodeType": "PlaceholderStatement",
												"src": "869:1:9"
											}
										]
									},
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "708:65:9",
										"text": " @dev Reverts if not in crowdsale time range."
									},
									"id": 1669,
									"name": "onlyWhileOpen",
									"nameLocation": "788:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "802:0:9"
									},
									"src": "779:99:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "1231:412:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1690,
																"name": "inOpeningTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "1305:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1691,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1322:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1328:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1322:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1305:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656443726f776473616c653a206f70656e696e672074696d65206973206265666f72652063757272656e742074696d65",
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1339:53:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd",
																"typeString": "literal_string \"TimedCrowdsale: opening time is before current time\""
															},
															"value": "TimedCrowdsale: opening time is before current time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd",
																"typeString": "literal_string \"TimedCrowdsale: opening time is before current time\""
															}
														],
														"id": 1689,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1297:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1297:96:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "1297:96:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1698,
																"name": "inClosingTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "1466:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1699,
																"name": "inOpeningTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "1482:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1466:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656443726f776473616c653a206f70656e696e672074696d65206973206e6f74206265666f726520636c6f73696e672074696d65",
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1497:57:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b",
																"typeString": "literal_string \"TimedCrowdsale: opening time is not before closing time\""
															},
															"value": "TimedCrowdsale: opening time is not before closing time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b",
																"typeString": "literal_string \"TimedCrowdsale: opening time is not before closing time\""
															}
														],
														"id": 1697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1458:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1458:97:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "1458:97:9"
											},
											{
												"expression": {
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1704,
														"name": "_openingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "1568:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1705,
														"name": "inOpeningTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "1583:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1568:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1707,
												"nodeType": "ExpressionStatement",
												"src": "1568:28:9"
											},
											{
												"expression": {
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1708,
														"name": "_closingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "1607:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1709,
														"name": "inClosingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "1622:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1607:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1711,
												"nodeType": "ExpressionStatement",
												"src": "1607:28:9"
											}
										]
									},
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "886:185:9",
										"text": " @dev Constructor, takes crowdsale opening and closing times.\n @param inOpeningTime Crowdsale opening time\n @param inClosingTime Crowdsale closing time"
									},
									"id": 1713,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1684,
													"name": "inRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1676,
													"src": "1204:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 1685,
													"name": "inWallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1678,
													"src": "1212:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												{
													"id": 1686,
													"name": "inToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1681,
													"src": "1222:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												}
											],
											"id": 1687,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1683,
												"name": "Crowdsale",
												"nameLocations": [
													"1194:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1636,
												"src": "1194:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1194:36:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "inOpeningTime",
												"nameLocation": "1098:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "1090:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "inClosingTime",
												"nameLocation": "1121:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "1113:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "1144:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "1136:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "1168:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "1152:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1152:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "1185:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "1178:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1680,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1679,
														"name": "IERC20",
														"nameLocations": [
															"1178:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "1178:6:9"
													},
													"referencedDeclaration": 250,
													"src": "1178:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1089:104:9"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1231:0:9"
									},
									"scope": 1810,
									"src": "1077:566:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "1766:38:9",
										"statements": [
											{
												"expression": {
													"id": 1719,
													"name": "_openingTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1649,
													"src": "1784:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1718,
												"id": 1720,
												"nodeType": "Return",
												"src": "1777:19:9"
											}
										]
									},
									"documentation": {
										"id": 1714,
										"nodeType": "StructuredDocumentation",
										"src": "1651:56:9",
										"text": " @return the crowdsale opening time."
									},
									"functionSelector": "b7a8807c",
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "openingTime",
									"nameLocation": "1722:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1733:2:9"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "1757:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1757:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1756:9:9"
									},
									"scope": 1810,
									"src": "1713:91:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1730,
										"nodeType": "Block",
										"src": "1927:38:9",
										"statements": [
											{
												"expression": {
													"id": 1728,
													"name": "_closingTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1651,
													"src": "1945:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1727,
												"id": 1729,
												"nodeType": "Return",
												"src": "1938:19:9"
											}
										]
									},
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "1812:56:9",
										"text": " @return the crowdsale closing time."
									},
									"functionSelector": "4b6753bc",
									"id": 1731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closingTime",
									"nameLocation": "1883:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:9"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "1918:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1917:9:9"
									},
									"scope": 1810,
									"src": "1874:91:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1747,
										"nodeType": "Block",
										"src": "2100:147:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1737,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2173:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2179:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2173:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 1739,
															"name": "_openingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "2192:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2173:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1741,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2208:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2214:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2208:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 1743,
															"name": "_closingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "2227:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2208:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2173:66:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1736,
												"id": 1746,
												"nodeType": "Return",
												"src": "2166:73:9"
											}
										]
									},
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "1973:76:9",
										"text": " @return true if the crowdsale is open, false otherwise."
									},
									"functionSelector": "47535d7b",
									"id": 1748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOpen",
									"nameLocation": "2064:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2070:2:9"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "2094:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1734,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2094:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2093:6:9"
									},
									"scope": 1810,
									"src": "2055:192:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "2465:111:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1754,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2538:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2544:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2538:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1756,
														"name": "_closingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "2556:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2538:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1753,
												"id": 1758,
												"nodeType": "Return",
												"src": "2531:37:9"
											}
										]
									},
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "2255:156:9",
										"text": " @dev Checks whether the period in which the crowdsale is open has already elapsed.\n @return Whether crowdsale period has elapsed"
									},
									"functionSelector": "1515bc2b",
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasClosed",
									"nameLocation": "2426:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2435:2:9"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "2459:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1751,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2459:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2458:6:9"
									},
									"scope": 1810,
									"src": "2417:159:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1561
									],
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "2883:69:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1774,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "2921:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1775,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "2934:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1771,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2894:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TimedCrowdsale_$1810_$",
																"typeString": "type(contract super TimedCrowdsale)"
															}
														},
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2900:20:9",
														"memberName": "_preValidatePurchase",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1561,
														"src": "2894:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2894:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1777,
												"nodeType": "ExpressionStatement",
												"src": "2894:50:9"
											}
										]
									},
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "2584:186:9",
										"text": " @dev Extend parent behavior requiring to be within contributing period.\n @param beneficiary Token purchaser\n @param weiAmount Amount of wei contributed"
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1769,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1768,
												"name": "onlyWhileOpen",
												"nameLocations": [
													"2864:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1669,
												"src": "2864:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2864:13:9"
										}
									],
									"name": "_preValidatePurchase",
									"nameLocation": "2785:20:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1767,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2855:8:9"
									},
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2814:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2806:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2806:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "2835:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2827:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2827:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2805:40:9"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2883:0:9"
									},
									"scope": 1810,
									"src": "2776:176:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "3116:354:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3135:12:9",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1786,
																	"name": "hasClosed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1760,
																	"src": "3136:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3136:11:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656443726f776473616c653a20616c726561647920636c6f736564",
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3149:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_634cbd3056ed66fa4fcc9199d612886e4e9f90ebde3b0c138adb38373b973e15",
																"typeString": "literal_string \"TimedCrowdsale: already closed\""
															},
															"value": "TimedCrowdsale: already closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_634cbd3056ed66fa4fcc9199d612886e4e9f90ebde3b0c138adb38373b973e15",
																"typeString": "literal_string \"TimedCrowdsale: already closed\""
															}
														],
														"id": 1785,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3127:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3127:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "3127:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1793,
																"name": "newClosingTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "3255:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1794,
																"name": "_closingTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "3272:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3255:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656443726f776473616c653a206e657720636c6f73696e672074696d65206973206265666f72652063757272656e7420636c6f73696e672074696d65",
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3286:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_800b650950b0df3fae7606c8f23fafd9964a9f77f965079b0fc21e897862f129",
																"typeString": "literal_string \"TimedCrowdsale: new closing time is before current closing time\""
															},
															"value": "TimedCrowdsale: new closing time is before current closing time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_800b650950b0df3fae7606c8f23fafd9964a9f77f965079b0fc21e897862f129",
																"typeString": "literal_string \"TimedCrowdsale: new closing time is before current closing time\""
															}
														],
														"id": 1792,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3247:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3247:105:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "3247:105:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1800,
															"name": "_closingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "3393:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1801,
															"name": "newClosingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "3407:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1799,
														"name": "TimedCrowdsaleExtended",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1658,
														"src": "3370:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3370:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1803,
												"nodeType": "EmitStatement",
												"src": "3365:57:9"
											},
											{
												"expression": {
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1804,
														"name": "_closingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "3433:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1805,
														"name": "newClosingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "3448:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3433:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1807,
												"nodeType": "ExpressionStatement",
												"src": "3433:29:9"
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "2960:96:9",
										"text": " @dev Extend crowdsale.\n @param newClosingTime Crowdsale closing time"
									},
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extendTime",
									"nameLocation": "3071:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "newClosingTime",
												"nameLocation": "3091:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "3083:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3083:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3082:24:9"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3116:0:9"
									},
									"scope": 1810,
									"src": "3062:408:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1811,
							"src": "320:3153:9",
							"usedErrors": [],
							"usedEvents": [
								1365,
								1658
							]
						}
					],
					"src": "33:3440:9"
				},
				"id": 9
			}
		}
	}
}