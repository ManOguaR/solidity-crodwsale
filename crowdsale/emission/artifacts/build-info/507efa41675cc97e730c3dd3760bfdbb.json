{
	"id": "507efa41675cc97e730c3dd3760bfdbb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"crowdsale/emission/allowanceCrowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"crowdsale/crowdsale.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\n/**\r\n * @title AllowanceCrowdsale\r\n * @dev Extension of Crowdsale where tokens are held by a wallet, which approves an allowance to the crowdsale.\r\n */\r\ncontract AllowanceCrowdsale is Crowdsale {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    address private _tokenWallet;\r\n\r\n    /**\r\n     * @dev Constructor, takes token wallet address.\r\n     * @param inTokenWallet Address holding the tokens, which has approved allowance to the crowdsale.\r\n     * @param inRate rate.\r\n     * @param inWallet crowdsale wallet.\r\n     * @param inToken crowdsale token.\r\n     */\r\n    constructor (address inTokenWallet,\r\n        uint256 inRate,\r\n        address payable inWallet,\r\n        IERC20 inToken\r\n    ) Crowdsale(inRate, inWallet, inToken) {\r\n        require(inTokenWallet != address(0), \"AllowanceCrowdsale: token wallet is the zero address\");\r\n        _tokenWallet = inTokenWallet;\r\n    }\r\n\r\n    /**\r\n     * @return the address of the wallet that will hold the tokens.\r\n     */\r\n    function tokenWallet() public view returns (address) {\r\n        return _tokenWallet;\r\n    }\r\n\r\n    /**\r\n     * @dev Checks the amount of tokens left in the allowance.\r\n     * @return Amount of tokens left in the allowance\r\n     */\r\n    function remainingTokens() public view returns (uint256) {\r\n        return Math.min(token().balanceOf(_tokenWallet), token().allowance(_tokenWallet, address(this)));\r\n    }\r\n\r\n    /**\r\n     * @dev Overrides parent behavior by transferring tokens from wallet.\r\n     * @param beneficiary Token purchaser\r\n     * @param tokenAmount Amount of tokens purchased\r\n     */\r\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) internal override  {\r\n        token().safeTransferFrom(_tokenWallet, beneficiary, tokenAmount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"crowdsale/crowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n/**\r\n * @title Crowdsale\r\n * @dev Crowdsale is a base contract for managing a token crowdsale,\r\n * allowing investors to purchase tokens with ether. This contract implements\r\n * such functionality in its most fundamental form and can be extended to provide additional\r\n * functionality and/or custom behavior.\r\n * The external interface represents the basic interface for purchasing tokens, and conforms\r\n * the base architecture for crowdsales. It is *not* intended to be modified / overridden.\r\n * The internal interface conforms the extensible and modifiable surface of crowdsales. Override\r\n * the methods to add functionality. Consider using 'super' where appropriate to concatenate\r\n * behavior.\r\n */\r\nabstract contract Crowdsale is Context, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // The token being sold\r\n    IERC20 private _token;\r\n\r\n    // Address where funds are collected\r\n    address payable private _wallet;\r\n\r\n    // How many token units a buyer gets per wei.\r\n    // The rate is the conversion between wei and the smallest and indivisible token unit.\r\n    // So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK\r\n    // 1 wei will give you 1 unit, or 0.001 TOK.\r\n    uint256 private _rate;\r\n\r\n    // Amount of wei raised\r\n    uint256 private _weiRaised;\r\n\r\n    /**\r\n     * Event for token purchase logging\r\n     * @param purchaser who paid for the tokens\r\n     * @param beneficiary who got the tokens\r\n     * @param value weis paid for purchase\r\n     * @param amount amount of tokens purchased\r\n     */\r\n    event TokensPurchased(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\r\n    /**\r\n     * @param inRate Number of token units a buyer gets per wei\r\n     * @dev The rate is the conversion between wei and the smallest and indivisible\r\n     * token unit. So, if you are using a rate of 1 with a ERC20Detailed token\r\n     * with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\r\n     * @param inWallet Address where collected funds will be forwarded to\r\n     * @param inToken Address of the token being sold\r\n     */\r\n    constructor (uint256 inRate, address payable inWallet, IERC20 inToken) {\r\n        require(inRate > 0, \"Crowdsale: rate is 0\");\r\n        require(inWallet != address(0), \"Crowdsale: wallet is the zero address\");\r\n        require(address(inToken) != address(0), \"Crowdsale: token is the zero address\");\r\n\r\n        _rate = inRate;\r\n        _wallet = inWallet;\r\n        _token = inToken;\r\n    }\r\n\r\n    /**\r\n     * @dev fallback function ***DO NOT OVERRIDE***\r\n     * Note that other contracts will transfer funds with a base gas stipend\r\n     * of 2300, which is not enough to call buyTokens. Consider calling\r\n     * buyTokens directly when purchasing tokens from a contract.\r\n     */\r\n    fallback() external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n    \r\n    receive() external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @return the token being sold.\r\n     */\r\n    function token() public view returns (IERC20) {\r\n        return _token;\r\n    }\r\n\r\n    /**\r\n     * @return the address where funds are collected.\r\n     */\r\n    function wallet() public view returns (address payable) {\r\n        return _wallet;\r\n    }\r\n\r\n    /**\r\n     * @return the number of token units a buyer gets per wei.\r\n     */\r\n    function rate() public virtual view returns (uint256) {\r\n        return _rate;\r\n    }\r\n\r\n    /**\r\n     * @return the amount of wei raised.\r\n     */\r\n    function weiRaised() public view returns (uint256) {\r\n        return _weiRaised;\r\n    }\r\n\r\n    /**\r\n     * @dev low level token purchase ***DO NOT OVERRIDE***\r\n     * This function has a non-reentrancy guard, so it shouldn't be called by\r\n     * another `nonReentrant` function.\r\n     * @param beneficiary Recipient of the token purchase\r\n     */\r\n    function buyTokens(address beneficiary) public nonReentrant payable {\r\n        uint256 weiAmount = msg.value;\r\n        _preValidatePurchase(beneficiary, weiAmount);\r\n\r\n        // calculate token amount to be created\r\n        uint256 tokens = _getTokenAmount(weiAmount);\r\n\r\n        // update state\r\n        _weiRaised = _weiRaised.add(weiAmount);\r\n\r\n        _processPurchase(beneficiary, tokens);\r\n        emit TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens);\r\n\r\n        _updatePurchasingState(beneficiary, weiAmount);\r\n\r\n        _forwardFunds();\r\n        _postValidatePurchase(beneficiary, weiAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\r\n     * Use `super` in contracts that inherit from Crowdsale to extend their validations.\r\n     * Example from CappedCrowdsale.sol's _preValidatePurchase method:\r\n     *     super._preValidatePurchase(beneficiary, weiAmount);\r\n     *     require(weiRaised().add(weiAmount) <= cap);\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\");\r\n        require(weiAmount != 0, \"Crowdsale: weiAmount is 0\");\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\r\n     * conditions are not met.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\r\n     * its tokens.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param tokenAmount Number of tokens to be emitted\r\n     */\r\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {\r\n        _token.safeTransfer(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\r\n     * tokens.\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param tokenAmount Number of tokens to be purchased\r\n     */\r\n    function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {\r\n        _deliverTokens(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Override for extensions that require an internal state to check for validity (current user contributions,\r\n     * etc.)\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal virtual {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Override to extend the way in which ether is converted to tokens.\r\n     * @param weiAmount Value in wei to be converted into tokens\r\n     * @return Number of tokens that can be purchased with the specified _weiAmount\r\n     */\r\n    function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {\r\n        return weiAmount.mul(_rate);\r\n    }\r\n\r\n    /**\r\n     * @dev Determines how ETH is stored/forwarded on purchases.\r\n     */\r\n    function _forwardFunds() internal virtual {\r\n        _wallet.transfer(msg.value);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x27 0x24 0xB5 0x2E EXTCODECOPY CALLVALUE PUSH18 0xE7F8B6FEB5693F47018FC51716AED6B39E89 SAR LOG1 0xBF 0xDA LOG4 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "701:6234:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x27 0x24 0xB5 0x2E EXTCODECOPY CALLVALUE PUSH18 0xE7F8B6FEB5693F47018FC51716AED6B39E89 SAR LOG1 0xBF 0xDA LOG4 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "701:6234:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
									".code": [
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/emission/allowanceCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xCF02F35D13875A9E5D07 0x2E 0xE3 0x2A 0xC1 0xD2 INVALID CODESIZE BALANCE EXTCODEHASH 0xB4 0xBD SWAP6 SWAP13 0xA8 INVALID 0xC2 0xE0 0xEA DUP16 DELEGATECALL 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xCF02F35D13875A9E5D07 0x2E 0xE3 0x2A 0xC1 0xD2 INVALID CODESIZE BALANCE EXTCODEHASH 0xB4 0xBD SWAP6 SWAP13 0xA8 INVALID 0xC2 0xE0 0xEA DUP16 DELEGATECALL 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/emission/allowanceCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207f91664dbcf17bb45a6079aeda4b705012075e80d52b551abf072b32b46091ae64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207f91664dbcf17bb45a6079aeda4b705012075e80d52b551abf072b32b46091ae64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x91664DBCF17BB45A6079AEDA4B705012075E80D52B551ABF072B32B46091AE64 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "202:12582:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207f91664dbcf17bb45a6079aeda4b705012075e80d52b551abf072b32b46091ae64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x91664DBCF17BB45A6079AEDA4B705012075E80D52B551ABF072B32B46091AE64 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "202:12582:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207f91664dbcf17bb45a6079aeda4b705012075e80d52b551abf072b32b46091ae64736f6c63430008150033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/emission/allowanceCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/emission/allowanceCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/crowdsale.sol": {
				"Crowdsale": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.",
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"constructor": {
								"details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
								"params": {
									"inRate": "Number of token units a buyer gets per wei",
									"inToken": "Address of the token being sold",
									"inWallet": "Address where collected funds will be forwarded to"
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "Crowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"rate()": "2c4e722e",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.\",\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"constructor\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"inRate\":\"Number of token units a buyer gets per wei\",\"inToken\":\"Address of the token being sold\",\"inWallet\":\"Address where collected funds will be forwarded to\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"Crowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/crowdsale.sol\":\"Crowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0xee463c77b303be60fe3509ff7b9aa23f2674f07b68622278a611ab7908591689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cb0baa0aace90973f81b63d0d3769d000b113f68fd089e0988f0c3468f5a1d9\",\"dweb:/ipfs/QmTi1mH6UupQvzs1AW1kr1sgMWW4wtjKWxngYd6dQ6Pdgj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 2106,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)142"
							},
							{
								"astId": 2108,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 2110,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2112,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)142": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/emission/allowanceCrowdsale.sol": {
				"AllowanceCrowdsale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "inTokenWallet",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "inRate",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "inWallet",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "inToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainingTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Extension of Crowdsale where tokens are held by a wallet, which approves an allowance to the crowdsale.",
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"constructor": {
								"details": "Constructor, takes token wallet address.",
								"params": {
									"inRate": "rate.",
									"inToken": "crowdsale token.",
									"inTokenWallet": "Address holding the tokens, which has approved allowance to the crowdsale.",
									"inWallet": "crowdsale wallet."
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"remainingTokens()": {
								"details": "Checks the amount of tokens left in the allowance.",
								"returns": {
									"_0": "Amount of tokens left in the allowance"
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"tokenWallet()": {
								"returns": {
									"_0": "the address of the wallet that will hold the tokens."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "AllowanceCrowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"crowdsale/emission/allowanceCrowdsale.sol\":487:2112  contract AllowanceCrowdsale is Crowdsale {... */\n  mstore(0x40, 0x80)\n    /* \"crowdsale/emission/allowanceCrowdsale.sol\":926:1240  constructor (address inTokenWallet,... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"crowdsale/emission/allowanceCrowdsale.sol\":1063:1069  inRate */\n  dup3\n    /* \"crowdsale/emission/allowanceCrowdsale.sol\":1071:1079  inWallet */\n  dup3\n    /* \"crowdsale/emission/allowanceCrowdsale.sol\":1081:1088  inToken */\n  dup3\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2644:2645  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2635:2641  inRate */\n  dup4\n    /* \"crowdsale/crowdsale.sol\":2635:2645  inRate > 0 */\n  gt\n    /* \"crowdsale/crowdsale.sol\":2627:2670  require(inRate > 0, \"Crowdsale: rate is 0\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_9:\n    /* \"crowdsale/crowdsale.sol\":2709:2710  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2689:2711  inWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"crowdsale/crowdsale.sol\":2689:2697  inWallet */\n  dup3\n    /* \"crowdsale/crowdsale.sol\":2689:2711  inWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"crowdsale/crowdsale.sol\":2681:2753  require(inWallet != address(0), \"Crowdsale: wallet is the zero address\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"crowdsale/crowdsale.sol\":2800:2801  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2772:2802  address(inToken) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"crowdsale/crowdsale.sol\":2780:2787  inToken */\n  dup2\n    /* \"crowdsale/crowdsale.sol\":2772:2802  address(inToken) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"crowdsale/crowdsale.sol\":2764:2843  require(address(inToken) != address(0), \"Crowdsale: token is the zero address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"crowdsale/crowdsale.sol\":2864:2870  inRate */\n  dup3\n    /* \"crowdsale/crowdsale.sol\":2856:2861  _rate */\n  0x03\n    /* \"crowdsale/crowdsale.sol\":2856:2870  _rate = inRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2891:2899  inWallet */\n  dup2\n    /* \"crowdsale/crowdsale.sol\":2881:2888  _wallet */\n  0x02\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2881:2899  _wallet = inWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2919:2926  inToken */\n  dup1\n    /* \"crowdsale/crowdsale.sol\":2910:2916  _token */\n  0x01\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2910:2926  _token = inToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2545:2934  constructor (uint256 inRate, address payable inWallet, IERC20 inToken) {... */\n  pop\n  pop\n  pop\n    /* \"crowdsale/emission/allowanceCrowdsale.sol\":1134:1135  0 */\n  0x00\n    /* \"crowdsale/emission/allowanceCrowdsale.sol\":1109:1136  inTokenWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"crowdsale/emission/allowanceCrowdsale.sol\":1109:1122  inTokenWallet */\n  dup5\n    /* \"crowdsale/emission/allowanceCrowdsale.sol\":1109:1136  inTokenWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"crowdsale/emission/allowanceCrowdsale.sol\":1101:1193  require(inTokenWallet != address(0), \"AllowanceCrowdsale: token wallet is the zero address\") */\n  tag_19\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_19:\n    /* \"crowdsale/emission/allowanceCrowdsale.sol\":1219:1232  inTokenWallet */\n  dup4\n    /* \"crowdsale/emission/allowanceCrowdsale.sol\":1204:1216  _tokenWallet */\n  0x05\n  0x00\n    /* \"crowdsale/emission/allowanceCrowdsale.sol\":1204:1232  _tokenWallet = inTokenWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/emission/allowanceCrowdsale.sol\":926:1240  constructor (address inTokenWallet,... */\n  pop\n  pop\n  pop\n  pop\n    /* \"crowdsale/emission/allowanceCrowdsale.sol\":487:2112  contract AllowanceCrowdsale is Crowdsale {... */\n  jump(tag_22)\n    /* \"#utility.yul\":88:205   */\ntag_24:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_26:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_27:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_26\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_28:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_27\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_29:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_28\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_30:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_31:\n    /* \"#utility.yul\":1001:1025   */\n  tag_62\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_30\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_63:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_32:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_65\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_31\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1309   */\ntag_33:\n    /* \"#utility.yul\":1250:1257   */\n  0x00\n    /* \"#utility.yul\":1279:1303   */\n  tag_67\n    /* \"#utility.yul\":1297:1302   */\n  dup3\n    /* \"#utility.yul\":1279:1303   */\n  tag_26\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1268:1303   */\n  swap1\n  pop\n    /* \"#utility.yul\":1205:1309   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1315:1453   */\ntag_34:\n    /* \"#utility.yul\":1396:1428   */\n  tag_69\n    /* \"#utility.yul\":1422:1427   */\n  dup2\n    /* \"#utility.yul\":1396:1428   */\n  tag_33\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1389:1394   */\n  dup2\n    /* \"#utility.yul\":1386:1429   */\n  eq\n    /* \"#utility.yul\":1376:1447   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1443:1444   */\n  0x00\n    /* \"#utility.yul\":1440:1441   */\n  dup1\n    /* \"#utility.yul\":1433:1445   */\n  revert\n    /* \"#utility.yul\":1376:1447   */\ntag_70:\n    /* \"#utility.yul\":1315:1453   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1459:1618   */\ntag_35:\n    /* \"#utility.yul\":1524:1529   */\n  0x00\n    /* \"#utility.yul\":1555:1561   */\n  dup2\n    /* \"#utility.yul\":1549:1562   */\n  mload\n    /* \"#utility.yul\":1540:1562   */\n  swap1\n  pop\n    /* \"#utility.yul\":1571:1612   */\n  tag_72\n    /* \"#utility.yul\":1606:1611   */\n  dup2\n    /* \"#utility.yul\":1571:1612   */\n  tag_34\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1459:1618   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1624:1734   */\ntag_36:\n    /* \"#utility.yul\":1675:1682   */\n  0x00\n    /* \"#utility.yul\":1704:1728   */\n  tag_74\n    /* \"#utility.yul\":1722:1727   */\n  dup3\n    /* \"#utility.yul\":1704:1728   */\n  tag_27\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1693:1728   */\n  swap1\n  pop\n    /* \"#utility.yul\":1624:1734   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1740:1890   */\ntag_37:\n    /* \"#utility.yul\":1827:1865   */\n  tag_76\n    /* \"#utility.yul\":1859:1864   */\n  dup2\n    /* \"#utility.yul\":1827:1865   */\n  tag_36\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1820:1825   */\n  dup2\n    /* \"#utility.yul\":1817:1866   */\n  eq\n    /* \"#utility.yul\":1807:1884   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":1880:1881   */\n  0x00\n    /* \"#utility.yul\":1877:1878   */\n  dup1\n    /* \"#utility.yul\":1870:1882   */\n  revert\n    /* \"#utility.yul\":1807:1884   */\ntag_77:\n    /* \"#utility.yul\":1740:1890   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1896:2067   */\ntag_38:\n    /* \"#utility.yul\":1967:1972   */\n  0x00\n    /* \"#utility.yul\":1998:2004   */\n  dup2\n    /* \"#utility.yul\":1992:2005   */\n  mload\n    /* \"#utility.yul\":1983:2005   */\n  swap1\n  pop\n    /* \"#utility.yul\":2014:2061   */\n  tag_79\n    /* \"#utility.yul\":2055:2060   */\n  dup2\n    /* \"#utility.yul\":2014:2061   */\n  tag_37\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1896:2067   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2073:2937   */\ntag_3:\n    /* \"#utility.yul\":2192:2198   */\n  0x00\n    /* \"#utility.yul\":2200:2206   */\n  dup1\n    /* \"#utility.yul\":2208:2214   */\n  0x00\n    /* \"#utility.yul\":2216:2222   */\n  dup1\n    /* \"#utility.yul\":2265:2268   */\n  0x80\n    /* \"#utility.yul\":2253:2262   */\n  dup6\n    /* \"#utility.yul\":2244:2251   */\n  dup8\n    /* \"#utility.yul\":2240:2263   */\n  sub\n    /* \"#utility.yul\":2236:2269   */\n  slt\n    /* \"#utility.yul\":2233:2353   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2272:2351   */\n  tag_82\n  tag_24\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2233:2353   */\ntag_81:\n    /* \"#utility.yul\":2392:2393   */\n  0x00\n    /* \"#utility.yul\":2417:2481   */\n  tag_83\n    /* \"#utility.yul\":2473:2480   */\n  dup8\n    /* \"#utility.yul\":2464:2470   */\n  dup3\n    /* \"#utility.yul\":2453:2462   */\n  dup9\n    /* \"#utility.yul\":2449:2471   */\n  add\n    /* \"#utility.yul\":2417:2481   */\n  tag_29\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2407:2481   */\n  swap5\n  pop\n    /* \"#utility.yul\":2363:2491   */\n  pop\n    /* \"#utility.yul\":2530:2532   */\n  0x20\n    /* \"#utility.yul\":2556:2620   */\n  tag_84\n    /* \"#utility.yul\":2612:2619   */\n  dup8\n    /* \"#utility.yul\":2603:2609   */\n  dup3\n    /* \"#utility.yul\":2592:2601   */\n  dup9\n    /* \"#utility.yul\":2588:2610   */\n  add\n    /* \"#utility.yul\":2556:2620   */\n  tag_32\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2546:2620   */\n  swap4\n  pop\n    /* \"#utility.yul\":2501:2630   */\n  pop\n    /* \"#utility.yul\":2669:2671   */\n  0x40\n    /* \"#utility.yul\":2695:2767   */\n  tag_85\n    /* \"#utility.yul\":2759:2766   */\n  dup8\n    /* \"#utility.yul\":2750:2756   */\n  dup3\n    /* \"#utility.yul\":2739:2748   */\n  dup9\n    /* \"#utility.yul\":2735:2757   */\n  add\n    /* \"#utility.yul\":2695:2767   */\n  tag_35\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2685:2767   */\n  swap3\n  pop\n    /* \"#utility.yul\":2640:2777   */\n  pop\n    /* \"#utility.yul\":2816:2818   */\n  0x60\n    /* \"#utility.yul\":2842:2920   */\n  tag_86\n    /* \"#utility.yul\":2912:2919   */\n  dup8\n    /* \"#utility.yul\":2903:2909   */\n  dup3\n    /* \"#utility.yul\":2892:2901   */\n  dup9\n    /* \"#utility.yul\":2888:2910   */\n  add\n    /* \"#utility.yul\":2842:2920   */\n  tag_38\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2832:2920   */\n  swap2\n  pop\n    /* \"#utility.yul\":2787:2930   */\n  pop\n    /* \"#utility.yul\":2073:2937   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2943:3112   */\ntag_39:\n    /* \"#utility.yul\":3027:3038   */\n  0x00\n    /* \"#utility.yul\":3061:3067   */\n  dup3\n    /* \"#utility.yul\":3056:3059   */\n  dup3\n    /* \"#utility.yul\":3049:3068   */\n  mstore\n    /* \"#utility.yul\":3101:3105   */\n  0x20\n    /* \"#utility.yul\":3096:3099   */\n  dup3\n    /* \"#utility.yul\":3092:3106   */\n  add\n    /* \"#utility.yul\":3077:3106   */\n  swap1\n  pop\n    /* \"#utility.yul\":2943:3112   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3118:3288   */\ntag_40:\n    /* \"#utility.yul\":3258:3280   */\n  0x43726f776473616c653a20726174652069732030000000000000000000000000\n    /* \"#utility.yul\":3254:3255   */\n  0x00\n    /* \"#utility.yul\":3246:3252   */\n  dup3\n    /* \"#utility.yul\":3242:3256   */\n  add\n    /* \"#utility.yul\":3235:3281   */\n  mstore\n    /* \"#utility.yul\":3118:3288   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3294:3660   */\ntag_41:\n    /* \"#utility.yul\":3436:3439   */\n  0x00\n    /* \"#utility.yul\":3457:3524   */\n  tag_90\n    /* \"#utility.yul\":3521:3523   */\n  0x14\n    /* \"#utility.yul\":3516:3519   */\n  dup4\n    /* \"#utility.yul\":3457:3524   */\n  tag_39\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3450:3524   */\n  swap2\n  pop\n    /* \"#utility.yul\":3533:3626   */\n  tag_91\n    /* \"#utility.yul\":3622:3625   */\n  dup3\n    /* \"#utility.yul\":3533:3626   */\n  tag_40\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3651:3653   */\n  0x20\n    /* \"#utility.yul\":3646:3649   */\n  dup3\n    /* \"#utility.yul\":3642:3654   */\n  add\n    /* \"#utility.yul\":3635:3654   */\n  swap1\n  pop\n    /* \"#utility.yul\":3294:3660   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3666:4085   */\ntag_11:\n    /* \"#utility.yul\":3832:3836   */\n  0x00\n    /* \"#utility.yul\":3870:3872   */\n  0x20\n    /* \"#utility.yul\":3859:3868   */\n  dup3\n    /* \"#utility.yul\":3855:3873   */\n  add\n    /* \"#utility.yul\":3847:3873   */\n  swap1\n  pop\n    /* \"#utility.yul\":3919:3928   */\n  dup2\n    /* \"#utility.yul\":3913:3917   */\n  dup2\n    /* \"#utility.yul\":3909:3929   */\n  sub\n    /* \"#utility.yul\":3905:3906   */\n  0x00\n    /* \"#utility.yul\":3894:3903   */\n  dup4\n    /* \"#utility.yul\":3890:3907   */\n  add\n    /* \"#utility.yul\":3883:3930   */\n  mstore\n    /* \"#utility.yul\":3947:4078   */\n  tag_93\n    /* \"#utility.yul\":4073:4077   */\n  dup2\n    /* \"#utility.yul\":3947:4078   */\n  tag_41\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3939:4078   */\n  swap1\n  pop\n    /* \"#utility.yul\":3666:4085   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4091:4315   */\ntag_42:\n    /* \"#utility.yul\":4231:4265   */\n  0x43726f776473616c653a2077616c6c657420697320746865207a65726f206164\n    /* \"#utility.yul\":4227:4228   */\n  0x00\n    /* \"#utility.yul\":4219:4225   */\n  dup3\n    /* \"#utility.yul\":4215:4229   */\n  add\n    /* \"#utility.yul\":4208:4266   */\n  mstore\n    /* \"#utility.yul\":4300:4307   */\n  0x6472657373000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4295:4297   */\n  0x20\n    /* \"#utility.yul\":4287:4293   */\n  dup3\n    /* \"#utility.yul\":4283:4298   */\n  add\n    /* \"#utility.yul\":4276:4308   */\n  mstore\n    /* \"#utility.yul\":4091:4315   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4321:4687   */\ntag_43:\n    /* \"#utility.yul\":4463:4466   */\n  0x00\n    /* \"#utility.yul\":4484:4551   */\n  tag_96\n    /* \"#utility.yul\":4548:4550   */\n  0x25\n    /* \"#utility.yul\":4543:4546   */\n  dup4\n    /* \"#utility.yul\":4484:4551   */\n  tag_39\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4477:4551   */\n  swap2\n  pop\n    /* \"#utility.yul\":4560:4653   */\n  tag_97\n    /* \"#utility.yul\":4649:4652   */\n  dup3\n    /* \"#utility.yul\":4560:4653   */\n  tag_42\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4678:4680   */\n  0x40\n    /* \"#utility.yul\":4673:4676   */\n  dup3\n    /* \"#utility.yul\":4669:4681   */\n  add\n    /* \"#utility.yul\":4662:4681   */\n  swap1\n  pop\n    /* \"#utility.yul\":4321:4687   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4693:5112   */\ntag_14:\n    /* \"#utility.yul\":4859:4863   */\n  0x00\n    /* \"#utility.yul\":4897:4899   */\n  0x20\n    /* \"#utility.yul\":4886:4895   */\n  dup3\n    /* \"#utility.yul\":4882:4900   */\n  add\n    /* \"#utility.yul\":4874:4900   */\n  swap1\n  pop\n    /* \"#utility.yul\":4946:4955   */\n  dup2\n    /* \"#utility.yul\":4940:4944   */\n  dup2\n    /* \"#utility.yul\":4936:4956   */\n  sub\n    /* \"#utility.yul\":4932:4933   */\n  0x00\n    /* \"#utility.yul\":4921:4930   */\n  dup4\n    /* \"#utility.yul\":4917:4934   */\n  add\n    /* \"#utility.yul\":4910:4957   */\n  mstore\n    /* \"#utility.yul\":4974:5105   */\n  tag_99\n    /* \"#utility.yul\":5100:5104   */\n  dup2\n    /* \"#utility.yul\":4974:5105   */\n  tag_43\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4966:5105   */\n  swap1\n  pop\n    /* \"#utility.yul\":4693:5112   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5118:5341   */\ntag_44:\n    /* \"#utility.yul\":5258:5292   */\n  0x43726f776473616c653a20746f6b656e20697320746865207a65726f20616464\n    /* \"#utility.yul\":5254:5255   */\n  0x00\n    /* \"#utility.yul\":5246:5252   */\n  dup3\n    /* \"#utility.yul\":5242:5256   */\n  add\n    /* \"#utility.yul\":5235:5293   */\n  mstore\n    /* \"#utility.yul\":5327:5333   */\n  0x7265737300000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5322:5324   */\n  0x20\n    /* \"#utility.yul\":5314:5320   */\n  dup3\n    /* \"#utility.yul\":5310:5325   */\n  add\n    /* \"#utility.yul\":5303:5334   */\n  mstore\n    /* \"#utility.yul\":5118:5341   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5347:5713   */\ntag_45:\n    /* \"#utility.yul\":5489:5492   */\n  0x00\n    /* \"#utility.yul\":5510:5577   */\n  tag_102\n    /* \"#utility.yul\":5574:5576   */\n  0x24\n    /* \"#utility.yul\":5569:5572   */\n  dup4\n    /* \"#utility.yul\":5510:5577   */\n  tag_39\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5503:5577   */\n  swap2\n  pop\n    /* \"#utility.yul\":5586:5679   */\n  tag_103\n    /* \"#utility.yul\":5675:5678   */\n  dup3\n    /* \"#utility.yul\":5586:5679   */\n  tag_44\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5704:5706   */\n  0x40\n    /* \"#utility.yul\":5699:5702   */\n  dup3\n    /* \"#utility.yul\":5695:5707   */\n  add\n    /* \"#utility.yul\":5688:5707   */\n  swap1\n  pop\n    /* \"#utility.yul\":5347:5713   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5719:6138   */\ntag_17:\n    /* \"#utility.yul\":5885:5889   */\n  0x00\n    /* \"#utility.yul\":5923:5925   */\n  0x20\n    /* \"#utility.yul\":5912:5921   */\n  dup3\n    /* \"#utility.yul\":5908:5926   */\n  add\n    /* \"#utility.yul\":5900:5926   */\n  swap1\n  pop\n    /* \"#utility.yul\":5972:5981   */\n  dup2\n    /* \"#utility.yul\":5966:5970   */\n  dup2\n    /* \"#utility.yul\":5962:5982   */\n  sub\n    /* \"#utility.yul\":5958:5959   */\n  0x00\n    /* \"#utility.yul\":5947:5956   */\n  dup4\n    /* \"#utility.yul\":5943:5960   */\n  add\n    /* \"#utility.yul\":5936:5983   */\n  mstore\n    /* \"#utility.yul\":6000:6131   */\n  tag_105\n    /* \"#utility.yul\":6126:6130   */\n  dup2\n    /* \"#utility.yul\":6000:6131   */\n  tag_45\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5992:6131   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:6138   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6144:6383   */\ntag_46:\n    /* \"#utility.yul\":6284:6318   */\n  0x416c6c6f77616e636543726f776473616c653a20746f6b656e2077616c6c6574\n    /* \"#utility.yul\":6280:6281   */\n  0x00\n    /* \"#utility.yul\":6272:6278   */\n  dup3\n    /* \"#utility.yul\":6268:6282   */\n  add\n    /* \"#utility.yul\":6261:6319   */\n  mstore\n    /* \"#utility.yul\":6353:6375   */\n  0x20697320746865207a65726f2061646472657373000000000000000000000000\n    /* \"#utility.yul\":6348:6350   */\n  0x20\n    /* \"#utility.yul\":6340:6346   */\n  dup3\n    /* \"#utility.yul\":6336:6351   */\n  add\n    /* \"#utility.yul\":6329:6376   */\n  mstore\n    /* \"#utility.yul\":6144:6383   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6389:6755   */\ntag_47:\n    /* \"#utility.yul\":6531:6534   */\n  0x00\n    /* \"#utility.yul\":6552:6619   */\n  tag_108\n    /* \"#utility.yul\":6616:6618   */\n  0x34\n    /* \"#utility.yul\":6611:6614   */\n  dup4\n    /* \"#utility.yul\":6552:6619   */\n  tag_39\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":6545:6619   */\n  swap2\n  pop\n    /* \"#utility.yul\":6628:6721   */\n  tag_109\n    /* \"#utility.yul\":6717:6720   */\n  dup3\n    /* \"#utility.yul\":6628:6721   */\n  tag_46\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":6746:6748   */\n  0x40\n    /* \"#utility.yul\":6741:6744   */\n  dup3\n    /* \"#utility.yul\":6737:6749   */\n  add\n    /* \"#utility.yul\":6730:6749   */\n  swap1\n  pop\n    /* \"#utility.yul\":6389:6755   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6761:7180   */\ntag_21:\n    /* \"#utility.yul\":6927:6931   */\n  0x00\n    /* \"#utility.yul\":6965:6967   */\n  0x20\n    /* \"#utility.yul\":6954:6963   */\n  dup3\n    /* \"#utility.yul\":6950:6968   */\n  add\n    /* \"#utility.yul\":6942:6968   */\n  swap1\n  pop\n    /* \"#utility.yul\":7014:7023   */\n  dup2\n    /* \"#utility.yul\":7008:7012   */\n  dup2\n    /* \"#utility.yul\":7004:7024   */\n  sub\n    /* \"#utility.yul\":7000:7001   */\n  0x00\n    /* \"#utility.yul\":6989:6998   */\n  dup4\n    /* \"#utility.yul\":6985:7002   */\n  add\n    /* \"#utility.yul\":6978:7025   */\n  mstore\n    /* \"#utility.yul\":7042:7173   */\n  tag_111\n    /* \"#utility.yul\":7168:7172   */\n  dup2\n    /* \"#utility.yul\":7042:7173   */\n  tag_47\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":7034:7173   */\n  swap1\n  pop\n    /* \"#utility.yul\":6761:7180   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"crowdsale/emission/allowanceCrowdsale.sol\":487:2112  contract AllowanceCrowdsale is Crowdsale {... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":487:2112  contract AllowanceCrowdsale is Crowdsale {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbf583903\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xbf583903\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xbff99c6c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xec8ac4d8\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x2c4e722e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4042b66f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x521eb273\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"crowdsale/crowdsale.sol\":3351:3374  buyTokens(_msgSender()) */\n      tag_13\n        /* \"crowdsale/crowdsale.sol\":3361:3373  _msgSender() */\n      tag_14\n        /* \"crowdsale/crowdsale.sol\":3361:3371  _msgSender */\n      tag_15\n        /* \"crowdsale/crowdsale.sol\":3361:3373  _msgSender() */\n      jump\t// in\n    tag_14:\n        /* \"crowdsale/crowdsale.sol\":3351:3360  buyTokens */\n      tag_16\n        /* \"crowdsale/crowdsale.sol\":3351:3374  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_13:\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":487:2112  contract AllowanceCrowdsale is Crowdsale {... */\n      stop\n    tag_2:\n        /* \"crowdsale/crowdsale.sol\":3270:3293  buyTokens(_msgSender()) */\n      tag_19\n        /* \"crowdsale/crowdsale.sol\":3280:3292  _msgSender() */\n      tag_20\n        /* \"crowdsale/crowdsale.sol\":3280:3290  _msgSender */\n      tag_15\n        /* \"crowdsale/crowdsale.sol\":3280:3292  _msgSender() */\n      jump\t// in\n    tag_20:\n        /* \"crowdsale/crowdsale.sol\":3270:3279  buyTokens */\n      tag_16\n        /* \"crowdsale/crowdsale.sol\":3270:3293  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_19:\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":487:2112  contract AllowanceCrowdsale is Crowdsale {... */\n      stop\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1571:1743  function remainingTokens() public view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1335:1426  function tokenWallet() public view returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_16\n      jump\t// in\n    tag_44:\n      stop\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_54\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_55\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_54:\n        /* \"crowdsale/crowdsale.sol\":4368:4385  uint256 weiAmount */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4388:4397  msg.value */\n      callvalue\n        /* \"crowdsale/crowdsale.sol\":4368:4397  uint256 weiAmount = msg.value */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":4408:4452  _preValidatePurchase(beneficiary, weiAmount) */\n      tag_57\n        /* \"crowdsale/crowdsale.sol\":4429:4440  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4442:4451  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4408:4428  _preValidatePurchase */\n      tag_58\n        /* \"crowdsale/crowdsale.sol\":4408:4452  _preValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_57:\n        /* \"crowdsale/crowdsale.sol\":4514:4528  uint256 tokens */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4531:4557  _getTokenAmount(weiAmount) */\n      tag_59\n        /* \"crowdsale/crowdsale.sol\":4547:4556  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4531:4546  _getTokenAmount */\n      tag_60\n        /* \"crowdsale/crowdsale.sol\":4531:4557  _getTokenAmount(weiAmount) */\n      jump\t// in\n    tag_59:\n        /* \"crowdsale/crowdsale.sol\":4514:4557  uint256 tokens = _getTokenAmount(weiAmount) */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":4608:4633  _weiRaised.add(weiAmount) */\n      tag_61\n        /* \"crowdsale/crowdsale.sol\":4623:4632  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4608:4618  _weiRaised */\n      sload(0x04)\n        /* \"crowdsale/crowdsale.sol\":4608:4622  _weiRaised.add */\n      tag_62\n      swap1\n        /* \"crowdsale/crowdsale.sol\":4608:4633  _weiRaised.add(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_61:\n        /* \"crowdsale/crowdsale.sol\":4595:4605  _weiRaised */\n      0x04\n        /* \"crowdsale/crowdsale.sol\":4595:4633  _weiRaised = _weiRaised.add(weiAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"crowdsale/crowdsale.sol\":4646:4683  _processPurchase(beneficiary, tokens) */\n      tag_63\n        /* \"crowdsale/crowdsale.sol\":4663:4674  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4676:4682  tokens */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4646:4662  _processPurchase */\n      tag_64\n        /* \"crowdsale/crowdsale.sol\":4646:4683  _processPurchase(beneficiary, tokens) */\n      jump\t// in\n    tag_63:\n        /* \"crowdsale/crowdsale.sol\":4729:4740  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":4715:4727  _msgSender() */\n      tag_65\n        /* \"crowdsale/crowdsale.sol\":4715:4725  _msgSender */\n      tag_15\n        /* \"crowdsale/crowdsale.sol\":4715:4727  _msgSender() */\n      jump\t// in\n    tag_65:\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b\n        /* \"crowdsale/crowdsale.sol\":4742:4751  weiAmount */\n      dup5\n        /* \"crowdsale/crowdsale.sol\":4753:4759  tokens */\n      dup5\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      mload(0x40)\n      tag_66\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"crowdsale/crowdsale.sol\":4773:4819  _updatePurchasingState(beneficiary, weiAmount) */\n      tag_68\n        /* \"crowdsale/crowdsale.sol\":4796:4807  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4809:4818  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4773:4795  _updatePurchasingState */\n      tag_69\n        /* \"crowdsale/crowdsale.sol\":4773:4819  _updatePurchasingState(beneficiary, weiAmount) */\n      jump\t// in\n    tag_68:\n        /* \"crowdsale/crowdsale.sol\":4832:4847  _forwardFunds() */\n      tag_70\n        /* \"crowdsale/crowdsale.sol\":4832:4845  _forwardFunds */\n      tag_71\n        /* \"crowdsale/crowdsale.sol\":4832:4847  _forwardFunds() */\n      jump\t// in\n    tag_70:\n        /* \"crowdsale/crowdsale.sol\":4858:4903  _postValidatePurchase(beneficiary, weiAmount) */\n      tag_72\n        /* \"crowdsale/crowdsale.sol\":4880:4891  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4893:4902  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4858:4879  _postValidatePurchase */\n      tag_73\n        /* \"crowdsale/crowdsale.sol\":4858:4903  _postValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_72:\n        /* \"crowdsale/crowdsale.sol\":4357:4911  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_74\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_75\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_74:\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n    tag_23:\n        /* \"crowdsale/crowdsale.sol\":3829:3836  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3856:3861  _rate */\n      sload(0x03)\n        /* \"crowdsale/crowdsale.sol\":3849:3861  return _rate */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n    tag_28:\n        /* \"crowdsale/crowdsale.sol\":3979:3986  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4006:4016  _weiRaised */\n      sload(0x04)\n        /* \"crowdsale/crowdsale.sol\":3999:4016  return _weiRaised */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n    tag_32:\n        /* \"crowdsale/crowdsale.sol\":3644:3659  address payable */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3679:3686  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":3672:3686  return _wallet */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1571:1743  function remainingTokens() public view returns (uint256) {... */\n    tag_37:\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1619:1626  uint256 */\n      0x00\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1646:1735  Math.min(token().balanceOf(_tokenWallet), token().allowance(_tokenWallet, address(this))) */\n      tag_80\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1655:1662  token() */\n      tag_81\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1655:1660  token */\n      tag_49\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1655:1662  token() */\n      jump\t// in\n    tag_81:\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1655:1672  token().balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1673:1685  _tokenWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1655:1686  token().balanceOf(_tokenWallet) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_82:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1688:1695  token() */\n      tag_87\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1688:1693  token */\n      tag_49\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1688:1695  token() */\n      jump\t// in\n    tag_87:\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1688:1705  token().allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1706:1718  _tokenWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1728:1732  this */\n      address\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1688:1734  token().allowance(_tokenWallet, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_92:\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1646:1654  Math.min */\n      tag_93\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1646:1735  Math.min(token().balanceOf(_tokenWallet), token().allowance(_tokenWallet, address(this))) */\n      jump\t// in\n    tag_80:\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1639:1735  return Math.min(token().balanceOf(_tokenWallet), token().allowance(_tokenWallet, address(this))) */\n      swap1\n      pop\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1571:1743  function remainingTokens() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1335:1426  function tokenWallet() public view returns (address) {... */\n    tag_41:\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1379:1386  address */\n      0x00\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1406:1418  _tokenWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1399:1418  return _tokenWallet */\n      swap1\n      pop\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1335:1426  function tokenWallet() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n    tag_49:\n        /* \"crowdsale/crowdsale.sol\":3484:3490  IERC20 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3510:3516  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":3503:3516  return _token */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":5464:5852  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n    tag_58:\n        /* \"crowdsale/crowdsale.sol\":5598:5599  0 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":5575:5600  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":5575:5586  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":5575:5600  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"crowdsale/crowdsale.sol\":5567:5647  require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"crowdsale/crowdsale.sol\":5679:5680  0 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":5666:5675  weiAmount */\n      dup2\n        /* \"crowdsale/crowdsale.sol\":5666:5680  weiAmount != 0 */\n      sub\n        /* \"crowdsale/crowdsale.sol\":5658:5710  require(weiAmount != 0, \"Crowdsale: weiAmount is 0\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"crowdsale/crowdsale.sol\":5464:5852  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7856:7986  function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {... */\n    tag_60:\n        /* \"crowdsale/crowdsale.sol\":7931:7938  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":7958:7978  weiAmount.mul(_rate) */\n      tag_108\n        /* \"crowdsale/crowdsale.sol\":7972:7977  _rate */\n      sload(0x03)\n        /* \"crowdsale/crowdsale.sol\":7958:7967  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":7958:7971  weiAmount.mul */\n      tag_109\n      swap1\n        /* \"crowdsale/crowdsale.sol\":7958:7978  weiAmount.mul(_rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"crowdsale/crowdsale.sol\":7951:7978  return weiAmount.mul(_rate) */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":7856:7986  function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7023:7167  function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {... */\n    tag_64:\n        /* \"crowdsale/crowdsale.sol\":7119:7159  _deliverTokens(beneficiary, tokenAmount) */\n      tag_114\n        /* \"crowdsale/crowdsale.sol\":7134:7145  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":7147:7158  tokenAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":7119:7133  _deliverTokens */\n      tag_115\n        /* \"crowdsale/crowdsale.sol\":7119:7159  _deliverTokens(beneficiary, tokenAmount) */\n      jump\t// in\n    tag_114:\n        /* \"crowdsale/crowdsale.sol\":7023:7167  function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7445:7600  function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal virtual {... */\n    tag_69:\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":8078:8166  function _forwardFunds() internal virtual {... */\n    tag_71:\n        /* \"crowdsale/crowdsale.sol\":8131:8138  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":8131:8147  _wallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":8131:8158  _wallet.transfer(msg.value) */\n      0x08fc\n        /* \"crowdsale/crowdsale.sol\":8148:8157  msg.value */\n      callvalue\n        /* \"crowdsale/crowdsale.sol\":8131:8158  _wallet.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n        /* \"crowdsale/crowdsale.sol\":8078:8166  function _forwardFunds() internal virtual {... */\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":6155:6314  function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n    tag_73:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":588:692  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":646:653  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":676:677  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:673  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:677  a < b */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:685  a < b ? a : b */\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":684:685  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:685  a < b ? a : b */\n      jump(tag_124)\n    tag_123:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":680:681  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:685  a < b ? a : b */\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":665:685  return a < b ? a : b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":588:692  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1941:2109  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal override  {... */\n    tag_115:\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":2037:2101  token().safeTransferFrom(_tokenWallet, beneficiary, tokenAmount) */\n      tag_129\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":2062:2074  _tokenWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":2076:2087  beneficiary */\n      dup4\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":2089:2100  tokenAmount */\n      dup4\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":2037:2044  token() */\n      tag_130\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":2037:2042  token */\n      tag_49\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":2037:2044  token() */\n      jump\t// in\n    tag_130:\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":2037:2061  token().safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_131\n      swap1\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":2037:2101  token().safeTransferFrom(_tokenWallet, beneficiary, tokenAmount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_129:\n        /* \"crowdsale/emission/allowanceCrowdsale.sol\":1941:2109  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal override  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1355:1558  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1551  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1475:1480  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1505:1532  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1534:1538  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1540:1542  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1544:1549  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1482:1550  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_134\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1474  _callOptionalReturn */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1551  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1355:1558  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5638  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5673  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5649:5654  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5668  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_139\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5710  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5749:5750  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5738  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5745  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5750  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_140\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5765:5775  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5754:5784  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5720:5831  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5266:5838  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4241:4253  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_147\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4294:4300  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4302:4306  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4308:4309  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4311:4323  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4293  functionCallWithValue */\n      tag_148\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4265:4324  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n    tag_148:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5342  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5387:5392  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5383  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5392  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5446:5458  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5460:5483  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5493  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5498  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5506:5511  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5513:5517  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5518  target.call{value: value}(data) */\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_157\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_156)\n    tag_157:\n      0x60\n      swap2\n      pop\n    tag_156:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5445:5518  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_158\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5562:5568  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5570:5577  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5579:5589  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5591:5603  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5561  verifyCallResultFromTarget */\n      tag_159\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5528:5604  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7916  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      tag_163\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8132:8138  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8131  isContract */\n      tag_164\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8208:8218  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8201:8218  return returndata */\n      swap1\n      pop\n      jump(tag_160)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_169\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8256  _revert */\n      tag_170\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_160:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9000:9001  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8990  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8997  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:84   */\n    tag_177:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_178:\n        /* \"#utility.yul\":177:201   */\n      tag_223\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_177\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_25:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_225\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_178\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_179:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:678   */\n    tag_180:\n        /* \"#utility.yul\":619:626   */\n      0x00\n        /* \"#utility.yul\":648:672   */\n      tag_228\n        /* \"#utility.yul\":666:671   */\n      dup3\n        /* \"#utility.yul\":648:672   */\n      tag_179\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":637:672   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:826   */\n    tag_181:\n        /* \"#utility.yul\":787:819   */\n      tag_230\n        /* \"#utility.yul\":813:818   */\n      dup2\n        /* \"#utility.yul\":787:819   */\n      tag_180\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":782:785   */\n      dup3\n        /* \"#utility.yul\":775:820   */\n      mstore\n        /* \"#utility.yul\":684:826   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":832:1086   */\n    tag_34:\n        /* \"#utility.yul\":941:945   */\n      0x00\n        /* \"#utility.yul\":979:981   */\n      0x20\n        /* \"#utility.yul\":968:977   */\n      dup3\n        /* \"#utility.yul\":964:982   */\n      add\n        /* \"#utility.yul\":956:982   */\n      swap1\n      pop\n        /* \"#utility.yul\":992:1079   */\n      tag_232\n        /* \"#utility.yul\":1076:1077   */\n      0x00\n        /* \"#utility.yul\":1065:1074   */\n      dup4\n        /* \"#utility.yul\":1061:1078   */\n      add\n        /* \"#utility.yul\":1052:1058   */\n      dup5\n        /* \"#utility.yul\":992:1079   */\n      tag_181\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":832:1086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1092:1188   */\n    tag_182:\n        /* \"#utility.yul\":1129:1136   */\n      0x00\n        /* \"#utility.yul\":1158:1182   */\n      tag_234\n        /* \"#utility.yul\":1176:1181   */\n      dup3\n        /* \"#utility.yul\":1158:1182   */\n      tag_179\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1147:1182   */\n      swap1\n      pop\n        /* \"#utility.yul\":1092:1188   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1194:1312   */\n    tag_183:\n        /* \"#utility.yul\":1281:1305   */\n      tag_236\n        /* \"#utility.yul\":1299:1304   */\n      dup2\n        /* \"#utility.yul\":1281:1305   */\n      tag_182\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1276:1279   */\n      dup3\n        /* \"#utility.yul\":1269:1306   */\n      mstore\n        /* \"#utility.yul\":1194:1312   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1318:1540   */\n    tag_43:\n        /* \"#utility.yul\":1411:1415   */\n      0x00\n        /* \"#utility.yul\":1449:1451   */\n      0x20\n        /* \"#utility.yul\":1438:1447   */\n      dup3\n        /* \"#utility.yul\":1434:1452   */\n      add\n        /* \"#utility.yul\":1426:1452   */\n      swap1\n      pop\n        /* \"#utility.yul\":1462:1533   */\n      tag_238\n        /* \"#utility.yul\":1530:1531   */\n      0x00\n        /* \"#utility.yul\":1519:1528   */\n      dup4\n        /* \"#utility.yul\":1515:1532   */\n      add\n        /* \"#utility.yul\":1506:1512   */\n      dup5\n        /* \"#utility.yul\":1462:1533   */\n      tag_183\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1318:1540   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1627:1744   */\n    tag_185:\n        /* \"#utility.yul\":1736:1737   */\n      0x00\n        /* \"#utility.yul\":1733:1734   */\n      dup1\n        /* \"#utility.yul\":1726:1738   */\n      revert\n        /* \"#utility.yul\":1873:1995   */\n    tag_187:\n        /* \"#utility.yul\":1946:1970   */\n      tag_243\n        /* \"#utility.yul\":1964:1969   */\n      dup2\n        /* \"#utility.yul\":1946:1970   */\n      tag_182\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1939:1944   */\n      dup2\n        /* \"#utility.yul\":1936:1971   */\n      eq\n        /* \"#utility.yul\":1926:1989   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1985:1986   */\n      0x00\n        /* \"#utility.yul\":1982:1983   */\n      dup1\n        /* \"#utility.yul\":1975:1987   */\n      revert\n        /* \"#utility.yul\":1926:1989   */\n    tag_244:\n        /* \"#utility.yul\":1873:1995   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2001:2140   */\n    tag_188:\n        /* \"#utility.yul\":2047:2052   */\n      0x00\n        /* \"#utility.yul\":2085:2091   */\n      dup2\n        /* \"#utility.yul\":2072:2092   */\n      calldataload\n        /* \"#utility.yul\":2063:2092   */\n      swap1\n      pop\n        /* \"#utility.yul\":2101:2134   */\n      tag_246\n        /* \"#utility.yul\":2128:2133   */\n      dup2\n        /* \"#utility.yul\":2101:2134   */\n      tag_187\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2001:2140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2146:2475   */\n    tag_46:\n        /* \"#utility.yul\":2205:2211   */\n      0x00\n        /* \"#utility.yul\":2254:2256   */\n      0x20\n        /* \"#utility.yul\":2242:2251   */\n      dup3\n        /* \"#utility.yul\":2233:2240   */\n      dup5\n        /* \"#utility.yul\":2229:2252   */\n      sub\n        /* \"#utility.yul\":2225:2257   */\n      slt\n        /* \"#utility.yul\":2222:2341   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":2260:2339   */\n      tag_249\n      tag_185\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2222:2341   */\n    tag_248:\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2405:2458   */\n      tag_250\n        /* \"#utility.yul\":2450:2457   */\n      dup5\n        /* \"#utility.yul\":2441:2447   */\n      dup3\n        /* \"#utility.yul\":2430:2439   */\n      dup6\n        /* \"#utility.yul\":2426:2448   */\n      add\n        /* \"#utility.yul\":2405:2458   */\n      tag_188\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2395:2458   */\n      swap2\n      pop\n        /* \"#utility.yul\":2351:2468   */\n      pop\n        /* \"#utility.yul\":2146:2475   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2481:2541   */\n    tag_189:\n        /* \"#utility.yul\":2509:2512   */\n      0x00\n        /* \"#utility.yul\":2530:2535   */\n      dup2\n        /* \"#utility.yul\":2523:2535   */\n      swap1\n      pop\n        /* \"#utility.yul\":2481:2541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2547:2689   */\n    tag_190:\n        /* \"#utility.yul\":2597:2606   */\n      0x00\n        /* \"#utility.yul\":2630:2683   */\n      tag_253\n        /* \"#utility.yul\":2648:2682   */\n      tag_254\n        /* \"#utility.yul\":2657:2681   */\n      tag_255\n        /* \"#utility.yul\":2675:2680   */\n      dup5\n        /* \"#utility.yul\":2657:2681   */\n      tag_179\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2648:2682   */\n      tag_189\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2630:2683   */\n      tag_179\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2617:2683   */\n      swap1\n      pop\n        /* \"#utility.yul\":2547:2689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2695:2821   */\n    tag_191:\n        /* \"#utility.yul\":2745:2754   */\n      0x00\n        /* \"#utility.yul\":2778:2815   */\n      tag_257\n        /* \"#utility.yul\":2809:2814   */\n      dup3\n        /* \"#utility.yul\":2778:2815   */\n      tag_190\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2765:2815   */\n      swap1\n      pop\n        /* \"#utility.yul\":2695:2821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2827:2967   */\n    tag_192:\n        /* \"#utility.yul\":2891:2900   */\n      0x00\n        /* \"#utility.yul\":2924:2961   */\n      tag_259\n        /* \"#utility.yul\":2955:2960   */\n      dup3\n        /* \"#utility.yul\":2924:2961   */\n      tag_191\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2911:2961   */\n      swap1\n      pop\n        /* \"#utility.yul\":2827:2967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2973:3132   */\n    tag_193:\n        /* \"#utility.yul\":3074:3125   */\n      tag_261\n        /* \"#utility.yul\":3119:3124   */\n      dup2\n        /* \"#utility.yul\":3074:3125   */\n      tag_192\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3069:3072   */\n      dup3\n        /* \"#utility.yul\":3062:3126   */\n      mstore\n        /* \"#utility.yul\":2973:3132   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3138:3388   */\n    tag_51:\n        /* \"#utility.yul\":3245:3249   */\n      0x00\n        /* \"#utility.yul\":3283:3285   */\n      0x20\n        /* \"#utility.yul\":3272:3281   */\n      dup3\n        /* \"#utility.yul\":3268:3286   */\n      add\n        /* \"#utility.yul\":3260:3286   */\n      swap1\n      pop\n        /* \"#utility.yul\":3296:3381   */\n      tag_263\n        /* \"#utility.yul\":3378:3379   */\n      0x00\n        /* \"#utility.yul\":3367:3376   */\n      dup4\n        /* \"#utility.yul\":3363:3380   */\n      add\n        /* \"#utility.yul\":3354:3360   */\n      dup5\n        /* \"#utility.yul\":3296:3381   */\n      tag_193\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3138:3388   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3394:3726   */\n    tag_67:\n        /* \"#utility.yul\":3515:3519   */\n      0x00\n        /* \"#utility.yul\":3553:3555   */\n      0x40\n        /* \"#utility.yul\":3542:3551   */\n      dup3\n        /* \"#utility.yul\":3538:3556   */\n      add\n        /* \"#utility.yul\":3530:3556   */\n      swap1\n      pop\n        /* \"#utility.yul\":3566:3637   */\n      tag_265\n        /* \"#utility.yul\":3634:3635   */\n      0x00\n        /* \"#utility.yul\":3623:3632   */\n      dup4\n        /* \"#utility.yul\":3619:3636   */\n      add\n        /* \"#utility.yul\":3610:3616   */\n      dup6\n        /* \"#utility.yul\":3566:3637   */\n      tag_178\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3647:3719   */\n      tag_266\n        /* \"#utility.yul\":3715:3717   */\n      0x20\n        /* \"#utility.yul\":3704:3713   */\n      dup4\n        /* \"#utility.yul\":3700:3718   */\n      add\n        /* \"#utility.yul\":3691:3697   */\n      dup5\n        /* \"#utility.yul\":3647:3719   */\n      tag_178\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3394:3726   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3732:3854   */\n    tag_194:\n        /* \"#utility.yul\":3805:3829   */\n      tag_268\n        /* \"#utility.yul\":3823:3828   */\n      dup2\n        /* \"#utility.yul\":3805:3829   */\n      tag_177\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3798:3803   */\n      dup2\n        /* \"#utility.yul\":3795:3830   */\n      eq\n        /* \"#utility.yul\":3785:3848   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":3844:3845   */\n      0x00\n        /* \"#utility.yul\":3841:3842   */\n      dup1\n        /* \"#utility.yul\":3834:3846   */\n      revert\n        /* \"#utility.yul\":3785:3848   */\n    tag_269:\n        /* \"#utility.yul\":3732:3854   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3860:4003   */\n    tag_195:\n        /* \"#utility.yul\":3917:3922   */\n      0x00\n        /* \"#utility.yul\":3948:3954   */\n      dup2\n        /* \"#utility.yul\":3942:3955   */\n      mload\n        /* \"#utility.yul\":3933:3955   */\n      swap1\n      pop\n        /* \"#utility.yul\":3964:3997   */\n      tag_271\n        /* \"#utility.yul\":3991:3996   */\n      dup2\n        /* \"#utility.yul\":3964:3997   */\n      tag_194\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3860:4003   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4009:4360   */\n    tag_86:\n        /* \"#utility.yul\":4079:4085   */\n      0x00\n        /* \"#utility.yul\":4128:4130   */\n      0x20\n        /* \"#utility.yul\":4116:4125   */\n      dup3\n        /* \"#utility.yul\":4107:4114   */\n      dup5\n        /* \"#utility.yul\":4103:4126   */\n      sub\n        /* \"#utility.yul\":4099:4131   */\n      slt\n        /* \"#utility.yul\":4096:4215   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4134:4213   */\n      tag_274\n      tag_185\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4096:4215   */\n    tag_273:\n        /* \"#utility.yul\":4254:4255   */\n      0x00\n        /* \"#utility.yul\":4279:4343   */\n      tag_275\n        /* \"#utility.yul\":4335:4342   */\n      dup5\n        /* \"#utility.yul\":4326:4332   */\n      dup3\n        /* \"#utility.yul\":4315:4324   */\n      dup6\n        /* \"#utility.yul\":4311:4333   */\n      add\n        /* \"#utility.yul\":4279:4343   */\n      tag_195\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4269:4343   */\n      swap2\n      pop\n        /* \"#utility.yul\":4225:4353   */\n      pop\n        /* \"#utility.yul\":4009:4360   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4366:4698   */\n    tag_89:\n        /* \"#utility.yul\":4487:4491   */\n      0x00\n        /* \"#utility.yul\":4525:4527   */\n      0x40\n        /* \"#utility.yul\":4514:4523   */\n      dup3\n        /* \"#utility.yul\":4510:4528   */\n      add\n        /* \"#utility.yul\":4502:4528   */\n      swap1\n      pop\n        /* \"#utility.yul\":4538:4609   */\n      tag_277\n        /* \"#utility.yul\":4606:4607   */\n      0x00\n        /* \"#utility.yul\":4595:4604   */\n      dup4\n        /* \"#utility.yul\":4591:4608   */\n      add\n        /* \"#utility.yul\":4582:4588   */\n      dup6\n        /* \"#utility.yul\":4538:4609   */\n      tag_183\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4619:4691   */\n      tag_278\n        /* \"#utility.yul\":4687:4689   */\n      0x20\n        /* \"#utility.yul\":4676:4685   */\n      dup4\n        /* \"#utility.yul\":4672:4690   */\n      add\n        /* \"#utility.yul\":4663:4669   */\n      dup5\n        /* \"#utility.yul\":4619:4691   */\n      tag_183\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4366:4698   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4704:4873   */\n    tag_196:\n        /* \"#utility.yul\":4788:4799   */\n      0x00\n        /* \"#utility.yul\":4822:4828   */\n      dup3\n        /* \"#utility.yul\":4817:4820   */\n      dup3\n        /* \"#utility.yul\":4810:4829   */\n      mstore\n        /* \"#utility.yul\":4862:4866   */\n      0x20\n        /* \"#utility.yul\":4857:4860   */\n      dup3\n        /* \"#utility.yul\":4853:4867   */\n      add\n        /* \"#utility.yul\":4838:4867   */\n      swap1\n      pop\n        /* \"#utility.yul\":4704:4873   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4879:5060   */\n    tag_197:\n        /* \"#utility.yul\":5019:5052   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":5015:5016   */\n      0x00\n        /* \"#utility.yul\":5007:5013   */\n      dup3\n        /* \"#utility.yul\":5003:5017   */\n      add\n        /* \"#utility.yul\":4996:5053   */\n      mstore\n        /* \"#utility.yul\":4879:5060   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5066:5432   */\n    tag_198:\n        /* \"#utility.yul\":5208:5211   */\n      0x00\n        /* \"#utility.yul\":5229:5296   */\n      tag_282\n        /* \"#utility.yul\":5293:5295   */\n      0x1f\n        /* \"#utility.yul\":5288:5291   */\n      dup4\n        /* \"#utility.yul\":5229:5296   */\n      tag_196\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5222:5296   */\n      swap2\n      pop\n        /* \"#utility.yul\":5305:5398   */\n      tag_283\n        /* \"#utility.yul\":5394:5397   */\n      dup3\n        /* \"#utility.yul\":5305:5398   */\n      tag_197\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5423:5425   */\n      0x20\n        /* \"#utility.yul\":5418:5421   */\n      dup3\n        /* \"#utility.yul\":5414:5426   */\n      add\n        /* \"#utility.yul\":5407:5426   */\n      swap1\n      pop\n        /* \"#utility.yul\":5066:5432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5438:5857   */\n    tag_99:\n        /* \"#utility.yul\":5604:5608   */\n      0x00\n        /* \"#utility.yul\":5642:5644   */\n      0x20\n        /* \"#utility.yul\":5631:5640   */\n      dup3\n        /* \"#utility.yul\":5627:5645   */\n      add\n        /* \"#utility.yul\":5619:5645   */\n      swap1\n      pop\n        /* \"#utility.yul\":5691:5700   */\n      dup2\n        /* \"#utility.yul\":5685:5689   */\n      dup2\n        /* \"#utility.yul\":5681:5701   */\n      sub\n        /* \"#utility.yul\":5677:5678   */\n      0x00\n        /* \"#utility.yul\":5666:5675   */\n      dup4\n        /* \"#utility.yul\":5662:5679   */\n      add\n        /* \"#utility.yul\":5655:5702   */\n      mstore\n        /* \"#utility.yul\":5719:5850   */\n      tag_285\n        /* \"#utility.yul\":5845:5849   */\n      dup2\n        /* \"#utility.yul\":5719:5850   */\n      tag_198\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5711:5850   */\n      swap1\n      pop\n        /* \"#utility.yul\":5438:5857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5863:6092   */\n    tag_199:\n        /* \"#utility.yul\":6003:6037   */\n      0x43726f776473616c653a2062656e656669636961727920697320746865207a65\n        /* \"#utility.yul\":5999:6000   */\n      0x00\n        /* \"#utility.yul\":5991:5997   */\n      dup3\n        /* \"#utility.yul\":5987:6001   */\n      add\n        /* \"#utility.yul\":5980:6038   */\n      mstore\n        /* \"#utility.yul\":6072:6084   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6067:6069   */\n      0x20\n        /* \"#utility.yul\":6059:6065   */\n      dup3\n        /* \"#utility.yul\":6055:6070   */\n      add\n        /* \"#utility.yul\":6048:6085   */\n      mstore\n        /* \"#utility.yul\":5863:6092   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6098:6464   */\n    tag_200:\n        /* \"#utility.yul\":6240:6243   */\n      0x00\n        /* \"#utility.yul\":6261:6328   */\n      tag_288\n        /* \"#utility.yul\":6325:6327   */\n      0x2a\n        /* \"#utility.yul\":6320:6323   */\n      dup4\n        /* \"#utility.yul\":6261:6328   */\n      tag_196\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":6254:6328   */\n      swap2\n      pop\n        /* \"#utility.yul\":6337:6430   */\n      tag_289\n        /* \"#utility.yul\":6426:6429   */\n      dup3\n        /* \"#utility.yul\":6337:6430   */\n      tag_199\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":6455:6457   */\n      0x40\n        /* \"#utility.yul\":6450:6453   */\n      dup3\n        /* \"#utility.yul\":6446:6458   */\n      add\n        /* \"#utility.yul\":6439:6458   */\n      swap1\n      pop\n        /* \"#utility.yul\":6098:6464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6470:6889   */\n    tag_103:\n        /* \"#utility.yul\":6636:6640   */\n      0x00\n        /* \"#utility.yul\":6674:6676   */\n      0x20\n        /* \"#utility.yul\":6663:6672   */\n      dup3\n        /* \"#utility.yul\":6659:6677   */\n      add\n        /* \"#utility.yul\":6651:6677   */\n      swap1\n      pop\n        /* \"#utility.yul\":6723:6732   */\n      dup2\n        /* \"#utility.yul\":6717:6721   */\n      dup2\n        /* \"#utility.yul\":6713:6733   */\n      sub\n        /* \"#utility.yul\":6709:6710   */\n      0x00\n        /* \"#utility.yul\":6698:6707   */\n      dup4\n        /* \"#utility.yul\":6694:6711   */\n      add\n        /* \"#utility.yul\":6687:6734   */\n      mstore\n        /* \"#utility.yul\":6751:6882   */\n      tag_291\n        /* \"#utility.yul\":6877:6881   */\n      dup2\n        /* \"#utility.yul\":6751:6882   */\n      tag_200\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6743:6882   */\n      swap1\n      pop\n        /* \"#utility.yul\":6470:6889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6895:7070   */\n    tag_201:\n        /* \"#utility.yul\":7035:7062   */\n      0x43726f776473616c653a20776569416d6f756e74206973203000000000000000\n        /* \"#utility.yul\":7031:7032   */\n      0x00\n        /* \"#utility.yul\":7023:7029   */\n      dup3\n        /* \"#utility.yul\":7019:7033   */\n      add\n        /* \"#utility.yul\":7012:7063   */\n      mstore\n        /* \"#utility.yul\":6895:7070   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7076:7442   */\n    tag_202:\n        /* \"#utility.yul\":7218:7221   */\n      0x00\n        /* \"#utility.yul\":7239:7306   */\n      tag_294\n        /* \"#utility.yul\":7303:7305   */\n      0x19\n        /* \"#utility.yul\":7298:7301   */\n      dup4\n        /* \"#utility.yul\":7239:7306   */\n      tag_196\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":7232:7306   */\n      swap2\n      pop\n        /* \"#utility.yul\":7315:7408   */\n      tag_295\n        /* \"#utility.yul\":7404:7407   */\n      dup3\n        /* \"#utility.yul\":7315:7408   */\n      tag_201\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7433:7435   */\n      0x20\n        /* \"#utility.yul\":7428:7431   */\n      dup3\n        /* \"#utility.yul\":7424:7436   */\n      add\n        /* \"#utility.yul\":7417:7436   */\n      swap1\n      pop\n        /* \"#utility.yul\":7076:7442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7448:7867   */\n    tag_106:\n        /* \"#utility.yul\":7614:7618   */\n      0x00\n        /* \"#utility.yul\":7652:7654   */\n      0x20\n        /* \"#utility.yul\":7641:7650   */\n      dup3\n        /* \"#utility.yul\":7637:7655   */\n      add\n        /* \"#utility.yul\":7629:7655   */\n      swap1\n      pop\n        /* \"#utility.yul\":7701:7710   */\n      dup2\n        /* \"#utility.yul\":7695:7699   */\n      dup2\n        /* \"#utility.yul\":7691:7711   */\n      sub\n        /* \"#utility.yul\":7687:7688   */\n      0x00\n        /* \"#utility.yul\":7676:7685   */\n      dup4\n        /* \"#utility.yul\":7672:7689   */\n      add\n        /* \"#utility.yul\":7665:7712   */\n      mstore\n        /* \"#utility.yul\":7729:7860   */\n      tag_297\n        /* \"#utility.yul\":7855:7859   */\n      dup2\n        /* \"#utility.yul\":7729:7860   */\n      tag_202\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":7721:7860   */\n      swap1\n      pop\n        /* \"#utility.yul\":7448:7867   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7873:8053   */\n    tag_203:\n        /* \"#utility.yul\":7921:7998   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7918:7919   */\n      0x00\n        /* \"#utility.yul\":7911:7999   */\n      mstore\n        /* \"#utility.yul\":8018:8022   */\n      0x11\n        /* \"#utility.yul\":8015:8016   */\n      0x04\n        /* \"#utility.yul\":8008:8023   */\n      mstore\n        /* \"#utility.yul\":8042:8046   */\n      0x24\n        /* \"#utility.yul\":8039:8040   */\n      0x00\n        /* \"#utility.yul\":8032:8047   */\n      revert\n        /* \"#utility.yul\":8059:8250   */\n    tag_112:\n        /* \"#utility.yul\":8099:8102   */\n      0x00\n        /* \"#utility.yul\":8118:8138   */\n      tag_300\n        /* \"#utility.yul\":8136:8137   */\n      dup3\n        /* \"#utility.yul\":8118:8138   */\n      tag_177\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":8113:8138   */\n      swap2\n      pop\n        /* \"#utility.yul\":8152:8172   */\n      tag_301\n        /* \"#utility.yul\":8170:8171   */\n      dup4\n        /* \"#utility.yul\":8152:8172   */\n      tag_177\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":8147:8172   */\n      swap3\n      pop\n        /* \"#utility.yul\":8195:8196   */\n      dup3\n        /* \"#utility.yul\":8192:8193   */\n      dup3\n        /* \"#utility.yul\":8188:8197   */\n      add\n        /* \"#utility.yul\":8181:8197   */\n      swap1\n      pop\n        /* \"#utility.yul\":8216:8219   */\n      dup1\n        /* \"#utility.yul\":8213:8214   */\n      dup3\n        /* \"#utility.yul\":8210:8220   */\n      gt\n        /* \"#utility.yul\":8207:8243   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":8223:8241   */\n      tag_303\n      tag_203\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":8207:8243   */\n    tag_302:\n        /* \"#utility.yul\":8059:8250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8666   */\n    tag_127:\n        /* \"#utility.yul\":8296:8303   */\n      0x00\n        /* \"#utility.yul\":8319:8339   */\n      tag_305\n        /* \"#utility.yul\":8337:8338   */\n      dup3\n        /* \"#utility.yul\":8319:8339   */\n      tag_177\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":8314:8339   */\n      swap2\n      pop\n        /* \"#utility.yul\":8353:8373   */\n      tag_306\n        /* \"#utility.yul\":8371:8372   */\n      dup4\n        /* \"#utility.yul\":8353:8373   */\n      tag_177\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":8348:8373   */\n      swap3\n      pop\n        /* \"#utility.yul\":8408:8409   */\n      dup3\n        /* \"#utility.yul\":8405:8406   */\n      dup3\n        /* \"#utility.yul\":8401:8410   */\n      mul\n        /* \"#utility.yul\":8430:8460   */\n      tag_307\n        /* \"#utility.yul\":8448:8459   */\n      dup2\n        /* \"#utility.yul\":8430:8460   */\n      tag_177\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":8419:8460   */\n      swap2\n      pop\n        /* \"#utility.yul\":8609:8610   */\n      dup3\n        /* \"#utility.yul\":8600:8607   */\n      dup3\n        /* \"#utility.yul\":8596:8611   */\n      div\n        /* \"#utility.yul\":8593:8594   */\n      dup5\n        /* \"#utility.yul\":8590:8612   */\n      eq\n        /* \"#utility.yul\":8570:8571   */\n      dup4\n        /* \"#utility.yul\":8563:8572   */\n      iszero\n        /* \"#utility.yul\":8543:8626   */\n      or\n        /* \"#utility.yul\":8520:8659   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":8639:8657   */\n      tag_309\n      tag_203\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":8520:8659   */\n    tag_308:\n        /* \"#utility.yul\":8304:8666   */\n      pop\n        /* \"#utility.yul\":8256:8666   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8672:9114   */\n    tag_135:\n        /* \"#utility.yul\":8821:8825   */\n      0x00\n        /* \"#utility.yul\":8859:8861   */\n      0x60\n        /* \"#utility.yul\":8848:8857   */\n      dup3\n        /* \"#utility.yul\":8844:8862   */\n      add\n        /* \"#utility.yul\":8836:8862   */\n      swap1\n      pop\n        /* \"#utility.yul\":8872:8943   */\n      tag_311\n        /* \"#utility.yul\":8940:8941   */\n      0x00\n        /* \"#utility.yul\":8929:8938   */\n      dup4\n        /* \"#utility.yul\":8925:8942   */\n      add\n        /* \"#utility.yul\":8916:8922   */\n      dup7\n        /* \"#utility.yul\":8872:8943   */\n      tag_183\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":8953:9025   */\n      tag_312\n        /* \"#utility.yul\":9021:9023   */\n      0x20\n        /* \"#utility.yul\":9010:9019   */\n      dup4\n        /* \"#utility.yul\":9006:9024   */\n      add\n        /* \"#utility.yul\":8997:9003   */\n      dup6\n        /* \"#utility.yul\":8953:9025   */\n      tag_183\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":9035:9107   */\n      tag_313\n        /* \"#utility.yul\":9103:9105   */\n      0x40\n        /* \"#utility.yul\":9092:9101   */\n      dup4\n        /* \"#utility.yul\":9088:9106   */\n      add\n        /* \"#utility.yul\":9079:9085   */\n      dup5\n        /* \"#utility.yul\":9035:9107   */\n      tag_178\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":8672:9114   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9120:9210   */\n    tag_204:\n        /* \"#utility.yul\":9154:9161   */\n      0x00\n        /* \"#utility.yul\":9197:9202   */\n      dup2\n        /* \"#utility.yul\":9190:9203   */\n      iszero\n        /* \"#utility.yul\":9183:9204   */\n      iszero\n        /* \"#utility.yul\":9172:9204   */\n      swap1\n      pop\n        /* \"#utility.yul\":9120:9210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9216:9332   */\n    tag_205:\n        /* \"#utility.yul\":9286:9307   */\n      tag_316\n        /* \"#utility.yul\":9301:9306   */\n      dup2\n        /* \"#utility.yul\":9286:9307   */\n      tag_204\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":9279:9284   */\n      dup2\n        /* \"#utility.yul\":9276:9308   */\n      eq\n        /* \"#utility.yul\":9266:9326   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":9322:9323   */\n      0x00\n        /* \"#utility.yul\":9319:9320   */\n      dup1\n        /* \"#utility.yul\":9312:9324   */\n      revert\n        /* \"#utility.yul\":9266:9326   */\n    tag_317:\n        /* \"#utility.yul\":9216:9332   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9338:9475   */\n    tag_206:\n        /* \"#utility.yul\":9392:9397   */\n      0x00\n        /* \"#utility.yul\":9423:9429   */\n      dup2\n        /* \"#utility.yul\":9417:9430   */\n      mload\n        /* \"#utility.yul\":9408:9430   */\n      swap1\n      pop\n        /* \"#utility.yul\":9439:9469   */\n      tag_319\n        /* \"#utility.yul\":9463:9468   */\n      dup2\n        /* \"#utility.yul\":9439:9469   */\n      tag_205\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":9338:9475   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9481:9826   */\n    tag_142:\n        /* \"#utility.yul\":9548:9554   */\n      0x00\n        /* \"#utility.yul\":9597:9599   */\n      0x20\n        /* \"#utility.yul\":9585:9594   */\n      dup3\n        /* \"#utility.yul\":9576:9583   */\n      dup5\n        /* \"#utility.yul\":9572:9595   */\n      sub\n        /* \"#utility.yul\":9568:9600   */\n      slt\n        /* \"#utility.yul\":9565:9684   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":9603:9682   */\n      tag_322\n      tag_185\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":9565:9684   */\n    tag_321:\n        /* \"#utility.yul\":9723:9724   */\n      0x00\n        /* \"#utility.yul\":9748:9809   */\n      tag_323\n        /* \"#utility.yul\":9801:9808   */\n      dup5\n        /* \"#utility.yul\":9792:9798   */\n      dup3\n        /* \"#utility.yul\":9781:9790   */\n      dup6\n        /* \"#utility.yul\":9777:9799   */\n      add\n        /* \"#utility.yul\":9748:9809   */\n      tag_206\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":9738:9809   */\n      swap2\n      pop\n        /* \"#utility.yul\":9694:9819   */\n      pop\n        /* \"#utility.yul\":9481:9826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9832:10061   */\n    tag_207:\n        /* \"#utility.yul\":9972:10006   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":9968:9969   */\n      0x00\n        /* \"#utility.yul\":9960:9966   */\n      dup3\n        /* \"#utility.yul\":9956:9970   */\n      add\n        /* \"#utility.yul\":9949:10007   */\n      mstore\n        /* \"#utility.yul\":10041:10053   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10036:10038   */\n      0x20\n        /* \"#utility.yul\":10028:10034   */\n      dup3\n        /* \"#utility.yul\":10024:10039   */\n      add\n        /* \"#utility.yul\":10017:10054   */\n      mstore\n        /* \"#utility.yul\":9832:10061   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10067:10433   */\n    tag_208:\n        /* \"#utility.yul\":10209:10212   */\n      0x00\n        /* \"#utility.yul\":10230:10297   */\n      tag_326\n        /* \"#utility.yul\":10294:10296   */\n      0x2a\n        /* \"#utility.yul\":10289:10292   */\n      dup4\n        /* \"#utility.yul\":10230:10297   */\n      tag_196\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":10223:10297   */\n      swap2\n      pop\n        /* \"#utility.yul\":10306:10399   */\n      tag_327\n        /* \"#utility.yul\":10395:10398   */\n      dup3\n        /* \"#utility.yul\":10306:10399   */\n      tag_207\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":10424:10426   */\n      0x40\n        /* \"#utility.yul\":10419:10422   */\n      dup3\n        /* \"#utility.yul\":10415:10427   */\n      add\n        /* \"#utility.yul\":10408:10427   */\n      swap1\n      pop\n        /* \"#utility.yul\":10067:10433   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10439:10858   */\n    tag_145:\n        /* \"#utility.yul\":10605:10609   */\n      0x00\n        /* \"#utility.yul\":10643:10645   */\n      0x20\n        /* \"#utility.yul\":10632:10641   */\n      dup3\n        /* \"#utility.yul\":10628:10646   */\n      add\n        /* \"#utility.yul\":10620:10646   */\n      swap1\n      pop\n        /* \"#utility.yul\":10692:10701   */\n      dup2\n        /* \"#utility.yul\":10686:10690   */\n      dup2\n        /* \"#utility.yul\":10682:10702   */\n      sub\n        /* \"#utility.yul\":10678:10679   */\n      0x00\n        /* \"#utility.yul\":10667:10676   */\n      dup4\n        /* \"#utility.yul\":10663:10680   */\n      add\n        /* \"#utility.yul\":10656:10703   */\n      mstore\n        /* \"#utility.yul\":10720:10851   */\n      tag_329\n        /* \"#utility.yul\":10846:10850   */\n      dup2\n        /* \"#utility.yul\":10720:10851   */\n      tag_208\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":10712:10851   */\n      swap1\n      pop\n        /* \"#utility.yul\":10439:10858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10864:11089   */\n    tag_209:\n        /* \"#utility.yul\":11004:11038   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":11000:11001   */\n      0x00\n        /* \"#utility.yul\":10992:10998   */\n      dup3\n        /* \"#utility.yul\":10988:11002   */\n      add\n        /* \"#utility.yul\":10981:11039   */\n      mstore\n        /* \"#utility.yul\":11073:11081   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11068:11070   */\n      0x20\n        /* \"#utility.yul\":11060:11066   */\n      dup3\n        /* \"#utility.yul\":11056:11071   */\n      add\n        /* \"#utility.yul\":11049:11082   */\n      mstore\n        /* \"#utility.yul\":10864:11089   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11095:11461   */\n    tag_210:\n        /* \"#utility.yul\":11237:11240   */\n      0x00\n        /* \"#utility.yul\":11258:11325   */\n      tag_332\n        /* \"#utility.yul\":11322:11324   */\n      0x26\n        /* \"#utility.yul\":11317:11320   */\n      dup4\n        /* \"#utility.yul\":11258:11325   */\n      tag_196\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":11251:11325   */\n      swap2\n      pop\n        /* \"#utility.yul\":11334:11427   */\n      tag_333\n        /* \"#utility.yul\":11423:11426   */\n      dup3\n        /* \"#utility.yul\":11334:11427   */\n      tag_209\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":11452:11454   */\n      0x40\n        /* \"#utility.yul\":11447:11450   */\n      dup3\n        /* \"#utility.yul\":11443:11455   */\n      add\n        /* \"#utility.yul\":11436:11455   */\n      swap1\n      pop\n        /* \"#utility.yul\":11095:11461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11467:11886   */\n    tag_152:\n        /* \"#utility.yul\":11633:11637   */\n      0x00\n        /* \"#utility.yul\":11671:11673   */\n      0x20\n        /* \"#utility.yul\":11660:11669   */\n      dup3\n        /* \"#utility.yul\":11656:11674   */\n      add\n        /* \"#utility.yul\":11648:11674   */\n      swap1\n      pop\n        /* \"#utility.yul\":11720:11729   */\n      dup2\n        /* \"#utility.yul\":11714:11718   */\n      dup2\n        /* \"#utility.yul\":11710:11730   */\n      sub\n        /* \"#utility.yul\":11706:11707   */\n      0x00\n        /* \"#utility.yul\":11695:11704   */\n      dup4\n        /* \"#utility.yul\":11691:11708   */\n      add\n        /* \"#utility.yul\":11684:11731   */\n      mstore\n        /* \"#utility.yul\":11748:11879   */\n      tag_335\n        /* \"#utility.yul\":11874:11878   */\n      dup2\n        /* \"#utility.yul\":11748:11879   */\n      tag_210\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":11740:11879   */\n      swap1\n      pop\n        /* \"#utility.yul\":11467:11886   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11892:11990   */\n    tag_211:\n        /* \"#utility.yul\":11943:11949   */\n      0x00\n        /* \"#utility.yul\":11977:11982   */\n      dup2\n        /* \"#utility.yul\":11971:11983   */\n      mload\n        /* \"#utility.yul\":11961:11983   */\n      swap1\n      pop\n        /* \"#utility.yul\":11892:11990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11996:12143   */\n    tag_212:\n        /* \"#utility.yul\":12097:12108   */\n      0x00\n        /* \"#utility.yul\":12134:12137   */\n      dup2\n        /* \"#utility.yul\":12119:12137   */\n      swap1\n      pop\n        /* \"#utility.yul\":11996:12143   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12149:12395   */\n    tag_213:\n        /* \"#utility.yul\":12230:12231   */\n      0x00\n        /* \"#utility.yul\":12240:12353   */\n    tag_339:\n        /* \"#utility.yul\":12254:12260   */\n      dup4\n        /* \"#utility.yul\":12251:12252   */\n      dup2\n        /* \"#utility.yul\":12248:12261   */\n      lt\n        /* \"#utility.yul\":12240:12353   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":12339:12340   */\n      dup1\n        /* \"#utility.yul\":12334:12337   */\n      dup3\n        /* \"#utility.yul\":12330:12341   */\n      add\n        /* \"#utility.yul\":12324:12342   */\n      mload\n        /* \"#utility.yul\":12320:12321   */\n      dup2\n        /* \"#utility.yul\":12315:12318   */\n      dup5\n        /* \"#utility.yul\":12311:12322   */\n      add\n        /* \"#utility.yul\":12304:12343   */\n      mstore\n        /* \"#utility.yul\":12276:12278   */\n      0x20\n        /* \"#utility.yul\":12273:12274   */\n      dup2\n        /* \"#utility.yul\":12269:12279   */\n      add\n        /* \"#utility.yul\":12264:12279   */\n      swap1\n      pop\n        /* \"#utility.yul\":12240:12353   */\n      jump(tag_339)\n    tag_341:\n        /* \"#utility.yul\":12387:12388   */\n      0x00\n        /* \"#utility.yul\":12378:12384   */\n      dup5\n        /* \"#utility.yul\":12373:12376   */\n      dup5\n        /* \"#utility.yul\":12369:12385   */\n      add\n        /* \"#utility.yul\":12362:12389   */\n      mstore\n        /* \"#utility.yul\":12211:12395   */\n      pop\n        /* \"#utility.yul\":12149:12395   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12401:12787   */\n    tag_214:\n        /* \"#utility.yul\":12505:12508   */\n      0x00\n        /* \"#utility.yul\":12533:12571   */\n      tag_343\n        /* \"#utility.yul\":12565:12570   */\n      dup3\n        /* \"#utility.yul\":12533:12571   */\n      tag_211\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":12587:12675   */\n      tag_344\n        /* \"#utility.yul\":12668:12674   */\n      dup2\n        /* \"#utility.yul\":12663:12666   */\n      dup6\n        /* \"#utility.yul\":12587:12675   */\n      tag_212\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":12580:12675   */\n      swap4\n      pop\n        /* \"#utility.yul\":12684:12749   */\n      tag_345\n        /* \"#utility.yul\":12742:12748   */\n      dup2\n        /* \"#utility.yul\":12737:12740   */\n      dup6\n        /* \"#utility.yul\":12730:12734   */\n      0x20\n        /* \"#utility.yul\":12723:12728   */\n      dup7\n        /* \"#utility.yul\":12719:12735   */\n      add\n        /* \"#utility.yul\":12684:12749   */\n      tag_213\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":12774:12780   */\n      dup1\n        /* \"#utility.yul\":12769:12772   */\n      dup5\n        /* \"#utility.yul\":12765:12781   */\n      add\n        /* \"#utility.yul\":12758:12781   */\n      swap2\n      pop\n        /* \"#utility.yul\":12509:12787   */\n      pop\n        /* \"#utility.yul\":12401:12787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12793:13064   */\n    tag_154:\n        /* \"#utility.yul\":12923:12926   */\n      0x00\n        /* \"#utility.yul\":12945:13038   */\n      tag_347\n        /* \"#utility.yul\":13034:13037   */\n      dup3\n        /* \"#utility.yul\":13025:13031   */\n      dup5\n        /* \"#utility.yul\":12945:13038   */\n      tag_214\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":12938:13038   */\n      swap2\n      pop\n        /* \"#utility.yul\":13055:13058   */\n      dup2\n        /* \"#utility.yul\":13048:13058   */\n      swap1\n      pop\n        /* \"#utility.yul\":12793:13064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13070:13249   */\n    tag_215:\n        /* \"#utility.yul\":13210:13241   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":13206:13207   */\n      0x00\n        /* \"#utility.yul\":13198:13204   */\n      dup3\n        /* \"#utility.yul\":13194:13208   */\n      add\n        /* \"#utility.yul\":13187:13242   */\n      mstore\n        /* \"#utility.yul\":13070:13249   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13255:13621   */\n    tag_216:\n        /* \"#utility.yul\":13397:13400   */\n      0x00\n        /* \"#utility.yul\":13418:13485   */\n      tag_350\n        /* \"#utility.yul\":13482:13484   */\n      0x1d\n        /* \"#utility.yul\":13477:13480   */\n      dup4\n        /* \"#utility.yul\":13418:13485   */\n      tag_196\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":13411:13485   */\n      swap2\n      pop\n        /* \"#utility.yul\":13494:13587   */\n      tag_351\n        /* \"#utility.yul\":13583:13586   */\n      dup3\n        /* \"#utility.yul\":13494:13587   */\n      tag_215\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":13612:13614   */\n      0x20\n        /* \"#utility.yul\":13607:13610   */\n      dup3\n        /* \"#utility.yul\":13603:13615   */\n      add\n        /* \"#utility.yul\":13596:13615   */\n      swap1\n      pop\n        /* \"#utility.yul\":13255:13621   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13627:14046   */\n    tag_167:\n        /* \"#utility.yul\":13793:13797   */\n      0x00\n        /* \"#utility.yul\":13831:13833   */\n      0x20\n        /* \"#utility.yul\":13820:13829   */\n      dup3\n        /* \"#utility.yul\":13816:13834   */\n      add\n        /* \"#utility.yul\":13808:13834   */\n      swap1\n      pop\n        /* \"#utility.yul\":13880:13889   */\n      dup2\n        /* \"#utility.yul\":13874:13878   */\n      dup2\n        /* \"#utility.yul\":13870:13890   */\n      sub\n        /* \"#utility.yul\":13866:13867   */\n      0x00\n        /* \"#utility.yul\":13855:13864   */\n      dup4\n        /* \"#utility.yul\":13851:13868   */\n      add\n        /* \"#utility.yul\":13844:13891   */\n      mstore\n        /* \"#utility.yul\":13908:14039   */\n      tag_353\n        /* \"#utility.yul\":14034:14038   */\n      dup2\n        /* \"#utility.yul\":13908:14039   */\n      tag_216\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":13900:14039   */\n      swap1\n      pop\n        /* \"#utility.yul\":13627:14046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14052:14151   */\n    tag_217:\n        /* \"#utility.yul\":14104:14110   */\n      0x00\n        /* \"#utility.yul\":14138:14143   */\n      dup2\n        /* \"#utility.yul\":14132:14144   */\n      mload\n        /* \"#utility.yul\":14122:14144   */\n      swap1\n      pop\n        /* \"#utility.yul\":14052:14151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14157:14259   */\n    tag_218:\n        /* \"#utility.yul\":14198:14204   */\n      0x00\n        /* \"#utility.yul\":14249:14251   */\n      0x1f\n        /* \"#utility.yul\":14245:14252   */\n      not\n        /* \"#utility.yul\":14240:14242   */\n      0x1f\n        /* \"#utility.yul\":14233:14238   */\n      dup4\n        /* \"#utility.yul\":14229:14243   */\n      add\n        /* \"#utility.yul\":14225:14253   */\n      and\n        /* \"#utility.yul\":14215:14253   */\n      swap1\n      pop\n        /* \"#utility.yul\":14157:14259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14265:14642   */\n    tag_219:\n        /* \"#utility.yul\":14353:14356   */\n      0x00\n        /* \"#utility.yul\":14381:14420   */\n      tag_357\n        /* \"#utility.yul\":14414:14419   */\n      dup3\n        /* \"#utility.yul\":14381:14420   */\n      tag_217\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":14436:14507   */\n      tag_358\n        /* \"#utility.yul\":14500:14506   */\n      dup2\n        /* \"#utility.yul\":14495:14498   */\n      dup6\n        /* \"#utility.yul\":14436:14507   */\n      tag_196\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":14429:14507   */\n      swap4\n      pop\n        /* \"#utility.yul\":14516:14581   */\n      tag_359\n        /* \"#utility.yul\":14574:14580   */\n      dup2\n        /* \"#utility.yul\":14569:14572   */\n      dup6\n        /* \"#utility.yul\":14562:14566   */\n      0x20\n        /* \"#utility.yul\":14555:14560   */\n      dup7\n        /* \"#utility.yul\":14551:14567   */\n      add\n        /* \"#utility.yul\":14516:14581   */\n      tag_213\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":14606:14635   */\n      tag_360\n        /* \"#utility.yul\":14628:14634   */\n      dup2\n        /* \"#utility.yul\":14606:14635   */\n      tag_218\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":14601:14604   */\n      dup5\n        /* \"#utility.yul\":14597:14636   */\n      add\n        /* \"#utility.yul\":14590:14636   */\n      swap2\n      pop\n        /* \"#utility.yul\":14357:14642   */\n      pop\n        /* \"#utility.yul\":14265:14642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14648:14961   */\n    tag_176:\n        /* \"#utility.yul\":14761:14765   */\n      0x00\n        /* \"#utility.yul\":14799:14801   */\n      0x20\n        /* \"#utility.yul\":14788:14797   */\n      dup3\n        /* \"#utility.yul\":14784:14802   */\n      add\n        /* \"#utility.yul\":14776:14802   */\n      swap1\n      pop\n        /* \"#utility.yul\":14848:14857   */\n      dup2\n        /* \"#utility.yul\":14842:14846   */\n      dup2\n        /* \"#utility.yul\":14838:14858   */\n      sub\n        /* \"#utility.yul\":14834:14835   */\n      0x00\n        /* \"#utility.yul\":14823:14832   */\n      dup4\n        /* \"#utility.yul\":14819:14836   */\n      add\n        /* \"#utility.yul\":14812:14859   */\n      mstore\n        /* \"#utility.yul\":14876:14954   */\n      tag_362\n        /* \"#utility.yul\":14949:14953   */\n      dup2\n        /* \"#utility.yul\":14940:14946   */\n      dup5\n        /* \"#utility.yul\":14876:14954   */\n      tag_219\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":14868:14954   */\n      swap1\n      pop\n        /* \"#utility.yul\":14648:14961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f2a44e98626d3cacd8409f8c811b446fc29db1d6b3ba57dad8664784ad8014bd64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2177": {
									"entryPoint": null,
									"id": 2177,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_2446": {
									"entryPoint": null,
									"id": 2446,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$142_fromMemory": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_address_payablet_contract$_IERC20_$142_fromMemory": {
									"entryPoint": 973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$142": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d": {
									"entryPoint": 1506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78": {
									"entryPoint": 1100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6": {
									"entryPoint": 1210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$142": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7183:10",
										"nodeType": "YulBlock",
										"src": "0:7183:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "890:32:10",
													"nodeType": "YulBlock",
													"src": "890:32:10",
													"statements": [
														{
															"nativeSrc": "900:16:10",
															"nodeType": "YulAssignment",
															"src": "900:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:10",
																"nodeType": "YulIdentifier",
																"src": "911:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:10",
														"nodeType": "YulTypedName",
														"src": "872:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:10",
														"nodeType": "YulTypedName",
														"src": "882:7:10",
														"type": ""
													}
												],
												"src": "845:77:10"
											},
											{
												"body": {
													"nativeSrc": "971:79:10",
													"nodeType": "YulBlock",
													"src": "971:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:10",
																"nodeType": "YulBlock",
																"src": "1028:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:10"
																			},
																			"nativeSrc": "1030:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:10"
																		},
																		"nativeSrc": "1030:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:10"
																				},
																				"nativeSrc": "1001:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:10"
																		},
																		"nativeSrc": "991:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:10"
																},
																"nativeSrc": "984:43:10",
																"nodeType": "YulFunctionCall",
																"src": "984:43:10"
															},
															"nativeSrc": "981:63:10",
															"nodeType": "YulIf",
															"src": "981:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:10",
														"nodeType": "YulTypedName",
														"src": "964:5:10",
														"type": ""
													}
												],
												"src": "928:122:10"
											},
											{
												"body": {
													"nativeSrc": "1119:80:10",
													"nodeType": "YulBlock",
													"src": "1119:80:10",
													"statements": [
														{
															"nativeSrc": "1129:22:10",
															"nodeType": "YulAssignment",
															"src": "1129:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:10"
																},
																"nativeSrc": "1138:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:10"
																},
																"nativeSrc": "1160:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:10"
															},
															"nativeSrc": "1160:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:10",
														"nodeType": "YulTypedName",
														"src": "1097:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:10",
														"nodeType": "YulTypedName",
														"src": "1105:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:10",
														"nodeType": "YulTypedName",
														"src": "1113:5:10",
														"type": ""
													}
												],
												"src": "1056:143:10"
											},
											{
												"body": {
													"nativeSrc": "1258:51:10",
													"nodeType": "YulBlock",
													"src": "1258:51:10",
													"statements": [
														{
															"nativeSrc": "1268:35:10",
															"nodeType": "YulAssignment",
															"src": "1268:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1297:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1297:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1279:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1279:17:10"
																},
																"nativeSrc": "1279:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1279:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1268:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1268:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "1205:104:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1240:5:10",
														"nodeType": "YulTypedName",
														"src": "1240:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1250:7:10",
														"nodeType": "YulTypedName",
														"src": "1250:7:10",
														"type": ""
													}
												],
												"src": "1205:104:10"
											},
											{
												"body": {
													"nativeSrc": "1366:87:10",
													"nodeType": "YulBlock",
													"src": "1366:87:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1431:16:10",
																"nodeType": "YulBlock",
																"src": "1431:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1440:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1440:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1443:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1443:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1433:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1433:6:10"
																			},
																			"nativeSrc": "1433:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1433:12:10"
																		},
																		"nativeSrc": "1433:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1433:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1389:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1389:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1422:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1422:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "1396:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "1396:25:10"
																				},
																				"nativeSrc": "1396:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1396:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1386:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1386:2:10"
																		},
																		"nativeSrc": "1386:43:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1386:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1379:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1379:6:10"
																},
																"nativeSrc": "1379:51:10",
																"nodeType": "YulFunctionCall",
																"src": "1379:51:10"
															},
															"nativeSrc": "1376:71:10",
															"nodeType": "YulIf",
															"src": "1376:71:10"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "1315:138:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1359:5:10",
														"nodeType": "YulTypedName",
														"src": "1359:5:10",
														"type": ""
													}
												],
												"src": "1315:138:10"
											},
											{
												"body": {
													"nativeSrc": "1530:88:10",
													"nodeType": "YulBlock",
													"src": "1530:88:10",
													"statements": [
														{
															"nativeSrc": "1540:22:10",
															"nodeType": "YulAssignment",
															"src": "1540:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1555:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1555:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1549:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1549:5:10"
																},
																"nativeSrc": "1549:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1549:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1540:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1540:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1606:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1606:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "1571:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "1571:34:10"
																},
																"nativeSrc": "1571:41:10",
																"nodeType": "YulFunctionCall",
																"src": "1571:41:10"
															},
															"nativeSrc": "1571:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "1571:41:10"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nativeSrc": "1459:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1508:6:10",
														"nodeType": "YulTypedName",
														"src": "1508:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1516:3:10",
														"nodeType": "YulTypedName",
														"src": "1516:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1524:5:10",
														"nodeType": "YulTypedName",
														"src": "1524:5:10",
														"type": ""
													}
												],
												"src": "1459:159:10"
											},
											{
												"body": {
													"nativeSrc": "1683:51:10",
													"nodeType": "YulBlock",
													"src": "1683:51:10",
													"statements": [
														{
															"nativeSrc": "1693:35:10",
															"nodeType": "YulAssignment",
															"src": "1693:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1722:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1722:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1704:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1704:17:10"
																},
																"nativeSrc": "1704:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1704:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1693:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1693:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$142",
												"nativeSrc": "1624:110:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1665:5:10",
														"nodeType": "YulTypedName",
														"src": "1665:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1675:7:10",
														"nodeType": "YulTypedName",
														"src": "1675:7:10",
														"type": ""
													}
												],
												"src": "1624:110:10"
											},
											{
												"body": {
													"nativeSrc": "1797:93:10",
													"nodeType": "YulBlock",
													"src": "1797:93:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1868:16:10",
																"nodeType": "YulBlock",
																"src": "1868:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1877:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1877:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1880:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1880:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1870:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1870:6:10"
																			},
																			"nativeSrc": "1870:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1870:12:10"
																		},
																		"nativeSrc": "1870:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1870:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1820:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1820:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1859:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1859:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$142",
																					"nativeSrc": "1827:31:10",
																					"nodeType": "YulIdentifier",
																					"src": "1827:31:10"
																				},
																				"nativeSrc": "1827:38:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:38:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1817:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1817:2:10"
																		},
																		"nativeSrc": "1817:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1817:49:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1810:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1810:6:10"
																},
																"nativeSrc": "1810:57:10",
																"nodeType": "YulFunctionCall",
																"src": "1810:57:10"
															},
															"nativeSrc": "1807:77:10",
															"nodeType": "YulIf",
															"src": "1807:77:10"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$142",
												"nativeSrc": "1740:150:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1790:5:10",
														"nodeType": "YulTypedName",
														"src": "1790:5:10",
														"type": ""
													}
												],
												"src": "1740:150:10"
											},
											{
												"body": {
													"nativeSrc": "1973:94:10",
													"nodeType": "YulBlock",
													"src": "1973:94:10",
													"statements": [
														{
															"nativeSrc": "1983:22:10",
															"nodeType": "YulAssignment",
															"src": "1983:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1998:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1998:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1992:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1992:5:10"
																},
																"nativeSrc": "1992:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1992:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1983:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1983:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2055:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2055:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$142",
																	"nativeSrc": "2014:40:10",
																	"nodeType": "YulIdentifier",
																	"src": "2014:40:10"
																},
																"nativeSrc": "2014:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2014:47:10"
															},
															"nativeSrc": "2014:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2014:47:10"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$142_fromMemory",
												"nativeSrc": "1896:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1951:6:10",
														"nodeType": "YulTypedName",
														"src": "1951:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1959:3:10",
														"nodeType": "YulTypedName",
														"src": "1959:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1967:5:10",
														"nodeType": "YulTypedName",
														"src": "1967:5:10",
														"type": ""
													}
												],
												"src": "1896:171:10"
											},
											{
												"body": {
													"nativeSrc": "2223:714:10",
													"nodeType": "YulBlock",
													"src": "2223:714:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2270:83:10",
																"nodeType": "YulBlock",
																"src": "2270:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2272:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2272:77:10"
																			},
																			"nativeSrc": "2272:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2272:79:10"
																		},
																		"nativeSrc": "2272:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2272:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2244:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2244:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2253:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2253:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2240:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2240:3:10"
																		},
																		"nativeSrc": "2240:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2240:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2265:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2265:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2236:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2236:3:10"
																},
																"nativeSrc": "2236:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2236:33:10"
															},
															"nativeSrc": "2233:120:10",
															"nodeType": "YulIf",
															"src": "2233:120:10"
														},
														{
															"nativeSrc": "2363:128:10",
															"nodeType": "YulBlock",
															"src": "2363:128:10",
															"statements": [
																{
																	"nativeSrc": "2378:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2378:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2392:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2392:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2382:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2382:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2407:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2407:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2453:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2453:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2464:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2464:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2449:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2449:3:10"
																				},
																				"nativeSrc": "2449:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2449:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2473:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2473:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2417:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2417:31:10"
																		},
																		"nativeSrc": "2417:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2417:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2407:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2407:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2501:129:10",
															"nodeType": "YulBlock",
															"src": "2501:129:10",
															"statements": [
																{
																	"nativeSrc": "2516:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2516:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2530:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2530:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2520:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2520:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2546:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2546:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2592:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2592:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2603:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2603:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2588:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2588:3:10"
																				},
																				"nativeSrc": "2588:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2588:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2612:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2612:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2556:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2556:31:10"
																		},
																		"nativeSrc": "2556:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2556:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2546:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2546:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2640:137:10",
															"nodeType": "YulBlock",
															"src": "2640:137:10",
															"statements": [
																{
																	"nativeSrc": "2655:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2655:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2669:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2669:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2659:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2659:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2685:82:10",
																	"nodeType": "YulAssignment",
																	"src": "2685:82:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2739:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2739:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2750:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2750:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2735:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:10"
																				},
																				"nativeSrc": "2735:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2735:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2759:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2759:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nativeSrc": "2695:39:10",
																			"nodeType": "YulIdentifier",
																			"src": "2695:39:10"
																		},
																		"nativeSrc": "2695:72:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2695:72:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2685:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2685:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2787:143:10",
															"nodeType": "YulBlock",
															"src": "2787:143:10",
															"statements": [
																{
																	"nativeSrc": "2802:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2802:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2816:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2816:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2806:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2806:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2832:88:10",
																	"nodeType": "YulAssignment",
																	"src": "2832:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2892:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2892:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2903:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2903:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2888:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2888:3:10"
																				},
																				"nativeSrc": "2888:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2888:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2912:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2912:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$142_fromMemory",
																			"nativeSrc": "2842:45:10",
																			"nodeType": "YulIdentifier",
																			"src": "2842:45:10"
																		},
																		"nativeSrc": "2842:78:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2842:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2832:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2832:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address_payablet_contract$_IERC20_$142_fromMemory",
												"nativeSrc": "2073:864:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2169:9:10",
														"nodeType": "YulTypedName",
														"src": "2169:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2180:7:10",
														"nodeType": "YulTypedName",
														"src": "2180:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2192:6:10",
														"nodeType": "YulTypedName",
														"src": "2192:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2200:6:10",
														"nodeType": "YulTypedName",
														"src": "2200:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2208:6:10",
														"nodeType": "YulTypedName",
														"src": "2208:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2216:6:10",
														"nodeType": "YulTypedName",
														"src": "2216:6:10",
														"type": ""
													}
												],
												"src": "2073:864:10"
											},
											{
												"body": {
													"nativeSrc": "3039:73:10",
													"nodeType": "YulBlock",
													"src": "3039:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3056:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3056:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3061:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3049:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3049:6:10"
																},
																"nativeSrc": "3049:19:10",
																"nodeType": "YulFunctionCall",
																"src": "3049:19:10"
															},
															"nativeSrc": "3049:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "3049:19:10"
														},
														{
															"nativeSrc": "3077:29:10",
															"nodeType": "YulAssignment",
															"src": "3077:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3096:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3096:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3101:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3101:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3092:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3092:3:10"
																},
																"nativeSrc": "3092:14:10",
																"nodeType": "YulFunctionCall",
																"src": "3092:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3077:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "3077:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2943:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3011:3:10",
														"nodeType": "YulTypedName",
														"src": "3011:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3016:6:10",
														"nodeType": "YulTypedName",
														"src": "3016:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3027:11:10",
														"nodeType": "YulTypedName",
														"src": "3027:11:10",
														"type": ""
													}
												],
												"src": "2943:169:10"
											},
											{
												"body": {
													"nativeSrc": "3224:64:10",
													"nodeType": "YulBlock",
													"src": "3224:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3246:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3246:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3254:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3254:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3242:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3242:3:10"
																		},
																		"nativeSrc": "3242:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3242:14:10"
																	},
																	{
																		"hexValue": "43726f776473616c653a20726174652069732030",
																		"kind": "string",
																		"nativeSrc": "3258:22:10",
																		"nodeType": "YulLiteral",
																		"src": "3258:22:10",
																		"type": "",
																		"value": "Crowdsale: rate is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3235:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3235:6:10"
																},
																"nativeSrc": "3235:46:10",
																"nodeType": "YulFunctionCall",
																"src": "3235:46:10"
															},
															"nativeSrc": "3235:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "3235:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
												"nativeSrc": "3118:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3216:6:10",
														"nodeType": "YulTypedName",
														"src": "3216:6:10",
														"type": ""
													}
												],
												"src": "3118:170:10"
											},
											{
												"body": {
													"nativeSrc": "3440:220:10",
													"nodeType": "YulBlock",
													"src": "3440:220:10",
													"statements": [
														{
															"nativeSrc": "3450:74:10",
															"nodeType": "YulAssignment",
															"src": "3450:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3516:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3516:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3521:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3457:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "3457:58:10"
																},
																"nativeSrc": "3457:67:10",
																"nodeType": "YulFunctionCall",
																"src": "3457:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3450:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3450:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3622:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3622:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																	"nativeSrc": "3533:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "3533:88:10"
																},
																"nativeSrc": "3533:93:10",
																"nodeType": "YulFunctionCall",
																"src": "3533:93:10"
															},
															"nativeSrc": "3533:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "3533:93:10"
														},
														{
															"nativeSrc": "3635:19:10",
															"nodeType": "YulAssignment",
															"src": "3635:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3646:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3646:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3651:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3651:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3642:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3642:3:10"
																},
																"nativeSrc": "3642:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3642:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3635:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3294:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3428:3:10",
														"nodeType": "YulTypedName",
														"src": "3428:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3436:3:10",
														"nodeType": "YulTypedName",
														"src": "3436:3:10",
														"type": ""
													}
												],
												"src": "3294:366:10"
											},
											{
												"body": {
													"nativeSrc": "3837:248:10",
													"nodeType": "YulBlock",
													"src": "3837:248:10",
													"statements": [
														{
															"nativeSrc": "3847:26:10",
															"nodeType": "YulAssignment",
															"src": "3847:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3859:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3859:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3870:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3870:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3855:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3855:3:10"
																},
																"nativeSrc": "3855:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3855:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3847:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3847:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3894:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3894:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3905:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3905:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3890:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3890:3:10"
																		},
																		"nativeSrc": "3890:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3890:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3913:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3913:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3919:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3919:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3909:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3909:3:10"
																		},
																		"nativeSrc": "3909:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3909:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3883:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3883:6:10"
																},
																"nativeSrc": "3883:47:10",
																"nodeType": "YulFunctionCall",
																"src": "3883:47:10"
															},
															"nativeSrc": "3883:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "3883:47:10"
														},
														{
															"nativeSrc": "3939:139:10",
															"nodeType": "YulAssignment",
															"src": "3939:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4073:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4073:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3947:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "3947:124:10"
																},
																"nativeSrc": "3947:131:10",
																"nodeType": "YulFunctionCall",
																"src": "3947:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3939:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3939:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3666:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3817:9:10",
														"nodeType": "YulTypedName",
														"src": "3817:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3832:4:10",
														"nodeType": "YulTypedName",
														"src": "3832:4:10",
														"type": ""
													}
												],
												"src": "3666:419:10"
											},
											{
												"body": {
													"nativeSrc": "4197:118:10",
													"nodeType": "YulBlock",
													"src": "4197:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4219:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4219:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4227:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4227:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4215:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4215:3:10"
																		},
																		"nativeSrc": "4215:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4215:14:10"
																	},
																	{
																		"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4231:34:10",
																		"nodeType": "YulLiteral",
																		"src": "4231:34:10",
																		"type": "",
																		"value": "Crowdsale: wallet is the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4208:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4208:6:10"
																},
																"nativeSrc": "4208:58:10",
																"nodeType": "YulFunctionCall",
																"src": "4208:58:10"
															},
															"nativeSrc": "4208:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "4208:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4287:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4295:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4295:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4283:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4283:3:10"
																		},
																		"nativeSrc": "4283:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4283:15:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4300:7:10",
																		"nodeType": "YulLiteral",
																		"src": "4300:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4276:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4276:6:10"
																},
																"nativeSrc": "4276:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4276:32:10"
															},
															"nativeSrc": "4276:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "4276:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
												"nativeSrc": "4091:224:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4189:6:10",
														"nodeType": "YulTypedName",
														"src": "4189:6:10",
														"type": ""
													}
												],
												"src": "4091:224:10"
											},
											{
												"body": {
													"nativeSrc": "4467:220:10",
													"nodeType": "YulBlock",
													"src": "4467:220:10",
													"statements": [
														{
															"nativeSrc": "4477:74:10",
															"nodeType": "YulAssignment",
															"src": "4477:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4543:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4543:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4548:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4548:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4484:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "4484:58:10"
																},
																"nativeSrc": "4484:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4484:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4477:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4477:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4649:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4649:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																	"nativeSrc": "4560:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "4560:88:10"
																},
																"nativeSrc": "4560:93:10",
																"nodeType": "YulFunctionCall",
																"src": "4560:93:10"
															},
															"nativeSrc": "4560:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "4560:93:10"
														},
														{
															"nativeSrc": "4662:19:10",
															"nodeType": "YulAssignment",
															"src": "4662:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4673:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4673:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4678:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4678:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4669:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4669:3:10"
																},
																"nativeSrc": "4669:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4669:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4662:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4662:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4321:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4455:3:10",
														"nodeType": "YulTypedName",
														"src": "4455:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4463:3:10",
														"nodeType": "YulTypedName",
														"src": "4463:3:10",
														"type": ""
													}
												],
												"src": "4321:366:10"
											},
											{
												"body": {
													"nativeSrc": "4864:248:10",
													"nodeType": "YulBlock",
													"src": "4864:248:10",
													"statements": [
														{
															"nativeSrc": "4874:26:10",
															"nodeType": "YulAssignment",
															"src": "4874:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4886:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4886:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4897:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4897:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4882:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4882:3:10"
																},
																"nativeSrc": "4882:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4882:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4874:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4874:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4921:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4921:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4932:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4932:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4917:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4917:3:10"
																		},
																		"nativeSrc": "4917:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4917:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4940:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4940:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4946:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4946:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:10"
																		},
																		"nativeSrc": "4936:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4910:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4910:6:10"
																},
																"nativeSrc": "4910:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4910:47:10"
															},
															"nativeSrc": "4910:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4910:47:10"
														},
														{
															"nativeSrc": "4966:139:10",
															"nodeType": "YulAssignment",
															"src": "4966:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5100:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5100:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4974:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "4974:124:10"
																},
																"nativeSrc": "4974:131:10",
																"nodeType": "YulFunctionCall",
																"src": "4974:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4966:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4966:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4693:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4844:9:10",
														"nodeType": "YulTypedName",
														"src": "4844:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4859:4:10",
														"nodeType": "YulTypedName",
														"src": "4859:4:10",
														"type": ""
													}
												],
												"src": "4693:419:10"
											},
											{
												"body": {
													"nativeSrc": "5224:117:10",
													"nodeType": "YulBlock",
													"src": "5224:117:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5246:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5246:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5254:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5254:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5242:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5242:3:10"
																		},
																		"nativeSrc": "5242:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5242:14:10"
																	},
																	{
																		"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "5258:34:10",
																		"nodeType": "YulLiteral",
																		"src": "5258:34:10",
																		"type": "",
																		"value": "Crowdsale: token is the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5235:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5235:6:10"
																},
																"nativeSrc": "5235:58:10",
																"nodeType": "YulFunctionCall",
																"src": "5235:58:10"
															},
															"nativeSrc": "5235:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "5235:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5314:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5314:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5322:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5322:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5310:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5310:3:10"
																		},
																		"nativeSrc": "5310:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5310:15:10"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "5327:6:10",
																		"nodeType": "YulLiteral",
																		"src": "5327:6:10",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5303:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5303:6:10"
																},
																"nativeSrc": "5303:31:10",
																"nodeType": "YulFunctionCall",
																"src": "5303:31:10"
															},
															"nativeSrc": "5303:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "5303:31:10"
														}
													]
												},
												"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
												"nativeSrc": "5118:223:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5216:6:10",
														"nodeType": "YulTypedName",
														"src": "5216:6:10",
														"type": ""
													}
												],
												"src": "5118:223:10"
											},
											{
												"body": {
													"nativeSrc": "5493:220:10",
													"nodeType": "YulBlock",
													"src": "5493:220:10",
													"statements": [
														{
															"nativeSrc": "5503:74:10",
															"nodeType": "YulAssignment",
															"src": "5503:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5569:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5569:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5574:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5574:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5510:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5510:58:10"
																},
																"nativeSrc": "5510:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5510:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5503:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5503:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5675:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5675:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																	"nativeSrc": "5586:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5586:88:10"
																},
																"nativeSrc": "5586:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5586:93:10"
															},
															"nativeSrc": "5586:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5586:93:10"
														},
														{
															"nativeSrc": "5688:19:10",
															"nodeType": "YulAssignment",
															"src": "5688:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5699:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5699:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5704:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5695:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5695:3:10"
																},
																"nativeSrc": "5695:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5695:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5688:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5688:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5347:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5481:3:10",
														"nodeType": "YulTypedName",
														"src": "5481:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5489:3:10",
														"nodeType": "YulTypedName",
														"src": "5489:3:10",
														"type": ""
													}
												],
												"src": "5347:366:10"
											},
											{
												"body": {
													"nativeSrc": "5890:248:10",
													"nodeType": "YulBlock",
													"src": "5890:248:10",
													"statements": [
														{
															"nativeSrc": "5900:26:10",
															"nodeType": "YulAssignment",
															"src": "5900:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5912:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5912:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5923:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5923:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5908:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5908:3:10"
																},
																"nativeSrc": "5908:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5908:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5900:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5900:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5947:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5947:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5958:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5958:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5943:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5943:3:10"
																		},
																		"nativeSrc": "5943:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5943:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5966:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5966:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5972:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5972:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5962:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5962:3:10"
																		},
																		"nativeSrc": "5962:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5962:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5936:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5936:6:10"
																},
																"nativeSrc": "5936:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5936:47:10"
															},
															"nativeSrc": "5936:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5936:47:10"
														},
														{
															"nativeSrc": "5992:139:10",
															"nodeType": "YulAssignment",
															"src": "5992:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6126:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6126:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6000:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6000:124:10"
																},
																"nativeSrc": "6000:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6000:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5992:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5992:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5719:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5870:9:10",
														"nodeType": "YulTypedName",
														"src": "5870:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5885:4:10",
														"nodeType": "YulTypedName",
														"src": "5885:4:10",
														"type": ""
													}
												],
												"src": "5719:419:10"
											},
											{
												"body": {
													"nativeSrc": "6250:133:10",
													"nodeType": "YulBlock",
													"src": "6250:133:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6272:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6272:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6280:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6280:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6268:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6268:3:10"
																		},
																		"nativeSrc": "6268:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6268:14:10"
																	},
																	{
																		"hexValue": "416c6c6f77616e636543726f776473616c653a20746f6b656e2077616c6c6574",
																		"kind": "string",
																		"nativeSrc": "6284:34:10",
																		"nodeType": "YulLiteral",
																		"src": "6284:34:10",
																		"type": "",
																		"value": "AllowanceCrowdsale: token wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6261:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6261:6:10"
																},
																"nativeSrc": "6261:58:10",
																"nodeType": "YulFunctionCall",
																"src": "6261:58:10"
															},
															"nativeSrc": "6261:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "6261:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6340:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6340:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6348:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6348:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6336:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6336:3:10"
																		},
																		"nativeSrc": "6336:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6336:15:10"
																	},
																	{
																		"hexValue": "20697320746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "6353:22:10",
																		"nodeType": "YulLiteral",
																		"src": "6353:22:10",
																		"type": "",
																		"value": " is the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6329:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6329:6:10"
																},
																"nativeSrc": "6329:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6329:47:10"
															},
															"nativeSrc": "6329:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6329:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d",
												"nativeSrc": "6144:239:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6242:6:10",
														"nodeType": "YulTypedName",
														"src": "6242:6:10",
														"type": ""
													}
												],
												"src": "6144:239:10"
											},
											{
												"body": {
													"nativeSrc": "6535:220:10",
													"nodeType": "YulBlock",
													"src": "6535:220:10",
													"statements": [
														{
															"nativeSrc": "6545:74:10",
															"nodeType": "YulAssignment",
															"src": "6545:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6611:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6611:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6616:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6616:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6552:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "6552:58:10"
																},
																"nativeSrc": "6552:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6552:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6545:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6545:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6717:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6717:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d",
																	"nativeSrc": "6628:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "6628:88:10"
																},
																"nativeSrc": "6628:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6628:93:10"
															},
															"nativeSrc": "6628:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "6628:93:10"
														},
														{
															"nativeSrc": "6730:19:10",
															"nodeType": "YulAssignment",
															"src": "6730:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6741:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6741:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6746:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6746:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6737:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6737:3:10"
																},
																"nativeSrc": "6737:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6737:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6730:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6730:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6389:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6523:3:10",
														"nodeType": "YulTypedName",
														"src": "6523:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6531:3:10",
														"nodeType": "YulTypedName",
														"src": "6531:3:10",
														"type": ""
													}
												],
												"src": "6389:366:10"
											},
											{
												"body": {
													"nativeSrc": "6932:248:10",
													"nodeType": "YulBlock",
													"src": "6932:248:10",
													"statements": [
														{
															"nativeSrc": "6942:26:10",
															"nodeType": "YulAssignment",
															"src": "6942:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6954:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6954:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6965:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6965:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6950:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6950:3:10"
																},
																"nativeSrc": "6950:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6950:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6942:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6942:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6989:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6989:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7000:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7000:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6985:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6985:3:10"
																		},
																		"nativeSrc": "6985:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6985:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7008:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7008:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7014:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7014:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7004:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7004:3:10"
																		},
																		"nativeSrc": "7004:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7004:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6978:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6978:6:10"
																},
																"nativeSrc": "6978:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6978:47:10"
															},
															"nativeSrc": "6978:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6978:47:10"
														},
														{
															"nativeSrc": "7034:139:10",
															"nodeType": "YulAssignment",
															"src": "7034:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7168:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7168:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7042:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7042:124:10"
																},
																"nativeSrc": "7042:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7042:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7034:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7034:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6761:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6912:9:10",
														"nodeType": "YulTypedName",
														"src": "6912:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6927:4:10",
														"nodeType": "YulTypedName",
														"src": "6927:4:10",
														"type": ""
													}
												],
												"src": "6761:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$142(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$142(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$142(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$142_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$142(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_address_payablet_contract$_IERC20_$142_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_contract$_IERC20_$142_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: rate is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: wallet is the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: token is the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d(memPtr) {\n\n        mstore(add(memPtr, 0), \"AllowanceCrowdsale: token wallet\")\n\n        mstore(add(memPtr, 32), \" is the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620017ce380380620017ce8339818101604052810190620000369190620003cd565b82828260015f819055505f831162000085576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007c906200049a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000f6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ed906200052e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000167576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200015e90620005c2565b60405180910390fd5b826003819055508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160362000262576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002599062000656565b60405180910390fd5b8360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000676565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002db82620002b0565b9050919050565b620002ed81620002cf565b8114620002f8575f80fd5b50565b5f815190506200030b81620002e2565b92915050565b5f819050919050565b620003258162000311565b811462000330575f80fd5b50565b5f8151905062000343816200031a565b92915050565b5f6200035582620002b0565b9050919050565b620003678162000349565b811462000372575f80fd5b50565b5f8151905062000385816200035c565b92915050565b5f6200039782620002cf565b9050919050565b620003a9816200038b565b8114620003b4575f80fd5b50565b5f81519050620003c7816200039e565b92915050565b5f805f8060808587031215620003e857620003e7620002ac565b5b5f620003f787828801620002fb565b94505060206200040a8782880162000333565b93505060406200041d8782880162000375565b92505060606200043087828801620003b7565b91505092959194509250565b5f82825260208201905092915050565b7f43726f776473616c653a207261746520697320300000000000000000000000005f82015250565b5f620004826014836200043c565b91506200048f826200044c565b602082019050919050565b5f6020820190508181035f830152620004b38162000474565b9050919050565b7f43726f776473616c653a2077616c6c657420697320746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f620005166025836200043c565b91506200052382620004ba565b604082019050919050565b5f6020820190508181035f830152620005478162000508565b9050919050565b7f43726f776473616c653a20746f6b656e20697320746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f620005aa6024836200043c565b9150620005b7826200054e565b604082019050919050565b5f6020820190508181035f830152620005db816200059c565b9050919050565b7f416c6c6f77616e636543726f776473616c653a20746f6b656e2077616c6c65745f8201527f20697320746865207a65726f2061646472657373000000000000000000000000602082015250565b5f6200063e6034836200043c565b91506200064b82620005e2565b604082019050919050565b5f6020820190508181035f8301526200066f8162000630565b9050919050565b61114a80620006845f395ff3fe608060405260043610610073575f3560e01c8063bf5839031161004d578063bf5839031461011a578063bff99c6c14610144578063ec8ac4d81461016e578063fc0c546a1461018a5761008a565b80632c4e722e1461009c5780634042b66f146100c6578063521eb273146100f05761008a565b3661008a576100886100836101b4565b6101bb565b005b61009a6100956101b4565b6101bb565b005b3480156100a7575f80fd5b506100b0610299565b6040516100bd91906109de565b60405180910390f35b3480156100d1575f80fd5b506100da6102a2565b6040516100e791906109de565b60405180910390f35b3480156100fb575f80fd5b506101046102ab565b6040516101119190610a36565b60405180910390f35b348015610125575f80fd5b5061012e6102d3565b60405161013b91906109de565b60405180910390f35b34801561014f575f80fd5b50610158610423565b6040516101659190610a6f565b60405180910390f35b61018860048036038101906101839190610ab6565b6101bb565b005b348015610195575f80fd5b5061019e61044b565b6040516101ab9190610b3c565b60405180910390f35b5f33905090565b6101c3610473565b5f3490506101d182826104c0565b5f6101db82610574565b90506101f28260045461059190919063ffffffff16565b60048190555061020283826105a6565b8273ffffffffffffffffffffffffffffffffffffffff166102216101b4565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051610268929190610b55565b60405180910390a361027a83836105b4565b6102826105b8565b61028c838361061f565b5050610296610623565b50565b5f600354905090565b5f600454905090565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f61041e6102df61044b565b73ffffffffffffffffffffffffffffffffffffffff166370a0823160055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016103389190610a6f565b602060405180830381865afa158015610353573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103779190610ba6565b61037f61044b565b73ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff1660e01b81526004016103da929190610bd1565b602060405180830381865afa1580156103f5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104199190610ba6565b61062c565b905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025f54036104b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ae90610c52565b60405180910390fd5b60025f81905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361052e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052590610ce0565b60405180910390fd5b5f8103610570576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056790610d48565b60405180910390fd5b5050565b5f61058a6003548361064490919063ffffffff16565b9050919050565b5f818361059e9190610d93565b905092915050565b6105b08282610659565b5050565b5050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f1935050505015801561061c573d5f803e3d5ffd5b50565b5050565b60015f81905550565b5f81831061063a578161063c565b825b905092915050565b5f81836106519190610dc6565b905092915050565b6106ae60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838361068861044b565b73ffffffffffffffffffffffffffffffffffffffff166106b2909392919063ffffffff16565b5050565b610735846323b872dd60e01b8585856040516024016106d393929190610e07565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061073b565b50505050565b5f61079c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108019092919063ffffffff16565b90505f815114806107bd5750808060200190518101906107bc9190610e71565b5b6107fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f390610f0c565b60405180910390fd5b505050565b606061080f84845f85610818565b90509392505050565b60608247101561085d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085490610f9a565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff1685876040516108859190611024565b5f6040518083038185875af1925050503d805f81146108bf576040519150601f19603f3d011682016040523d82523d5f602084013e6108c4565b606091505b50915091506108d5878383876108e1565b92505050949350505050565b60608315610942575f83510361093a576108fa85610955565b610939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093090611084565b60405180910390fd5b5b82905061094d565b61094c8383610977565b5b949350505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f825111156109895781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bd91906110f4565b60405180910390fd5b5f819050919050565b6109d8816109c6565b82525050565b5f6020820190506109f15f8301846109cf565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a20826109f7565b9050919050565b610a3081610a16565b82525050565b5f602082019050610a495f830184610a27565b92915050565b5f610a59826109f7565b9050919050565b610a6981610a4f565b82525050565b5f602082019050610a825f830184610a60565b92915050565b5f80fd5b610a9581610a4f565b8114610a9f575f80fd5b50565b5f81359050610ab081610a8c565b92915050565b5f60208284031215610acb57610aca610a88565b5b5f610ad884828501610aa2565b91505092915050565b5f819050919050565b5f610b04610aff610afa846109f7565b610ae1565b6109f7565b9050919050565b5f610b1582610aea565b9050919050565b5f610b2682610b0b565b9050919050565b610b3681610b1c565b82525050565b5f602082019050610b4f5f830184610b2d565b92915050565b5f604082019050610b685f8301856109cf565b610b7560208301846109cf565b9392505050565b610b85816109c6565b8114610b8f575f80fd5b50565b5f81519050610ba081610b7c565b92915050565b5f60208284031215610bbb57610bba610a88565b5b5f610bc884828501610b92565b91505092915050565b5f604082019050610be45f830185610a60565b610bf16020830184610a60565b9392505050565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610c3c601f83610bf8565b9150610c4782610c08565b602082019050919050565b5f6020820190508181035f830152610c6981610c30565b9050919050565b7f43726f776473616c653a2062656e656669636961727920697320746865207a655f8201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b5f610cca602a83610bf8565b9150610cd582610c70565b604082019050919050565b5f6020820190508181035f830152610cf781610cbe565b9050919050565b7f43726f776473616c653a20776569416d6f756e742069732030000000000000005f82015250565b5f610d32601983610bf8565b9150610d3d82610cfe565b602082019050919050565b5f6020820190508181035f830152610d5f81610d26565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d9d826109c6565b9150610da8836109c6565b9250828201905080821115610dc057610dbf610d66565b5b92915050565b5f610dd0826109c6565b9150610ddb836109c6565b9250828202610de9816109c6565b91508282048414831517610e0057610dff610d66565b5b5092915050565b5f606082019050610e1a5f830186610a60565b610e276020830185610a60565b610e3460408301846109cf565b949350505050565b5f8115159050919050565b610e5081610e3c565b8114610e5a575f80fd5b50565b5f81519050610e6b81610e47565b92915050565b5f60208284031215610e8657610e85610a88565b5b5f610e9384828501610e5d565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f610ef6602a83610bf8565b9150610f0182610e9c565b604082019050919050565b5f6020820190508181035f830152610f2381610eea565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f610f84602683610bf8565b9150610f8f82610f2a565b604082019050919050565b5f6020820190508181035f830152610fb181610f78565b9050919050565b5f81519050919050565b5f81905092915050565b5f5b83811015610fe9578082015181840152602081019050610fce565b5f8484015250505050565b5f610ffe82610fb8565b6110088185610fc2565b9350611018818560208601610fcc565b80840191505092915050565b5f61102f8284610ff4565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f61106e601d83610bf8565b91506110798261103a565b602082019050919050565b5f6020820190508181035f83015261109b81611062565b9050919050565b5f81519050919050565b5f601f19601f8301169050919050565b5f6110c6826110a2565b6110d08185610bf8565b93506110e0818560208601610fcc565b6110e9816110ac565b840191505092915050565b5f6020820190508181035f83015261110c81846110bc565b90509291505056fea2646970667358221220f2a44e98626d3cacd8409f8c811b446fc29db1d6b3ba57dad8664784ad8014bd64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17CE CODESIZE SUB DUP1 PUSH3 0x17CE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x3CD JUMP JUMPDEST DUP3 DUP3 DUP3 PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 DUP4 GT PUSH3 0x85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7C SWAP1 PUSH3 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xED SWAP1 PUSH3 0x52E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x167 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x15E SWAP1 PUSH3 0x5C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x262 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x259 SWAP1 PUSH3 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x676 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2DB DUP3 PUSH3 0x2B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2ED DUP2 PUSH3 0x2CF JUMP JUMPDEST DUP2 EQ PUSH3 0x2F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x30B DUP2 PUSH3 0x2E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x325 DUP2 PUSH3 0x311 JUMP JUMPDEST DUP2 EQ PUSH3 0x330 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x343 DUP2 PUSH3 0x31A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x355 DUP3 PUSH3 0x2B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x367 DUP2 PUSH3 0x349 JUMP JUMPDEST DUP2 EQ PUSH3 0x372 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x385 DUP2 PUSH3 0x35C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x397 DUP3 PUSH3 0x2CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3A9 DUP2 PUSH3 0x38B JUMP JUMPDEST DUP2 EQ PUSH3 0x3B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x3C7 DUP2 PUSH3 0x39E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x3E8 JUMPI PUSH3 0x3E7 PUSH3 0x2AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x3F7 DUP8 DUP3 DUP9 ADD PUSH3 0x2FB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x40A DUP8 DUP3 DUP9 ADD PUSH3 0x333 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x41D DUP8 DUP3 DUP9 ADD PUSH3 0x375 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x430 DUP8 DUP3 DUP9 ADD PUSH3 0x3B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20726174652069732030000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x482 PUSH1 0x14 DUP4 PUSH3 0x43C JUMP JUMPDEST SWAP2 POP PUSH3 0x48F DUP3 PUSH3 0x44C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x4B3 DUP2 PUSH3 0x474 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2077616C6C657420697320746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x516 PUSH1 0x25 DUP4 PUSH3 0x43C JUMP JUMPDEST SWAP2 POP PUSH3 0x523 DUP3 PUSH3 0x4BA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x547 DUP2 PUSH3 0x508 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20746F6B656E20697320746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x5AA PUSH1 0x24 DUP4 PUSH3 0x43C JUMP JUMPDEST SWAP2 POP PUSH3 0x5B7 DUP3 PUSH3 0x54E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x5DB DUP2 PUSH3 0x59C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C6C6F77616E636543726F776473616C653A20746F6B656E2077616C6C6574 PUSH0 DUP3 ADD MSTORE PUSH32 0x20697320746865207A65726F2061646472657373000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x63E PUSH1 0x34 DUP4 PUSH3 0x43C JUMP JUMPDEST SWAP2 POP PUSH3 0x64B DUP3 PUSH3 0x5E2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x66F DUP2 PUSH3 0x630 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x114A DUP1 PUSH3 0x684 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x73 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBF583903 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0xBF583903 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xBFF99C6C EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x18A JUMPI PUSH2 0x8A JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0xF0 JUMPI PUSH2 0x8A JUMP JUMPDEST CALLDATASIZE PUSH2 0x8A JUMPI PUSH2 0x88 PUSH2 0x83 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0x95 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x2A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x104 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xAB6 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x473 JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x4C0 JUMP JUMPDEST PUSH0 PUSH2 0x1DB DUP3 PUSH2 0x574 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F2 DUP3 PUSH1 0x4 SLOAD PUSH2 0x591 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x202 DUP4 DUP3 PUSH2 0x5A6 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x221 PUSH2 0x1B4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x268 SWAP3 SWAP2 SWAP1 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x27A DUP4 DUP4 PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x282 PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x28C DUP4 DUP4 PUSH2 0x61F JUMP JUMPDEST POP POP PUSH2 0x296 PUSH2 0x623 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x41E PUSH2 0x2DF PUSH2 0x44B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x353 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x37F PUSH2 0x44B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DA SWAP3 SWAP2 SWAP1 PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AE SWAP1 PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x52E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP1 PUSH2 0xCE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x58A PUSH1 0x3 SLOAD DUP4 PUSH2 0x644 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B0 DUP3 DUP3 PUSH2 0x659 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x61C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x63A JUMPI DUP2 PUSH2 0x63C JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x651 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6AE PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH2 0x688 PUSH2 0x44B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6B2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x735 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x73B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x79C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x801 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x7BD JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7BC SWAP2 SWAP1 PUSH2 0xE71 JUMP JUMPDEST JUMPDEST PUSH2 0x7FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F3 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x80F DUP5 DUP5 PUSH0 DUP6 PUSH2 0x818 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x854 SWAP1 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x885 SWAP2 SWAP1 PUSH2 0x1024 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x8BF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x8D5 DUP8 DUP4 DUP4 DUP8 PUSH2 0x8E1 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x942 JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x93A JUMPI PUSH2 0x8FA DUP6 PUSH2 0x955 JUMP JUMPDEST PUSH2 0x939 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x930 SWAP1 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x94D JUMP JUMPDEST PUSH2 0x94C DUP4 DUP4 PUSH2 0x977 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x989 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D8 DUP2 PUSH2 0x9C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x9CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA20 DUP3 PUSH2 0x9F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA30 DUP2 PUSH2 0xA16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA49 PUSH0 DUP4 ADD DUP5 PUSH2 0xA27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA59 DUP3 PUSH2 0x9F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA69 DUP2 PUSH2 0xA4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA82 PUSH0 DUP4 ADD DUP5 PUSH2 0xA60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA95 DUP2 PUSH2 0xA4F JUMP JUMPDEST DUP2 EQ PUSH2 0xA9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAB0 DUP2 PUSH2 0xA8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xACB JUMPI PUSH2 0xACA PUSH2 0xA88 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAD8 DUP5 DUP3 DUP6 ADD PUSH2 0xAA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB04 PUSH2 0xAFF PUSH2 0xAFA DUP5 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB15 DUP3 PUSH2 0xAEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB26 DUP3 PUSH2 0xB0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB36 DUP2 PUSH2 0xB1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB4F PUSH0 DUP4 ADD DUP5 PUSH2 0xB2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB68 PUSH0 DUP4 ADD DUP6 PUSH2 0x9CF JUMP JUMPDEST PUSH2 0xB75 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB85 DUP2 PUSH2 0x9C6 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBA0 DUP2 PUSH2 0xB7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBB JUMPI PUSH2 0xBBA PUSH2 0xA88 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBC8 DUP5 DUP3 DUP6 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBE4 PUSH0 DUP4 ADD DUP6 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xBF1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA60 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC3C PUSH1 0x1F DUP4 PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC47 DUP3 PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC69 DUP2 PUSH2 0xC30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCCA PUSH1 0x2A DUP4 PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD5 DUP3 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCF7 DUP2 PUSH2 0xCBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD32 PUSH1 0x19 DUP4 PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xD3D DUP3 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD5F DUP2 PUSH2 0xD26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD9D DUP3 PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP PUSH2 0xDA8 DUP4 PUSH2 0x9C6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDC0 JUMPI PUSH2 0xDBF PUSH2 0xD66 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDD0 DUP3 PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDB DUP4 PUSH2 0x9C6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xDE9 DUP2 PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE00 JUMPI PUSH2 0xDFF PUSH2 0xD66 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE1A PUSH0 DUP4 ADD DUP7 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xE27 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xE34 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9CF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xE3C JUMP JUMPDEST DUP2 EQ PUSH2 0xE5A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE6B DUP2 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE86 JUMPI PUSH2 0xE85 PUSH2 0xA88 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE93 DUP5 DUP3 DUP6 ADD PUSH2 0xE5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEF6 PUSH1 0x2A DUP4 PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xF01 DUP3 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF23 DUP2 PUSH2 0xEEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF84 PUSH1 0x26 DUP4 PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8F DUP3 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFB1 DUP2 PUSH2 0xF78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFE9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFCE JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFE DUP3 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0x1008 DUP2 DUP6 PUSH2 0xFC2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1018 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFCC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x102F DUP3 DUP5 PUSH2 0xFF4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x106E PUSH1 0x1D DUP4 PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1079 DUP3 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x109B DUP2 PUSH2 0x1062 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10C6 DUP3 PUSH2 0x10A2 JUMP JUMPDEST PUSH2 0x10D0 DUP2 DUP6 PUSH2 0xBF8 JUMP JUMPDEST SWAP4 POP PUSH2 0x10E0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x10E9 DUP2 PUSH2 0x10AC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x110C DUP2 DUP5 PUSH2 0x10BC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE LOG4 0x4E SWAP9 PUSH3 0x6D3CAC 0xD8 BLOCKHASH SWAP16 DUP13 DUP2 SHL PREVRANDAO PUSH16 0xC29DB1D6B3BA57DAD8664784AD8014BD PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "487:1625:9:-:0;;;926:314;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:6;1071:8;1081:7;1716:1:0;1821:7;:22;;;;2644:1:8;2635:6;:10;2627:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;2709:1;2689:22;;:8;:22;;;2681:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2800:1;2772:30;;2780:7;2772:30;;;2764:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2864:6;2856:5;:14;;;;2891:8;2881:7;;:18;;;;;;;;;;;;;;;;;;2919:7;2910:6;;:16;;;;;;;;;;;;;;;;;;2545:389;;;1134:1:9::1;1109:27;;:13;:27;;::::0;1101:92:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1219:13;1204:12;;:28;;;;;;;;;;;;;;;;;;926:314:::0;;;;487:1625;;88:117:10;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:104::-;1250:7;1279:24;1297:5;1279:24;:::i;:::-;1268:35;;1205:104;;;:::o;1315:138::-;1396:32;1422:5;1396:32;:::i;:::-;1389:5;1386:43;1376:71;;1443:1;1440;1433:12;1376:71;1315:138;:::o;1459:159::-;1524:5;1555:6;1549:13;1540:22;;1571:41;1606:5;1571:41;:::i;:::-;1459:159;;;;:::o;1624:110::-;1675:7;1704:24;1722:5;1704:24;:::i;:::-;1693:35;;1624:110;;;:::o;1740:150::-;1827:38;1859:5;1827:38;:::i;:::-;1820:5;1817:49;1807:77;;1880:1;1877;1870:12;1807:77;1740:150;:::o;1896:171::-;1967:5;1998:6;1992:13;1983:22;;2014:47;2055:5;2014:47;:::i;:::-;1896:171;;;;:::o;2073:864::-;2192:6;2200;2208;2216;2265:3;2253:9;2244:7;2240:23;2236:33;2233:120;;;2272:79;;:::i;:::-;2233:120;2392:1;2417:64;2473:7;2464:6;2453:9;2449:22;2417:64;:::i;:::-;2407:74;;2363:128;2530:2;2556:64;2612:7;2603:6;2592:9;2588:22;2556:64;:::i;:::-;2546:74;;2501:129;2669:2;2695:72;2759:7;2750:6;2739:9;2735:22;2695:72;:::i;:::-;2685:82;;2640:137;2816:2;2842:78;2912:7;2903:6;2892:9;2888:22;2842:78;:::i;:::-;2832:88;;2787:143;2073:864;;;;;;;:::o;2943:169::-;3027:11;3061:6;3056:3;3049:19;3101:4;3096:3;3092:14;3077:29;;2943:169;;;;:::o;3118:170::-;3258:22;3254:1;3246:6;3242:14;3235:46;3118:170;:::o;3294:366::-;3436:3;3457:67;3521:2;3516:3;3457:67;:::i;:::-;3450:74;;3533:93;3622:3;3533:93;:::i;:::-;3651:2;3646:3;3642:12;3635:19;;3294:366;;;:::o;3666:419::-;3832:4;3870:2;3859:9;3855:18;3847:26;;3919:9;3913:4;3909:20;3905:1;3894:9;3890:17;3883:47;3947:131;4073:4;3947:131;:::i;:::-;3939:139;;3666:419;;;:::o;4091:224::-;4231:34;4227:1;4219:6;4215:14;4208:58;4300:7;4295:2;4287:6;4283:15;4276:32;4091:224;:::o;4321:366::-;4463:3;4484:67;4548:2;4543:3;4484:67;:::i;:::-;4477:74;;4560:93;4649:3;4560:93;:::i;:::-;4678:2;4673:3;4669:12;4662:19;;4321:366;;;:::o;4693:419::-;4859:4;4897:2;4886:9;4882:18;4874:26;;4946:9;4940:4;4936:20;4932:1;4921:9;4917:17;4910:47;4974:131;5100:4;4974:131;:::i;:::-;4966:139;;4693:419;;;:::o;5118:223::-;5258:34;5254:1;5246:6;5242:14;5235:58;5327:6;5322:2;5314:6;5310:15;5303:31;5118:223;:::o;5347:366::-;5489:3;5510:67;5574:2;5569:3;5510:67;:::i;:::-;5503:74;;5586:93;5675:3;5586:93;:::i;:::-;5704:2;5699:3;5695:12;5688:19;;5347:366;;;:::o;5719:419::-;5885:4;5923:2;5912:9;5908:18;5900:26;;5972:9;5966:4;5962:20;5958:1;5947:9;5943:17;5936:47;6000:131;6126:4;6000:131;:::i;:::-;5992:139;;5719:419;;;:::o;6144:239::-;6284:34;6280:1;6272:6;6268:14;6261:58;6353:22;6348:2;6340:6;6336:15;6329:47;6144:239;:::o;6389:366::-;6531:3;6552:67;6616:2;6611:3;6552:67;:::i;:::-;6545:74;;6628:93;6717:3;6628:93;:::i;:::-;6746:2;6741:3;6737:12;6730:19;;6389:366;;;:::o;6761:419::-;6927:4;6965:2;6954:9;6950:18;6942:26;;7014:9;7008:4;7004:20;7000:1;6989:9;6985:17;6978:47;7042:131;7168:4;7042:131;:::i;:::-;7034:139;;6761:419;;;:::o;487:1625:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_2187": {
									"entryPoint": null,
									"id": 2187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2196": {
									"entryPoint": null,
									"id": 2196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_505": {
									"entryPoint": 1851,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_deliverTokens_2498": {
									"entryPoint": 1625,
									"id": 2498,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_forwardFunds_2393": {
									"entryPoint": 1464,
									"id": 2393,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTokenAmount_2381": {
									"entryPoint": 1396,
									"id": 2381,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_896": {
									"entryPoint": 436,
									"id": 896,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_52": {
									"entryPoint": 1571,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 1139,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_postValidatePurchase_2328": {
									"entryPoint": 1567,
									"id": 2328,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_2319": {
									"entryPoint": 1216,
									"id": 2319,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_processPurchase_2358": {
									"entryPoint": 1446,
									"id": 2358,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_883": {
									"entryPoint": 2423,
									"id": 883,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_updatePurchasingState_2367": {
									"entryPoint": 1460,
									"id": 2367,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_1948": {
									"entryPoint": 1425,
									"id": 1948,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@buyTokens_2291": {
									"entryPoint": 443,
									"id": 2291,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_708": {
									"entryPoint": 2072,
									"id": 708,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_644": {
									"entryPoint": 2049,
									"id": 644,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_572": {
									"entryPoint": 2389,
									"id": 572,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@min_949": {
									"entryPoint": 1580,
									"id": 949,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_1978": {
									"entryPoint": 1604,
									"id": 1978,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@rate_2224": {
									"entryPoint": 665,
									"id": 2224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remainingTokens_2480": {
									"entryPoint": 723,
									"id": 2480,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_238": {
									"entryPoint": 1714,
									"id": 238,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@tokenWallet_2455": {
									"entryPoint": 1059,
									"id": 2455,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@token_2206": {
									"entryPoint": 1099,
									"id": 2206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_839": {
									"entryPoint": 2273,
									"id": 839,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@wallet_2215": {
									"entryPoint": 683,
									"id": 2215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@weiRaised_2233": {
									"entryPoint": 674,
									"id": 2233,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 2599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack": {
									"entryPoint": 2861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 2614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 3025,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3591,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed": {
									"entryPoint": 2876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2901,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 2582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$142_to_t_address": {
									"entryPoint": 2844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4044,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3430,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2696,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 3882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e": {
									"entryPoint": 3184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 4154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 3740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c": {
									"entryPoint": 3326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14964:10",
										"nodeType": "YulBlock",
										"src": "0:14964:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:10",
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nativeSrc": "62:16:10",
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:10",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nativeSrc": "155:53:10",
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nativeSrc": "177:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nativeSrc": "165:37:10",
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nativeSrc": "165:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:10",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:10",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nativeSrc": "312:124:10",
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nativeSrc": "322:26:10",
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:10",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nativeSrc": "330:18:10",
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:10",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nativeSrc": "411:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nativeSrc": "358:71:10",
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nativeSrc": "358:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:10",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:10",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:10",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nativeSrc": "487:81:10",
													"nodeType": "YulBlock",
													"src": "487:81:10",
													"statements": [
														{
															"nativeSrc": "497:65:10",
															"nodeType": "YulAssignment",
															"src": "497:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "512:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "519:42:10",
																		"nodeType": "YulLiteral",
																		"src": "519:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "508:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:10"
																},
																"nativeSrc": "508:54:10",
																"nodeType": "YulFunctionCall",
																"src": "508:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "497:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "442:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "469:5:10",
														"nodeType": "YulTypedName",
														"src": "469:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "479:7:10",
														"nodeType": "YulTypedName",
														"src": "479:7:10",
														"type": ""
													}
												],
												"src": "442:126:10"
											},
											{
												"body": {
													"nativeSrc": "627:51:10",
													"nodeType": "YulBlock",
													"src": "627:51:10",
													"statements": [
														{
															"nativeSrc": "637:35:10",
															"nodeType": "YulAssignment",
															"src": "637:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "648:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:10"
																},
																"nativeSrc": "648:24:10",
																"nodeType": "YulFunctionCall",
																"src": "648:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "574:104:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:10",
														"nodeType": "YulTypedName",
														"src": "609:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:10",
														"nodeType": "YulTypedName",
														"src": "619:7:10",
														"type": ""
													}
												],
												"src": "574:104:10"
											},
											{
												"body": {
													"nativeSrc": "765:61:10",
													"nodeType": "YulBlock",
													"src": "765:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "782:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "782:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "813:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "813:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "787:25:10",
																			"nodeType": "YulIdentifier",
																			"src": "787:25:10"
																		},
																		"nativeSrc": "787:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "787:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "775:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "775:6:10"
																},
																"nativeSrc": "775:45:10",
																"nodeType": "YulFunctionCall",
																"src": "775:45:10"
															},
															"nativeSrc": "775:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "775:45:10"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nativeSrc": "684:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "760:3:10",
														"nodeType": "YulTypedName",
														"src": "760:3:10",
														"type": ""
													}
												],
												"src": "684:142:10"
											},
											{
												"body": {
													"nativeSrc": "946:140:10",
													"nodeType": "YulBlock",
													"src": "946:140:10",
													"statements": [
														{
															"nativeSrc": "956:26:10",
															"nodeType": "YulAssignment",
															"src": "956:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "968:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "968:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "979:2:10",
																		"nodeType": "YulLiteral",
																		"src": "979:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "964:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "964:3:10"
																},
																"nativeSrc": "964:18:10",
																"nodeType": "YulFunctionCall",
																"src": "964:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "956:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "956:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1052:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1052:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1065:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1065:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1076:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1076:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1061:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:10"
																		},
																		"nativeSrc": "1061:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1061:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nativeSrc": "992:59:10",
																	"nodeType": "YulIdentifier",
																	"src": "992:59:10"
																},
																"nativeSrc": "992:87:10",
																"nodeType": "YulFunctionCall",
																"src": "992:87:10"
															},
															"nativeSrc": "992:87:10",
															"nodeType": "YulExpressionStatement",
															"src": "992:87:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nativeSrc": "832:254:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "918:9:10",
														"nodeType": "YulTypedName",
														"src": "918:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "930:6:10",
														"nodeType": "YulTypedName",
														"src": "930:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "941:4:10",
														"nodeType": "YulTypedName",
														"src": "941:4:10",
														"type": ""
													}
												],
												"src": "832:254:10"
											},
											{
												"body": {
													"nativeSrc": "1137:51:10",
													"nodeType": "YulBlock",
													"src": "1137:51:10",
													"statements": [
														{
															"nativeSrc": "1147:35:10",
															"nodeType": "YulAssignment",
															"src": "1147:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1176:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1176:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1158:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1158:17:10"
																},
																"nativeSrc": "1158:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1158:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1147:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1147:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1092:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1119:5:10",
														"nodeType": "YulTypedName",
														"src": "1119:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1129:7:10",
														"nodeType": "YulTypedName",
														"src": "1129:7:10",
														"type": ""
													}
												],
												"src": "1092:96:10"
											},
											{
												"body": {
													"nativeSrc": "1259:53:10",
													"nodeType": "YulBlock",
													"src": "1259:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1276:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1276:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1299:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1299:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1281:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1281:17:10"
																		},
																		"nativeSrc": "1281:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1281:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1269:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1269:6:10"
																},
																"nativeSrc": "1269:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1269:37:10"
															},
															"nativeSrc": "1269:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1269:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1194:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1247:5:10",
														"nodeType": "YulTypedName",
														"src": "1247:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1254:3:10",
														"nodeType": "YulTypedName",
														"src": "1254:3:10",
														"type": ""
													}
												],
												"src": "1194:118:10"
											},
											{
												"body": {
													"nativeSrc": "1416:124:10",
													"nodeType": "YulBlock",
													"src": "1416:124:10",
													"statements": [
														{
															"nativeSrc": "1426:26:10",
															"nodeType": "YulAssignment",
															"src": "1426:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1438:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1438:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1449:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1449:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1434:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1434:3:10"
																},
																"nativeSrc": "1434:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1434:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1426:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1426:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1506:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1506:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1519:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1519:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1530:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1530:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1515:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1515:3:10"
																		},
																		"nativeSrc": "1515:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1515:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1462:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1462:43:10"
																},
																"nativeSrc": "1462:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1462:71:10"
															},
															"nativeSrc": "1462:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1462:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1318:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1388:9:10",
														"nodeType": "YulTypedName",
														"src": "1388:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1400:6:10",
														"nodeType": "YulTypedName",
														"src": "1400:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1411:4:10",
														"nodeType": "YulTypedName",
														"src": "1411:4:10",
														"type": ""
													}
												],
												"src": "1318:222:10"
											},
											{
												"body": {
													"nativeSrc": "1586:35:10",
													"nodeType": "YulBlock",
													"src": "1586:35:10",
													"statements": [
														{
															"nativeSrc": "1596:19:10",
															"nodeType": "YulAssignment",
															"src": "1596:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1612:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1612:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1606:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1606:5:10"
																},
																"nativeSrc": "1606:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1606:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1596:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1596:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1546:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1579:6:10",
														"nodeType": "YulTypedName",
														"src": "1579:6:10",
														"type": ""
													}
												],
												"src": "1546:75:10"
											},
											{
												"body": {
													"nativeSrc": "1716:28:10",
													"nodeType": "YulBlock",
													"src": "1716:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1733:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1733:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1736:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1736:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1726:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1726:6:10"
																},
																"nativeSrc": "1726:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1726:12:10"
															},
															"nativeSrc": "1726:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1726:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1627:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1627:117:10"
											},
											{
												"body": {
													"nativeSrc": "1839:28:10",
													"nodeType": "YulBlock",
													"src": "1839:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1856:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1856:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1859:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1859:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1849:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1849:6:10"
																},
																"nativeSrc": "1849:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1849:12:10"
															},
															"nativeSrc": "1849:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1849:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1750:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1750:117:10"
											},
											{
												"body": {
													"nativeSrc": "1916:79:10",
													"nodeType": "YulBlock",
													"src": "1916:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1973:16:10",
																"nodeType": "YulBlock",
																"src": "1973:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1982:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1982:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1985:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1985:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1975:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1975:6:10"
																			},
																			"nativeSrc": "1975:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1975:12:10"
																		},
																		"nativeSrc": "1975:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1975:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1939:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1939:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1964:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1964:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1946:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1946:17:10"
																				},
																				"nativeSrc": "1946:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1946:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1936:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1936:2:10"
																		},
																		"nativeSrc": "1936:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1936:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1929:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1929:6:10"
																},
																"nativeSrc": "1929:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1929:43:10"
															},
															"nativeSrc": "1926:63:10",
															"nodeType": "YulIf",
															"src": "1926:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1873:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1909:5:10",
														"nodeType": "YulTypedName",
														"src": "1909:5:10",
														"type": ""
													}
												],
												"src": "1873:122:10"
											},
											{
												"body": {
													"nativeSrc": "2053:87:10",
													"nodeType": "YulBlock",
													"src": "2053:87:10",
													"statements": [
														{
															"nativeSrc": "2063:29:10",
															"nodeType": "YulAssignment",
															"src": "2063:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2085:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2085:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2072:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2072:12:10"
																},
																"nativeSrc": "2072:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2072:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2063:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2063:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2128:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2128:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2101:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2101:26:10"
																},
																"nativeSrc": "2101:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2101:33:10"
															},
															"nativeSrc": "2101:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2101:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2001:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2031:6:10",
														"nodeType": "YulTypedName",
														"src": "2031:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2039:3:10",
														"nodeType": "YulTypedName",
														"src": "2039:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2047:5:10",
														"nodeType": "YulTypedName",
														"src": "2047:5:10",
														"type": ""
													}
												],
												"src": "2001:139:10"
											},
											{
												"body": {
													"nativeSrc": "2212:263:10",
													"nodeType": "YulBlock",
													"src": "2212:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2258:83:10",
																"nodeType": "YulBlock",
																"src": "2258:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2260:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2260:77:10"
																			},
																			"nativeSrc": "2260:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2260:79:10"
																		},
																		"nativeSrc": "2260:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2260:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2233:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2233:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2242:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2242:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2229:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2229:3:10"
																		},
																		"nativeSrc": "2229:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2229:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2254:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2254:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2225:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2225:3:10"
																},
																"nativeSrc": "2225:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2225:32:10"
															},
															"nativeSrc": "2222:119:10",
															"nodeType": "YulIf",
															"src": "2222:119:10"
														},
														{
															"nativeSrc": "2351:117:10",
															"nodeType": "YulBlock",
															"src": "2351:117:10",
															"statements": [
																{
																	"nativeSrc": "2366:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2366:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2380:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2380:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2370:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2370:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2395:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2395:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2430:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2430:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2441:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2441:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2426:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2426:3:10"
																				},
																				"nativeSrc": "2426:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2426:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2450:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2450:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2405:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2405:20:10"
																		},
																		"nativeSrc": "2405:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2405:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2395:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2395:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2146:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2182:9:10",
														"nodeType": "YulTypedName",
														"src": "2182:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2193:7:10",
														"nodeType": "YulTypedName",
														"src": "2193:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2205:6:10",
														"nodeType": "YulTypedName",
														"src": "2205:6:10",
														"type": ""
													}
												],
												"src": "2146:329:10"
											},
											{
												"body": {
													"nativeSrc": "2513:28:10",
													"nodeType": "YulBlock",
													"src": "2513:28:10",
													"statements": [
														{
															"nativeSrc": "2523:12:10",
															"nodeType": "YulAssignment",
															"src": "2523:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "2530:5:10",
																"nodeType": "YulIdentifier",
																"src": "2530:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2523:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2523:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2481:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2499:5:10",
														"nodeType": "YulTypedName",
														"src": "2499:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2509:3:10",
														"nodeType": "YulTypedName",
														"src": "2509:3:10",
														"type": ""
													}
												],
												"src": "2481:60:10"
											},
											{
												"body": {
													"nativeSrc": "2607:82:10",
													"nodeType": "YulBlock",
													"src": "2607:82:10",
													"statements": [
														{
															"nativeSrc": "2617:66:10",
															"nodeType": "YulAssignment",
															"src": "2617:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2675:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2675:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2657:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2657:17:10"
																				},
																				"nativeSrc": "2657:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2657:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2648:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "2648:8:10"
																		},
																		"nativeSrc": "2648:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2648:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2630:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2630:17:10"
																},
																"nativeSrc": "2630:53:10",
																"nodeType": "YulFunctionCall",
																"src": "2630:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2617:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2617:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2547:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2587:5:10",
														"nodeType": "YulTypedName",
														"src": "2587:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2597:9:10",
														"nodeType": "YulTypedName",
														"src": "2597:9:10",
														"type": ""
													}
												],
												"src": "2547:142:10"
											},
											{
												"body": {
													"nativeSrc": "2755:66:10",
													"nodeType": "YulBlock",
													"src": "2755:66:10",
													"statements": [
														{
															"nativeSrc": "2765:50:10",
															"nodeType": "YulAssignment",
															"src": "2765:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2809:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2809:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2778:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2778:30:10"
																},
																"nativeSrc": "2778:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2778:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2765:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2765:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2695:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2735:5:10",
														"nodeType": "YulTypedName",
														"src": "2735:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2745:9:10",
														"nodeType": "YulTypedName",
														"src": "2745:9:10",
														"type": ""
													}
												],
												"src": "2695:126:10"
											},
											{
												"body": {
													"nativeSrc": "2901:66:10",
													"nodeType": "YulBlock",
													"src": "2901:66:10",
													"statements": [
														{
															"nativeSrc": "2911:50:10",
															"nodeType": "YulAssignment",
															"src": "2911:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2955:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2955:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2924:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2924:30:10"
																},
																"nativeSrc": "2924:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2924:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2911:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2911:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$142_to_t_address",
												"nativeSrc": "2827:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2881:5:10",
														"nodeType": "YulTypedName",
														"src": "2881:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2891:9:10",
														"nodeType": "YulTypedName",
														"src": "2891:9:10",
														"type": ""
													}
												],
												"src": "2827:140:10"
											},
											{
												"body": {
													"nativeSrc": "3052:80:10",
													"nodeType": "YulBlock",
													"src": "3052:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3069:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3069:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3119:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3119:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$142_to_t_address",
																			"nativeSrc": "3074:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "3074:44:10"
																		},
																		"nativeSrc": "3074:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3074:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3062:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3062:6:10"
																},
																"nativeSrc": "3062:64:10",
																"nodeType": "YulFunctionCall",
																"src": "3062:64:10"
															},
															"nativeSrc": "3062:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "3062:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
												"nativeSrc": "2973:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3040:5:10",
														"nodeType": "YulTypedName",
														"src": "3040:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3047:3:10",
														"nodeType": "YulTypedName",
														"src": "3047:3:10",
														"type": ""
													}
												],
												"src": "2973:159:10"
											},
											{
												"body": {
													"nativeSrc": "3250:138:10",
													"nodeType": "YulBlock",
													"src": "3250:138:10",
													"statements": [
														{
															"nativeSrc": "3260:26:10",
															"nodeType": "YulAssignment",
															"src": "3260:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3272:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3272:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3283:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3283:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3268:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3268:3:10"
																},
																"nativeSrc": "3268:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3268:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3260:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3260:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3354:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3354:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3367:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3367:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3378:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3378:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3363:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3363:3:10"
																		},
																		"nativeSrc": "3363:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3363:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
																	"nativeSrc": "3296:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "3296:57:10"
																},
																"nativeSrc": "3296:85:10",
																"nodeType": "YulFunctionCall",
																"src": "3296:85:10"
															},
															"nativeSrc": "3296:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "3296:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed",
												"nativeSrc": "3138:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3222:9:10",
														"nodeType": "YulTypedName",
														"src": "3222:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3234:6:10",
														"nodeType": "YulTypedName",
														"src": "3234:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3245:4:10",
														"nodeType": "YulTypedName",
														"src": "3245:4:10",
														"type": ""
													}
												],
												"src": "3138:250:10"
											},
											{
												"body": {
													"nativeSrc": "3520:206:10",
													"nodeType": "YulBlock",
													"src": "3520:206:10",
													"statements": [
														{
															"nativeSrc": "3530:26:10",
															"nodeType": "YulAssignment",
															"src": "3530:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3542:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3542:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3553:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3553:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3538:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3538:3:10"
																},
																"nativeSrc": "3538:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3538:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3530:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3530:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3610:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3610:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3623:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3623:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3634:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3634:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3619:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3619:3:10"
																		},
																		"nativeSrc": "3619:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3619:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3566:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3566:43:10"
																},
																"nativeSrc": "3566:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3566:71:10"
															},
															"nativeSrc": "3566:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3566:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3691:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3691:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3704:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3704:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3715:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3715:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3700:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3700:3:10"
																		},
																		"nativeSrc": "3700:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3700:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3647:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3647:43:10"
																},
																"nativeSrc": "3647:72:10",
																"nodeType": "YulFunctionCall",
																"src": "3647:72:10"
															},
															"nativeSrc": "3647:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "3647:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3394:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3484:9:10",
														"nodeType": "YulTypedName",
														"src": "3484:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3496:6:10",
														"nodeType": "YulTypedName",
														"src": "3496:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3504:6:10",
														"nodeType": "YulTypedName",
														"src": "3504:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3515:4:10",
														"nodeType": "YulTypedName",
														"src": "3515:4:10",
														"type": ""
													}
												],
												"src": "3394:332:10"
											},
											{
												"body": {
													"nativeSrc": "3775:79:10",
													"nodeType": "YulBlock",
													"src": "3775:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3832:16:10",
																"nodeType": "YulBlock",
																"src": "3832:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3841:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3841:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3844:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3844:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3834:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3834:6:10"
																			},
																			"nativeSrc": "3834:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3834:12:10"
																		},
																		"nativeSrc": "3834:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3834:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3798:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3798:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3823:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3823:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3805:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3805:17:10"
																				},
																				"nativeSrc": "3805:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3805:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3795:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3795:2:10"
																		},
																		"nativeSrc": "3795:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3795:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3788:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3788:6:10"
																},
																"nativeSrc": "3788:43:10",
																"nodeType": "YulFunctionCall",
																"src": "3788:43:10"
															},
															"nativeSrc": "3785:63:10",
															"nodeType": "YulIf",
															"src": "3785:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3732:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3768:5:10",
														"nodeType": "YulTypedName",
														"src": "3768:5:10",
														"type": ""
													}
												],
												"src": "3732:122:10"
											},
											{
												"body": {
													"nativeSrc": "3923:80:10",
													"nodeType": "YulBlock",
													"src": "3923:80:10",
													"statements": [
														{
															"nativeSrc": "3933:22:10",
															"nodeType": "YulAssignment",
															"src": "3933:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3948:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3948:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3942:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3942:5:10"
																},
																"nativeSrc": "3942:13:10",
																"nodeType": "YulFunctionCall",
																"src": "3942:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3933:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3933:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3991:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3991:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3964:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3964:26:10"
																},
																"nativeSrc": "3964:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3964:33:10"
															},
															"nativeSrc": "3964:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3964:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3860:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3901:6:10",
														"nodeType": "YulTypedName",
														"src": "3901:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3909:3:10",
														"nodeType": "YulTypedName",
														"src": "3909:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3917:5:10",
														"nodeType": "YulTypedName",
														"src": "3917:5:10",
														"type": ""
													}
												],
												"src": "3860:143:10"
											},
											{
												"body": {
													"nativeSrc": "4086:274:10",
													"nodeType": "YulBlock",
													"src": "4086:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4132:83:10",
																"nodeType": "YulBlock",
																"src": "4132:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4134:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4134:77:10"
																			},
																			"nativeSrc": "4134:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4134:79:10"
																		},
																		"nativeSrc": "4134:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4134:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4107:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4107:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4116:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4116:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4103:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4103:3:10"
																		},
																		"nativeSrc": "4103:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4103:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4128:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4128:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4099:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4099:3:10"
																},
																"nativeSrc": "4099:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4099:32:10"
															},
															"nativeSrc": "4096:119:10",
															"nodeType": "YulIf",
															"src": "4096:119:10"
														},
														{
															"nativeSrc": "4225:128:10",
															"nodeType": "YulBlock",
															"src": "4225:128:10",
															"statements": [
																{
																	"nativeSrc": "4240:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4240:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4254:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4254:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4244:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4244:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4269:74:10",
																	"nodeType": "YulAssignment",
																	"src": "4269:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4315:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4315:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4326:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4326:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4311:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4311:3:10"
																				},
																				"nativeSrc": "4311:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4311:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4335:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4335:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4279:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "4279:31:10"
																		},
																		"nativeSrc": "4279:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4279:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4269:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4269:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4009:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4056:9:10",
														"nodeType": "YulTypedName",
														"src": "4056:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4067:7:10",
														"nodeType": "YulTypedName",
														"src": "4067:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4079:6:10",
														"nodeType": "YulTypedName",
														"src": "4079:6:10",
														"type": ""
													}
												],
												"src": "4009:351:10"
											},
											{
												"body": {
													"nativeSrc": "4492:206:10",
													"nodeType": "YulBlock",
													"src": "4492:206:10",
													"statements": [
														{
															"nativeSrc": "4502:26:10",
															"nodeType": "YulAssignment",
															"src": "4502:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4514:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4514:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4525:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4525:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4510:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4510:3:10"
																},
																"nativeSrc": "4510:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4510:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4502:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4502:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4582:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4582:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4595:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4595:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4606:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4606:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4591:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4591:3:10"
																		},
																		"nativeSrc": "4591:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4591:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4538:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4538:43:10"
																},
																"nativeSrc": "4538:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4538:71:10"
															},
															"nativeSrc": "4538:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "4538:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4663:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4663:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4676:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4676:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4687:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4687:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4672:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4672:3:10"
																		},
																		"nativeSrc": "4672:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4672:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4619:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4619:43:10"
																},
																"nativeSrc": "4619:72:10",
																"nodeType": "YulFunctionCall",
																"src": "4619:72:10"
															},
															"nativeSrc": "4619:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "4619:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "4366:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4456:9:10",
														"nodeType": "YulTypedName",
														"src": "4456:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4468:6:10",
														"nodeType": "YulTypedName",
														"src": "4468:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4476:6:10",
														"nodeType": "YulTypedName",
														"src": "4476:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4487:4:10",
														"nodeType": "YulTypedName",
														"src": "4487:4:10",
														"type": ""
													}
												],
												"src": "4366:332:10"
											},
											{
												"body": {
													"nativeSrc": "4800:73:10",
													"nodeType": "YulBlock",
													"src": "4800:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4817:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4817:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4822:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4822:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4810:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4810:6:10"
																},
																"nativeSrc": "4810:19:10",
																"nodeType": "YulFunctionCall",
																"src": "4810:19:10"
															},
															"nativeSrc": "4810:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "4810:19:10"
														},
														{
															"nativeSrc": "4838:29:10",
															"nodeType": "YulAssignment",
															"src": "4838:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4857:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4857:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4862:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4862:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4853:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4853:3:10"
																},
																"nativeSrc": "4853:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4853:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4838:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "4838:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4704:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4772:3:10",
														"nodeType": "YulTypedName",
														"src": "4772:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4777:6:10",
														"nodeType": "YulTypedName",
														"src": "4777:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4788:11:10",
														"nodeType": "YulTypedName",
														"src": "4788:11:10",
														"type": ""
													}
												],
												"src": "4704:169:10"
											},
											{
												"body": {
													"nativeSrc": "4985:75:10",
													"nodeType": "YulBlock",
													"src": "4985:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5007:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5007:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5015:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5015:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5003:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5003:3:10"
																		},
																		"nativeSrc": "5003:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5003:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "5019:33:10",
																		"nodeType": "YulLiteral",
																		"src": "5019:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4996:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4996:6:10"
																},
																"nativeSrc": "4996:57:10",
																"nodeType": "YulFunctionCall",
																"src": "4996:57:10"
															},
															"nativeSrc": "4996:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "4996:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "4879:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4977:6:10",
														"nodeType": "YulTypedName",
														"src": "4977:6:10",
														"type": ""
													}
												],
												"src": "4879:181:10"
											},
											{
												"body": {
													"nativeSrc": "5212:220:10",
													"nodeType": "YulBlock",
													"src": "5212:220:10",
													"statements": [
														{
															"nativeSrc": "5222:74:10",
															"nodeType": "YulAssignment",
															"src": "5222:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5288:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5288:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5293:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5293:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5229:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5229:58:10"
																},
																"nativeSrc": "5229:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5229:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5222:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5222:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5394:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5394:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "5305:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5305:88:10"
																},
																"nativeSrc": "5305:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5305:93:10"
															},
															"nativeSrc": "5305:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5305:93:10"
														},
														{
															"nativeSrc": "5407:19:10",
															"nodeType": "YulAssignment",
															"src": "5407:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5418:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5418:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5423:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5423:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5414:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5414:3:10"
																},
																"nativeSrc": "5414:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5414:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5407:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5407:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5066:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5200:3:10",
														"nodeType": "YulTypedName",
														"src": "5200:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5208:3:10",
														"nodeType": "YulTypedName",
														"src": "5208:3:10",
														"type": ""
													}
												],
												"src": "5066:366:10"
											},
											{
												"body": {
													"nativeSrc": "5609:248:10",
													"nodeType": "YulBlock",
													"src": "5609:248:10",
													"statements": [
														{
															"nativeSrc": "5619:26:10",
															"nodeType": "YulAssignment",
															"src": "5619:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5631:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5631:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5642:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5642:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5627:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5627:3:10"
																},
																"nativeSrc": "5627:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5627:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5619:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5619:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5666:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5677:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5677:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5662:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:10"
																		},
																		"nativeSrc": "5662:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5662:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5685:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5685:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5691:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5691:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5681:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:10"
																		},
																		"nativeSrc": "5681:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5681:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5655:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:10"
																},
																"nativeSrc": "5655:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5655:47:10"
															},
															"nativeSrc": "5655:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5655:47:10"
														},
														{
															"nativeSrc": "5711:139:10",
															"nodeType": "YulAssignment",
															"src": "5711:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5845:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5845:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5719:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "5719:124:10"
																},
																"nativeSrc": "5719:131:10",
																"nodeType": "YulFunctionCall",
																"src": "5719:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5711:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5711:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5438:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5589:9:10",
														"nodeType": "YulTypedName",
														"src": "5589:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5604:4:10",
														"nodeType": "YulTypedName",
														"src": "5604:4:10",
														"type": ""
													}
												],
												"src": "5438:419:10"
											},
											{
												"body": {
													"nativeSrc": "5969:123:10",
													"nodeType": "YulBlock",
													"src": "5969:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5991:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5991:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5999:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5999:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5987:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5987:3:10"
																		},
																		"nativeSrc": "5987:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5987:14:10"
																	},
																	{
																		"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65",
																		"kind": "string",
																		"nativeSrc": "6003:34:10",
																		"nodeType": "YulLiteral",
																		"src": "6003:34:10",
																		"type": "",
																		"value": "Crowdsale: beneficiary is the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5980:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5980:6:10"
																},
																"nativeSrc": "5980:58:10",
																"nodeType": "YulFunctionCall",
																"src": "5980:58:10"
															},
															"nativeSrc": "5980:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "5980:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6059:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6059:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6067:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6067:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6055:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6055:3:10"
																		},
																		"nativeSrc": "6055:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6055:15:10"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "6072:12:10",
																		"nodeType": "YulLiteral",
																		"src": "6072:12:10",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:10"
																},
																"nativeSrc": "6048:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6048:37:10"
															},
															"nativeSrc": "6048:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6048:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
												"nativeSrc": "5863:229:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5961:6:10",
														"nodeType": "YulTypedName",
														"src": "5961:6:10",
														"type": ""
													}
												],
												"src": "5863:229:10"
											},
											{
												"body": {
													"nativeSrc": "6244:220:10",
													"nodeType": "YulBlock",
													"src": "6244:220:10",
													"statements": [
														{
															"nativeSrc": "6254:74:10",
															"nodeType": "YulAssignment",
															"src": "6254:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6320:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6320:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6325:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6325:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6261:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "6261:58:10"
																},
																"nativeSrc": "6261:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6261:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6254:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6254:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6426:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6426:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																	"nativeSrc": "6337:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "6337:88:10"
																},
																"nativeSrc": "6337:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6337:93:10"
															},
															"nativeSrc": "6337:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "6337:93:10"
														},
														{
															"nativeSrc": "6439:19:10",
															"nodeType": "YulAssignment",
															"src": "6439:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6450:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6450:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6455:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6455:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6446:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6446:3:10"
																},
																"nativeSrc": "6446:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6446:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6439:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6439:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6098:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6232:3:10",
														"nodeType": "YulTypedName",
														"src": "6232:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6240:3:10",
														"nodeType": "YulTypedName",
														"src": "6240:3:10",
														"type": ""
													}
												],
												"src": "6098:366:10"
											},
											{
												"body": {
													"nativeSrc": "6641:248:10",
													"nodeType": "YulBlock",
													"src": "6641:248:10",
													"statements": [
														{
															"nativeSrc": "6651:26:10",
															"nodeType": "YulAssignment",
															"src": "6651:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6663:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6663:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6674:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6674:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6659:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6659:3:10"
																},
																"nativeSrc": "6659:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6659:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6651:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6651:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6698:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6698:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6709:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6709:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6694:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6694:3:10"
																		},
																		"nativeSrc": "6694:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6694:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6717:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6717:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6723:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6723:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6713:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6713:3:10"
																		},
																		"nativeSrc": "6713:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6713:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6687:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6687:6:10"
																},
																"nativeSrc": "6687:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6687:47:10"
															},
															"nativeSrc": "6687:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6687:47:10"
														},
														{
															"nativeSrc": "6743:139:10",
															"nodeType": "YulAssignment",
															"src": "6743:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6877:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6877:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6751:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6751:124:10"
																},
																"nativeSrc": "6751:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6751:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6743:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6743:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6470:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6621:9:10",
														"nodeType": "YulTypedName",
														"src": "6621:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6636:4:10",
														"nodeType": "YulTypedName",
														"src": "6636:4:10",
														"type": ""
													}
												],
												"src": "6470:419:10"
											},
											{
												"body": {
													"nativeSrc": "7001:69:10",
													"nodeType": "YulBlock",
													"src": "7001:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7023:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7023:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7031:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7031:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7019:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7019:3:10"
																		},
																		"nativeSrc": "7019:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7019:14:10"
																	},
																	{
																		"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
																		"kind": "string",
																		"nativeSrc": "7035:27:10",
																		"nodeType": "YulLiteral",
																		"src": "7035:27:10",
																		"type": "",
																		"value": "Crowdsale: weiAmount is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7012:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7012:6:10"
																},
																"nativeSrc": "7012:51:10",
																"nodeType": "YulFunctionCall",
																"src": "7012:51:10"
															},
															"nativeSrc": "7012:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "7012:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
												"nativeSrc": "6895:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6993:6:10",
														"nodeType": "YulTypedName",
														"src": "6993:6:10",
														"type": ""
													}
												],
												"src": "6895:175:10"
											},
											{
												"body": {
													"nativeSrc": "7222:220:10",
													"nodeType": "YulBlock",
													"src": "7222:220:10",
													"statements": [
														{
															"nativeSrc": "7232:74:10",
															"nodeType": "YulAssignment",
															"src": "7232:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7298:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7298:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7303:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7303:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7239:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7239:58:10"
																},
																"nativeSrc": "7239:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7239:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7232:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7232:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7404:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7404:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																	"nativeSrc": "7315:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7315:88:10"
																},
																"nativeSrc": "7315:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7315:93:10"
															},
															"nativeSrc": "7315:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7315:93:10"
														},
														{
															"nativeSrc": "7417:19:10",
															"nodeType": "YulAssignment",
															"src": "7417:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7428:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7428:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7433:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7433:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7424:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7424:3:10"
																},
																"nativeSrc": "7424:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7424:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7417:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7417:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7076:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7210:3:10",
														"nodeType": "YulTypedName",
														"src": "7210:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7218:3:10",
														"nodeType": "YulTypedName",
														"src": "7218:3:10",
														"type": ""
													}
												],
												"src": "7076:366:10"
											},
											{
												"body": {
													"nativeSrc": "7619:248:10",
													"nodeType": "YulBlock",
													"src": "7619:248:10",
													"statements": [
														{
															"nativeSrc": "7629:26:10",
															"nodeType": "YulAssignment",
															"src": "7629:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7641:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7641:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7652:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7652:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7637:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7637:3:10"
																},
																"nativeSrc": "7637:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7637:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7629:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7629:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7676:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7676:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7687:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7687:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7672:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7672:3:10"
																		},
																		"nativeSrc": "7672:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7672:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7695:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7695:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7701:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7701:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7691:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7691:3:10"
																		},
																		"nativeSrc": "7691:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7691:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7665:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7665:6:10"
																},
																"nativeSrc": "7665:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7665:47:10"
															},
															"nativeSrc": "7665:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7665:47:10"
														},
														{
															"nativeSrc": "7721:139:10",
															"nodeType": "YulAssignment",
															"src": "7721:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7855:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7855:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7729:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7729:124:10"
																},
																"nativeSrc": "7729:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7729:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7721:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7721:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7448:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7599:9:10",
														"nodeType": "YulTypedName",
														"src": "7599:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7614:4:10",
														"nodeType": "YulTypedName",
														"src": "7614:4:10",
														"type": ""
													}
												],
												"src": "7448:419:10"
											},
											{
												"body": {
													"nativeSrc": "7901:152:10",
													"nodeType": "YulBlock",
													"src": "7901:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7918:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7918:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7921:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7921:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7911:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7911:6:10"
																},
																"nativeSrc": "7911:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7911:88:10"
															},
															"nativeSrc": "7911:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7911:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8015:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8015:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8018:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8018:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8008:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8008:6:10"
																},
																"nativeSrc": "8008:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8008:15:10"
															},
															"nativeSrc": "8008:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8008:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8039:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8039:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8042:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8042:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8032:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8032:6:10"
																},
																"nativeSrc": "8032:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8032:15:10"
															},
															"nativeSrc": "8032:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8032:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7873:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7873:180:10"
											},
											{
												"body": {
													"nativeSrc": "8103:147:10",
													"nodeType": "YulBlock",
													"src": "8103:147:10",
													"statements": [
														{
															"nativeSrc": "8113:25:10",
															"nodeType": "YulAssignment",
															"src": "8113:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8136:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8136:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8118:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8118:17:10"
																},
																"nativeSrc": "8118:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8118:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8113:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8113:1:10"
																}
															]
														},
														{
															"nativeSrc": "8147:25:10",
															"nodeType": "YulAssignment",
															"src": "8147:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8170:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8170:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8152:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8152:17:10"
																},
																"nativeSrc": "8152:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8152:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8147:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8147:1:10"
																}
															]
														},
														{
															"nativeSrc": "8181:16:10",
															"nodeType": "YulAssignment",
															"src": "8181:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8192:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8192:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8195:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8195:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8188:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8188:3:10"
																},
																"nativeSrc": "8188:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8188:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8181:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8181:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8221:22:10",
																"nodeType": "YulBlock",
																"src": "8221:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8223:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8223:16:10"
																			},
																			"nativeSrc": "8223:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8223:18:10"
																		},
																		"nativeSrc": "8223:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8223:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8213:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8213:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8216:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8216:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8210:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8210:2:10"
																},
																"nativeSrc": "8210:10:10",
																"nodeType": "YulFunctionCall",
																"src": "8210:10:10"
															},
															"nativeSrc": "8207:36:10",
															"nodeType": "YulIf",
															"src": "8207:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8059:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8090:1:10",
														"nodeType": "YulTypedName",
														"src": "8090:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8093:1:10",
														"nodeType": "YulTypedName",
														"src": "8093:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8099:3:10",
														"nodeType": "YulTypedName",
														"src": "8099:3:10",
														"type": ""
													}
												],
												"src": "8059:191:10"
											},
											{
												"body": {
													"nativeSrc": "8304:362:10",
													"nodeType": "YulBlock",
													"src": "8304:362:10",
													"statements": [
														{
															"nativeSrc": "8314:25:10",
															"nodeType": "YulAssignment",
															"src": "8314:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8337:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8337:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8319:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8319:17:10"
																},
																"nativeSrc": "8319:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8319:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8314:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8314:1:10"
																}
															]
														},
														{
															"nativeSrc": "8348:25:10",
															"nodeType": "YulAssignment",
															"src": "8348:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8371:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8371:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8353:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8353:17:10"
																},
																"nativeSrc": "8353:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8353:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8348:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8348:1:10"
																}
															]
														},
														{
															"nativeSrc": "8382:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8382:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8405:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8405:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8408:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8408:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8401:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8401:3:10"
																},
																"nativeSrc": "8401:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8401:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8386:11:10",
																	"nodeType": "YulTypedName",
																	"src": "8386:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8419:41:10",
															"nodeType": "YulAssignment",
															"src": "8419:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8448:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "8448:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8430:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8430:17:10"
																},
																"nativeSrc": "8430:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8430:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8419:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8419:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8637:22:10",
																"nodeType": "YulBlock",
																"src": "8637:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8639:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8639:16:10"
																			},
																			"nativeSrc": "8639:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8639:18:10"
																		},
																		"nativeSrc": "8639:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8639:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8570:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8570:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8563:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8563:6:10"
																				},
																				"nativeSrc": "8563:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8563:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8593:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8593:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8600:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "8600:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8609:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "8609:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8596:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8596:3:10"
																						},
																						"nativeSrc": "8596:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8596:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8590:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "8590:2:10"
																				},
																				"nativeSrc": "8590:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8590:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8543:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8543:2:10"
																		},
																		"nativeSrc": "8543:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8543:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8523:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8523:6:10"
																},
																"nativeSrc": "8523:113:10",
																"nodeType": "YulFunctionCall",
																"src": "8523:113:10"
															},
															"nativeSrc": "8520:139:10",
															"nodeType": "YulIf",
															"src": "8520:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8256:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8287:1:10",
														"nodeType": "YulTypedName",
														"src": "8287:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8290:1:10",
														"nodeType": "YulTypedName",
														"src": "8290:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8296:7:10",
														"nodeType": "YulTypedName",
														"src": "8296:7:10",
														"type": ""
													}
												],
												"src": "8256:410:10"
											},
											{
												"body": {
													"nativeSrc": "8826:288:10",
													"nodeType": "YulBlock",
													"src": "8826:288:10",
													"statements": [
														{
															"nativeSrc": "8836:26:10",
															"nodeType": "YulAssignment",
															"src": "8836:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8848:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8848:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8859:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8859:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8844:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8844:3:10"
																},
																"nativeSrc": "8844:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8844:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8836:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8836:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8916:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8916:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8929:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8929:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8940:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8940:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8925:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8925:3:10"
																		},
																		"nativeSrc": "8925:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8925:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8872:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8872:43:10"
																},
																"nativeSrc": "8872:71:10",
																"nodeType": "YulFunctionCall",
																"src": "8872:71:10"
															},
															"nativeSrc": "8872:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "8872:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8997:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8997:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9010:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9010:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9021:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9021:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9006:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9006:3:10"
																		},
																		"nativeSrc": "9006:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9006:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8953:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8953:43:10"
																},
																"nativeSrc": "8953:72:10",
																"nodeType": "YulFunctionCall",
																"src": "8953:72:10"
															},
															"nativeSrc": "8953:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "8953:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9079:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9079:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9092:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9092:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9103:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9103:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9088:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9088:3:10"
																		},
																		"nativeSrc": "9088:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9088:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9035:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9035:43:10"
																},
																"nativeSrc": "9035:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9035:72:10"
															},
															"nativeSrc": "9035:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9035:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8672:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8782:9:10",
														"nodeType": "YulTypedName",
														"src": "8782:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8794:6:10",
														"nodeType": "YulTypedName",
														"src": "8794:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8802:6:10",
														"nodeType": "YulTypedName",
														"src": "8802:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8810:6:10",
														"nodeType": "YulTypedName",
														"src": "8810:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8821:4:10",
														"nodeType": "YulTypedName",
														"src": "8821:4:10",
														"type": ""
													}
												],
												"src": "8672:442:10"
											},
											{
												"body": {
													"nativeSrc": "9162:48:10",
													"nodeType": "YulBlock",
													"src": "9162:48:10",
													"statements": [
														{
															"nativeSrc": "9172:32:10",
															"nodeType": "YulAssignment",
															"src": "9172:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9197:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9197:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "9190:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9190:6:10"
																		},
																		"nativeSrc": "9190:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9190:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9183:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9183:6:10"
																},
																"nativeSrc": "9183:21:10",
																"nodeType": "YulFunctionCall",
																"src": "9183:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9172:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "9172:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "9120:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9144:5:10",
														"nodeType": "YulTypedName",
														"src": "9144:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9154:7:10",
														"nodeType": "YulTypedName",
														"src": "9154:7:10",
														"type": ""
													}
												],
												"src": "9120:90:10"
											},
											{
												"body": {
													"nativeSrc": "9256:76:10",
													"nodeType": "YulBlock",
													"src": "9256:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9310:16:10",
																"nodeType": "YulBlock",
																"src": "9310:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9319:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9319:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9322:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9322:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9312:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9312:6:10"
																			},
																			"nativeSrc": "9312:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9312:12:10"
																		},
																		"nativeSrc": "9312:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9312:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9279:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9279:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9301:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "9301:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9286:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "9286:14:10"
																				},
																				"nativeSrc": "9286:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9286:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9276:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9276:2:10"
																		},
																		"nativeSrc": "9276:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9276:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9269:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9269:6:10"
																},
																"nativeSrc": "9269:40:10",
																"nodeType": "YulFunctionCall",
																"src": "9269:40:10"
															},
															"nativeSrc": "9266:60:10",
															"nodeType": "YulIf",
															"src": "9266:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9216:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9249:5:10",
														"nodeType": "YulTypedName",
														"src": "9249:5:10",
														"type": ""
													}
												],
												"src": "9216:116:10"
											},
											{
												"body": {
													"nativeSrc": "9398:77:10",
													"nodeType": "YulBlock",
													"src": "9398:77:10",
													"statements": [
														{
															"nativeSrc": "9408:22:10",
															"nodeType": "YulAssignment",
															"src": "9408:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9423:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9423:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9417:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9417:5:10"
																},
																"nativeSrc": "9417:13:10",
																"nodeType": "YulFunctionCall",
																"src": "9417:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9408:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9408:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9463:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9463:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9439:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "9439:23:10"
																},
																"nativeSrc": "9439:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9439:30:10"
															},
															"nativeSrc": "9439:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9439:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9338:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9376:6:10",
														"nodeType": "YulTypedName",
														"src": "9376:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9384:3:10",
														"nodeType": "YulTypedName",
														"src": "9384:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9392:5:10",
														"nodeType": "YulTypedName",
														"src": "9392:5:10",
														"type": ""
													}
												],
												"src": "9338:137:10"
											},
											{
												"body": {
													"nativeSrc": "9555:271:10",
													"nodeType": "YulBlock",
													"src": "9555:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9601:83:10",
																"nodeType": "YulBlock",
																"src": "9601:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9603:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9603:77:10"
																			},
																			"nativeSrc": "9603:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9603:79:10"
																		},
																		"nativeSrc": "9603:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9603:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9576:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9576:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9585:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9585:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9572:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9572:3:10"
																		},
																		"nativeSrc": "9572:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9572:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9597:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9597:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9568:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9568:3:10"
																},
																"nativeSrc": "9568:32:10",
																"nodeType": "YulFunctionCall",
																"src": "9568:32:10"
															},
															"nativeSrc": "9565:119:10",
															"nodeType": "YulIf",
															"src": "9565:119:10"
														},
														{
															"nativeSrc": "9694:125:10",
															"nodeType": "YulBlock",
															"src": "9694:125:10",
															"statements": [
																{
																	"nativeSrc": "9709:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9709:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9723:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9723:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9713:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9713:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9738:71:10",
																	"nodeType": "YulAssignment",
																	"src": "9738:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9781:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9781:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9792:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9792:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9777:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9777:3:10"
																				},
																				"nativeSrc": "9777:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9777:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9801:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9801:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9748:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "9748:28:10"
																		},
																		"nativeSrc": "9748:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9748:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9738:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9738:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9481:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9525:9:10",
														"nodeType": "YulTypedName",
														"src": "9525:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9536:7:10",
														"nodeType": "YulTypedName",
														"src": "9536:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9548:6:10",
														"nodeType": "YulTypedName",
														"src": "9548:6:10",
														"type": ""
													}
												],
												"src": "9481:345:10"
											},
											{
												"body": {
													"nativeSrc": "9938:123:10",
													"nodeType": "YulBlock",
													"src": "9938:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9960:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9960:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9968:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9968:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9956:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9956:3:10"
																		},
																		"nativeSrc": "9956:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9956:14:10"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nativeSrc": "9972:34:10",
																		"nodeType": "YulLiteral",
																		"src": "9972:34:10",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9949:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9949:6:10"
																},
																"nativeSrc": "9949:58:10",
																"nodeType": "YulFunctionCall",
																"src": "9949:58:10"
															},
															"nativeSrc": "9949:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "9949:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10028:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10028:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10036:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10036:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10024:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10024:3:10"
																		},
																		"nativeSrc": "10024:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10024:15:10"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nativeSrc": "10041:12:10",
																		"nodeType": "YulLiteral",
																		"src": "10041:12:10",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10017:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10017:6:10"
																},
																"nativeSrc": "10017:37:10",
																"nodeType": "YulFunctionCall",
																"src": "10017:37:10"
															},
															"nativeSrc": "10017:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "10017:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nativeSrc": "9832:229:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9930:6:10",
														"nodeType": "YulTypedName",
														"src": "9930:6:10",
														"type": ""
													}
												],
												"src": "9832:229:10"
											},
											{
												"body": {
													"nativeSrc": "10213:220:10",
													"nodeType": "YulBlock",
													"src": "10213:220:10",
													"statements": [
														{
															"nativeSrc": "10223:74:10",
															"nodeType": "YulAssignment",
															"src": "10223:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10289:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10289:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10294:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10294:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10230:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10230:58:10"
																},
																"nativeSrc": "10230:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10230:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10223:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10223:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10395:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10395:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nativeSrc": "10306:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10306:88:10"
																},
																"nativeSrc": "10306:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10306:93:10"
															},
															"nativeSrc": "10306:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10306:93:10"
														},
														{
															"nativeSrc": "10408:19:10",
															"nodeType": "YulAssignment",
															"src": "10408:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10419:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10419:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10424:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10424:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10415:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10415:3:10"
																},
																"nativeSrc": "10415:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10415:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10408:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10408:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10067:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10201:3:10",
														"nodeType": "YulTypedName",
														"src": "10201:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10209:3:10",
														"nodeType": "YulTypedName",
														"src": "10209:3:10",
														"type": ""
													}
												],
												"src": "10067:366:10"
											},
											{
												"body": {
													"nativeSrc": "10610:248:10",
													"nodeType": "YulBlock",
													"src": "10610:248:10",
													"statements": [
														{
															"nativeSrc": "10620:26:10",
															"nodeType": "YulAssignment",
															"src": "10620:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10632:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10632:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10643:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10643:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10628:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10628:3:10"
																},
																"nativeSrc": "10628:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10628:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10620:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10620:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10667:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10667:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10678:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10678:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10663:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10663:3:10"
																		},
																		"nativeSrc": "10663:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10663:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10686:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10686:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10692:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10692:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10682:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10682:3:10"
																		},
																		"nativeSrc": "10682:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10682:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10656:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10656:6:10"
																},
																"nativeSrc": "10656:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10656:47:10"
															},
															"nativeSrc": "10656:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10656:47:10"
														},
														{
															"nativeSrc": "10712:139:10",
															"nodeType": "YulAssignment",
															"src": "10712:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10846:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10846:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10720:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10720:124:10"
																},
																"nativeSrc": "10720:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10720:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10712:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10712:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10439:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10590:9:10",
														"nodeType": "YulTypedName",
														"src": "10590:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10605:4:10",
														"nodeType": "YulTypedName",
														"src": "10605:4:10",
														"type": ""
													}
												],
												"src": "10439:419:10"
											},
											{
												"body": {
													"nativeSrc": "10970:119:10",
													"nodeType": "YulBlock",
													"src": "10970:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10992:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10992:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11000:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11000:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10988:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10988:3:10"
																		},
																		"nativeSrc": "10988:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10988:14:10"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nativeSrc": "11004:34:10",
																		"nodeType": "YulLiteral",
																		"src": "11004:34:10",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10981:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10981:6:10"
																},
																"nativeSrc": "10981:58:10",
																"nodeType": "YulFunctionCall",
																"src": "10981:58:10"
															},
															"nativeSrc": "10981:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "10981:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11060:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11060:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11068:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11068:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11056:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11056:3:10"
																		},
																		"nativeSrc": "11056:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11056:15:10"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nativeSrc": "11073:8:10",
																		"nodeType": "YulLiteral",
																		"src": "11073:8:10",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11049:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11049:6:10"
																},
																"nativeSrc": "11049:33:10",
																"nodeType": "YulFunctionCall",
																"src": "11049:33:10"
															},
															"nativeSrc": "11049:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "11049:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nativeSrc": "10864:225:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10962:6:10",
														"nodeType": "YulTypedName",
														"src": "10962:6:10",
														"type": ""
													}
												],
												"src": "10864:225:10"
											},
											{
												"body": {
													"nativeSrc": "11241:220:10",
													"nodeType": "YulBlock",
													"src": "11241:220:10",
													"statements": [
														{
															"nativeSrc": "11251:74:10",
															"nodeType": "YulAssignment",
															"src": "11251:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11317:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11317:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11322:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11322:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11258:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11258:58:10"
																},
																"nativeSrc": "11258:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11258:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11251:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11251:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11423:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11423:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nativeSrc": "11334:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11334:88:10"
																},
																"nativeSrc": "11334:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11334:93:10"
															},
															"nativeSrc": "11334:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11334:93:10"
														},
														{
															"nativeSrc": "11436:19:10",
															"nodeType": "YulAssignment",
															"src": "11436:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11447:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11447:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11452:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11452:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11443:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11443:3:10"
																},
																"nativeSrc": "11443:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11443:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11436:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11436:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11095:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11229:3:10",
														"nodeType": "YulTypedName",
														"src": "11229:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11237:3:10",
														"nodeType": "YulTypedName",
														"src": "11237:3:10",
														"type": ""
													}
												],
												"src": "11095:366:10"
											},
											{
												"body": {
													"nativeSrc": "11638:248:10",
													"nodeType": "YulBlock",
													"src": "11638:248:10",
													"statements": [
														{
															"nativeSrc": "11648:26:10",
															"nodeType": "YulAssignment",
															"src": "11648:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11660:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11660:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11671:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11671:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11656:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11656:3:10"
																},
																"nativeSrc": "11656:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11656:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11648:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11648:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11695:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11695:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11706:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11706:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11691:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11691:3:10"
																		},
																		"nativeSrc": "11691:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11691:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11714:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11714:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11720:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11720:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11710:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11710:3:10"
																		},
																		"nativeSrc": "11710:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11710:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11684:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11684:6:10"
																},
																"nativeSrc": "11684:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11684:47:10"
															},
															"nativeSrc": "11684:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11684:47:10"
														},
														{
															"nativeSrc": "11740:139:10",
															"nodeType": "YulAssignment",
															"src": "11740:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11874:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11874:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11748:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11748:124:10"
																},
																"nativeSrc": "11748:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11748:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11740:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11740:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11467:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11618:9:10",
														"nodeType": "YulTypedName",
														"src": "11618:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11633:4:10",
														"nodeType": "YulTypedName",
														"src": "11633:4:10",
														"type": ""
													}
												],
												"src": "11467:419:10"
											},
											{
												"body": {
													"nativeSrc": "11950:40:10",
													"nodeType": "YulBlock",
													"src": "11950:40:10",
													"statements": [
														{
															"nativeSrc": "11961:22:10",
															"nodeType": "YulAssignment",
															"src": "11961:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11977:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11977:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11971:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11971:5:10"
																},
																"nativeSrc": "11971:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11971:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11961:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11961:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "11892:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11933:5:10",
														"nodeType": "YulTypedName",
														"src": "11933:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11943:6:10",
														"nodeType": "YulTypedName",
														"src": "11943:6:10",
														"type": ""
													}
												],
												"src": "11892:98:10"
											},
											{
												"body": {
													"nativeSrc": "12109:34:10",
													"nodeType": "YulBlock",
													"src": "12109:34:10",
													"statements": [
														{
															"nativeSrc": "12119:18:10",
															"nodeType": "YulAssignment",
															"src": "12119:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "12134:3:10",
																"nodeType": "YulIdentifier",
																"src": "12134:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12119:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "12119:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11996:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12081:3:10",
														"nodeType": "YulTypedName",
														"src": "12081:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12086:6:10",
														"nodeType": "YulTypedName",
														"src": "12086:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12097:11:10",
														"nodeType": "YulTypedName",
														"src": "12097:11:10",
														"type": ""
													}
												],
												"src": "11996:147:10"
											},
											{
												"body": {
													"nativeSrc": "12211:184:10",
													"nodeType": "YulBlock",
													"src": "12211:184:10",
													"statements": [
														{
															"nativeSrc": "12221:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12221:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "12230:1:10",
																"nodeType": "YulLiteral",
																"src": "12230:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "12225:1:10",
																	"nodeType": "YulTypedName",
																	"src": "12225:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12290:63:10",
																"nodeType": "YulBlock",
																"src": "12290:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "12315:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "12315:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "12320:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "12320:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "12311:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "12311:3:10"
																					},
																					"nativeSrc": "12311:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12311:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "12334:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "12334:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "12339:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "12339:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12330:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "12330:3:10"
																							},
																							"nativeSrc": "12330:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "12330:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "12324:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "12324:5:10"
																					},
																					"nativeSrc": "12324:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12324:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12304:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12304:6:10"
																			},
																			"nativeSrc": "12304:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12304:39:10"
																		},
																		"nativeSrc": "12304:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12304:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "12251:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12251:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12254:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12254:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12248:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12248:2:10"
																},
																"nativeSrc": "12248:13:10",
																"nodeType": "YulFunctionCall",
																"src": "12248:13:10"
															},
															"nativeSrc": "12240:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12262:19:10",
																"nodeType": "YulBlock",
																"src": "12262:19:10",
																"statements": [
																	{
																		"nativeSrc": "12264:15:10",
																		"nodeType": "YulAssignment",
																		"src": "12264:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "12273:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "12273:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12276:2:10",
																					"nodeType": "YulLiteral",
																					"src": "12276:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12269:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "12269:3:10"
																			},
																			"nativeSrc": "12269:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12269:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "12264:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "12264:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12244:3:10",
																"nodeType": "YulBlock",
																"src": "12244:3:10",
																"statements": []
															},
															"src": "12240:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "12373:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "12373:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12378:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12378:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12369:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12369:3:10"
																		},
																		"nativeSrc": "12369:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12369:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12387:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12387:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12362:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12362:6:10"
																},
																"nativeSrc": "12362:27:10",
																"nodeType": "YulFunctionCall",
																"src": "12362:27:10"
															},
															"nativeSrc": "12362:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "12362:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "12149:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12193:3:10",
														"nodeType": "YulTypedName",
														"src": "12193:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "12198:3:10",
														"nodeType": "YulTypedName",
														"src": "12198:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12203:6:10",
														"nodeType": "YulTypedName",
														"src": "12203:6:10",
														"type": ""
													}
												],
												"src": "12149:246:10"
											},
											{
												"body": {
													"nativeSrc": "12509:278:10",
													"nodeType": "YulBlock",
													"src": "12509:278:10",
													"statements": [
														{
															"nativeSrc": "12519:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12519:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12565:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "12565:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "12533:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "12533:31:10"
																},
																"nativeSrc": "12533:38:10",
																"nodeType": "YulFunctionCall",
																"src": "12533:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12523:6:10",
																	"nodeType": "YulTypedName",
																	"src": "12523:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12580:95:10",
															"nodeType": "YulAssignment",
															"src": "12580:95:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12663:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12663:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12668:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12668:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12587:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "12587:75:10"
																},
																"nativeSrc": "12587:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12587:88:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12580:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12580:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12723:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "12723:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12730:4:10",
																				"nodeType": "YulLiteral",
																				"src": "12730:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12719:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12719:3:10"
																		},
																		"nativeSrc": "12719:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12719:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12737:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12737:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12742:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12742:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12684:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "12684:34:10"
																},
																"nativeSrc": "12684:65:10",
																"nodeType": "YulFunctionCall",
																"src": "12684:65:10"
															},
															"nativeSrc": "12684:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "12684:65:10"
														},
														{
															"nativeSrc": "12758:23:10",
															"nodeType": "YulAssignment",
															"src": "12758:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12769:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12769:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12774:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12774:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12765:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12765:3:10"
																},
																"nativeSrc": "12765:16:10",
																"nodeType": "YulFunctionCall",
																"src": "12765:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12758:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12758:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12401:386:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12490:5:10",
														"nodeType": "YulTypedName",
														"src": "12490:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12497:3:10",
														"nodeType": "YulTypedName",
														"src": "12497:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12505:3:10",
														"nodeType": "YulTypedName",
														"src": "12505:3:10",
														"type": ""
													}
												],
												"src": "12401:386:10"
											},
											{
												"body": {
													"nativeSrc": "12927:137:10",
													"nodeType": "YulBlock",
													"src": "12927:137:10",
													"statements": [
														{
															"nativeSrc": "12938:100:10",
															"nodeType": "YulAssignment",
															"src": "12938:100:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13025:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13025:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13034:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13034:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12945:79:10",
																	"nodeType": "YulIdentifier",
																	"src": "12945:79:10"
																},
																"nativeSrc": "12945:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12945:93:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12938:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12938:3:10"
																}
															]
														},
														{
															"nativeSrc": "13048:10:10",
															"nodeType": "YulAssignment",
															"src": "13048:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "13055:3:10",
																"nodeType": "YulIdentifier",
																"src": "13055:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13048:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13048:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12793:271:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12906:3:10",
														"nodeType": "YulTypedName",
														"src": "12906:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12912:6:10",
														"nodeType": "YulTypedName",
														"src": "12912:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12923:3:10",
														"nodeType": "YulTypedName",
														"src": "12923:3:10",
														"type": ""
													}
												],
												"src": "12793:271:10"
											},
											{
												"body": {
													"nativeSrc": "13176:73:10",
													"nodeType": "YulBlock",
													"src": "13176:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13198:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13198:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13206:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13206:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13194:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13194:3:10"
																		},
																		"nativeSrc": "13194:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13194:14:10"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "13210:31:10",
																		"nodeType": "YulLiteral",
																		"src": "13210:31:10",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13187:6:10"
																},
																"nativeSrc": "13187:55:10",
																"nodeType": "YulFunctionCall",
																"src": "13187:55:10"
															},
															"nativeSrc": "13187:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "13187:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nativeSrc": "13070:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13168:6:10",
														"nodeType": "YulTypedName",
														"src": "13168:6:10",
														"type": ""
													}
												],
												"src": "13070:179:10"
											},
											{
												"body": {
													"nativeSrc": "13401:220:10",
													"nodeType": "YulBlock",
													"src": "13401:220:10",
													"statements": [
														{
															"nativeSrc": "13411:74:10",
															"nodeType": "YulAssignment",
															"src": "13411:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13477:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13477:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13482:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13482:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13418:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13418:58:10"
																},
																"nativeSrc": "13418:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13418:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13411:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13411:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13583:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13583:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nativeSrc": "13494:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13494:88:10"
																},
																"nativeSrc": "13494:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13494:93:10"
															},
															"nativeSrc": "13494:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13494:93:10"
														},
														{
															"nativeSrc": "13596:19:10",
															"nodeType": "YulAssignment",
															"src": "13596:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13607:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13607:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13612:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13612:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13603:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13603:3:10"
																},
																"nativeSrc": "13603:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13603:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13596:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13596:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13255:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13389:3:10",
														"nodeType": "YulTypedName",
														"src": "13389:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13397:3:10",
														"nodeType": "YulTypedName",
														"src": "13397:3:10",
														"type": ""
													}
												],
												"src": "13255:366:10"
											},
											{
												"body": {
													"nativeSrc": "13798:248:10",
													"nodeType": "YulBlock",
													"src": "13798:248:10",
													"statements": [
														{
															"nativeSrc": "13808:26:10",
															"nodeType": "YulAssignment",
															"src": "13808:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13820:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13820:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13831:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13831:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13816:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13816:3:10"
																},
																"nativeSrc": "13816:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13816:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13808:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13808:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13855:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13855:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13866:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13866:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13851:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13851:3:10"
																		},
																		"nativeSrc": "13851:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13851:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13874:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13874:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13880:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13880:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13870:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13870:3:10"
																		},
																		"nativeSrc": "13870:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13870:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13844:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13844:6:10"
																},
																"nativeSrc": "13844:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13844:47:10"
															},
															"nativeSrc": "13844:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13844:47:10"
														},
														{
															"nativeSrc": "13900:139:10",
															"nodeType": "YulAssignment",
															"src": "13900:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14034:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14034:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13908:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13908:124:10"
																},
																"nativeSrc": "13908:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13908:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13900:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13900:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13627:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13778:9:10",
														"nodeType": "YulTypedName",
														"src": "13778:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13793:4:10",
														"nodeType": "YulTypedName",
														"src": "13793:4:10",
														"type": ""
													}
												],
												"src": "13627:419:10"
											},
											{
												"body": {
													"nativeSrc": "14111:40:10",
													"nodeType": "YulBlock",
													"src": "14111:40:10",
													"statements": [
														{
															"nativeSrc": "14122:22:10",
															"nodeType": "YulAssignment",
															"src": "14122:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14138:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "14138:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14132:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "14132:5:10"
																},
																"nativeSrc": "14132:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14132:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14122:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14122:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "14052:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14094:5:10",
														"nodeType": "YulTypedName",
														"src": "14094:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14104:6:10",
														"nodeType": "YulTypedName",
														"src": "14104:6:10",
														"type": ""
													}
												],
												"src": "14052:99:10"
											},
											{
												"body": {
													"nativeSrc": "14205:54:10",
													"nodeType": "YulBlock",
													"src": "14205:54:10",
													"statements": [
														{
															"nativeSrc": "14215:38:10",
															"nodeType": "YulAssignment",
															"src": "14215:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14233:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "14233:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14240:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14240:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14229:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14229:3:10"
																		},
																		"nativeSrc": "14229:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14229:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14249:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14249:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14245:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14245:3:10"
																		},
																		"nativeSrc": "14245:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14245:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14225:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14225:3:10"
																},
																"nativeSrc": "14225:28:10",
																"nodeType": "YulFunctionCall",
																"src": "14225:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14215:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14215:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "14157:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14188:5:10",
														"nodeType": "YulTypedName",
														"src": "14188:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14198:6:10",
														"nodeType": "YulTypedName",
														"src": "14198:6:10",
														"type": ""
													}
												],
												"src": "14157:102:10"
											},
											{
												"body": {
													"nativeSrc": "14357:285:10",
													"nodeType": "YulBlock",
													"src": "14357:285:10",
													"statements": [
														{
															"nativeSrc": "14367:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "14367:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14414:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "14414:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "14381:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "14381:32:10"
																},
																"nativeSrc": "14381:39:10",
																"nodeType": "YulFunctionCall",
																"src": "14381:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14371:6:10",
																	"nodeType": "YulTypedName",
																	"src": "14371:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14429:78:10",
															"nodeType": "YulAssignment",
															"src": "14429:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14495:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14495:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14500:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14500:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14436:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14436:58:10"
																},
																"nativeSrc": "14436:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14436:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14429:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14429:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14555:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "14555:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14562:4:10",
																				"nodeType": "YulLiteral",
																				"src": "14562:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14551:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14551:3:10"
																		},
																		"nativeSrc": "14551:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14551:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14569:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14569:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14574:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14574:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14516:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "14516:34:10"
																},
																"nativeSrc": "14516:65:10",
																"nodeType": "YulFunctionCall",
																"src": "14516:65:10"
															},
															"nativeSrc": "14516:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "14516:65:10"
														},
														{
															"nativeSrc": "14590:46:10",
															"nodeType": "YulAssignment",
															"src": "14590:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14601:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14601:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14628:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14628:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "14606:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "14606:21:10"
																		},
																		"nativeSrc": "14606:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14606:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14597:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14597:3:10"
																},
																"nativeSrc": "14597:39:10",
																"nodeType": "YulFunctionCall",
																"src": "14597:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14590:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14590:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14265:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14338:5:10",
														"nodeType": "YulTypedName",
														"src": "14338:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14345:3:10",
														"nodeType": "YulTypedName",
														"src": "14345:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14353:3:10",
														"nodeType": "YulTypedName",
														"src": "14353:3:10",
														"type": ""
													}
												],
												"src": "14265:377:10"
											},
											{
												"body": {
													"nativeSrc": "14766:195:10",
													"nodeType": "YulBlock",
													"src": "14766:195:10",
													"statements": [
														{
															"nativeSrc": "14776:26:10",
															"nodeType": "YulAssignment",
															"src": "14776:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14788:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14788:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14799:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14799:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14784:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14784:3:10"
																},
																"nativeSrc": "14784:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14784:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14776:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14776:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14823:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14823:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14834:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14834:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14819:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14819:3:10"
																		},
																		"nativeSrc": "14819:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14819:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14842:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14842:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14848:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14848:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14838:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14838:3:10"
																		},
																		"nativeSrc": "14838:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14838:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14812:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14812:6:10"
																},
																"nativeSrc": "14812:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14812:47:10"
															},
															"nativeSrc": "14812:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14812:47:10"
														},
														{
															"nativeSrc": "14868:86:10",
															"nodeType": "YulAssignment",
															"src": "14868:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14940:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14940:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14949:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14949:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14876:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "14876:63:10"
																},
																"nativeSrc": "14876:78:10",
																"nodeType": "YulFunctionCall",
																"src": "14876:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14868:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14868:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14648:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14738:9:10",
														"nodeType": "YulTypedName",
														"src": "14738:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14750:6:10",
														"nodeType": "YulTypedName",
														"src": "14750:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14761:4:10",
														"nodeType": "YulTypedName",
														"src": "14761:4:10",
														"type": ""
													}
												],
												"src": "14648:313:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$142_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$142_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: beneficiary is the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: weiAmount is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x73 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBF583903 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0xBF583903 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xBFF99C6C EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x18A JUMPI PUSH2 0x8A JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0xF0 JUMPI PUSH2 0x8A JUMP JUMPDEST CALLDATASIZE PUSH2 0x8A JUMPI PUSH2 0x88 PUSH2 0x83 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0x95 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x2A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x104 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xAB6 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x473 JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x4C0 JUMP JUMPDEST PUSH0 PUSH2 0x1DB DUP3 PUSH2 0x574 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F2 DUP3 PUSH1 0x4 SLOAD PUSH2 0x591 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x202 DUP4 DUP3 PUSH2 0x5A6 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x221 PUSH2 0x1B4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x268 SWAP3 SWAP2 SWAP1 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x27A DUP4 DUP4 PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x282 PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x28C DUP4 DUP4 PUSH2 0x61F JUMP JUMPDEST POP POP PUSH2 0x296 PUSH2 0x623 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x41E PUSH2 0x2DF PUSH2 0x44B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x353 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x37F PUSH2 0x44B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DA SWAP3 SWAP2 SWAP1 PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AE SWAP1 PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x52E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP1 PUSH2 0xCE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x58A PUSH1 0x3 SLOAD DUP4 PUSH2 0x644 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B0 DUP3 DUP3 PUSH2 0x659 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x61C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x63A JUMPI DUP2 PUSH2 0x63C JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x651 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6AE PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH2 0x688 PUSH2 0x44B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6B2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x735 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x73B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x79C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x801 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x7BD JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7BC SWAP2 SWAP1 PUSH2 0xE71 JUMP JUMPDEST JUMPDEST PUSH2 0x7FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F3 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x80F DUP5 DUP5 PUSH0 DUP6 PUSH2 0x818 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x854 SWAP1 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x885 SWAP2 SWAP1 PUSH2 0x1024 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x8BF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x8D5 DUP8 DUP4 DUP4 DUP8 PUSH2 0x8E1 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x942 JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x93A JUMPI PUSH2 0x8FA DUP6 PUSH2 0x955 JUMP JUMPDEST PUSH2 0x939 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x930 SWAP1 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x94D JUMP JUMPDEST PUSH2 0x94C DUP4 DUP4 PUSH2 0x977 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x989 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D8 DUP2 PUSH2 0x9C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x9CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA20 DUP3 PUSH2 0x9F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA30 DUP2 PUSH2 0xA16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA49 PUSH0 DUP4 ADD DUP5 PUSH2 0xA27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA59 DUP3 PUSH2 0x9F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA69 DUP2 PUSH2 0xA4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA82 PUSH0 DUP4 ADD DUP5 PUSH2 0xA60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA95 DUP2 PUSH2 0xA4F JUMP JUMPDEST DUP2 EQ PUSH2 0xA9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAB0 DUP2 PUSH2 0xA8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xACB JUMPI PUSH2 0xACA PUSH2 0xA88 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAD8 DUP5 DUP3 DUP6 ADD PUSH2 0xAA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB04 PUSH2 0xAFF PUSH2 0xAFA DUP5 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB15 DUP3 PUSH2 0xAEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB26 DUP3 PUSH2 0xB0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB36 DUP2 PUSH2 0xB1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB4F PUSH0 DUP4 ADD DUP5 PUSH2 0xB2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB68 PUSH0 DUP4 ADD DUP6 PUSH2 0x9CF JUMP JUMPDEST PUSH2 0xB75 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB85 DUP2 PUSH2 0x9C6 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBA0 DUP2 PUSH2 0xB7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBB JUMPI PUSH2 0xBBA PUSH2 0xA88 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBC8 DUP5 DUP3 DUP6 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBE4 PUSH0 DUP4 ADD DUP6 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xBF1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA60 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC3C PUSH1 0x1F DUP4 PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC47 DUP3 PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC69 DUP2 PUSH2 0xC30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCCA PUSH1 0x2A DUP4 PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD5 DUP3 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCF7 DUP2 PUSH2 0xCBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD32 PUSH1 0x19 DUP4 PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xD3D DUP3 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD5F DUP2 PUSH2 0xD26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD9D DUP3 PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP PUSH2 0xDA8 DUP4 PUSH2 0x9C6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDC0 JUMPI PUSH2 0xDBF PUSH2 0xD66 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDD0 DUP3 PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDB DUP4 PUSH2 0x9C6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xDE9 DUP2 PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE00 JUMPI PUSH2 0xDFF PUSH2 0xD66 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE1A PUSH0 DUP4 ADD DUP7 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xE27 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xE34 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9CF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xE3C JUMP JUMPDEST DUP2 EQ PUSH2 0xE5A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE6B DUP2 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE86 JUMPI PUSH2 0xE85 PUSH2 0xA88 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE93 DUP5 DUP3 DUP6 ADD PUSH2 0xE5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEF6 PUSH1 0x2A DUP4 PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xF01 DUP3 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF23 DUP2 PUSH2 0xEEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF84 PUSH1 0x26 DUP4 PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8F DUP3 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFB1 DUP2 PUSH2 0xF78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFE9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFCE JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFE DUP3 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0x1008 DUP2 DUP6 PUSH2 0xFC2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1018 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFCC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x102F DUP3 DUP5 PUSH2 0xFF4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x106E PUSH1 0x1D DUP4 PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1079 DUP3 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x109B DUP2 PUSH2 0x1062 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10C6 DUP3 PUSH2 0x10A2 JUMP JUMPDEST PUSH2 0x10D0 DUP2 DUP6 PUSH2 0xBF8 JUMP JUMPDEST SWAP4 POP PUSH2 0x10E0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x10E9 DUP2 PUSH2 0x10AC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x110C DUP2 DUP5 PUSH2 0x10BC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE LOG4 0x4E SWAP9 PUSH3 0x6D3CAC 0xD8 BLOCKHASH SWAP16 DUP13 DUP2 SHL PREVRANDAO PUSH16 0xC29DB1D6B3BA57DAD8664784AD8014BD PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "487:1625:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3351:23:8;3361:12;:10;:12::i;:::-;3351:9;:23::i;:::-;487:1625:9;;3270:23:8;3280:12;:10;:12::i;:::-;3270:9;:23::i;:::-;487:1625:9;3784:85:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3937:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3605:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1571:172:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1335:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4289:622:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3446:78;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;656:96:5;709:7;735:10;728:17;;656:96;:::o;4289:622:8:-;2261:21:0;:19;:21::i;:::-;4368:17:8::1;4388:9;4368:29;;4408:44;4429:11;4442:9;4408:20;:44::i;:::-;4514:14;4531:26;4547:9;4531:15;:26::i;:::-;4514:43;;4608:25;4623:9;4608:10;;:14;;:25;;;;:::i;:::-;4595:10;:38;;;;4646:37;4663:11;4676:6;4646:16;:37::i;:::-;4729:11;4699:61;;4715:12;:10;:12::i;:::-;4699:61;;;4742:9;4753:6;4699:61;;;;;;;:::i;:::-;;;;;;;;4773:46;4796:11;4809:9;4773:22;:46::i;:::-;4832:15;:13;:15::i;:::-;4858:45;4880:11;4893:9;4858:21;:45::i;:::-;4357:554;;2303:20:0::0;:18;:20::i;:::-;4289:622:8;:::o;3784:85::-;3829:7;3856:5;;3849:12;;3784:85;:::o;3937:87::-;3979:7;4006:10;;3999:17;;3937:87;:::o;3605:89::-;3644:15;3679:7;;;;;;;;;;;3672:14;;3605:89;:::o;1571:172:9:-;1619:7;1646:89;1655:7;:5;:7::i;:::-;:17;;;1673:12;;;;;;;;;;;1655:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1688:7;:5;:7::i;:::-;:17;;;1706:12;;;;;;;;;;;1728:4;1688:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1646:8;:89::i;:::-;1639:96;;1571:172;:::o;1335:91::-;1379:7;1406:12;;;;;;;;;;;1399:19;;1335:91;:::o;3446:78:8:-;3484:6;3510;;;;;;;;;;;3503:13;;3446:78;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;5464:388:8:-;5598:1;5575:25;;:11;:25;;;5567:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;5679:1;5666:9;:14;5658:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5464:388;;:::o;7856:130::-;7931:7;7958:20;7972:5;;7958:9;:13;;:20;;;;:::i;:::-;7951:27;;7856:130;;;:::o;2755:96:7:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7023:144:8:-;7119:40;7134:11;7147;7119:14;:40::i;:::-;7023:144;;:::o;7445:155::-;;;:::o;8078:88::-;8131:7;;;;;;;;;;;:16;;:27;8148:9;8131:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8078:88::o;6155:159::-;;;:::o;2629:209:0:-;1716:1;2809:7;:22;;;;2629:209::o;588:104:6:-;646:7;676:1;672;:5;:13;;684:1;672:13;;;680:1;672:13;665:20;;588:104;;;;:::o;3465:96:7:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;1941:168:9:-;2037:64;2062:12;;;;;;;;;;;2076:11;2089;2037:7;:5;:7::i;:::-;:24;;;;:64;;;;;;:::i;:::-;1941:168;;:::o;1355:203:3:-;1455:96;1475:5;1505:27;;;1534:4;1540:2;1544:5;1482:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:19;:96::i;:::-;1355:203;;;;:::o;5196:642::-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5749:1;5728:10;:17;:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5728:56;5720:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5266:572;5196:642;;:::o;4108:223:4:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:77:10;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:104::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;574:104;;;:::o;684:142::-;787:32;813:5;787:32;:::i;:::-;782:3;775:45;684:142;;:::o;832:254::-;941:4;979:2;968:9;964:18;956:26;;992:87;1076:1;1065:9;1061:17;1052:6;992:87;:::i;:::-;832:254;;;;:::o;1092:96::-;1129:7;1158:24;1176:5;1158:24;:::i;:::-;1147:35;;1092:96;;;:::o;1194:118::-;1281:24;1299:5;1281:24;:::i;:::-;1276:3;1269:37;1194:118;;:::o;1318:222::-;1411:4;1449:2;1438:9;1434:18;1426:26;;1462:71;1530:1;1519:9;1515:17;1506:6;1462:71;:::i;:::-;1318:222;;;;:::o;1627:117::-;1736:1;1733;1726:12;1873:122;1946:24;1964:5;1946:24;:::i;:::-;1939:5;1936:35;1926:63;;1985:1;1982;1975:12;1926:63;1873:122;:::o;2001:139::-;2047:5;2085:6;2072:20;2063:29;;2101:33;2128:5;2101:33;:::i;:::-;2001:139;;;;:::o;2146:329::-;2205:6;2254:2;2242:9;2233:7;2229:23;2225:32;2222:119;;;2260:79;;:::i;:::-;2222:119;2380:1;2405:53;2450:7;2441:6;2430:9;2426:22;2405:53;:::i;:::-;2395:63;;2351:117;2146:329;;;;:::o;2481:60::-;2509:3;2530:5;2523:12;;2481:60;;;:::o;2547:142::-;2597:9;2630:53;2648:34;2657:24;2675:5;2657:24;:::i;:::-;2648:34;:::i;:::-;2630:53;:::i;:::-;2617:66;;2547:142;;;:::o;2695:126::-;2745:9;2778:37;2809:5;2778:37;:::i;:::-;2765:50;;2695:126;;;:::o;2827:140::-;2891:9;2924:37;2955:5;2924:37;:::i;:::-;2911:50;;2827:140;;;:::o;2973:159::-;3074:51;3119:5;3074:51;:::i;:::-;3069:3;3062:64;2973:159;;:::o;3138:250::-;3245:4;3283:2;3272:9;3268:18;3260:26;;3296:85;3378:1;3367:9;3363:17;3354:6;3296:85;:::i;:::-;3138:250;;;;:::o;3394:332::-;3515:4;3553:2;3542:9;3538:18;3530:26;;3566:71;3634:1;3623:9;3619:17;3610:6;3566:71;:::i;:::-;3647:72;3715:2;3704:9;3700:18;3691:6;3647:72;:::i;:::-;3394:332;;;;;:::o;3732:122::-;3805:24;3823:5;3805:24;:::i;:::-;3798:5;3795:35;3785:63;;3844:1;3841;3834:12;3785:63;3732:122;:::o;3860:143::-;3917:5;3948:6;3942:13;3933:22;;3964:33;3991:5;3964:33;:::i;:::-;3860:143;;;;:::o;4009:351::-;4079:6;4128:2;4116:9;4107:7;4103:23;4099:32;4096:119;;;4134:79;;:::i;:::-;4096:119;4254:1;4279:64;4335:7;4326:6;4315:9;4311:22;4279:64;:::i;:::-;4269:74;;4225:128;4009:351;;;;:::o;4366:332::-;4487:4;4525:2;4514:9;4510:18;4502:26;;4538:71;4606:1;4595:9;4591:17;4582:6;4538:71;:::i;:::-;4619:72;4687:2;4676:9;4672:18;4663:6;4619:72;:::i;:::-;4366:332;;;;;:::o;4704:169::-;4788:11;4822:6;4817:3;4810:19;4862:4;4857:3;4853:14;4838:29;;4704:169;;;;:::o;4879:181::-;5019:33;5015:1;5007:6;5003:14;4996:57;4879:181;:::o;5066:366::-;5208:3;5229:67;5293:2;5288:3;5229:67;:::i;:::-;5222:74;;5305:93;5394:3;5305:93;:::i;:::-;5423:2;5418:3;5414:12;5407:19;;5066:366;;;:::o;5438:419::-;5604:4;5642:2;5631:9;5627:18;5619:26;;5691:9;5685:4;5681:20;5677:1;5666:9;5662:17;5655:47;5719:131;5845:4;5719:131;:::i;:::-;5711:139;;5438:419;;;:::o;5863:229::-;6003:34;5999:1;5991:6;5987:14;5980:58;6072:12;6067:2;6059:6;6055:15;6048:37;5863:229;:::o;6098:366::-;6240:3;6261:67;6325:2;6320:3;6261:67;:::i;:::-;6254:74;;6337:93;6426:3;6337:93;:::i;:::-;6455:2;6450:3;6446:12;6439:19;;6098:366;;;:::o;6470:419::-;6636:4;6674:2;6663:9;6659:18;6651:26;;6723:9;6717:4;6713:20;6709:1;6698:9;6694:17;6687:47;6751:131;6877:4;6751:131;:::i;:::-;6743:139;;6470:419;;;:::o;6895:175::-;7035:27;7031:1;7023:6;7019:14;7012:51;6895:175;:::o;7076:366::-;7218:3;7239:67;7303:2;7298:3;7239:67;:::i;:::-;7232:74;;7315:93;7404:3;7315:93;:::i;:::-;7433:2;7428:3;7424:12;7417:19;;7076:366;;;:::o;7448:419::-;7614:4;7652:2;7641:9;7637:18;7629:26;;7701:9;7695:4;7691:20;7687:1;7676:9;7672:17;7665:47;7729:131;7855:4;7729:131;:::i;:::-;7721:139;;7448:419;;;:::o;7873:180::-;7921:77;7918:1;7911:88;8018:4;8015:1;8008:15;8042:4;8039:1;8032:15;8059:191;8099:3;8118:20;8136:1;8118:20;:::i;:::-;8113:25;;8152:20;8170:1;8152:20;:::i;:::-;8147:25;;8195:1;8192;8188:9;8181:16;;8216:3;8213:1;8210:10;8207:36;;;8223:18;;:::i;:::-;8207:36;8059:191;;;;:::o;8256:410::-;8296:7;8319:20;8337:1;8319:20;:::i;:::-;8314:25;;8353:20;8371:1;8353:20;:::i;:::-;8348:25;;8408:1;8405;8401:9;8430:30;8448:11;8430:30;:::i;:::-;8419:41;;8609:1;8600:7;8596:15;8593:1;8590:22;8570:1;8563:9;8543:83;8520:139;;8639:18;;:::i;:::-;8520:139;8304:362;8256:410;;;;:::o;8672:442::-;8821:4;8859:2;8848:9;8844:18;8836:26;;8872:71;8940:1;8929:9;8925:17;8916:6;8872:71;:::i;:::-;8953:72;9021:2;9010:9;9006:18;8997:6;8953:72;:::i;:::-;9035;9103:2;9092:9;9088:18;9079:6;9035:72;:::i;:::-;8672:442;;;;;;:::o;9120:90::-;9154:7;9197:5;9190:13;9183:21;9172:32;;9120:90;;;:::o;9216:116::-;9286:21;9301:5;9286:21;:::i;:::-;9279:5;9276:32;9266:60;;9322:1;9319;9312:12;9266:60;9216:116;:::o;9338:137::-;9392:5;9423:6;9417:13;9408:22;;9439:30;9463:5;9439:30;:::i;:::-;9338:137;;;;:::o;9481:345::-;9548:6;9597:2;9585:9;9576:7;9572:23;9568:32;9565:119;;;9603:79;;:::i;:::-;9565:119;9723:1;9748:61;9801:7;9792:6;9781:9;9777:22;9748:61;:::i;:::-;9738:71;;9694:125;9481:345;;;;:::o;9832:229::-;9972:34;9968:1;9960:6;9956:14;9949:58;10041:12;10036:2;10028:6;10024:15;10017:37;9832:229;:::o;10067:366::-;10209:3;10230:67;10294:2;10289:3;10230:67;:::i;:::-;10223:74;;10306:93;10395:3;10306:93;:::i;:::-;10424:2;10419:3;10415:12;10408:19;;10067:366;;;:::o;10439:419::-;10605:4;10643:2;10632:9;10628:18;10620:26;;10692:9;10686:4;10682:20;10678:1;10667:9;10663:17;10656:47;10720:131;10846:4;10720:131;:::i;:::-;10712:139;;10439:419;;;:::o;10864:225::-;11004:34;11000:1;10992:6;10988:14;10981:58;11073:8;11068:2;11060:6;11056:15;11049:33;10864:225;:::o;11095:366::-;11237:3;11258:67;11322:2;11317:3;11258:67;:::i;:::-;11251:74;;11334:93;11423:3;11334:93;:::i;:::-;11452:2;11447:3;11443:12;11436:19;;11095:366;;;:::o;11467:419::-;11633:4;11671:2;11660:9;11656:18;11648:26;;11720:9;11714:4;11710:20;11706:1;11695:9;11691:17;11684:47;11748:131;11874:4;11748:131;:::i;:::-;11740:139;;11467:419;;;:::o;11892:98::-;11943:6;11977:5;11971:12;11961:22;;11892:98;;;:::o;11996:147::-;12097:11;12134:3;12119:18;;11996:147;;;;:::o;12149:246::-;12230:1;12240:113;12254:6;12251:1;12248:13;12240:113;;;12339:1;12334:3;12330:11;12324:18;12320:1;12315:3;12311:11;12304:39;12276:2;12273:1;12269:10;12264:15;;12240:113;;;12387:1;12378:6;12373:3;12369:16;12362:27;12211:184;12149:246;;;:::o;12401:386::-;12505:3;12533:38;12565:5;12533:38;:::i;:::-;12587:88;12668:6;12663:3;12587:88;:::i;:::-;12580:95;;12684:65;12742:6;12737:3;12730:4;12723:5;12719:16;12684:65;:::i;:::-;12774:6;12769:3;12765:16;12758:23;;12509:278;12401:386;;;;:::o;12793:271::-;12923:3;12945:93;13034:3;13025:6;12945:93;:::i;:::-;12938:100;;13055:3;13048:10;;12793:271;;;;:::o;13070:179::-;13210:31;13206:1;13198:6;13194:14;13187:55;13070:179;:::o;13255:366::-;13397:3;13418:67;13482:2;13477:3;13418:67;:::i;:::-;13411:74;;13494:93;13583:3;13494:93;:::i;:::-;13612:2;13607:3;13603:12;13596:19;;13255:366;;;:::o;13627:419::-;13793:4;13831:2;13820:9;13816:18;13808:26;;13880:9;13874:4;13870:20;13866:1;13855:9;13851:17;13844:47;13908:131;14034:4;13908:131;:::i;:::-;13900:139;;13627:419;;;:::o;14052:99::-;14104:6;14138:5;14132:12;14122:22;;14052:99;;;:::o;14157:102::-;14198:6;14249:2;14245:7;14240:2;14233:5;14229:14;14225:28;14215:38;;14157:102;;;:::o;14265:377::-;14353:3;14381:39;14414:5;14381:39;:::i;:::-;14436:71;14500:6;14495:3;14436:71;:::i;:::-;14429:78;;14516:65;14574:6;14569:3;14562:4;14555:5;14551:16;14516:65;:::i;:::-;14606:29;14628:6;14606:29;:::i;:::-;14601:3;14597:39;14590:46;;14357:285;14265:377;;;;:::o;14648:313::-;14761:4;14799:2;14788:9;14784:18;14776:26;;14848:9;14842:4;14838:20;14834:1;14823:9;14819:17;14812:47;14876:78;14949:4;14940:6;14876:78;:::i;:::-;14868:86;;14648:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "885200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"buyTokens(address)": "infinite",
								"rate()": "2433",
								"remainingTokens()": "infinite",
								"token()": "infinite",
								"tokenWallet()": "2537",
								"wallet()": "2560",
								"weiRaised()": "2455"
							},
							"internal": {
								"_deliverTokens(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 487,
									"end": 2112,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 487,
									"end": 2112,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 487,
									"end": 2112,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 926,
									"end": 1240,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1063,
									"end": 1069,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1079,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1081,
									"end": 1088,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2644,
									"end": 2645,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2635,
									"end": 2641,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2635,
									"end": 2645,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 2627,
									"end": 2670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2689,
									"end": 2697,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2681,
									"end": 2753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2800,
									"end": 2801,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2780,
									"end": 2787,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 2764,
									"end": 2843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2864,
									"end": 2870,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2856,
									"end": 2861,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2888,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2881,
									"end": 2888,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2919,
									"end": 2926,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2916,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2910,
									"end": 2916,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1134,
									"end": 1135,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1109,
									"end": 1136,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1109,
									"end": 1136,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1109,
									"end": 1122,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1109,
									"end": 1136,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1109,
									"end": 1136,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1109,
									"end": 1136,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1101,
									"end": 1193,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1101,
									"end": 1193,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1219,
									"end": 1232,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1216,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1204,
									"end": 1216,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1232,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 926,
									"end": 1240,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 487,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 487,
									"end": 2112,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1309,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1205,
									"end": 1309,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1250,
									"end": 1257,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 1303,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1297,
									"end": 1302,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1279,
									"end": 1303,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1279,
									"end": 1303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1279,
									"end": 1303,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1279,
									"end": 1303,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1268,
									"end": 1303,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1268,
									"end": 1303,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1309,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1309,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1309,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1315,
									"end": 1453,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1315,
									"end": 1453,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1396,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1422,
									"end": 1427,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1396,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1396,
									"end": 1428,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1396,
									"end": 1428,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1396,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1389,
									"end": 1394,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1386,
									"end": 1429,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1376,
									"end": 1447,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1376,
									"end": 1447,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1443,
									"end": 1444,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1440,
									"end": 1441,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1433,
									"end": 1445,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1376,
									"end": 1447,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1376,
									"end": 1447,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1315,
									"end": 1453,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1315,
									"end": 1453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1459,
									"end": 1618,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1459,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1524,
									"end": 1529,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1555,
									"end": 1561,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1549,
									"end": 1562,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1571,
									"end": 1612,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1606,
									"end": 1611,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1571,
									"end": 1612,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1571,
									"end": 1612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1571,
									"end": 1612,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1571,
									"end": 1612,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1459,
									"end": 1618,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1459,
									"end": 1618,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1459,
									"end": 1618,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1459,
									"end": 1618,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1459,
									"end": 1618,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1624,
									"end": 1734,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1624,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1675,
									"end": 1682,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1704,
									"end": 1728,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1722,
									"end": 1727,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1704,
									"end": 1728,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1704,
									"end": 1728,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1704,
									"end": 1728,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1704,
									"end": 1728,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1728,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1728,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1624,
									"end": 1734,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1624,
									"end": 1734,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1624,
									"end": 1734,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1624,
									"end": 1734,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1740,
									"end": 1890,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1740,
									"end": 1890,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1865,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 1859,
									"end": 1864,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1865,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1827,
									"end": 1865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1865,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 1827,
									"end": 1865,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1820,
									"end": 1825,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1817,
									"end": 1866,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1807,
									"end": 1884,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1807,
									"end": 1884,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1880,
									"end": 1881,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1877,
									"end": 1878,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1870,
									"end": 1882,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1807,
									"end": 1884,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1807,
									"end": 1884,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1740,
									"end": 1890,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1740,
									"end": 1890,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 2067,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1896,
									"end": 2067,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 1972,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1998,
									"end": 2004,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1992,
									"end": 2005,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1983,
									"end": 2005,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1983,
									"end": 2005,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2014,
									"end": 2061,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 2055,
									"end": 2060,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2014,
									"end": 2061,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 2014,
									"end": 2061,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2014,
									"end": 2061,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 2014,
									"end": 2061,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 2067,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 2067,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 2067,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 2067,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 2067,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2073,
									"end": 2937,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2073,
									"end": 2937,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2200,
									"end": 2206,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2208,
									"end": 2214,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2216,
									"end": 2222,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2265,
									"end": 2268,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2253,
									"end": 2262,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2244,
									"end": 2251,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2240,
									"end": 2263,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2236,
									"end": 2269,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2233,
									"end": 2353,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2233,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 2233,
									"end": 2353,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2272,
									"end": 2351,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2272,
									"end": 2351,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2272,
									"end": 2351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2272,
									"end": 2351,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2272,
									"end": 2351,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2233,
									"end": 2353,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 2233,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2392,
									"end": 2393,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2417,
									"end": 2481,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 2473,
									"end": 2480,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2464,
									"end": 2470,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2453,
									"end": 2462,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2449,
									"end": 2471,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2417,
									"end": 2481,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 2417,
									"end": 2481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2417,
									"end": 2481,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 2417,
									"end": 2481,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2481,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2481,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2363,
									"end": 2491,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2530,
									"end": 2532,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2556,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 2612,
									"end": 2619,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2603,
									"end": 2609,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2592,
									"end": 2601,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2588,
									"end": 2610,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2556,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2556,
									"end": 2620,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2556,
									"end": 2620,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 2556,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2620,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2620,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2501,
									"end": 2630,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2669,
									"end": 2671,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2695,
									"end": 2767,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 2759,
									"end": 2766,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2750,
									"end": 2756,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2739,
									"end": 2748,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2735,
									"end": 2757,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2695,
									"end": 2767,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 2695,
									"end": 2767,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2695,
									"end": 2767,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 2695,
									"end": 2767,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2685,
									"end": 2767,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2685,
									"end": 2767,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2640,
									"end": 2777,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2816,
									"end": 2818,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2842,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 2912,
									"end": 2919,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2903,
									"end": 2909,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2892,
									"end": 2901,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2888,
									"end": 2910,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2842,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2842,
									"end": 2920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2842,
									"end": 2920,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 2842,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2832,
									"end": 2920,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2832,
									"end": 2920,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2787,
									"end": 2930,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2073,
									"end": 2937,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2073,
									"end": 2937,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 2073,
									"end": 2937,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2073,
									"end": 2937,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2073,
									"end": 2937,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2073,
									"end": 2937,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2073,
									"end": 2937,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2073,
									"end": 2937,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2943,
									"end": 3112,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 2943,
									"end": 3112,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3027,
									"end": 3038,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3061,
									"end": 3067,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3056,
									"end": 3059,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3049,
									"end": 3068,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3101,
									"end": 3105,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3096,
									"end": 3099,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3092,
									"end": 3106,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3077,
									"end": 3106,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3077,
									"end": 3106,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2943,
									"end": 3112,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2943,
									"end": 3112,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2943,
									"end": 3112,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2943,
									"end": 3112,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2943,
									"end": 3112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3118,
									"end": 3288,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3118,
									"end": 3288,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3258,
									"end": 3280,
									"name": "PUSH",
									"source": 10,
									"value": "43726F776473616C653A20726174652069732030000000000000000000000000"
								},
								{
									"begin": 3254,
									"end": 3255,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3246,
									"end": 3252,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3242,
									"end": 3256,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3235,
									"end": 3281,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3118,
									"end": 3288,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3118,
									"end": 3288,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3294,
									"end": 3660,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 3294,
									"end": 3660,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3439,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3457,
									"end": 3524,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 3521,
									"end": 3523,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 3516,
									"end": 3519,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3457,
									"end": 3524,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 3457,
									"end": 3524,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3457,
									"end": 3524,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 3457,
									"end": 3524,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3450,
									"end": 3524,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3450,
									"end": 3524,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 3622,
									"end": 3625,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3533,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3626,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 3533,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3653,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3646,
									"end": 3649,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3642,
									"end": 3654,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3635,
									"end": 3654,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3635,
									"end": 3654,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3294,
									"end": 3660,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3294,
									"end": 3660,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3294,
									"end": 3660,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3294,
									"end": 3660,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3666,
									"end": 4085,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 3666,
									"end": 4085,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3832,
									"end": 3836,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3870,
									"end": 3872,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3859,
									"end": 3868,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3855,
									"end": 3873,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3847,
									"end": 3873,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3847,
									"end": 3873,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3919,
									"end": 3928,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3913,
									"end": 3917,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3909,
									"end": 3929,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3905,
									"end": 3906,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3894,
									"end": 3903,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3890,
									"end": 3907,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3883,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3947,
									"end": 4078,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4073,
									"end": 4077,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3947,
									"end": 4078,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 3947,
									"end": 4078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3947,
									"end": 4078,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 3947,
									"end": 4078,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3939,
									"end": 4078,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3939,
									"end": 4078,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3666,
									"end": 4085,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3666,
									"end": 4085,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3666,
									"end": 4085,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3666,
									"end": 4085,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4091,
									"end": 4315,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 4091,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4231,
									"end": 4265,
									"name": "PUSH",
									"source": 10,
									"value": "43726F776473616C653A2077616C6C657420697320746865207A65726F206164"
								},
								{
									"begin": 4227,
									"end": 4228,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4219,
									"end": 4225,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4215,
									"end": 4229,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4208,
									"end": 4266,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4307,
									"name": "PUSH",
									"source": 10,
									"value": "6472657373000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4295,
									"end": 4297,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4287,
									"end": 4293,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4283,
									"end": 4298,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4276,
									"end": 4308,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4091,
									"end": 4315,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4091,
									"end": 4315,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4321,
									"end": 4687,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 4321,
									"end": 4687,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4463,
									"end": 4466,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4484,
									"end": 4551,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4548,
									"end": 4550,
									"name": "PUSH",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 4543,
									"end": 4546,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4484,
									"end": 4551,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 4484,
									"end": 4551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4484,
									"end": 4551,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4484,
									"end": 4551,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4477,
									"end": 4551,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4477,
									"end": 4551,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4560,
									"end": 4653,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 4649,
									"end": 4652,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4560,
									"end": 4653,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 4560,
									"end": 4653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4560,
									"end": 4653,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 4560,
									"end": 4653,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4678,
									"end": 4680,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4673,
									"end": 4676,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4669,
									"end": 4681,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4662,
									"end": 4681,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4662,
									"end": 4681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4321,
									"end": 4687,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4321,
									"end": 4687,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4321,
									"end": 4687,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4321,
									"end": 4687,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4693,
									"end": 5112,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 4693,
									"end": 5112,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4859,
									"end": 4863,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4897,
									"end": 4899,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4886,
									"end": 4895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4882,
									"end": 4900,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4874,
									"end": 4900,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4874,
									"end": 4900,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4946,
									"end": 4955,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4940,
									"end": 4944,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4936,
									"end": 4956,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4932,
									"end": 4933,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4921,
									"end": 4930,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4917,
									"end": 4934,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4910,
									"end": 4957,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4974,
									"end": 5105,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 5100,
									"end": 5104,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4974,
									"end": 5105,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 4974,
									"end": 5105,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4974,
									"end": 5105,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 4974,
									"end": 5105,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4966,
									"end": 5105,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4966,
									"end": 5105,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4693,
									"end": 5112,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4693,
									"end": 5112,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4693,
									"end": 5112,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4693,
									"end": 5112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5118,
									"end": 5341,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 5118,
									"end": 5341,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5258,
									"end": 5292,
									"name": "PUSH",
									"source": 10,
									"value": "43726F776473616C653A20746F6B656E20697320746865207A65726F20616464"
								},
								{
									"begin": 5254,
									"end": 5255,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5246,
									"end": 5252,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5242,
									"end": 5256,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5235,
									"end": 5293,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5327,
									"end": 5333,
									"name": "PUSH",
									"source": 10,
									"value": "7265737300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5322,
									"end": 5324,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5314,
									"end": 5320,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5310,
									"end": 5325,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5303,
									"end": 5334,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5118,
									"end": 5341,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5118,
									"end": 5341,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5347,
									"end": 5713,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 5347,
									"end": 5713,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5489,
									"end": 5492,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5510,
									"end": 5577,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 5574,
									"end": 5576,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5569,
									"end": 5572,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5510,
									"end": 5577,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 5510,
									"end": 5577,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5510,
									"end": 5577,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 5510,
									"end": 5577,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5503,
									"end": 5577,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5503,
									"end": 5577,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5586,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 5675,
									"end": 5678,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5586,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 5586,
									"end": 5679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5586,
									"end": 5679,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 5586,
									"end": 5679,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5704,
									"end": 5706,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5699,
									"end": 5702,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5695,
									"end": 5707,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5688,
									"end": 5707,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5688,
									"end": 5707,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5347,
									"end": 5713,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5347,
									"end": 5713,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5347,
									"end": 5713,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5347,
									"end": 5713,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5719,
									"end": 6138,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 5719,
									"end": 6138,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5885,
									"end": 5889,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5923,
									"end": 5925,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5912,
									"end": 5921,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5908,
									"end": 5926,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5900,
									"end": 5926,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5900,
									"end": 5926,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5972,
									"end": 5981,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5966,
									"end": 5970,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5962,
									"end": 5982,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5958,
									"end": 5959,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5947,
									"end": 5956,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5943,
									"end": 5960,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5936,
									"end": 5983,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6000,
									"end": 6131,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 6126,
									"end": 6130,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6000,
									"end": 6131,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 6000,
									"end": 6131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6000,
									"end": 6131,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 6000,
									"end": 6131,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5992,
									"end": 6131,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5992,
									"end": 6131,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5719,
									"end": 6138,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5719,
									"end": 6138,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5719,
									"end": 6138,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5719,
									"end": 6138,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6144,
									"end": 6383,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 6144,
									"end": 6383,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6284,
									"end": 6318,
									"name": "PUSH",
									"source": 10,
									"value": "416C6C6F77616E636543726F776473616C653A20746F6B656E2077616C6C6574"
								},
								{
									"begin": 6280,
									"end": 6281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6278,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6268,
									"end": 6282,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6261,
									"end": 6319,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6353,
									"end": 6375,
									"name": "PUSH",
									"source": 10,
									"value": "20697320746865207A65726F2061646472657373000000000000000000000000"
								},
								{
									"begin": 6348,
									"end": 6350,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6340,
									"end": 6346,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6336,
									"end": 6351,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6329,
									"end": 6376,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6144,
									"end": 6383,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6144,
									"end": 6383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6389,
									"end": 6755,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 6389,
									"end": 6755,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6531,
									"end": 6534,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6619,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 6616,
									"end": 6618,
									"name": "PUSH",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 6611,
									"end": 6614,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6552,
									"end": 6619,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 6552,
									"end": 6619,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6552,
									"end": 6619,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 6552,
									"end": 6619,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6545,
									"end": 6619,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6545,
									"end": 6619,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6628,
									"end": 6721,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 6717,
									"end": 6720,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6628,
									"end": 6721,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 6628,
									"end": 6721,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6628,
									"end": 6721,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 6628,
									"end": 6721,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6746,
									"end": 6748,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 6741,
									"end": 6744,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6737,
									"end": 6749,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6730,
									"end": 6749,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6730,
									"end": 6749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6389,
									"end": 6755,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6389,
									"end": 6755,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6389,
									"end": 6755,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6389,
									"end": 6755,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6761,
									"end": 7180,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 6761,
									"end": 7180,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6927,
									"end": 6931,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6965,
									"end": 6967,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6954,
									"end": 6963,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6950,
									"end": 6968,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6942,
									"end": 6968,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6942,
									"end": 6968,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7014,
									"end": 7023,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7008,
									"end": 7012,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7004,
									"end": 7024,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 7000,
									"end": 7001,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6989,
									"end": 6998,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6985,
									"end": 7002,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6978,
									"end": 7025,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7042,
									"end": 7173,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 7168,
									"end": 7172,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7042,
									"end": 7173,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 7042,
									"end": 7173,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7042,
									"end": 7173,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 7042,
									"end": 7173,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7034,
									"end": 7173,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7034,
									"end": 7173,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6761,
									"end": 7180,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6761,
									"end": 7180,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6761,
									"end": 7180,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6761,
									"end": 7180,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 487,
									"end": 2112,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 487,
									"end": 2112,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 487,
									"end": 2112,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 487,
									"end": 2112,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 487,
									"end": 2112,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 487,
									"end": 2112,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 2112,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 487,
									"end": 2112,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 2112,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f2a44e98626d3cacd8409f8c811b446fc29db1d6b3ba57dad8664784ad8014bd64736f6c63430008150033",
									".code": [
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH",
											"source": 9,
											"value": "BF583903"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH",
											"source": 9,
											"value": "BF583903"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH",
											"source": 9,
											"value": "BFF99C6C"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH",
											"source": 9,
											"value": "EC8AC4D8"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH",
											"source": 9,
											"value": "FC0C546A"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH",
											"source": 9,
											"value": "2C4E722E"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH",
											"source": 9,
											"value": "4042B66F"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH",
											"source": 9,
											"value": "521EB273"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3361,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3361,
											"end": 3373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3351,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3280,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3280,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3270,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3270,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 487,
											"end": 2112,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1571,
											"end": 1743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1571,
											"end": 1743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1335,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1335,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4397,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4397,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4397,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 4429,
											"end": 4440,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4442,
											"end": 4451,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 4408,
											"end": 4452,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 4547,
											"end": 4556,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4531,
											"end": 4546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4531,
											"end": 4557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4623,
											"end": 4632,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4608,
											"end": 4618,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4608,
											"end": 4622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4663,
											"end": 4674,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4676,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4646,
											"end": 4683,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4729,
											"end": 4740,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 4715,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 4715,
											"end": 4727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B"
										},
										{
											"begin": 4742,
											"end": 4751,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4753,
											"end": 4759,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4699,
											"end": 4760,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4796,
											"end": 4807,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4809,
											"end": 4818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 4773,
											"end": 4819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 4832,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 4832,
											"end": 4847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 4880,
											"end": 4891,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 4902,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 4858,
											"end": 4903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4357,
											"end": 4911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4357,
											"end": 4911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3829,
											"end": 3836,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3856,
											"end": 3861,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3856,
											"end": 3861,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 3986,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4016,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4006,
											"end": 4016,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3644,
											"end": 3659,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1655,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1655,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1655,
											"end": 1662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1662,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1655,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1672,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1655,
											"end": 1672,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1672,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1655,
											"end": 1686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1655,
											"end": 1686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1688,
											"end": 1695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1695,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1688,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1688,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1688,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1688,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1646,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1646,
											"end": 1735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1646,
											"end": 1735,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1646,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 1735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 1735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1418,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1406,
											"end": 1418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1418,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1418,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1406,
											"end": 1418,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1418,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1418,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1406,
											"end": 1418,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3484,
											"end": 3490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3516,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5575,
											"end": 5586,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5567,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5679,
											"end": 5680,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5675,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5680,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5658,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7931,
											"end": 7938,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 7972,
											"end": 7977,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7972,
											"end": 7977,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7967,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 7958,
											"end": 7971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7978,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 7134,
											"end": 7145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7147,
											"end": 7158,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 7119,
											"end": 7159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7159,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 7119,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8078,
											"end": 8166,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 8078,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8147,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8147,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "8FC"
										},
										{
											"begin": 8148,
											"end": 8157,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8078,
											"end": 8166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 692,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 588,
											"end": 692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 646,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 672,
											"end": 673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 672,
											"end": 677,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 672,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 684,
											"end": 685,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 672,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 672,
											"end": 685,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 672,
											"end": 685,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 665,
											"end": 685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 588,
											"end": 692,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 588,
											"end": 692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 588,
											"end": 692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 588,
											"end": 692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 588,
											"end": 692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 2109,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1941,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2087,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2100,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2037,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 2037,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2044,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2037,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2101,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2101,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2101,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2101,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2101,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2037,
											"end": 2101,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2101,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2037,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1941,
											"end": 2109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1941,
											"end": 2109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1941,
											"end": 2109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1475,
											"end": 1480,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1538,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1540,
											"end": 1542,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1549,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1482,
											"end": 1550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1455,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5615,
											"end": 5638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5738,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5745,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5750,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5754,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5720,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5266,
											"end": 5838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5196,
											"end": 5838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4253,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4323,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4272,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5387,
											"end": 5392,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 5354,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5506,
											"end": 5511,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5487,
											"end": 5518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 5562,
											"end": 5568,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5579,
											"end": 5589,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5535,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5535,
											"end": 5604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8121,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 8121,
											"end": 8139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 8113,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 8249,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 9324,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 574,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 574,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 619,
											"end": 626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 666,
											"end": 671,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 648,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 648,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 648,
											"end": 672,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 648,
											"end": 672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 637,
											"end": 672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 637,
											"end": 672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 574,
											"end": 678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 574,
											"end": 678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 574,
											"end": 678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 574,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 684,
											"end": 826,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 684,
											"end": 826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 787,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 787,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 787,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 787,
											"end": 819,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 787,
											"end": 819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 782,
											"end": 785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 775,
											"end": 820,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 684,
											"end": 826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 684,
											"end": 826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 684,
											"end": 826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 941,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 981,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 968,
											"end": 977,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 964,
											"end": 982,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 956,
											"end": 982,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 956,
											"end": 982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 1076,
											"end": 1077,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1078,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 992,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 832,
											"end": 1086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1092,
											"end": 1188,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 1092,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 1176,
											"end": 1181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 1158,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1182,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 1158,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1147,
											"end": 1182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1147,
											"end": 1182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1092,
											"end": 1188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1092,
											"end": 1188,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1092,
											"end": 1188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1092,
											"end": 1188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1312,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 1194,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1281,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 1299,
											"end": 1304,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1281,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 1281,
											"end": 1305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1281,
											"end": 1305,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 1281,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1279,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1269,
											"end": 1306,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1540,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1318,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1415,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1451,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1434,
											"end": 1452,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1452,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 1530,
											"end": 1531,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1528,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1515,
											"end": 1532,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 1462,
											"end": 1533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1533,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 1462,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1540,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1540,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1627,
											"end": 1744,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 1627,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1738,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1873,
											"end": 1995,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 1873,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1964,
											"end": 1969,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 1946,
											"end": 1970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 1970,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1946,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1939,
											"end": 1944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 1986,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1987,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1873,
											"end": 1995,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1873,
											"end": 1995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2140,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 2001,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2091,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2092,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2063,
											"end": 2092,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2063,
											"end": 2092,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 2128,
											"end": 2133,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2101,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2134,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 2101,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2140,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2475,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2146,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2205,
											"end": 2211,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2256,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2229,
											"end": 2252,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2225,
											"end": 2257,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2341,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2222,
											"end": 2341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2260,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 2260,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 2260,
											"end": 2339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2260,
											"end": 2339,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 2260,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2341,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2222,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2450,
											"end": 2457,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2441,
											"end": 2447,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2439,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2426,
											"end": 2448,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 2405,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2458,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2475,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2475,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2481,
											"end": 2541,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2481,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2535,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2535,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2481,
											"end": 2541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2481,
											"end": 2541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2481,
											"end": 2541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2481,
											"end": 2541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 2689,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 2547,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2597,
											"end": 2606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2648,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2657,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2675,
											"end": 2680,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2657,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 2657,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2657,
											"end": 2681,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2657,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2648,
											"end": 2682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2682,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2648,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2630,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 2630,
											"end": 2683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2630,
											"end": 2683,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2630,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2617,
											"end": 2683,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2617,
											"end": 2683,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 2689,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 2689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 2689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 2689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 2821,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 2695,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2745,
											"end": 2754,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2809,
											"end": 2814,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2778,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 2778,
											"end": 2815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2778,
											"end": 2815,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2778,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2765,
											"end": 2815,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2765,
											"end": 2815,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 2821,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 2821,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 2821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 2821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2827,
											"end": 2967,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2827,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2955,
											"end": 2960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 2924,
											"end": 2961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2961,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2924,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2827,
											"end": 2967,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2827,
											"end": 2967,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2827,
											"end": 2967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2827,
											"end": 2967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2973,
											"end": 3132,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 2973,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3119,
											"end": 3124,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 3074,
											"end": 3125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3074,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3069,
											"end": 3072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3062,
											"end": 3126,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2973,
											"end": 3132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2973,
											"end": 3132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2973,
											"end": 3132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3388,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 3138,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3245,
											"end": 3249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3285,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3281,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3268,
											"end": 3286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3286,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3286,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3296,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3378,
											"end": 3379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3354,
											"end": 3360,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3296,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 3296,
											"end": 3381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3296,
											"end": 3381,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3296,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3388,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3388,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3726,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 3394,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3519,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3555,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3538,
											"end": 3556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3530,
											"end": 3556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3530,
											"end": 3556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3636,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3616,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3566,
											"end": 3637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3637,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3566,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3715,
											"end": 3717,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 3713,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3697,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3647,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3719,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3647,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3726,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3726,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3732,
											"end": 3854,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 3732,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3823,
											"end": 3828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 3805,
											"end": 3829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3829,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3805,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3830,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 3785,
											"end": 3848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3845,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3841,
											"end": 3842,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 3846,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3848,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 3785,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3732,
											"end": 3854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3732,
											"end": 3854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 4003,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 3860,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 3922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3942,
											"end": 3955,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 3955,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 3955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3991,
											"end": 3996,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 3964,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 3997,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3964,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 4003,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 4003,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 4003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 4003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 4003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4360,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 4009,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4079,
											"end": 4085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4107,
											"end": 4114,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4103,
											"end": 4126,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4131,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4215,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4096,
											"end": 4215,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4134,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4134,
											"end": 4213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4213,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4134,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4215,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4096,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4255,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4279,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4335,
											"end": 4342,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4326,
											"end": 4332,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4315,
											"end": 4324,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4311,
											"end": 4333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 4279,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4343,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4279,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4269,
											"end": 4343,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4269,
											"end": 4343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4225,
											"end": 4353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4360,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4360,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4698,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 4366,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4491,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4525,
											"end": 4527,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4523,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4502,
											"end": 4528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4502,
											"end": 4528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4606,
											"end": 4607,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4595,
											"end": 4604,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4591,
											"end": 4608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4582,
											"end": 4588,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 4538,
											"end": 4609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4609,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4538,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4687,
											"end": 4689,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4676,
											"end": 4685,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4690,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4663,
											"end": 4669,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 4619,
											"end": 4691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4691,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4619,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4698,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4698,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4704,
											"end": 4873,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4704,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4828,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 4820,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4810,
											"end": 4829,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4866,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4857,
											"end": 4860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 4867,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4704,
											"end": 4873,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4704,
											"end": 4873,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4704,
											"end": 4873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4704,
											"end": 4873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4704,
											"end": 4873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4879,
											"end": 5060,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 4879,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5052,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 5015,
											"end": 5016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5013,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5017,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4996,
											"end": 5053,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4879,
											"end": 5060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4879,
											"end": 5060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5432,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 5066,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5208,
											"end": 5211,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5229,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5288,
											"end": 5291,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5229,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 5229,
											"end": 5296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5229,
											"end": 5296,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5229,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5222,
											"end": 5296,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5222,
											"end": 5296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5305,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5394,
											"end": 5397,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5305,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 5305,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5305,
											"end": 5398,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5305,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5423,
											"end": 5425,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5418,
											"end": 5421,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5414,
											"end": 5426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 5426,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 5426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5432,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5432,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5857,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 5438,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5604,
											"end": 5608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5644,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5631,
											"end": 5640,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5627,
											"end": 5645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5619,
											"end": 5645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5619,
											"end": 5645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5685,
											"end": 5689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5677,
											"end": 5678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5675,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5679,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5655,
											"end": 5702,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5719,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5845,
											"end": 5849,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5719,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 5719,
											"end": 5850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5719,
											"end": 5850,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5719,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5850,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5857,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5863,
											"end": 6092,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 5863,
											"end": 6092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 10,
											"value": "43726F776473616C653A2062656E656669636961727920697320746865207A65"
										},
										{
											"begin": 5999,
											"end": 6000,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 5997,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 6001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 6038,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6072,
											"end": 6084,
											"name": "PUSH",
											"source": 10,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 6067,
											"end": 6069,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6059,
											"end": 6065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6055,
											"end": 6070,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6085,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5863,
											"end": 6092,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5863,
											"end": 6092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6098,
											"end": 6464,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 6098,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6240,
											"end": 6243,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6261,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 6320,
											"end": 6323,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6261,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 6261,
											"end": 6328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6261,
											"end": 6328,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 6261,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6254,
											"end": 6328,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6254,
											"end": 6328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6337,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 6426,
											"end": 6429,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6337,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 6337,
											"end": 6430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6337,
											"end": 6430,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 6337,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6455,
											"end": 6457,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6450,
											"end": 6453,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6446,
											"end": 6458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6098,
											"end": 6464,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6098,
											"end": 6464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6098,
											"end": 6464,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6098,
											"end": 6464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6889,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 6470,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6636,
											"end": 6640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6674,
											"end": 6676,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6663,
											"end": 6672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6659,
											"end": 6677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6651,
											"end": 6677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6651,
											"end": 6677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6717,
											"end": 6721,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6713,
											"end": 6733,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6709,
											"end": 6710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6698,
											"end": 6707,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6694,
											"end": 6711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6734,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6751,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 6877,
											"end": 6881,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6751,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 6751,
											"end": 6882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6751,
											"end": 6882,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 6751,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6743,
											"end": 6882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6743,
											"end": 6882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6889,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6895,
											"end": 7070,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 6895,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7035,
											"end": 7062,
											"name": "PUSH",
											"source": 10,
											"value": "43726F776473616C653A20776569416D6F756E74206973203000000000000000"
										},
										{
											"begin": 7031,
											"end": 7032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7033,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7063,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6895,
											"end": 7070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6895,
											"end": 7070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7076,
											"end": 7442,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 7076,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7218,
											"end": 7221,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7239,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7303,
											"end": 7305,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 7298,
											"end": 7301,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 7239,
											"end": 7306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7306,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7239,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7232,
											"end": 7306,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7232,
											"end": 7306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7315,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7404,
											"end": 7407,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7315,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 7315,
											"end": 7408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7315,
											"end": 7408,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7315,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7433,
											"end": 7435,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7431,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7424,
											"end": 7436,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7417,
											"end": 7436,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7417,
											"end": 7436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7076,
											"end": 7442,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7076,
											"end": 7442,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7076,
											"end": 7442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7076,
											"end": 7442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7448,
											"end": 7867,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 7448,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7652,
											"end": 7654,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7641,
											"end": 7650,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7655,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7629,
											"end": 7655,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7629,
											"end": 7655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7701,
											"end": 7710,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7695,
											"end": 7699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7711,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7687,
											"end": 7688,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7676,
											"end": 7685,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7712,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 7855,
											"end": 7859,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 7729,
											"end": 7860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 7860,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 7729,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7860,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7860,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7448,
											"end": 7867,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7448,
											"end": 7867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7448,
											"end": 7867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7448,
											"end": 7867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7873,
											"end": 8053,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 7873,
											"end": 8053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7998,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7918,
											"end": 7919,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7911,
											"end": 7999,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8018,
											"end": 8022,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 8015,
											"end": 8016,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8008,
											"end": 8023,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8042,
											"end": 8046,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8039,
											"end": 8040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8032,
											"end": 8047,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8059,
											"end": 8250,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 8059,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8099,
											"end": 8102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 8118,
											"end": 8138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8138,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 8118,
											"end": 8138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8113,
											"end": 8138,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8113,
											"end": 8138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8152,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 8170,
											"end": 8171,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8152,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 8152,
											"end": 8172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8152,
											"end": 8172,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 8152,
											"end": 8172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8147,
											"end": 8172,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8147,
											"end": 8172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8195,
											"end": 8196,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8192,
											"end": 8193,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8188,
											"end": 8197,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8216,
											"end": 8219,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8213,
											"end": 8214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8210,
											"end": 8220,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8243,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 8207,
											"end": 8243,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 8223,
											"end": 8241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 8223,
											"end": 8241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8241,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 8223,
											"end": 8241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8243,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 8207,
											"end": 8243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8059,
											"end": 8250,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8059,
											"end": 8250,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8059,
											"end": 8250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8059,
											"end": 8250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8059,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8666,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 8256,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8296,
											"end": 8303,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8319,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 8337,
											"end": 8338,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8319,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 8319,
											"end": 8339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8319,
											"end": 8339,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 8319,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8314,
											"end": 8339,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8314,
											"end": 8339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8353,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 8371,
											"end": 8372,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8353,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 8353,
											"end": 8373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8353,
											"end": 8373,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 8353,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8348,
											"end": 8373,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8348,
											"end": 8373,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8408,
											"end": 8409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8405,
											"end": 8406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8430,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 8448,
											"end": 8459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8430,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 8430,
											"end": 8460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8430,
											"end": 8460,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 8430,
											"end": 8460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8609,
											"end": 8610,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8600,
											"end": 8607,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8596,
											"end": 8611,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8593,
											"end": 8594,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8590,
											"end": 8612,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8571,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8563,
											"end": 8572,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8626,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8520,
											"end": 8659,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 8520,
											"end": 8659,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8639,
											"end": 8657,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 8639,
											"end": 8657,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 8639,
											"end": 8657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8639,
											"end": 8657,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 8639,
											"end": 8657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8520,
											"end": 8659,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 8520,
											"end": 8659,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8304,
											"end": 8666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8666,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8666,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 9114,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 8672,
											"end": 9114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8821,
											"end": 8825,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8861,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8848,
											"end": 8857,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8844,
											"end": 8862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8836,
											"end": 8862,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8836,
											"end": 8862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8943,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 8940,
											"end": 8941,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8929,
											"end": 8938,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8925,
											"end": 8942,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8916,
											"end": 8922,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8943,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 8872,
											"end": 8943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8943,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 8872,
											"end": 8943,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 9021,
											"end": 9023,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9010,
											"end": 9019,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9006,
											"end": 9024,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8997,
											"end": 9003,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 8953,
											"end": 9025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9025,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 8953,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 9103,
											"end": 9105,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9092,
											"end": 9101,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9088,
											"end": 9106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9079,
											"end": 9085,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 9035,
											"end": 9107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9107,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 9035,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 9114,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 9114,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 9114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 9114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 9114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 9114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 9114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9120,
											"end": 9210,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 9120,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9154,
											"end": 9161,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9197,
											"end": 9202,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9190,
											"end": 9203,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9204,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9172,
											"end": 9204,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9172,
											"end": 9204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9120,
											"end": 9210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9120,
											"end": 9210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9120,
											"end": 9210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9120,
											"end": 9210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9216,
											"end": 9332,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 9216,
											"end": 9332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9286,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 9301,
											"end": 9306,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9286,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 9286,
											"end": 9307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9286,
											"end": 9307,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 9286,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9279,
											"end": 9284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9276,
											"end": 9308,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9266,
											"end": 9326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 9266,
											"end": 9326,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9322,
											"end": 9323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9320,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9312,
											"end": 9324,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9266,
											"end": 9326,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 9266,
											"end": 9326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9216,
											"end": 9332,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9216,
											"end": 9332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9475,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 9338,
											"end": 9475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9392,
											"end": 9397,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9423,
											"end": 9429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9417,
											"end": 9430,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9439,
											"end": 9469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 9463,
											"end": 9468,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9439,
											"end": 9469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 9439,
											"end": 9469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9439,
											"end": 9469,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 9439,
											"end": 9469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9475,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9475,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9481,
											"end": 9826,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 9481,
											"end": 9826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9548,
											"end": 9554,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9597,
											"end": 9599,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9585,
											"end": 9594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9576,
											"end": 9583,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9572,
											"end": 9595,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9600,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9565,
											"end": 9684,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9565,
											"end": 9684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 9565,
											"end": 9684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9603,
											"end": 9682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 9603,
											"end": 9682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 9603,
											"end": 9682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9603,
											"end": 9682,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 9603,
											"end": 9682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9565,
											"end": 9684,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 9565,
											"end": 9684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9723,
											"end": 9724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9748,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 9801,
											"end": 9808,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9792,
											"end": 9798,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9781,
											"end": 9790,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9777,
											"end": 9799,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 9748,
											"end": 9809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9809,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 9748,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9738,
											"end": 9809,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9738,
											"end": 9809,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9694,
											"end": 9819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9481,
											"end": 9826,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9481,
											"end": 9826,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9481,
											"end": 9826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9481,
											"end": 9826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9481,
											"end": 9826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9832,
											"end": 10061,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 9832,
											"end": 10061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9972,
											"end": 10006,
											"name": "PUSH",
											"source": 10,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 9968,
											"end": 9969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9956,
											"end": 9970,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 10007,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10041,
											"end": 10053,
											"name": "PUSH",
											"source": 10,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 10036,
											"end": 10038,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10028,
											"end": 10034,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10024,
											"end": 10039,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10017,
											"end": 10054,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9832,
											"end": 10061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9832,
											"end": 10061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10067,
											"end": 10433,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 10067,
											"end": 10433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10209,
											"end": 10212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10230,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 10294,
											"end": 10296,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 10289,
											"end": 10292,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10230,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 10230,
											"end": 10297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10230,
											"end": 10297,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 10230,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10223,
											"end": 10297,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10223,
											"end": 10297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10306,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 10395,
											"end": 10398,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10306,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 10306,
											"end": 10399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10306,
											"end": 10399,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 10306,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10424,
											"end": 10426,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10419,
											"end": 10422,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10415,
											"end": 10427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10408,
											"end": 10427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10408,
											"end": 10427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10067,
											"end": 10433,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10067,
											"end": 10433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10067,
											"end": 10433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10067,
											"end": 10433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10858,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 10439,
											"end": 10858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10605,
											"end": 10609,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10643,
											"end": 10645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10632,
											"end": 10641,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10628,
											"end": 10646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10620,
											"end": 10646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10620,
											"end": 10646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10692,
											"end": 10701,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10690,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10682,
											"end": 10702,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10678,
											"end": 10679,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10667,
											"end": 10676,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10663,
											"end": 10680,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10656,
											"end": 10703,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10720,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 10846,
											"end": 10850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10720,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 10720,
											"end": 10851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10720,
											"end": 10851,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 10720,
											"end": 10851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10712,
											"end": 10851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10712,
											"end": 10851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10858,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10864,
											"end": 11089,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 10864,
											"end": 11089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11004,
											"end": 11038,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10992,
											"end": 10998,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10988,
											"end": 11002,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 11039,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11073,
											"end": 11081,
											"name": "PUSH",
											"source": 10,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11068,
											"end": 11070,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11060,
											"end": 11066,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11056,
											"end": 11071,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11049,
											"end": 11082,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10864,
											"end": 11089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10864,
											"end": 11089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11461,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 11095,
											"end": 11461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11237,
											"end": 11240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11258,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 11322,
											"end": 11324,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 11317,
											"end": 11320,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11258,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 11258,
											"end": 11325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11258,
											"end": 11325,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 11258,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11251,
											"end": 11325,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11251,
											"end": 11325,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11334,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 11423,
											"end": 11426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11334,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 11334,
											"end": 11427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11334,
											"end": 11427,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 11334,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11452,
											"end": 11454,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11447,
											"end": 11450,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11443,
											"end": 11455,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11436,
											"end": 11455,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11436,
											"end": 11455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11461,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11461,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11461,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11467,
											"end": 11886,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 11467,
											"end": 11886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11637,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11671,
											"end": 11673,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11660,
											"end": 11669,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11656,
											"end": 11674,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11648,
											"end": 11674,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11648,
											"end": 11674,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11720,
											"end": 11729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11714,
											"end": 11718,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11710,
											"end": 11730,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11706,
											"end": 11707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11695,
											"end": 11704,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11691,
											"end": 11708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11684,
											"end": 11731,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 11874,
											"end": 11878,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 11748,
											"end": 11879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11879,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 11748,
											"end": 11879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11740,
											"end": 11879,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11740,
											"end": 11879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11467,
											"end": 11886,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11467,
											"end": 11886,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11467,
											"end": 11886,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11467,
											"end": 11886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11892,
											"end": 11990,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 11892,
											"end": 11990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11943,
											"end": 11949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11977,
											"end": 11982,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 11983,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11961,
											"end": 11983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11961,
											"end": 11983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11892,
											"end": 11990,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11892,
											"end": 11990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11892,
											"end": 11990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11892,
											"end": 11990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11996,
											"end": 12143,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 11996,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12097,
											"end": 12108,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12137,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12119,
											"end": 12137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12119,
											"end": 12137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11996,
											"end": 12143,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11996,
											"end": 12143,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11996,
											"end": 12143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11996,
											"end": 12143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11996,
											"end": 12143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12149,
											"end": 12395,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 12149,
											"end": 12395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12230,
											"end": 12231,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12240,
											"end": 12353,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 12240,
											"end": 12353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12254,
											"end": 12260,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12251,
											"end": 12252,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12248,
											"end": 12261,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12240,
											"end": 12353,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12240,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 12240,
											"end": 12353,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12339,
											"end": 12340,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12334,
											"end": 12337,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12330,
											"end": 12341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12324,
											"end": 12342,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12320,
											"end": 12321,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12315,
											"end": 12318,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12311,
											"end": 12322,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12304,
											"end": 12343,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12276,
											"end": 12278,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12273,
											"end": 12274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12269,
											"end": 12279,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12264,
											"end": 12279,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12264,
											"end": 12279,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12240,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 12240,
											"end": 12353,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12240,
											"end": 12353,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 12240,
											"end": 12353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12387,
											"end": 12388,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12378,
											"end": 12384,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12376,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12369,
											"end": 12385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12362,
											"end": 12389,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12211,
											"end": 12395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12149,
											"end": 12395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12149,
											"end": 12395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12149,
											"end": 12395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12149,
											"end": 12395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12401,
											"end": 12787,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 12401,
											"end": 12787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12505,
											"end": 12508,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12533,
											"end": 12571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 12565,
											"end": 12570,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 12533,
											"end": 12571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12571,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 12533,
											"end": 12571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12587,
											"end": 12675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 12668,
											"end": 12674,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12663,
											"end": 12666,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12587,
											"end": 12675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 12587,
											"end": 12675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12587,
											"end": 12675,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 12587,
											"end": 12675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12580,
											"end": 12675,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12580,
											"end": 12675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12684,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 12742,
											"end": 12748,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12737,
											"end": 12740,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12734,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12723,
											"end": 12728,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12719,
											"end": 12735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12684,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 12684,
											"end": 12749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12684,
											"end": 12749,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 12684,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12774,
											"end": 12780,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12769,
											"end": 12772,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12765,
											"end": 12781,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12758,
											"end": 12781,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12758,
											"end": 12781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12509,
											"end": 12787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12401,
											"end": 12787,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12401,
											"end": 12787,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12401,
											"end": 12787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12401,
											"end": 12787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12401,
											"end": 12787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12793,
											"end": 13064,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 12793,
											"end": 13064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12923,
											"end": 12926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12945,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 13034,
											"end": 13037,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13031,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12945,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 12945,
											"end": 13038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12945,
											"end": 13038,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 12945,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12938,
											"end": 13038,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12938,
											"end": 13038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13055,
											"end": 13058,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13048,
											"end": 13058,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13048,
											"end": 13058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12793,
											"end": 13064,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12793,
											"end": 13064,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12793,
											"end": 13064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12793,
											"end": 13064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12793,
											"end": 13064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13070,
											"end": 13249,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 13070,
											"end": 13249,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13210,
											"end": 13241,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 13206,
											"end": 13207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13198,
											"end": 13204,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13194,
											"end": 13208,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13187,
											"end": 13242,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13070,
											"end": 13249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13070,
											"end": 13249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13255,
											"end": 13621,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 13255,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13397,
											"end": 13400,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13418,
											"end": 13485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 13482,
											"end": 13484,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 13477,
											"end": 13480,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13418,
											"end": 13485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 13418,
											"end": 13485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13418,
											"end": 13485,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 13418,
											"end": 13485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13411,
											"end": 13485,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13411,
											"end": 13485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13494,
											"end": 13587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 13583,
											"end": 13586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13494,
											"end": 13587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 13494,
											"end": 13587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13494,
											"end": 13587,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 13494,
											"end": 13587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13612,
											"end": 13614,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13607,
											"end": 13610,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13603,
											"end": 13615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13596,
											"end": 13615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13596,
											"end": 13615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13255,
											"end": 13621,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13255,
											"end": 13621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13255,
											"end": 13621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13255,
											"end": 13621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13627,
											"end": 14046,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 13627,
											"end": 14046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13793,
											"end": 13797,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13831,
											"end": 13833,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13820,
											"end": 13829,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13816,
											"end": 13834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13808,
											"end": 13834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13808,
											"end": 13834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13880,
											"end": 13889,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13874,
											"end": 13878,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13870,
											"end": 13890,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13866,
											"end": 13867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13855,
											"end": 13864,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13851,
											"end": 13868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13844,
											"end": 13891,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13908,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 14034,
											"end": 14038,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13908,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 13908,
											"end": 14039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13908,
											"end": 14039,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 13908,
											"end": 14039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13900,
											"end": 14039,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13900,
											"end": 14039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13627,
											"end": 14046,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13627,
											"end": 14046,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13627,
											"end": 14046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13627,
											"end": 14046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14052,
											"end": 14151,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 14052,
											"end": 14151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14104,
											"end": 14110,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14138,
											"end": 14143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14132,
											"end": 14144,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14122,
											"end": 14144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14122,
											"end": 14144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14052,
											"end": 14151,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14052,
											"end": 14151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14052,
											"end": 14151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14052,
											"end": 14151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14259,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 14157,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14198,
											"end": 14204,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14249,
											"end": 14251,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 14245,
											"end": 14252,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 14240,
											"end": 14242,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 14233,
											"end": 14238,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14229,
											"end": 14243,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14225,
											"end": 14253,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14259,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14259,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14265,
											"end": 14642,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 14265,
											"end": 14642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14353,
											"end": 14356,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14381,
											"end": 14420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 14414,
											"end": 14419,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14381,
											"end": 14420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 14381,
											"end": 14420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14381,
											"end": 14420,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 14381,
											"end": 14420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14436,
											"end": 14507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 14500,
											"end": 14506,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14495,
											"end": 14498,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14436,
											"end": 14507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 14436,
											"end": 14507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14436,
											"end": 14507,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 14436,
											"end": 14507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14429,
											"end": 14507,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14429,
											"end": 14507,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14516,
											"end": 14581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 14574,
											"end": 14580,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14569,
											"end": 14572,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14562,
											"end": 14566,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14555,
											"end": 14560,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14551,
											"end": 14567,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14516,
											"end": 14581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 14516,
											"end": 14581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14516,
											"end": 14581,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 14516,
											"end": 14581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14606,
											"end": 14635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 14628,
											"end": 14634,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14606,
											"end": 14635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 14606,
											"end": 14635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14606,
											"end": 14635,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 14606,
											"end": 14635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14601,
											"end": 14604,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14597,
											"end": 14636,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14590,
											"end": 14636,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14590,
											"end": 14636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14357,
											"end": 14642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14265,
											"end": 14642,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14265,
											"end": 14642,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14265,
											"end": 14642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14265,
											"end": 14642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14265,
											"end": 14642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14648,
											"end": 14961,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 14648,
											"end": 14961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14761,
											"end": 14765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14799,
											"end": 14801,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14788,
											"end": 14797,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14784,
											"end": 14802,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14776,
											"end": 14802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14776,
											"end": 14802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14848,
											"end": 14857,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14842,
											"end": 14846,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14838,
											"end": 14858,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14834,
											"end": 14835,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14823,
											"end": 14832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14819,
											"end": 14836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14812,
											"end": 14859,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14876,
											"end": 14954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 14949,
											"end": 14953,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14940,
											"end": 14946,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14876,
											"end": 14954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 14876,
											"end": 14954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14876,
											"end": 14954,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 14876,
											"end": 14954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14868,
											"end": 14954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14868,
											"end": 14954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14648,
											"end": 14961,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14648,
											"end": 14961,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14648,
											"end": 14961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14648,
											"end": 14961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14648,
											"end": 14961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/emission/allowanceCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"rate()": "2c4e722e",
							"remainingTokens()": "bf583903",
							"token()": "fc0c546a",
							"tokenWallet()": "bff99c6c",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inTokenWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inRate\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"inWallet\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"inToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of Crowdsale where tokens are held by a wallet, which approves an allowance to the crowdsale.\",\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"constructor\":{\"details\":\"Constructor, takes token wallet address.\",\"params\":{\"inRate\":\"rate.\",\"inToken\":\"crowdsale token.\",\"inTokenWallet\":\"Address holding the tokens, which has approved allowance to the crowdsale.\",\"inWallet\":\"crowdsale wallet.\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"remainingTokens()\":{\"details\":\"Checks the amount of tokens left in the allowance.\",\"returns\":{\"_0\":\"Amount of tokens left in the allowance\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"tokenWallet()\":{\"returns\":{\"_0\":\"the address of the wallet that will hold the tokens.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"AllowanceCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/emission/allowanceCrowdsale.sol\":\"AllowanceCrowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0xee463c77b303be60fe3509ff7b9aa23f2674f07b68622278a611ab7908591689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cb0baa0aace90973f81b63d0d3769d000b113f68fd089e0988f0c3468f5a1d9\",\"dweb:/ipfs/QmTi1mH6UupQvzs1AW1kr1sgMWW4wtjKWxngYd6dQ6Pdgj\"]},\"crowdsale/emission/allowanceCrowdsale.sol\":{\"keccak256\":\"0x2266cca696621f8ed347104b5045eea92772ce10835725a1640b36d21463d88d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e08152c59912761d76593d87fd756a806496285a3b8ab7361abd0ffb6c36db3\",\"dweb:/ipfs/QmdWbYNxsML5rqtr4nfefNd858DTbwm14kHucCZub5wkTy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "crowdsale/emission/allowanceCrowdsale.sol:AllowanceCrowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 2106,
								"contract": "crowdsale/emission/allowanceCrowdsale.sol:AllowanceCrowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)142"
							},
							{
								"astId": 2108,
								"contract": "crowdsale/emission/allowanceCrowdsale.sol:AllowanceCrowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 2110,
								"contract": "crowdsale/emission/allowanceCrowdsale.sol:AllowanceCrowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2112,
								"contract": "crowdsale/emission/allowanceCrowdsale.sol:AllowanceCrowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 2413,
								"contract": "crowdsale/emission/allowanceCrowdsale.sol:AllowanceCrowdsale",
								"label": "_tokenWallet",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)142": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 64,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 64,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 64,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3081:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3091:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:0"
									},
									"scope": 64,
									"src": "3017:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "888:2238:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							142
						]
					},
					"id": 143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 76,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 85,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 142,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 142,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 142,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 142,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 142,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 142,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 143,
							"src": "202:2534:1",
							"usedErrors": [],
							"usedEvents": [
								76,
								85
							]
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							178
						]
					},
					"id": 179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 145,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 178,
							"linearizedBaseContracts": [
								178
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3022:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3093:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3119:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 155,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 157,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3155:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 159,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:2"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:2"
									},
									"scope": 178,
									"src": "2997:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3501:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:2"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3539:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:2"
									},
									"scope": 178,
									"src": "3485:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3791:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 174,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:2"
									},
									"scope": 178,
									"src": "3740:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 179,
							"src": "2113:1689:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							884
						],
						"IERC20": [
							142
						],
						"IERC20Permit": [
							178
						],
						"SafeERC20": [
							554
						]
					},
					"id": 555,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 555,
							"sourceUnit": 143,
							"src": "140:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 555,
							"sourceUnit": 179,
							"src": "164:40:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 555,
							"sourceUnit": 885,
							"src": "205:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 184,
								"nodeType": "StructuredDocumentation",
								"src": "243:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 554,
							"linearizedBaseContracts": [
								554
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 187,
									"libraryName": {
										"id": 185,
										"name": "Address",
										"nameLocations": [
											"731:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 884,
										"src": "731:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "725:26:3",
									"typeName": {
										"id": 186,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1013:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 199,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1043:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 202,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 191,
																			"src": "1073:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$142",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1079:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 109,
																		"src": "1073:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1088:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1073:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 205,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "1098:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 206,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "1102:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 200,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1050:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1054:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1050:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 198,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "1023:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "1023:86:3"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "757:179:3",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "950:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "970:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "963:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 190,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 189,
														"name": "IERC20",
														"nameLocations": [
															"963:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "963:6:3"
													},
													"referencedDeclaration": 142,
													"src": "963:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "985:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "977:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "997:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "989:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:3"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:3"
									},
									"scope": 554,
									"src": "941:175:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1445:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 225,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "1475:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 228,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 215,
																			"src": "1505:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$142",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1511:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 141,
																		"src": "1505:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1524:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1505:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 231,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "1534:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 232,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "1540:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 233,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "1544:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 226,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1482:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1486:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1482:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1482:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 224,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "1455:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1455:96:3"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1122:228:3",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1364:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1388:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1381:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 214,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 213,
														"name": "IERC20",
														"nameLocations": [
															"1381:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "1381:6:3"
													},
													"referencedDeclaration": 142,
													"src": "1381:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1403:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1395:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1417:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1409:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1429:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1421:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:55:3"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:3"
									},
									"scope": 554,
									"src": "1355:203:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "1894:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 250,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 246,
																			"src": "2143:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2152:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2143:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 253,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2142:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 258,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2183:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$554",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$554",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 257,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2175:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 256,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2175:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 259,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2175:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 260,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 244,
																					"src": "2190:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 254,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 242,
																					"src": "2159:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$142",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2165:9:3",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 119,
																				"src": "2159:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2159:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2202:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2159:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 264,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2158:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2142:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "2121:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 270,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "2314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 273,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 242,
																			"src": "2344:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$142",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2350:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 129,
																		"src": "2344:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2358:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2344:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 276,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "2368:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 277,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "2377:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 271,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2321:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2325:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2321:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 269,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "2294:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2294:90:3"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "1564:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1827:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1846:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1839:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 241,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 240,
														"name": "IERC20",
														"nameLocations": [
															"1839:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "1839:6:3"
													},
													"referencedDeclaration": 142,
													"src": "1839:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1861:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1853:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1878:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1870:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:46:3"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:3"
									},
									"scope": 554,
									"src": "1818:573:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2668:194:3",
										"statements": [
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2686:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "2678:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2678:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 303,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 299,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2725:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$554",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$554",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2717:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 297,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2717:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "2732:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 295,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "2701:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2707:9:3",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "2701:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2678:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "2770:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 308,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 286,
																			"src": "2800:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$142",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2806:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 129,
																		"src": "2800:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2814:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2800:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 311,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "2824:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 312,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 294,
																		"src": "2833:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 313,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "2848:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2833:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 306,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2777:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2781:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2777:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2777:77:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 304,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "2750:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:105:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "2750:105:3"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "2397:180:3",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2591:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2620:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2613:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 285,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 284,
														"name": "IERC20",
														"nameLocations": [
															"2613:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "2613:6:3"
													},
													"referencedDeclaration": 142,
													"src": "2613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2635:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2627:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2644:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:46:3"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:3"
									},
									"scope": 554,
									"src": "2582:280:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "3139:321:3",
										"statements": [
											{
												"id": 362,
												"nodeType": "UncheckedBlock",
												"src": "3149:305:3",
												"statements": [
													{
														"assignments": [
															331
														],
														"declarations": [
															{
																"constant": false,
																"id": 331,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3181:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 362,
																"src": "3173:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 330,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3173:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 340,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 336,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3220:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$554",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$554",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3212:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 334,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3212:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3212:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 338,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "3227:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 332,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "3196:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3202:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 119,
																"src": "3196:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3173:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 342,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "3257:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 343,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "3273:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3280:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 341,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3249:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 347,
														"nodeType": "ExpressionStatement",
														"src": "3249:75:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 349,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "3358:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 352,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 323,
																					"src": "3388:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$142",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3394:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 129,
																				"src": "3388:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3402:8:3",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3388:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 355,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 325,
																			"src": "3412:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 356,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 331,
																				"src": "3421:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 357,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "3436:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3421:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 350,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3365:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3369:18:3",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3365:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3365:77:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 348,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "3338:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:105:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 361,
														"nodeType": "ExpressionStatement",
														"src": "3338:105:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "2868:180:3",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3062:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3091:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "3084:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 322,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 321,
														"name": "IERC20",
														"nameLocations": [
															"3084:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "3084:6:3"
													},
													"referencedDeclaration": 142,
													"src": "3084:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3106:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "3098:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3123:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "3115:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:46:3"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:3"
									},
									"scope": 554,
									"src": "3053:407:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "3856:333:3",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3879:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 410,
														"src": "3866:25:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 375,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3866:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 379,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "3917:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3923:7:3",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 129,
																"src": "3917:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3931:8:3",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3917:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 382,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 377,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3894:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3898:18:3",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3894:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3894:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3866:90:3"
											},
											{
												"condition": {
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3971:45:3",
													"subExpression": {
														"arguments": [
															{
																"id": 387,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "3996:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$142",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 388,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "4003:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$142",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 386,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "3972:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3972:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 409,
												"nodeType": "IfStatement",
												"src": "3967:216:3",
												"trueBody": {
													"id": 408,
													"nodeType": "Block",
													"src": "4018:165:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 392,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "4052:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 395,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 368,
																						"src": "4082:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$142",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 396,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4088:7:3",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 129,
																					"src": "4082:13:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4096:8:3",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4082:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 398,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 370,
																				"src": "4106:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4115:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 393,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4059:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4063:18:3",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4059:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4059:58:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 391,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "4032:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4032:86:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 402,
															"nodeType": "ExpressionStatement",
															"src": "4032:86:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 404,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "4152:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 405,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "4159:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 403,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "4132:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4132:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 407,
															"nodeType": "ExpressionStatement",
															"src": "4132:40:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "3466:308:3",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3788:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3808:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3801:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 367,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 366,
														"name": "IERC20",
														"nameLocations": [
															"3801:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "3801:6:3"
													},
													"referencedDeclaration": 142,
													"src": "3801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3823:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3815:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3840:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3832:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:46:3"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3856:0:3"
									},
									"scope": 554,
									"src": "3779:410:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "4556:257:3",
										"statements": [
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4574:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "4566:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 432,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4566:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [
														{
															"id": 436,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "4601:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 434,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "4588:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$178",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4594:6:3",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 171,
														"src": "4588:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4588:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4566:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "4630:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "4637:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "4646:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 445,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "4653:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 446,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "4663:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 447,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "4666:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 448,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4669:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "4617:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$178",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4623:6:3",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "4617:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "4617:54:3"
											},
											{
												"assignments": [
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4689:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "4681:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4681:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"arguments": [
														{
															"id": 455,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "4715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 453,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "4702:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$178",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4708:6:3",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 171,
														"src": "4702:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4702:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4681:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 459,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "4739:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 460,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "4753:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4767:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4753:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4739:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4770:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4731:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4731:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "4731:75:3"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "4195:141:3",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4350:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4383:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4370:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$178",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 413,
														"name": "IERC20Permit",
														"nameLocations": [
															"4370:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 178,
														"src": "4370:12:3"
													},
													"referencedDeclaration": 178,
													"src": "4370:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$178",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4406:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4398:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4429:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4421:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4421:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4477:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4469:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4501:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4495:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 424,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4520:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4512:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 426,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4539:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4531:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 428,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:186:3"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4556:0:3"
									},
									"scope": 554,
									"src": "4341:472:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "5266:572:3",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5628:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 504,
														"src": "5615:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 477,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5615:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5669:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5675:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 481,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "5649:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5641:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 479,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5641:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5641:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5656:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 644,
														"src": "5641:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5641:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5615:95:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 489,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "5728:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5739:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5728:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5749:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5728:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "5765:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5778:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 496,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5778:4:3",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 498,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5777:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 493,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5754:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5758:6:3",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5754:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5754:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5728:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5786:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5720:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5720:111:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "5720:111:3"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "4819:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5205:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5232:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5225:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "IERC20",
														"nameLocations": [
															"5225:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "5225:6:3"
													},
													"referencedDeclaration": 142,
													"src": "5225:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5252:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5239:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5239:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:33:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5266:0:3"
									},
									"scope": 554,
									"src": "5196:642:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "6428:505:3",
										"statements": [
											{
												"assignments": [
													517,
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 517,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6729:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "6724:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 516,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6724:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6751:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "6738:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 518,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6738:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 527,
												"initialValue": {
													"arguments": [
														{
															"id": 525,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "6785:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 522,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "6773:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6765:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 520,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6765:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6765:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6780:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6765:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6723:67:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 528,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "6819:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 529,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 519,
																				"src": "6831:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6842:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6831:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6852:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6831:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 535,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 519,
																				"src": "6868:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 537,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6881:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 536,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6881:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 538,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6880:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 533,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6857:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6861:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6857:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6857:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6831:56:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 541,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6830:58:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6819:69:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 547,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "6919:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6911:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 545,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6911:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6911:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 543,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "6892:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$884_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6900:10:3",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 572,
															"src": "6892:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6892:34:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6819:107:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 515,
												"id": 551,
												"nodeType": "Return",
												"src": "6800:126:3"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "5844:490:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6348:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6379:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "6372:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 507,
														"name": "IERC20",
														"nameLocations": [
															"6372:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "6372:6:3"
													},
													"referencedDeclaration": 142,
													"src": "6372:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6399:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "6386:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 510,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6371:33:3"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "6422:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6422:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6421:6:3"
									},
									"scope": 554,
									"src": "6339:594:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 555,
							"src": "701:6234:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:6821:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							884
						]
					},
					"id": 885,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 556,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 557,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 884,
							"linearizedBaseContracts": [
								884
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "1478:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 565,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "1702:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 564,
												"id": 570,
												"nodeType": "Return",
												"src": "1695:30:4"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1432:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:4"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1472:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:4"
									},
									"scope": 884,
									"src": "1412:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "2718:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 583,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$884",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$884",
																				"typeString": "library Address"
																			}
																		],
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 581,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 586,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "2761:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:4"
											},
											{
												"assignments": [
													592,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "2813:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 591,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 593,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "2831:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 595,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "2853:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "2882:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 600,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:4"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "2666:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "2693:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:4"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:4"
									},
									"scope": 884,
									"src": "2647:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "3790:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 617,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "3829:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "3837:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 616,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															664,
															708
														],
														"referencedDeclaration": 708,
														"src": "3807:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 615,
												"id": 622,
												"nodeType": "Return",
												"src": "3800:79:4"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "3723:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "3739:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 610,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:4"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "3776:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 613,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:4"
									},
									"scope": 884,
									"src": "3701:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "4255:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "4294:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "4302:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 640,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "4311:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 636,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															664,
															708
														],
														"referencedDeclaration": 708,
														"src": "4272:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 635,
												"id": 642,
												"nodeType": "Return",
												"src": "4265:59:4"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4139:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4163:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4190:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 630,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:4"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4241:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 633,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:4"
									},
									"scope": 884,
									"src": "4108:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "4806:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "4845:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 658,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "4853:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 659,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "4859:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 656,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															664,
															708
														],
														"referencedDeclaration": 708,
														"src": "4823:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 655,
												"id": 662,
												"nodeType": "Return",
												"src": "4816:94:4"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4724:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4740:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4759:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4792:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 653,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:4"
									},
									"scope": 884,
									"src": "4693:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "5344:267:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 681,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$884",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$884",
																				"typeString": "library Address"
																			}
																		],
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 679,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 684,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "5387:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:4"
											},
											{
												"assignments": [
													690,
													692
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 707,
														"src": "5446:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 689,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 692,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 707,
														"src": "5460:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 691,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 699,
												"initialValue": {
													"arguments": [
														{
															"id": 697,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "5513:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 693,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "5487:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 695,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "5506:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 701,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "5562:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "5570:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 703,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "5579:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 704,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "5591:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 700,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "5535:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 677,
												"id": 706,
												"nodeType": "Return",
												"src": "5528:76:4"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "5205:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "5229:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 668,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "5256:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "5279:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:4"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "5330:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:4"
									},
									"scope": 884,
									"src": "5165:446:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "5888:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 719,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "5924:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "5932:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 718,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															725,
															754
														],
														"referencedDeclaration": 754,
														"src": "5905:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 717,
												"id": 723,
												"nodeType": "Return",
												"src": "5898:80:4"
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5816:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5832:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 712,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5874:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 715,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:4"
									},
									"scope": 884,
									"src": "5788:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "6327:168:4",
										"statements": [
											{
												"assignments": [
													738,
													740
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "6338:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 737,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 740,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "6352:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 739,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 745,
												"initialValue": {
													"arguments": [
														{
															"id": 743,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "6397:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 741,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "6379:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 747,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "6446:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "6454:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 749,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "6463:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 750,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "6475:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 746,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "6419:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 736,
												"id": 752,
												"nodeType": "Return",
												"src": "6412:76:4"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "6206:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "6230:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 729,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "6257:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 731,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:4"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "6313:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 734,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:4"
									},
									"scope": 884,
									"src": "6169:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "6771:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 765,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "6809:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "6817:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 764,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															771,
															800
														],
														"referencedDeclaration": 800,
														"src": "6788:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 763,
												"id": 769,
												"nodeType": "Return",
												"src": "6781:84:4"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "6704:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "6720:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 758,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:4"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "6757:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 761,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:4"
									},
									"scope": 884,
									"src": "6674:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "7213:170:4",
										"statements": [
											{
												"assignments": [
													784,
													786
												],
												"declarations": [
													{
														"constant": false,
														"id": 784,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 799,
														"src": "7224:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 783,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 786,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 799,
														"src": "7238:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 785,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 791,
												"initialValue": {
													"arguments": [
														{
															"id": 789,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "7285:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 787,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "7265:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 793,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "7334:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "7342:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 795,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "7351:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 796,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "7363:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 792,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "7307:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 782,
												"id": 798,
												"nodeType": "Return",
												"src": "7300:76:4"
											}
										]
									},
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7097:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7121:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 775,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7148:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 777,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:4"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7199:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 780,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:4"
									},
									"scope": 884,
									"src": "7058:325:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "7865:434:4",
										"statements": [
											{
												"condition": {
													"id": 814,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "7879:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 836,
													"nodeType": "Block",
													"src": "8235:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 832,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "8257:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 833,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "8269:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 831,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "8249:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 835,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:4"
														}
													]
												},
												"id": 837,
												"nodeType": "IfStatement",
												"src": "7875:418:4",
												"trueBody": {
													"id": 830,
													"nodeType": "Block",
													"src": "7888:341:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 815,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "7906:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 827,
															"nodeType": "IfStatement",
															"src": "7902:286:4",
															"trueBody": {
																"id": 826,
																"nodeType": "Block",
																"src": "7930:258:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 821,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 803,
																							"src": "8132:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 820,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 572,
																						"src": "8121:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 822,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 823,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 819,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 825,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 828,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "8208:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 813,
															"id": 829,
															"nodeType": "Return",
															"src": "8201:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "7716:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "7740:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 804,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "7762:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 806,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "7795:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 808,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:4"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "7851:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 811,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:4"
									},
									"scope": 884,
									"src": "7671:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "8680:135:4",
										"statements": [
											{
												"condition": {
													"id": 851,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 842,
													"src": "8694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "8751:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 856,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "8773:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 857,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "8785:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 855,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "8765:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 859,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:4"
														}
													]
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "8690:119:4",
												"trueBody": {
													"id": 854,
													"nodeType": "Block",
													"src": "8703:42:4",
													"statements": [
														{
															"expression": {
																"id": 852,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "8724:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 850,
															"id": 853,
															"nodeType": "Return",
															"src": "8717:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8555:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8577:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:4"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8666:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 848,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:4"
									},
									"scope": 884,
									"src": "8520:295:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "8904:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 870,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "8980:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "9310:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 877,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 867,
																		"src": "9331:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 876,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 879,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:4"
														}
													]
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "8976:379:4",
												"trueBody": {
													"id": 875,
													"nodeType": "Block",
													"src": "9003:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9161:133:4",
																"nodeType": "YulBlock",
																"src": "9161:133:4",
																"statements": [
																	{
																		"nativeSrc": "9179:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9208:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9202:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:4"
																			},
																			"nativeSrc": "9202:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9183:15:4",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9247:2:4",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9251:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9243:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:4"
																					},
																					"nativeSrc": "9243:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9264:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9236:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:4"
																			},
																			"nativeSrc": "9236:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:4"
																		},
																		"nativeSrc": "9236:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 865,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 865,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:4",
																	"valueSize": 1
																}
															],
															"id": 874,
															"nodeType": "InlineAssembly",
															"src": "9152:142:4"
														}
													]
												}
											}
										]
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "8838:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 864,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "8863:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 866,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:4"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:4"
									},
									"scope": 884,
									"src": "8821:540:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 885,
							"src": "194:9169:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9263:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							906
						]
					},
					"id": 907,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 886,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 887,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 906,
							"linearizedBaseContracts": [
								906
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 892,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 891,
												"id": 894,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 906,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 901,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 900,
												"id": 903,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 898,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 906,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 907,
							"src": "624:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1772
						]
					},
					"id": 1773,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 908,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 909,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1772,
							"linearizedBaseContracts": [
								1772
							],
							"name": "Math",
							"nameLocation": "210:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 913,
									"members": [
										{
											"id": 910,
											"name": "Down",
											"nameLocation": "245:4:6",
											"nodeType": "EnumValue",
											"src": "245:4:6"
										},
										{
											"id": 911,
											"name": "Up",
											"nameLocation": "287:2:6",
											"nodeType": "EnumValue",
											"src": "287:2:6"
										},
										{
											"id": 912,
											"name": "Zero",
											"nameLocation": "318:4:6",
											"nodeType": "EnumValue",
											"src": "318:4:6"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:6",
									"nodeType": "EnumDefinition",
									"src": "221:122:6"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "480:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 923,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "497:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 924,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "501:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 927,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "509:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:6",
													"trueExpression": {
														"id": 926,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "505:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 922,
												"id": 929,
												"nodeType": "Return",
												"src": "490:20:6"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "426:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "437:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:6"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "471:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:6"
									},
									"scope": 1772,
									"src": "413:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "655:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 941,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "672:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 942,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "676:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 945,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "684:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:6",
													"trueExpression": {
														"id": 944,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "680:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 940,
												"id": 947,
												"nodeType": "Return",
												"src": "665:20:6"
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "612:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:6"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "646:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:6"
									},
									"scope": 1772,
									"src": "588:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "876:82:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 959,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "931:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 960,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "935:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 962,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 963,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "941:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 964,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "945:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 966,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 958,
												"id": 970,
												"nodeType": "Return",
												"src": "923:28:6"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "822:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "833:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:6"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "867:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:6"
									},
									"scope": 1772,
									"src": "805:153:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "1228:123:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 982,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "1316:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 986,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 975,
																			"src": "1330:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 989,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 990,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "1339:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:6",
													"trueExpression": {
														"hexValue": "30",
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 981,
												"id": 995,
												"nodeType": "Return",
												"src": "1309:35:6"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1174:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1185:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:6"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1219:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:6"
									},
									"scope": 1772,
									"src": "1157:194:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "1765:4115:6",
										"statements": [
											{
												"id": 1118,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:6",
												"statements": [
													{
														"assignments": [
															1010
														],
														"declarations": [
															{
																"constant": false,
																"id": 1010,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1118,
																"src": "2096:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1009,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1011,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:6"
													},
													{
														"assignments": [
															1013
														],
														"declarations": [
															{
																"constant": false,
																"id": 1013,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1118,
																"src": "2168:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1012,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1014,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:6"
													},
													{
														"AST": {
															"nativeSrc": "2248:157:6",
															"nodeType": "YulBlock",
															"src": "2248:157:6",
															"statements": [
																{
																	"nativeSrc": "2266:30:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2283:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:6"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2286:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2293:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2289:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:6"
																				},
																				"nativeSrc": "2289:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2276:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:6"
																		},
																		"nativeSrc": "2276:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:6"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2270:2:6",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2313:18:6",
																	"nodeType": "YulAssignment",
																	"src": "2313:18:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2326:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:6"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2329:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2322:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:6"
																		},
																		"nativeSrc": "2322:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2313:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "2348:43:6",
																	"nodeType": "YulAssignment",
																	"src": "2348:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2365:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2369:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2361:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:6"
																				},
																				"nativeSrc": "2361:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2380:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2384:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:6"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2377:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:6"
																				},
																				"nativeSrc": "2377:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2357:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:6"
																		},
																		"nativeSrc": "2357:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2348:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1010,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1010,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1010,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1013,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1000,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1000,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1002,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1002,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:6",
																"valueSize": 1
															}
														],
														"id": 1015,
														"nodeType": "InlineAssembly",
														"src": "2239:166:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1016,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "2486:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1024,
														"nodeType": "IfStatement",
														"src": "2482:368:6",
														"trueBody": {
															"id": 1023,
															"nodeType": "Block",
															"src": "2498:352:6",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1019,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1010,
																			"src": "2816:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1020,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1004,
																			"src": "2824:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1008,
																	"id": 1022,
																	"nodeType": "Return",
																	"src": "2809:26:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1026,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "2960:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1027,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "2974:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1025,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1031,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:6"
													},
													{
														"assignments": [
															1033
														],
														"declarations": [
															{
																"constant": false,
																"id": 1033,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 1118,
																"src": "3261:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1032,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1034,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:6"
													},
													{
														"AST": {
															"nativeSrc": "3301:291:6",
															"nodeType": "YulBlock",
															"src": "3301:291:6",
															"statements": [
																{
																	"nativeSrc": "3370:38:6",
																	"nodeType": "YulAssignment",
																	"src": "3370:38:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3390:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:6"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3393:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:6"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3396:11:6",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3383:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:6"
																		},
																		"nativeSrc": "3383:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:6"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3370:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:6"
																		}
																	]
																},
																{
																	"nativeSrc": "3490:41:6",
																	"nodeType": "YulAssignment",
																	"src": "3490:41:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3503:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3513:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3524:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:6"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3510:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:6"
																				},
																				"nativeSrc": "3510:20:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3499:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:6"
																		},
																		"nativeSrc": "3499:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3490:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "3548:30:6",
																	"nodeType": "YulAssignment",
																	"src": "3548:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3561:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:6"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3568:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3557:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:6"
																		},
																		"nativeSrc": "3557:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3548:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1004,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1010,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1010,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1010,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1013,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1013,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1033,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1033,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1033,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1000,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1002,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:6",
																"valueSize": 1
															}
														],
														"id": 1035,
														"nodeType": "InlineAssembly",
														"src": "3292:300:6"
													},
													{
														"assignments": [
															1037
														],
														"declarations": [
															{
																"constant": false,
																"id": 1037,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 1118,
																"src": "3899:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1036,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1045,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1038,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "3914:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:6",
																			"subExpression": {
																				"id": 1039,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "3930:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1043,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:6"
													},
													{
														"AST": {
															"nativeSrc": "3969:362:6",
															"nodeType": "YulBlock",
															"src": "3969:362:6",
															"statements": [
																{
																	"nativeSrc": "4034:37:6",
																	"nodeType": "YulAssignment",
																	"src": "4034:37:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4053:11:6",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:6"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4066:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4049:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:6"
																		},
																		"nativeSrc": "4049:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:6"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4034:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:6"
																		}
																	]
																},
																{
																	"nativeSrc": "4138:25:6",
																	"nodeType": "YulAssignment",
																	"src": "4138:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4151:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:6"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4158:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4147:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:6"
																		},
																		"nativeSrc": "4147:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4138:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "4278:39:6",
																	"nodeType": "YulAssignment",
																	"src": "4278:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4298:1:6",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:6",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4301:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:6"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4294:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:6"
																						},
																						"nativeSrc": "4294:12:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:6"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4308:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4290:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:6"
																				},
																				"nativeSrc": "4290:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4315:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4286:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:6"
																		},
																		"nativeSrc": "4286:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:6"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4278:4:6",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1004,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1004,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1010,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1010,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1037,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1037,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1037,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1037,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1037,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:6",
																"valueSize": 1
															}
														],
														"id": 1046,
														"nodeType": "InlineAssembly",
														"src": "3960:371:6"
													},
													{
														"expression": {
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1047,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "4397:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1048,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "4406:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1049,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "4414:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1052,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:6"
													},
													{
														"assignments": [
															1054
														],
														"declarations": [
															{
																"constant": false,
																"id": 1054,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 1118,
																"src": "4736:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1053,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1061,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1056,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1004,
																			"src": "4759:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1058,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:6"
													},
													{
														"expression": {
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1062,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "4992:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1064,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "5007:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1065,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "5021:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1069,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:6"
													},
													{
														"expression": {
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1070,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "5061:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1072,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "5076:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1073,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "5090:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1077,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:6"
													},
													{
														"expression": {
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1078,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "5131:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1080,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "5146:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1081,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "5160:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1085,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:6"
													},
													{
														"expression": {
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1086,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "5201:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1088,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "5216:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1089,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "5230:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1093,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:6"
													},
													{
														"expression": {
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1094,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "5271:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1096,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "5286:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1097,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "5300:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1101,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:6"
													},
													{
														"expression": {
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1102,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "5342:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1104,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "5357:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1105,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "5371:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1109,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:6"
													},
													{
														"expression": {
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1110,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "5812:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1111,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "5821:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1112,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "5829:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1115,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:6"
													},
													{
														"expression": {
															"id": 1116,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "5857:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1008,
														"id": 1117,
														"nodeType": "Return",
														"src": "5850:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:6",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1683:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1694:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1705:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:6"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1749:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:6"
									},
									"scope": 1772,
									"src": "1667:4213:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "6122:189:6",
										"statements": [
											{
												"assignments": [
													1136
												],
												"declarations": [
													{
														"constant": false,
														"id": 1136,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "6132:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1135,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"initialValue": {
													"arguments": [
														{
															"id": 1138,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "6156:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1139,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "6159:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1140,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "6162:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1137,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1120,
															1164
														],
														"referencedDeclaration": 1120,
														"src": "6149:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$913",
															"typeString": "enum Math.Rounding"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1143,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "6188:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$913",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1144,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "6200:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$913_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:6",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 911,
															"src": "6200:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$913",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1148,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "6222:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1149,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "6225:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1150,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "6228:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1147,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1160,
												"nodeType": "IfStatement",
												"src": "6184:98:6",
												"trueBody": {
													"id": 1159,
													"nodeType": "Block",
													"src": "6246:36:6",
													"statements": [
														{
															"expression": {
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1155,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "6260:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1158,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1161,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1136,
													"src": "6298:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1134,
												"id": 1162,
												"nodeType": "Return",
												"src": "6291:13:6"
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:6",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "6028:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "6039:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "6050:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "6071:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$913",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1129,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1128,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 913,
														"src": "6071:8:6"
													},
													"referencedDeclaration": 913,
													"src": "6071:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$913",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:6"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "6113:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:6"
									},
									"scope": 1772,
									"src": "6012:299:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "6587:1585:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "6601:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1178,
												"nodeType": "IfStatement",
												"src": "6597:45:6",
												"trueBody": {
													"id": 1177,
													"nodeType": "Block",
													"src": "6609:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1171,
															"id": 1176,
															"nodeType": "Return",
															"src": "6623:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1180
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1275,
														"src": "7321:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1179,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1189,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1183,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1167,
																			"src": "7349:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1182,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1444,
																			1480
																		],
																		"referencedDeclaration": 1444,
																		"src": "7344:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1187,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:6"
											},
											{
												"id": 1274,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:6",
												"statements": [
													{
														"expression": {
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1190,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "7782:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1191,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1180,
																				"src": "7792:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1192,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1167,
																					"src": "7801:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1193,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1180,
																					"src": "7805:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1196,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1200,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:6"
													},
													{
														"expression": {
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1201,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "7831:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1202,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1180,
																				"src": "7841:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1203,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1167,
																					"src": "7850:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1204,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1180,
																					"src": "7854:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1207,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1211,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:6"
													},
													{
														"expression": {
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1212,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "7880:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1213,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1180,
																				"src": "7890:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1216,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1214,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1167,
																					"src": "7899:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1215,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1180,
																					"src": "7903:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1218,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1222,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:6"
													},
													{
														"expression": {
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1223,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "7929:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1224,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1180,
																				"src": "7939:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1225,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1167,
																					"src": "7948:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1226,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1180,
																					"src": "7952:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1229,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1233,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:6"
													},
													{
														"expression": {
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1234,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "7978:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1235,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1180,
																				"src": "7988:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1236,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1167,
																					"src": "7997:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1237,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1180,
																					"src": "8001:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1240,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1244,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:6"
													},
													{
														"expression": {
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1245,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "8027:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1246,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1180,
																				"src": "8037:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1247,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1167,
																					"src": "8046:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1248,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1180,
																					"src": "8050:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1251,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1255,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:6"
													},
													{
														"expression": {
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1256,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "8076:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1257,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1180,
																				"src": "8086:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1258,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1167,
																					"src": "8095:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1259,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1180,
																					"src": "8099:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1262,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1266,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1268,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "8136:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1269,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "8144:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1270,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "8148:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1267,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "8132:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1171,
														"id": 1273,
														"nodeType": "Return",
														"src": "8125:30:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:6",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "6544:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:6"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "6578:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:6"
									},
									"scope": 1772,
									"src": "6530:1642:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "8348:161:6",
										"statements": [
											{
												"id": 1310,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:6",
												"statements": [
													{
														"assignments": [
															1288
														],
														"declarations": [
															{
																"constant": false,
																"id": 1288,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1310,
																"src": "8382:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1287,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1292,
														"initialValue": {
															"arguments": [
																{
																	"id": 1290,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "8404:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1289,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1276,
																	1312
																],
																"referencedDeclaration": 1276,
																"src": "8399:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1293,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1288,
																"src": "8427:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$913",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1294,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1282,
																					"src": "8437:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$913",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1295,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 913,
																						"src": "8449:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$913_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1296,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 911,
																					"src": "8449:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$913",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1302,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1300,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1298,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1288,
																						"src": "8464:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1299,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1288,
																						"src": "8473:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1301,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1279,
																					"src": "8482:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1307,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1286,
														"id": 1309,
														"nodeType": "Return",
														"src": "8420:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:6",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "8286:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "8297:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$913",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1281,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1280,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 913,
														"src": "8297:8:6"
													},
													"referencedDeclaration": 913,
													"src": "8297:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$913",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:6"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "8339:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:6"
									},
									"scope": 1772,
									"src": "8272:237:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "8694:922:6",
										"statements": [
											{
												"assignments": [
													1321
												],
												"declarations": [
													{
														"constant": false,
														"id": 1321,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1443,
														"src": "8704:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1320,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1323,
												"initialValue": {
													"hexValue": "30",
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:6"
											},
											{
												"id": 1440,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1324,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "8760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1338,
														"nodeType": "IfStatement",
														"src": "8756:99:6",
														"trueBody": {
															"id": 1337,
															"nodeType": "Block",
															"src": "8778:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1329,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "8796:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1332,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:6"
																},
																{
																	"expression": {
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1333,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "8827:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1336,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1339,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "8872:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1353,
														"nodeType": "IfStatement",
														"src": "8868:96:6",
														"trueBody": {
															"id": 1352,
															"nodeType": "Block",
															"src": "8889:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1344,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "8907:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1347,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:6"
																},
																{
																	"expression": {
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1348,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "8937:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1351,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1354,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "8981:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1368,
														"nodeType": "IfStatement",
														"src": "8977:96:6",
														"trueBody": {
															"id": 1367,
															"nodeType": "Block",
															"src": "8998:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1359,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "9016:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1362,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:6"
																},
																{
																	"expression": {
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1363,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "9046:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1366,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1369,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "9090:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1383,
														"nodeType": "IfStatement",
														"src": "9086:96:6",
														"trueBody": {
															"id": 1382,
															"nodeType": "Block",
															"src": "9107:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1374,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "9125:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1377,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:6"
																},
																{
																	"expression": {
																		"id": 1380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1378,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "9155:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1381,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1384,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "9199:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1398,
														"nodeType": "IfStatement",
														"src": "9195:93:6",
														"trueBody": {
															"id": 1397,
															"nodeType": "Block",
															"src": "9215:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1389,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "9233:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1392,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:6"
																},
																{
																	"expression": {
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1393,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "9262:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1396,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1399,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "9305:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1413,
														"nodeType": "IfStatement",
														"src": "9301:93:6",
														"trueBody": {
															"id": 1412,
															"nodeType": "Block",
															"src": "9321:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1404,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "9339:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1407,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:6"
																},
																{
																	"expression": {
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1408,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "9368:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1411,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1414,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "9411:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1428,
														"nodeType": "IfStatement",
														"src": "9407:93:6",
														"trueBody": {
															"id": 1427,
															"nodeType": "Block",
															"src": "9427:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "9445:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1422,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:6"
																},
																{
																	"expression": {
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1423,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "9474:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1426,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1429,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "9517:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1439,
														"nodeType": "IfStatement",
														"src": "9513:64:6",
														"trueBody": {
															"id": 1438,
															"nodeType": "Block",
															"src": "9533:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1434,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "9551:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1437,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1441,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1321,
													"src": "9603:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1319,
												"id": 1442,
												"nodeType": "Return",
												"src": "9596:13:6"
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:6",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "8647:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:6"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "8685:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:6"
									},
									"scope": 1772,
									"src": "8633:983:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "9849:165:6",
										"statements": [
											{
												"id": 1478,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:6",
												"statements": [
													{
														"assignments": [
															1456
														],
														"declarations": [
															{
																"constant": false,
																"id": 1456,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1478,
																"src": "9883:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1455,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1460,
														"initialValue": {
															"arguments": [
																{
																	"id": 1458,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "9905:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1457,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1444,
																	1480
																],
																"referencedDeclaration": 1444,
																"src": "9900:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1461,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "9932:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$913",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1462,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "9942:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$913",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1463,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 913,
																						"src": "9954:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$913_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1464,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 911,
																					"src": "9954:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$913",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1468,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1466,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1467,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1456,
																						"src": "9974:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1469,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1447,
																					"src": "9983:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1475,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1454,
														"id": 1477,
														"nodeType": "Return",
														"src": "9925:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:6",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "9783:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "9798:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$913",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1449,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1448,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 913,
														"src": "9798:8:6"
													},
													"referencedDeclaration": 913,
													"src": "9798:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$913",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:6"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "9840:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:6"
									},
									"scope": 1772,
									"src": "9769:245:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "10201:854:6",
										"statements": [
											{
												"assignments": [
													1489
												],
												"declarations": [
													{
														"constant": false,
														"id": 1489,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "10211:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1488,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1491,
												"initialValue": {
													"hexValue": "30",
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:6"
											},
											{
												"id": 1605,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1492,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "10267:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1508,
														"nodeType": "IfStatement",
														"src": "10263:103:6",
														"trueBody": {
															"id": 1507,
															"nodeType": "Block",
															"src": "10286:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1497,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1483,
																			"src": "10304:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1499,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1502,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:6"
																},
																{
																	"expression": {
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1503,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "10339:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1506,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1509,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "10383:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1525,
														"nodeType": "IfStatement",
														"src": "10379:103:6",
														"trueBody": {
															"id": 1524,
															"nodeType": "Block",
															"src": "10402:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1514,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1483,
																			"src": "10420:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1519,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:6"
																},
																{
																	"expression": {
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1520,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "10455:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1523,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1526,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "10499:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1542,
														"nodeType": "IfStatement",
														"src": "10495:103:6",
														"trueBody": {
															"id": 1541,
															"nodeType": "Block",
															"src": "10518:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1531,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1483,
																			"src": "10536:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1532,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1536,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:6"
																},
																{
																	"expression": {
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1537,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "10571:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1540,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1543,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "10615:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1559,
														"nodeType": "IfStatement",
														"src": "10611:100:6",
														"trueBody": {
															"id": 1558,
															"nodeType": "Block",
															"src": "10633:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1548,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1483,
																			"src": "10651:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1553,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:6"
																},
																{
																	"expression": {
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1554,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "10685:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1557,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1560,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "10728:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1576,
														"nodeType": "IfStatement",
														"src": "10724:100:6",
														"trueBody": {
															"id": 1575,
															"nodeType": "Block",
															"src": "10746:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1483,
																			"src": "10764:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1570,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:6"
																},
																{
																	"expression": {
																		"id": 1573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1571,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "10798:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1574,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1577,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "10841:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1593,
														"nodeType": "IfStatement",
														"src": "10837:100:6",
														"trueBody": {
															"id": 1592,
															"nodeType": "Block",
															"src": "10859:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1582,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1483,
																			"src": "10877:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1587,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:6"
																},
																{
																	"expression": {
																		"id": 1590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1588,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "10911:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1591,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1594,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "10954:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1604,
														"nodeType": "IfStatement",
														"src": "10950:66:6",
														"trueBody": {
															"id": 1603,
															"nodeType": "Block",
															"src": "10972:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1599,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "10990:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1602,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1606,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1489,
													"src": "11042:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1487,
												"id": 1607,
												"nodeType": "Return",
												"src": "11035:13:6"
											}
										]
									},
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:6",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "10154:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:6"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "10192:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:6"
									},
									"scope": 1772,
									"src": "10139:916:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1644,
										"nodeType": "Block",
										"src": "11290:167:6",
										"statements": [
											{
												"id": 1643,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:6",
												"statements": [
													{
														"assignments": [
															1621
														],
														"declarations": [
															{
																"constant": false,
																"id": 1621,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1643,
																"src": "11324:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1620,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1625,
														"initialValue": {
															"arguments": [
																{
																	"id": 1623,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "11347:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1622,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1609,
																	1645
																],
																"referencedDeclaration": 1609,
																"src": "11341:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1626,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "11374:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$913",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1627,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1615,
																					"src": "11384:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$913",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1628,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 913,
																						"src": "11396:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$913_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1629,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 911,
																					"src": "11396:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$913",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1633,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1631,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1632,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1621,
																						"src": "11417:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1634,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1612,
																					"src": "11426:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1640,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1619,
														"id": 1642,
														"nodeType": "Return",
														"src": "11367:73:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "11224:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "11239:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$913",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1614,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1613,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 913,
														"src": "11239:8:6"
													},
													"referencedDeclaration": 913,
													"src": "11239:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$913",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:6"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "11281:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:6"
									},
									"scope": 1772,
									"src": "11209:248:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1731,
										"nodeType": "Block",
										"src": "11771:600:6",
										"statements": [
											{
												"assignments": [
													1654
												],
												"declarations": [
													{
														"constant": false,
														"id": 1654,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1731,
														"src": "11781:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1653,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1656,
												"initialValue": {
													"hexValue": "30",
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:6"
											},
											{
												"id": 1728,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1657,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "11837:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1671,
														"nodeType": "IfStatement",
														"src": "11833:98:6",
														"trueBody": {
															"id": 1670,
															"nodeType": "Block",
															"src": "11855:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1662,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1648,
																			"src": "11873:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1665,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:6"
																},
																{
																	"expression": {
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1666,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "11904:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1669,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1672,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "11948:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1686,
														"nodeType": "IfStatement",
														"src": "11944:95:6",
														"trueBody": {
															"id": 1685,
															"nodeType": "Block",
															"src": "11965:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1677,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1648,
																			"src": "11983:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1680,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:6"
																},
																{
																	"expression": {
																		"id": 1683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1681,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "12013:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1684,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1687,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "12056:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1701,
														"nodeType": "IfStatement",
														"src": "12052:95:6",
														"trueBody": {
															"id": 1700,
															"nodeType": "Block",
															"src": "12073:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1692,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1648,
																			"src": "12091:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1695,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:6"
																},
																{
																	"expression": {
																		"id": 1698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1696,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "12121:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1699,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1702,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "12164:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1716,
														"nodeType": "IfStatement",
														"src": "12160:95:6",
														"trueBody": {
															"id": 1715,
															"nodeType": "Block",
															"src": "12181:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1707,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1648,
																			"src": "12199:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1710,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:6"
																},
																{
																	"expression": {
																		"id": 1713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1711,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "12229:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1714,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1717,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "12272:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1727,
														"nodeType": "IfStatement",
														"src": "12268:64:6",
														"trueBody": {
															"id": 1726,
															"nodeType": "Block",
															"src": "12288:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1722,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "12306:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1725,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1729,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1654,
													"src": "12358:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1652,
												"id": 1730,
												"nodeType": "Return",
												"src": "12351:13:6"
											}
										]
									},
									"documentation": {
										"id": 1646,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:6",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "11724:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:6"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "11762:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:6"
									},
									"scope": 1772,
									"src": "11708:663:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1770,
										"nodeType": "Block",
										"src": "12608:174:6",
										"statements": [
											{
												"id": 1769,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:6",
												"statements": [
													{
														"assignments": [
															1744
														],
														"declarations": [
															{
																"constant": false,
																"id": 1744,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1769,
																"src": "12642:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1743,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1748,
														"initialValue": {
															"arguments": [
																{
																	"id": 1746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "12666:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1745,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1732,
																	1771
																],
																"referencedDeclaration": 1732,
																"src": "12659:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1749,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "12693:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$913",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1750,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1738,
																					"src": "12703:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$913",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1751,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 913,
																						"src": "12715:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$913_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1752,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 911,
																					"src": "12715:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$913",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1759,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1754,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1757,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1755,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1744,
																									"src": "12736:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1756,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1758,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1760,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1735,
																					"src": "12751:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1766,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1742,
														"id": 1768,
														"nodeType": "Return",
														"src": "12686:79:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1733,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:6",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "12542:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "12557:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$913",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1737,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1736,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 913,
														"src": "12557:8:6"
													},
													"referencedDeclaration": 913,
													"src": "12557:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$913",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:6"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "12599:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:6"
									},
									"scope": 1772,
									"src": "12526:256:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1773,
							"src": "202:12582:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12682:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2084
						]
					},
					"id": 2085,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1774,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1775,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 2084,
							"linearizedBaseContracts": [
								2084
							],
							"name": "SafeMath",
							"nameLocation": "490:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "717:140:7",
										"statements": [
											{
												"id": 1805,
												"nodeType": "UncheckedBlock",
												"src": "727:124:7",
												"statements": [
													{
														"assignments": [
															1788
														],
														"declarations": [
															{
																"constant": false,
																"id": 1788,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1805,
																"src": "751:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1787,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1792,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1789,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1778,
																"src": "763:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1790,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "767:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1793,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "786:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1794,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1778,
																"src": "790:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1800,
														"nodeType": "IfStatement",
														"src": "782:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1798,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1786,
															"id": 1799,
															"nodeType": "Return",
															"src": "793:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1802,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1788,
																	"src": "838:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1803,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1786,
														"id": 1804,
														"nodeType": "Return",
														"src": "824:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:7"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "702:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1782,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "708:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:7"
									},
									"scope": 2084,
									"src": "641:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1834,
										"nodeType": "Block",
										"src": "1078:113:7",
										"statements": [
											{
												"id": 1833,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1819,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1812,
																"src": "1116:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1820,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1810,
																"src": "1120:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1826,
														"nodeType": "IfStatement",
														"src": "1112:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1824,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1818,
															"id": 1825,
															"nodeType": "Return",
															"src": "1123:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1828,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "1168:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1829,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "1172:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1831,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1818,
														"id": 1832,
														"nodeType": "Return",
														"src": "1154:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "1018:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "1029:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:7"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "1063:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1814,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "1069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:7"
									},
									"scope": 2084,
									"src": "1002:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1876,
										"nodeType": "Block",
										"src": "1415:417:7",
										"statements": [
											{
												"id": 1875,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1847,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "1683:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1854,
														"nodeType": "IfStatement",
														"src": "1679:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1852,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1846,
															"id": 1853,
															"nodeType": "Return",
															"src": "1691:16:7"
														}
													},
													{
														"assignments": [
															1856
														],
														"declarations": [
															{
																"constant": false,
																"id": 1856,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1875,
																"src": "1721:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1855,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1860,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1857,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1858,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1840,
																"src": "1737:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1861,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1856,
																	"src": "1756:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1862,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1838,
																	"src": "1760:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1864,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1840,
																"src": "1765:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1870,
														"nodeType": "IfStatement",
														"src": "1752:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1868,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1846,
															"id": 1869,
															"nodeType": "Return",
															"src": "1768:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1872,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1856,
																	"src": "1813:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1873,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1846,
														"id": 1874,
														"nodeType": "Return",
														"src": "1799:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "1355:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "1366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:7"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "1400:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1842,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "1406:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:7"
									},
									"scope": 2084,
									"src": "1339:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1904,
										"nodeType": "Block",
										"src": "2057:114:7",
										"statements": [
											{
												"id": 1903,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1889,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1882,
																"src": "2095:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1896,
														"nodeType": "IfStatement",
														"src": "2091:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1894,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1888,
															"id": 1895,
															"nodeType": "Return",
															"src": "2103:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1898,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1880,
																		"src": "2148:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1899,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1882,
																		"src": "2152:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1901,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1888,
														"id": 1902,
														"nodeType": "Return",
														"src": "2134:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "1997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:7"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "2042:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "2048:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:7"
									},
									"scope": 2084,
									"src": "1981:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1932,
										"nodeType": "Block",
										"src": "2406:114:7",
										"statements": [
											{
												"id": 1931,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1917,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1910,
																"src": "2444:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1924,
														"nodeType": "IfStatement",
														"src": "2440:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1922,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1916,
															"id": 1923,
															"nodeType": "Return",
															"src": "2452:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1926,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1908,
																		"src": "2497:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1927,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1910,
																		"src": "2501:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1929,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1916,
														"id": 1930,
														"nodeType": "Return",
														"src": "2483:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "2346:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "2357:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:7"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "2391:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1912,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "2397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:7"
									},
									"scope": 2084,
									"src": "2330:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "2822:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1943,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "2839:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1944,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "2843:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1942,
												"id": 1946,
												"nodeType": "Return",
												"src": "2832:12:7"
											}
										]
									},
									"documentation": {
										"id": 1934,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2779:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:7"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2813:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:7"
									},
									"scope": 2084,
									"src": "2755:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1962,
										"nodeType": "Block",
										"src": "3189:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1958,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "3206:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1959,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1953,
														"src": "3210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1957,
												"id": 1961,
												"nodeType": "Return",
												"src": "3199:12:7"
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "3135:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "3146:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:7"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "3180:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:7"
									},
									"scope": 2084,
									"src": "3122:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1977,
										"nodeType": "Block",
										"src": "3532:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1973,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "3549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1974,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "3553:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1972,
												"id": 1976,
												"nodeType": "Return",
												"src": "3542:12:7"
											}
										]
									},
									"documentation": {
										"id": 1964,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "3478:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "3489:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:7"
									},
									"returnParameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "3523:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:7"
									},
									"scope": 2084,
									"src": "3465:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1992,
										"nodeType": "Block",
										"src": "3917:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1988,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1981,
														"src": "3934:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1989,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1983,
														"src": "3938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1987,
												"id": 1991,
												"nodeType": "Return",
												"src": "3927:12:7"
											}
										]
									},
									"documentation": {
										"id": 1979,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "3863:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "3874:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:7"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "3908:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:7"
									},
									"scope": 2084,
									"src": "3850:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "4466:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2003,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "4483:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2004,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1998,
														"src": "4487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2002,
												"id": 2006,
												"nodeType": "Return",
												"src": "4476:12:7"
											}
										]
									},
									"documentation": {
										"id": 1994,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "4412:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "4423:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:7"
									},
									"returnParameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "4457:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:7"
									},
									"scope": 2084,
									"src": "4399:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2032,
										"nodeType": "Block",
										"src": "5054:106:7",
										"statements": [
											{
												"id": 2031,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2021,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2013,
																		"src": "5096:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2022,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "5101:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2024,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2015,
																	"src": "5104:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2020,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2026,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2027,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2011,
																"src": "5138:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2028,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2013,
																"src": "5142:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2019,
														"id": 2030,
														"nodeType": "Return",
														"src": "5131:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "4972:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "4983:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "4994:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2014,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:7"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "5045:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:7"
									},
									"scope": 2084,
									"src": "4959:201:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "5739:105:7",
										"statements": [
											{
												"id": 2056,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2046,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2038,
																		"src": "5781:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2049,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2040,
																	"src": "5788:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2045,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2051,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2052,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2036,
																"src": "5822:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2053,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2038,
																"src": "5826:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2044,
														"id": 2055,
														"nodeType": "Return",
														"src": "5815:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2034,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "5657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "5668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "5679:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2039,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:7"
									},
									"returnParameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "5730:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:7"
									},
									"scope": 2084,
									"src": "5644:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2082,
										"nodeType": "Block",
										"src": "6585:105:7",
										"statements": [
											{
												"id": 2081,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2071,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2063,
																		"src": "6627:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2074,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2065,
																	"src": "6634:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2070,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2076,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2077,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "6668:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2078,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2063,
																"src": "6672:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2069,
														"id": 2080,
														"nodeType": "Return",
														"src": "6661:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "6503:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "6514:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "6525:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2064,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:7"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "6576:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:7"
									},
									"scope": 2084,
									"src": "6490:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2085,
							"src": "482:6210:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:7"
				},
				"id": 7
			},
			"crowdsale/crowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/crowdsale.sol",
					"exportedSymbols": {
						"Address": [
							884
						],
						"Context": [
							906
						],
						"Crowdsale": [
							2394
						],
						"IERC20": [
							142
						],
						"IERC20Permit": [
							178
						],
						"ReentrancyGuard": [
							64
						],
						"SafeERC20": [
							554
						],
						"SafeMath": [
							2084
						]
					},
					"id": 2395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2086,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 2087,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2395,
							"sourceUnit": 907,
							"src": "60:51:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2088,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2395,
							"sourceUnit": 143,
							"src": "113:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 2089,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2395,
							"sourceUnit": 65,
							"src": "171:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 2090,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2395,
							"sourceUnit": 555,
							"src": "235:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2091,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2395,
							"sourceUnit": 2085,
							"src": "302:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2093,
										"name": "Context",
										"nameLocations": [
											"1102:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 906,
										"src": "1102:7:8"
									},
									"id": 2094,
									"nodeType": "InheritanceSpecifier",
									"src": "1102:7:8"
								},
								{
									"baseName": {
										"id": 2095,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1111:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "1111:15:8"
									},
									"id": 2096,
									"nodeType": "InheritanceSpecifier",
									"src": "1111:15:8"
								}
							],
							"canonicalName": "Crowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2092,
								"nodeType": "StructuredDocumentation",
								"src": "363:706:8",
								"text": " @title Crowdsale\n @dev Crowdsale is a base contract for managing a token crowdsale,\n allowing investors to purchase tokens with ether. This contract implements\n such functionality in its most fundamental form and can be extended to provide additional\n functionality and/or custom behavior.\n The external interface represents the basic interface for purchasing tokens, and conforms\n the base architecture for crowdsales. It is *not* intended to be modified / overridden.\n The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n the methods to add functionality. Consider using 'super' where appropriate to concatenate\n behavior."
							},
							"fullyImplemented": true,
							"id": 2394,
							"linearizedBaseContracts": [
								2394,
								64,
								906
							],
							"name": "Crowdsale",
							"nameLocation": "1089:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2099,
									"libraryName": {
										"id": 2097,
										"name": "SafeMath",
										"nameLocations": [
											"1140:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2084,
										"src": "1140:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1134:27:8",
									"typeName": {
										"id": 2098,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1153:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2103,
									"libraryName": {
										"id": 2100,
										"name": "SafeERC20",
										"nameLocations": [
											"1173:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 554,
										"src": "1173:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1167:27:8",
									"typeName": {
										"id": 2102,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2101,
											"name": "IERC20",
											"nameLocations": [
												"1187:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "1187:6:8"
										},
										"referencedDeclaration": 142,
										"src": "1187:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 2106,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "1246:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 2394,
									"src": "1231:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$142",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 2105,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2104,
											"name": "IERC20",
											"nameLocations": [
												"1231:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "1231:6:8"
										},
										"referencedDeclaration": 142,
										"src": "1231:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2108,
									"mutability": "mutable",
									"name": "_wallet",
									"nameLocation": "1327:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 2394,
									"src": "1303:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2107,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1303:15:8",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2110,
									"mutability": "mutable",
									"name": "_rate",
									"nameLocation": "1647:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2394,
									"src": "1631:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2109,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1631:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2112,
									"mutability": "mutable",
									"name": "_weiRaised",
									"nameLocation": "1706:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 2394,
									"src": "1690:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1690:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2113,
										"nodeType": "StructuredDocumentation",
										"src": "1725:241:8",
										"text": " Event for token purchase logging\n @param purchaser who paid for the tokens\n @param beneficiary who got the tokens\n @param value weis paid for purchase\n @param amount amount of tokens purchased"
									},
									"eventSelector": "6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b",
									"id": 2123,
									"name": "TokensPurchased",
									"nameLocation": "1978:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"indexed": true,
												"mutability": "mutable",
												"name": "purchaser",
												"nameLocation": "2010:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "1994:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2117,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2037:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "2021:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2058:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "2050:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2121,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2073:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "2065:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:87:8"
									},
									"src": "1972:109:8"
								},
								{
									"body": {
										"id": 2176,
										"nodeType": "Block",
										"src": "2616:318:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2135,
																"name": "inRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2126,
																"src": "2635:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2644:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2635:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20726174652069732030",
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2647:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															},
															"value": "Crowdsale: rate is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															}
														],
														"id": 2134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2627:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2627:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2140,
												"nodeType": "ExpressionStatement",
												"src": "2627:43:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2142,
																"name": "inWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "2689:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2709:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2701:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2143,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2701:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2701:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2689:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373",
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2713:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															},
															"value": "Crowdsale: wallet is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															}
														],
														"id": 2141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2681:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2681:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2150,
												"nodeType": "ExpressionStatement",
												"src": "2681:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2154,
																		"name": "inToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2131,
																		"src": "2780:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2772:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2152,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2772:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2772:16:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2800:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2792:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2156,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2792:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2792:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2772:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373",
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2804:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															},
															"value": "Crowdsale: token is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															}
														],
														"id": 2151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2764:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:79:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2163,
												"nodeType": "ExpressionStatement",
												"src": "2764:79:8"
											},
											{
												"expression": {
													"id": 2166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2164,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2110,
														"src": "2856:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2165,
														"name": "inRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2126,
														"src": "2864:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2856:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2167,
												"nodeType": "ExpressionStatement",
												"src": "2856:14:8"
											},
											{
												"expression": {
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2168,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2108,
														"src": "2881:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2169,
														"name": "inWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "2891:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2881:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2171,
												"nodeType": "ExpressionStatement",
												"src": "2881:18:8"
											},
											{
												"expression": {
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2172,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2106,
														"src": "2910:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2173,
														"name": "inToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2131,
														"src": "2919:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"src": "2910:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"id": 2175,
												"nodeType": "ExpressionStatement",
												"src": "2910:16:8"
											}
										]
									},
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "2089:450:8",
										"text": " @param inRate Number of token units a buyer gets per wei\n @dev The rate is the conversion between wei and the smallest and indivisible\n token unit. So, if you are using a rate of 1 with a ERC20Detailed token\n with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n @param inWallet Address where collected funds will be forwarded to\n @param inToken Address of the token being sold"
									},
									"id": 2177,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "2566:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "2558:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "2590:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "2574:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2574:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "2607:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "2600:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2130,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2129,
														"name": "IERC20",
														"nameLocations": [
															"2600:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "2600:6:8"
													},
													"referencedDeclaration": 142,
													"src": "2600:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2557:58:8"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2616:0:8"
									},
									"scope": 2394,
									"src": "2545:389:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2186,
										"nodeType": "Block",
										"src": "3259:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2182,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "3280:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3280:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2181,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2291,
														"src": "3270:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3270:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2185,
												"nodeType": "ExpressionStatement",
												"src": "3270:23:8"
											}
										]
									},
									"documentation": {
										"id": 2178,
										"nodeType": "StructuredDocumentation",
										"src": "2942:283:8",
										"text": " @dev fallback function ***DO NOT OVERRIDE***\n Note that other contracts will transfer funds with a base gas stipend\n of 2300, which is not enough to call buyTokens. Consider calling\n buyTokens directly when purchasing tokens from a contract."
									},
									"id": 2187,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3239:2:8"
									},
									"returnParameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3259:0:8"
									},
									"scope": 2394,
									"src": "3231:70:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2195,
										"nodeType": "Block",
										"src": "3340:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2191,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "3361:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3361:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2190,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2291,
														"src": "3351:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2194,
												"nodeType": "ExpressionStatement",
												"src": "3351:23:8"
											}
										]
									},
									"id": 2196,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3320:2:8"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3340:0:8"
									},
									"scope": 2394,
									"src": "3313:69:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2205,
										"nodeType": "Block",
										"src": "3492:32:8",
										"statements": [
											{
												"expression": {
													"id": 2203,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2106,
													"src": "3510:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"functionReturnParameters": 2202,
												"id": 2204,
												"nodeType": "Return",
												"src": "3503:13:8"
											}
										]
									},
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "3390:50:8",
										"text": " @return the token being sold."
									},
									"functionSelector": "fc0c546a",
									"id": 2206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "3455:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3460:2:8"
									},
									"returnParameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "3484:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2200,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2199,
														"name": "IERC20",
														"nameLocations": [
															"3484:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "3484:6:8"
													},
													"referencedDeclaration": 142,
													"src": "3484:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3483:8:8"
									},
									"scope": 2394,
									"src": "3446:78:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2214,
										"nodeType": "Block",
										"src": "3661:33:8",
										"statements": [
											{
												"expression": {
													"id": 2212,
													"name": "_wallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2108,
													"src": "3679:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 2211,
												"id": 2213,
												"nodeType": "Return",
												"src": "3672:14:8"
											}
										]
									},
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "3532:67:8",
										"text": " @return the address where funds are collected."
									},
									"functionSelector": "521eb273",
									"id": 2215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wallet",
									"nameLocation": "3614:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3620:2:8"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "3644:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3644:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3643:17:8"
									},
									"scope": 2394,
									"src": "3605:89:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2223,
										"nodeType": "Block",
										"src": "3838:31:8",
										"statements": [
											{
												"expression": {
													"id": 2221,
													"name": "_rate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2110,
													"src": "3856:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2220,
												"id": 2222,
												"nodeType": "Return",
												"src": "3849:12:8"
											}
										]
									},
									"documentation": {
										"id": 2216,
										"nodeType": "StructuredDocumentation",
										"src": "3702:76:8",
										"text": " @return the number of token units a buyer gets per wei."
									},
									"functionSelector": "2c4e722e",
									"id": 2224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rate",
									"nameLocation": "3793:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3797:2:8"
									},
									"returnParameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "3829:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3828:9:8"
									},
									"scope": 2394,
									"src": "3784:85:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2232,
										"nodeType": "Block",
										"src": "3988:36:8",
										"statements": [
											{
												"expression": {
													"id": 2230,
													"name": "_weiRaised",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2112,
													"src": "4006:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2229,
												"id": 2231,
												"nodeType": "Return",
												"src": "3999:17:8"
											}
										]
									},
									"documentation": {
										"id": 2225,
										"nodeType": "StructuredDocumentation",
										"src": "3877:54:8",
										"text": " @return the amount of wei raised."
									},
									"functionSelector": "4042b66f",
									"id": 2233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "weiRaised",
									"nameLocation": "3946:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3955:2:8"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "3979:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:9:8"
									},
									"scope": 2394,
									"src": "3937:87:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2290,
										"nodeType": "Block",
										"src": "4357:554:8",
										"statements": [
											{
												"assignments": [
													2242
												],
												"declarations": [
													{
														"constant": false,
														"id": 2242,
														"mutability": "mutable",
														"name": "weiAmount",
														"nameLocation": "4376:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 2290,
														"src": "4368:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2241,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4368:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2245,
												"initialValue": {
													"expression": {
														"id": 2243,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4388:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4392:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "4388:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4368:29:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2247,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "4429:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2248,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "4442:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2246,
														"name": "_preValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2319,
														"src": "4408:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4408:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "4408:44:8"
											},
											{
												"assignments": [
													2252
												],
												"declarations": [
													{
														"constant": false,
														"id": 2252,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "4522:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2290,
														"src": "4514:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4514:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2256,
												"initialValue": {
													"arguments": [
														{
															"id": 2254,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "4547:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2253,
														"name": "_getTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "4531:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4531:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4514:43:8"
											},
											{
												"expression": {
													"id": 2262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2257,
														"name": "_weiRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2112,
														"src": "4595:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2260,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2242,
																"src": "4623:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2258,
																"name": "_weiRaised",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2112,
																"src": "4608:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4619:3:8",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1948,
															"src": "4608:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4608:25:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4595:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2263,
												"nodeType": "ExpressionStatement",
												"src": "4595:38:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2265,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "4663:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2266,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "4676:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2264,
														"name": "_processPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2358,
														"src": "4646:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4646:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2268,
												"nodeType": "ExpressionStatement",
												"src": "4646:37:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2270,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "4715:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4715:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2272,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "4729:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2273,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "4742:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2274,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "4753:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2269,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2123,
														"src": "4699:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4699:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2276,
												"nodeType": "EmitStatement",
												"src": "4694:66:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2278,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "4796:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2279,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "4809:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2277,
														"name": "_updatePurchasingState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2367,
														"src": "4773:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4773:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2281,
												"nodeType": "ExpressionStatement",
												"src": "4773:46:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2282,
														"name": "_forwardFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2393,
														"src": "4832:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2284,
												"nodeType": "ExpressionStatement",
												"src": "4832:15:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2286,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "4880:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2287,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "4893:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2285,
														"name": "_postValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2328,
														"src": "4858:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4858:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2289,
												"nodeType": "ExpressionStatement",
												"src": "4858:45:8"
											}
										]
									},
									"documentation": {
										"id": 2234,
										"nodeType": "StructuredDocumentation",
										"src": "4032:251:8",
										"text": " @dev low level token purchase ***DO NOT OVERRIDE***\n This function has a non-reentrancy guard, so it shouldn't be called by\n another `nonReentrant` function.\n @param beneficiary Recipient of the token purchase"
									},
									"functionSelector": "ec8ac4d8",
									"id": 2291,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2239,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2238,
												"name": "nonReentrant",
												"nameLocations": [
													"4336:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "4336:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4336:12:8"
										}
									],
									"name": "buyTokens",
									"nameLocation": "4298:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4316:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "4308:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4308:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4307:21:8"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4357:0:8"
									},
									"scope": 2394,
									"src": "4289:622:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2318,
										"nodeType": "Block",
										"src": "5556:296:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2300,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2294,
																"src": "5575:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5598:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5590:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2301,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5590:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5590:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5575:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5602:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															},
															"value": "Crowdsale: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															}
														],
														"id": 2299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5567:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5567:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2308,
												"nodeType": "ExpressionStatement",
												"src": "5567:80:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2310,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2296,
																"src": "5666:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5679:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5666:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5682:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															},
															"value": "Crowdsale: weiAmount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															}
														],
														"id": 2309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5658:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5658:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2315,
												"nodeType": "ExpressionStatement",
												"src": "5658:52:8"
											},
											{
												"expression": {
													"id": 2316,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "5721:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Crowdsale_$2394",
														"typeString": "contract Crowdsale"
													}
												},
												"id": 2317,
												"nodeType": "ExpressionStatement",
												"src": "5721:4:8"
											}
										]
									},
									"documentation": {
										"id": 2292,
										"nodeType": "StructuredDocumentation",
										"src": "4919:539:8",
										"text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n Use `super` in contracts that inherit from Crowdsale to extend their validations.\n Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     super._preValidatePurchase(beneficiary, weiAmount);\n     require(weiRaised().add(weiAmount) <= cap);\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 2319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preValidatePurchase",
									"nameLocation": "5473:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "5502:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "5494:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5494:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "5523:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "5515:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5515:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5493:40:8"
									},
									"returnParameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5556:0:8"
									},
									"scope": 2394,
									"src": "5464:388:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2327,
										"nodeType": "Block",
										"src": "6248:66:8",
										"statements": []
									},
									"documentation": {
										"id": 2320,
										"nodeType": "StructuredDocumentation",
										"src": "5860:289:8",
										"text": " @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n conditions are not met.\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 2328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_postValidatePurchase",
									"nameLocation": "6164:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6194:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "6186:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "6215:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "6207:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6207:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:40:8"
									},
									"returnParameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6248:0:8"
									},
									"scope": 2394,
									"src": "6155:159:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2343,
										"nodeType": "Block",
										"src": "6685:64:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2339,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2331,
															"src": "6716:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2340,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2333,
															"src": "6729:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2336,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2106,
															"src": "6696:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 2338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6703:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "6696:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$142_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6696:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2342,
												"nodeType": "ExpressionStatement",
												"src": "6696:45:8"
											}
										]
									},
									"documentation": {
										"id": 2329,
										"nodeType": "StructuredDocumentation",
										"src": "6322:274:8",
										"text": " @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\n its tokens.\n @param beneficiary Address performing the token purchase\n @param tokenAmount Number of tokens to be emitted"
									},
									"id": 2344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deliverTokens",
									"nameLocation": "6611:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6634:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "6626:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6626:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6655:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "6647:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6625:42:8"
									},
									"returnParameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6685:0:8"
									},
									"scope": 2394,
									"src": "6602:147:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2357,
										"nodeType": "Block",
										"src": "7108:59:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2353,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2347,
															"src": "7134:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2354,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "7147:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2352,
														"name": "_deliverTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2344,
														"src": "7119:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2356,
												"nodeType": "ExpressionStatement",
												"src": "7119:40:8"
											}
										]
									},
									"documentation": {
										"id": 2345,
										"nodeType": "StructuredDocumentation",
										"src": "6757:260:8",
										"text": " @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\n tokens.\n @param beneficiary Address receiving the tokens\n @param tokenAmount Number of tokens to be purchased"
									},
									"id": 2358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_processPurchase",
									"nameLocation": "7032:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7057:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "7049:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "7078:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "7070:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7070:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7048:42:8"
									},
									"returnParameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7108:0:8"
									},
									"scope": 2394,
									"src": "7023:144:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2366,
										"nodeType": "Block",
										"src": "7534:66:8",
										"statements": []
									},
									"documentation": {
										"id": 2359,
										"nodeType": "StructuredDocumentation",
										"src": "7175:264:8",
										"text": " @dev Override for extensions that require an internal state to check for validity (current user contributions,\n etc.)\n @param beneficiary Address receiving the tokens\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 2367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePurchasingState",
									"nameLocation": "7454:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7485:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "7477:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7477:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7506:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "7498:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7498:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7476:40:8"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:8"
									},
									"scope": 2394,
									"src": "7445:155:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2380,
										"nodeType": "Block",
										"src": "7940:46:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2377,
															"name": "_rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "7972:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2375,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "7958:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7968:3:8",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1978,
														"src": "7958:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7958:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2374,
												"id": 2379,
												"nodeType": "Return",
												"src": "7951:27:8"
											}
										]
									},
									"documentation": {
										"id": 2368,
										"nodeType": "StructuredDocumentation",
										"src": "7608:242:8",
										"text": " @dev Override to extend the way in which ether is converted to tokens.\n @param weiAmount Value in wei to be converted into tokens\n @return Number of tokens that can be purchased with the specified _weiAmount"
									},
									"id": 2381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAmount",
									"nameLocation": "7865:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7889:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "7881:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7881:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7880:19:8"
									},
									"returnParameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "7931:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7931:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7930:9:8"
									},
									"scope": 2394,
									"src": "7856:130:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2392,
										"nodeType": "Block",
										"src": "8120:46:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2388,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8148:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8152:5:8",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8148:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2385,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2108,
															"src": "8131:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8139:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8131:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8131:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2391,
												"nodeType": "ExpressionStatement",
												"src": "8131:27:8"
											}
										]
									},
									"documentation": {
										"id": 2382,
										"nodeType": "StructuredDocumentation",
										"src": "7994:78:8",
										"text": " @dev Determines how ETH is stored/forwarded on purchases."
									},
									"id": 2393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_forwardFunds",
									"nameLocation": "8087:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8100:2:8"
									},
									"returnParameters": {
										"id": 2384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8120:0:8"
									},
									"scope": 2394,
									"src": "8078:88:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2395,
							"src": "1071:7098:8",
							"usedErrors": [],
							"usedEvents": [
								2123
							]
						}
					],
					"src": "33:8136:8"
				},
				"id": 8
			},
			"crowdsale/emission/allowanceCrowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/emission/allowanceCrowdsale.sol",
					"exportedSymbols": {
						"Address": [
							884
						],
						"AllowanceCrowdsale": [
							2499
						],
						"Context": [
							906
						],
						"Crowdsale": [
							2394
						],
						"IERC20": [
							142
						],
						"IERC20Permit": [
							178
						],
						"Math": [
							1772
						],
						"ReentrancyGuard": [
							64
						],
						"SafeERC20": [
							554
						],
						"SafeMath": [
							2084
						]
					},
					"id": 2500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "crowdsale/crowdsale.sol",
							"file": "crowdsale/crowdsale.sol",
							"id": 2397,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2500,
							"sourceUnit": 2395,
							"src": "60:33:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2500,
							"sourceUnit": 143,
							"src": "95:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 2399,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2500,
							"sourceUnit": 555,
							"src": "153:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2500,
							"sourceUnit": 2085,
							"src": "220:57:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 2401,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2500,
							"sourceUnit": 1773,
							"src": "279:53:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2403,
										"name": "Crowdsale",
										"nameLocations": [
											"518:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2394,
										"src": "518:9:9"
									},
									"id": 2404,
									"nodeType": "InheritanceSpecifier",
									"src": "518:9:9"
								}
							],
							"canonicalName": "AllowanceCrowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2402,
								"nodeType": "StructuredDocumentation",
								"src": "334:151:9",
								"text": " @title AllowanceCrowdsale\n @dev Extension of Crowdsale where tokens are held by a wallet, which approves an allowance to the crowdsale."
							},
							"fullyImplemented": true,
							"id": 2499,
							"linearizedBaseContracts": [
								2499,
								2394,
								64,
								906
							],
							"name": "AllowanceCrowdsale",
							"nameLocation": "496:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2407,
									"libraryName": {
										"id": 2405,
										"name": "SafeMath",
										"nameLocations": [
											"541:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2084,
										"src": "541:8:9"
									},
									"nodeType": "UsingForDirective",
									"src": "535:27:9",
									"typeName": {
										"id": 2406,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "554:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2411,
									"libraryName": {
										"id": 2408,
										"name": "SafeERC20",
										"nameLocations": [
											"574:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 554,
										"src": "574:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "568:27:9",
									"typeName": {
										"id": 2410,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2409,
											"name": "IERC20",
											"nameLocations": [
												"588:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "588:6:9"
										},
										"referencedDeclaration": 142,
										"src": "588:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 2413,
									"mutability": "mutable",
									"name": "_tokenWallet",
									"nameLocation": "619:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2499,
									"src": "603:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2412,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "603:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2445,
										"nodeType": "Block",
										"src": "1090:150:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2432,
																"name": "inTokenWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2416,
																"src": "1109:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1134:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1126:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2433,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1126:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1126:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1109:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c6f77616e636543726f776473616c653a20746f6b656e2077616c6c657420697320746865207a65726f2061646472657373",
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1138:54:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d",
																"typeString": "literal_string \"AllowanceCrowdsale: token wallet is the zero address\""
															},
															"value": "AllowanceCrowdsale: token wallet is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d",
																"typeString": "literal_string \"AllowanceCrowdsale: token wallet is the zero address\""
															}
														],
														"id": 2431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1101:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1101:92:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2440,
												"nodeType": "ExpressionStatement",
												"src": "1101:92:9"
											},
											{
												"expression": {
													"id": 2443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2441,
														"name": "_tokenWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2413,
														"src": "1204:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2442,
														"name": "inTokenWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2416,
														"src": "1219:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1204:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2444,
												"nodeType": "ExpressionStatement",
												"src": "1204:28:9"
											}
										]
									},
									"documentation": {
										"id": 2414,
										"nodeType": "StructuredDocumentation",
										"src": "640:280:9",
										"text": " @dev Constructor, takes token wallet address.\n @param inTokenWallet Address holding the tokens, which has approved allowance to the crowdsale.\n @param inRate rate.\n @param inWallet crowdsale wallet.\n @param inToken crowdsale token."
									},
									"id": 2446,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2426,
													"name": "inRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2418,
													"src": "1063:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 2427,
													"name": "inWallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2420,
													"src": "1071:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												{
													"id": 2428,
													"name": "inToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2423,
													"src": "1081:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												}
											],
											"id": 2429,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2425,
												"name": "Crowdsale",
												"nameLocations": [
													"1053:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2394,
												"src": "1053:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1053:36:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "inTokenWallet",
												"nameLocation": "947:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "939:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "979:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "971:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "1012:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "996:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "996:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "1038:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "1031:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2422,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2421,
														"name": "IERC20",
														"nameLocations": [
															"1031:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "1031:6:9"
													},
													"referencedDeclaration": 142,
													"src": "1031:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:114:9"
									},
									"returnParameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1090:0:9"
									},
									"scope": 2499,
									"src": "926:314:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2454,
										"nodeType": "Block",
										"src": "1388:38:9",
										"statements": [
											{
												"expression": {
													"id": 2452,
													"name": "_tokenWallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2413,
													"src": "1406:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2451,
												"id": 2453,
												"nodeType": "Return",
												"src": "1399:19:9"
											}
										]
									},
									"documentation": {
										"id": 2447,
										"nodeType": "StructuredDocumentation",
										"src": "1248:81:9",
										"text": " @return the address of the wallet that will hold the tokens."
									},
									"functionSelector": "bff99c6c",
									"id": 2455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenWallet",
									"nameLocation": "1344:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1355:2:9"
									},
									"returnParameters": {
										"id": 2451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "1379:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1378:9:9"
									},
									"scope": 2499,
									"src": "1335:91:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2479,
										"nodeType": "Block",
										"src": "1628:115:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2466,
																	"name": "_tokenWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2413,
																	"src": "1673:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2463,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2206,
																		"src": "1655:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$142_$",
																			"typeString": "function () view returns (contract IERC20)"
																		}
																	},
																	"id": 2464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1655:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1663:9:9",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 99,
																"src": "1655:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1655:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2471,
																	"name": "_tokenWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2413,
																	"src": "1706:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2474,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1728:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AllowanceCrowdsale_$2499",
																				"typeString": "contract AllowanceCrowdsale"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AllowanceCrowdsale_$2499",
																				"typeString": "contract AllowanceCrowdsale"
																			}
																		],
																		"id": 2473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1720:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2472,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1720:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1720:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2468,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2206,
																		"src": "1688:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$142_$",
																			"typeString": "function () view returns (contract IERC20)"
																		}
																	},
																	"id": 2469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1688:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1696:9:9",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 119,
																"src": "1688:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1688:46:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2461,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "1646:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$1772_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 2462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1651:3:9",
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 949,
														"src": "1646:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1646:89:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2460,
												"id": 2478,
												"nodeType": "Return",
												"src": "1639:96:9"
											}
										]
									},
									"documentation": {
										"id": 2456,
										"nodeType": "StructuredDocumentation",
										"src": "1434:131:9",
										"text": " @dev Checks the amount of tokens left in the allowance.\n @return Amount of tokens left in the allowance"
									},
									"functionSelector": "bf583903",
									"id": 2480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remainingTokens",
									"nameLocation": "1580:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1595:2:9"
									},
									"returnParameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "1619:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1619:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1618:9:9"
									},
									"scope": 2499,
									"src": "1571:172:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2344
									],
									"body": {
										"id": 2497,
										"nodeType": "Block",
										"src": "2026:83:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2492,
															"name": "_tokenWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2413,
															"src": "2062:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2493,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2483,
															"src": "2076:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2494,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "2089:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2489,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2206,
																"src": "2037:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$142_$",
																	"typeString": "function () view returns (contract IERC20)"
																}
															},
															"id": 2490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2037:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 2491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2045:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 238,
														"src": "2037:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$142_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2037:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2496,
												"nodeType": "ExpressionStatement",
												"src": "2037:64:9"
											}
										]
									},
									"documentation": {
										"id": 2481,
										"nodeType": "StructuredDocumentation",
										"src": "1751:184:9",
										"text": " @dev Overrides parent behavior by transferring tokens from wallet.\n @param beneficiary Token purchaser\n @param tokenAmount Amount of tokens purchased"
									},
									"id": 2498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deliverTokens",
									"nameLocation": "1950:14:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2487,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2016:8:9"
									},
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "1973:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1965:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1994:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1986:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1986:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1964:42:9"
									},
									"returnParameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2026:0:9"
									},
									"scope": 2499,
									"src": "1941:168:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2500,
							"src": "487:1625:9",
							"usedErrors": [],
							"usedEvents": [
								2123
							]
						}
					],
					"src": "33:2079:9"
				},
				"id": 9
			}
		}
	}
}